{
  "status": "OK",
  "result": {
    "problems": [
      {
        "contestId": 1848,
        "index": "F",
        "name": "Vika and Wiki",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "combinatorics",
          "divide and conquer",
          "dp",
          "math"
        ]
      },
      {
        "contestId": 1848,
        "index": "E",
        "name": "Vika and Stone Skipping",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "number theory"
        ]
      },
      {
        "contestId": 1848,
        "index": "D",
        "name": "Vika and Bonuses",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "ternary search"
        ]
      },
      {
        "contestId": 1848,
        "index": "C",
        "name": "Vika and Price Tags",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1848,
        "index": "B",
        "name": "Vika and the Bridge",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "implementation",
          "math",
          "sortings"
        ]
      },
      {
        "contestId": 1848,
        "index": "A",
        "name": "Vika and Her Friends",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "math"
        ]
      },
      {
        "contestId": 1847,
        "index": "F",
        "name": "The Boss's Identity",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures",
          "dfs and similar",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1847,
        "index": "E",
        "name": "Triangle Platinum?",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1847,
        "index": "D",
        "name": "Professor Higashikata",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1847,
        "index": "C",
        "name": "Vampiric Powers, anyone?",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1847,
        "index": "B",
        "name": "Hamon Odyssey",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1847,
        "index": "A",
        "name": "The Man who became a God",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1846,
        "index": "G",
        "name": "Rudolf and CodeVid-23",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1846,
        "index": "F",
        "name": "Rudolph and Mimic",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "interactive"
        ],
        "points": 1800
      },
      {
        "contestId": 1846,
        "index": "E2",
        "name": "Rudolf and Snowflakes (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1846,
        "index": "E1",
        "name": "Rudolf and Snowflakes (simple version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1846,
        "index": "D",
        "name": "Rudolph and Christmas Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1846,
        "index": "C",
        "name": "Rudolf and the Another Competition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1846,
        "index": "B",
        "name": "Rudolph and Tic-Tac-Toe",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1846,
        "index": "A",
        "name": "Rudolph and Cut the Rope",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1845,
        "index": "F",
        "name": "Swimmers in the Pool",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "fft",
          "math",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 1845,
        "index": "E",
        "name": "Boxes and Balls",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1845,
        "index": "D",
        "name": "Rating System",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "dsu",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1845,
        "index": "C",
        "name": "Strong Password",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1845,
        "index": "B",
        "name": "Come Together",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1845,
        "index": "A",
        "name": "Forbidden Integer",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1844,
        "index": "H",
        "name": "Multiple of Three Cycles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "dsu",
          "math"
        ]
      },
      {
        "contestId": 1844,
        "index": "G",
        "name": "Tree Weights",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "implementation",
          "math",
          "matrices",
          "number theory",
          "trees"
        ]
      },
      {
        "contestId": 1844,
        "index": "F2",
        "name": "Min Cost Permutation (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "math",
          "sortings"
        ]
      },
      {
        "contestId": 1844,
        "index": "F1",
        "name": "Min Cost Permutation (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ]
      },
      {
        "contestId": 1844,
        "index": "E",
        "name": "Great Grids",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs"
        ]
      },
      {
        "contestId": 1844,
        "index": "D",
        "name": "Row Major",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory",
          "strings"
        ]
      },
      {
        "contestId": 1844,
        "index": "C",
        "name": "Particles",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "math"
        ]
      },
      {
        "contestId": 1844,
        "index": "B",
        "name": "Permutations & Primes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ]
      },
      {
        "contestId": 1844,
        "index": "A",
        "name": "Subtraction Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games"
        ]
      },
      {
        "contestId": 1843,
        "index": "F2",
        "name": "Omsk Metro (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dp",
          "math",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1843,
        "index": "F1",
        "name": "Omsk Metro (simple version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "math",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1843,
        "index": "E",
        "name": "Tracking Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1843,
        "index": "D",
        "name": "Apple Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 1200
      },
      {
        "contestId": 1843,
        "index": "C",
        "name": "Sum in Binary Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "math",
          "trees"
        ],
        "points": 800
      },
      {
        "contestId": 1843,
        "index": "B",
        "name": "Long Long",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1843,
        "index": "A",
        "name": "Sasha and Array Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1842,
        "index": "I",
        "name": "Tenzing and Necklace",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1842,
        "index": "H",
        "name": "Tenzing and Random Real Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "math",
          "probabilities"
        ],
        "points": 3000
      },
      {
        "contestId": 1842,
        "index": "G",
        "name": "Tenzing and Random Operations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 1842,
        "index": "F",
        "name": "Tenzing and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "shortest paths",
          "sortings",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1842,
        "index": "E",
        "name": "Tenzing and Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry",
          "greedy",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1842,
        "index": "D",
        "name": "Tenzing and His Animal Friends",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1842,
        "index": "C",
        "name": "Tenzing and Balls",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 1842,
        "index": "B",
        "name": "Tenzing and Books",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1842,
        "index": "A",
        "name": "Tenzing and Tsondu",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1841,
        "index": "F",
        "name": "Monocarp and a Strategic Game",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "sortings",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1841,
        "index": "E",
        "name": "Fill the Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1841,
        "index": "D",
        "name": "Pairs of Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1841,
        "index": "C",
        "name": "Ranom Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1841,
        "index": "B",
        "name": "Keep it Beautiful",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1841,
        "index": "A",
        "name": "Game with Board",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games"
        ],
        "points": 800
      },
      {
        "contestId": 1840,
        "index": "G2",
        "name": "In Search of Truth (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math",
          "meet-in-the-middle",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 1840,
        "index": "G1",
        "name": "In Search of Truth (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math",
          "meet-in-the-middle",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 1840,
        "index": "F",
        "name": "Railguns",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 1840,
        "index": "E",
        "name": "Character Blocking",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1840,
        "index": "D",
        "name": "Wooden Toy Festival",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1840,
        "index": "C",
        "name": "Ski Resort",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1840,
        "index": "B",
        "name": "Binary Cafe",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1840,
        "index": "A",
        "name": "Cipher Shifer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1839,
        "index": "E",
        "name": "Decreasing Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy",
          "interactive"
        ],
        "points": 2400
      },
      {
        "contestId": 1839,
        "index": "D",
        "name": "Ball Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1839,
        "index": "C",
        "name": "Insert Zero and Invert Prefix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 1839,
        "index": "B",
        "name": "Lamps",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1839,
        "index": "A",
        "name": "The Good Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1838,
        "index": "F",
        "name": "Stuck Conveyor",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 1838,
        "index": "E",
        "name": "Count Supersequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1838,
        "index": "D",
        "name": "Bracket Walk",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1838,
        "index": "C",
        "name": "No Prime Differences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1838,
        "index": "B",
        "name": "Minimize Permutation Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1838,
        "index": "A",
        "name": "Blackboard List",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1837,
        "index": "F",
        "name": "Editorial for Two",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1837,
        "index": "E",
        "name": "Playoff Fixing",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1837,
        "index": "D",
        "name": "Bracket Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1837,
        "index": "C",
        "name": "Best Binary String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1837,
        "index": "B",
        "name": "Comparison String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1837,
        "index": "A",
        "name": "Grasshopper on a Line",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1836,
        "index": "B",
        "name": "Astrophysicists",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1836,
        "index": "A",
        "name": "Destroyer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1835,
        "index": "F",
        "name": "Good Graph",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "graph matchings",
          "graphs",
          "implementation"
        ],
        "points": 3500
      },
      {
        "contestId": 1835,
        "index": "E",
        "name": "Old Mobile",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "probabilities"
        ],
        "points": 3500
      },
      {
        "contestId": 1835,
        "index": "D",
        "name": "Doctor's Brown Hypothesis",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1835,
        "index": "C",
        "name": "Twin Clusters",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1835,
        "index": "B",
        "name": "Lottery",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1835,
        "index": "A",
        "name": "k-th equality",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1834,
        "index": "F",
        "name": "Typewriter",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1834,
        "index": "E",
        "name": "MEX of LCM",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1834,
        "index": "D",
        "name": "Survey in Class",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1834,
        "index": "C",
        "name": "Game with Reversing",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1834,
        "index": "B",
        "name": "Maximum Strength",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1834,
        "index": "A",
        "name": "Unit Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1833,
        "index": "G",
        "name": "Ksyusha and Chinchilla",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "dsu",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1833,
        "index": "F",
        "name": "Ira and Flamenco",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "data structures",
          "implementation",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1833,
        "index": "E",
        "name": "Round Dance",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 1833,
        "index": "D",
        "name": "Flipper",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1833,
        "index": "C",
        "name": "Vlad Building Beautiful Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1833,
        "index": "B",
        "name": "Restore the Weather",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1833,
        "index": "A",
        "name": "Musical Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1832,
        "index": "F",
        "name": "Zombies",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 1832,
        "index": "E",
        "name": "Combinatorics Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1832,
        "index": "D2",
        "name": "Red-Blue Operations (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1832,
        "index": "D1",
        "name": "Red-Blue Operations (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1832,
        "index": "C",
        "name": "Contrast Value",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1832,
        "index": "B",
        "name": "Maximum Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1832,
        "index": "A",
        "name": "New Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1831,
        "index": "B",
        "name": "Array merging",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1831,
        "index": "A",
        "name": "Twin Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1830,
        "index": "F",
        "name": "The Third Grace",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 1830,
        "index": "E",
        "name": "Bully Sort",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1830,
        "index": "D",
        "name": "Mex Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1830,
        "index": "C",
        "name": "Hyperregular Bracket Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "hashing",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1830,
        "index": "B",
        "name": "The BOSS Can Count Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1830,
        "index": "A",
        "name": "Copil Copac Draws Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 1829,
        "index": "H",
        "name": "Don't Blame Me",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1829,
        "index": "G",
        "name": "Hits Different",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1829,
        "index": "F",
        "name": "Forever Winter",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1829,
        "index": "E",
        "name": "The Lakes",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1829,
        "index": "D",
        "name": "Gold Rush",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1829,
        "index": "C",
        "name": "Mr. Perfectly Fine",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1829,
        "index": "B",
        "name": "Blank Space",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1829,
        "index": "A",
        "name": "Love Story",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1828,
        "index": "B",
        "name": "Permutation Swap",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1828,
        "index": "A",
        "name": "Divisible Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1827,
        "index": "F",
        "name": "Copium Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1827,
        "index": "E",
        "name": "Bus Routes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1827,
        "index": "D",
        "name": "Two Centroids",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1827,
        "index": "C",
        "name": "Palindrome Partition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "hashing",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1827,
        "index": "B2",
        "name": "Range Sorting (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1827,
        "index": "B1",
        "name": "Range Sorting (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "dsu",
          "greedy",
          "trees",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1827,
        "index": "A",
        "name": "Counting Orders",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1826,
        "index": "F",
        "name": "Fading into Fog",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "interactive",
          "math",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 1826,
        "index": "E",
        "name": "Walk the Runway",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "dp",
          "graphs",
          "implementation",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1826,
        "index": "D",
        "name": "Running Miles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1826,
        "index": "C",
        "name": "Dreaming of Freedom",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1826,
        "index": "B",
        "name": "Lunatic Never Content",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1826,
        "index": "A",
        "name": "Trust Nobody",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1825,
        "index": "B",
        "name": "LuoTianyi and the Table",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1825,
        "index": "A",
        "name": "LuoTianyi and the Palindrome String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1824,
        "index": "E",
        "name": "LuoTianyi and Cartridge",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1824,
        "index": "D",
        "name": "LuoTianyi and the Function",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 1824,
        "index": "C",
        "name": "LuoTianyi and XOR-Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "dsu",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1824,
        "index": "B2",
        "name": "LuoTianyi and the Floating Islands (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1824,
        "index": "B1",
        "name": "LuoTianyi and the Floating Islands (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1824,
        "index": "A",
        "name": "LuoTianyi and the Show",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1823,
        "index": "F",
        "name": "Random Walk",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1823,
        "index": "E",
        "name": "Removing Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "games",
          "graphs",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1823,
        "index": "D",
        "name": "Unique Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1823,
        "index": "C",
        "name": "Strongly Composite",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1823,
        "index": "B",
        "name": "Sort with Step",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1823,
        "index": "A",
        "name": "A-characteristic",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1822,
        "index": "G1",
        "name": "Magic Triples (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1822,
        "index": "F",
        "name": "Gardening Friends",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1822,
        "index": "E",
        "name": "Making Anti-Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1822,
        "index": "D",
        "name": "Super-Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1822,
        "index": "C",
        "name": "Bun Lover",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1822,
        "index": "B",
        "name": "Karina and Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1822,
        "index": "A",
        "name": "TubeTube Feed",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1821,
        "index": "E",
        "name": "Rearrange Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1821,
        "index": "D",
        "name": "Black Cells",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1821,
        "index": "C",
        "name": "Tear It Apart",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1821,
        "index": "B",
        "name": "Sort the Subarray",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1821,
        "index": "A",
        "name": "Matching",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1820,
        "index": "B",
        "name": "JoJo's Incredible Adventures",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "strings",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1820,
        "index": "A",
        "name": "Yura's New Name",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1819,
        "index": "F",
        "name": "Willy-nilly, Crack, Into Release!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1819,
        "index": "E",
        "name": "Roads in E City",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1819,
        "index": "D",
        "name": "Misha and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 2800
      },
      {
        "contestId": 1819,
        "index": "C",
        "name": "The Fox and the Complete Tree Traversal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "implementation",
          "math",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1819,
        "index": "A",
        "name": "Constructive Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1818,
        "index": "B",
        "name": "Indivisible",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 900
      },
      {
        "contestId": 1818,
        "index": "A",
        "name": "Politics",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1817,
        "index": "F",
        "name": "Entangled Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures",
          "strings"
        ],
        "points": 3500
      },
      {
        "contestId": 1817,
        "index": "E",
        "name": "Half-sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "greedy"
        ],
        "points": 3400
      },
      {
        "contestId": 1817,
        "index": "D",
        "name": "Toy Machine",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 1817,
        "index": "C",
        "name": "Similar Polynomials",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1817,
        "index": "B",
        "name": "Fish Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 1817,
        "index": "A",
        "name": "Almost Increasing Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1816,
        "index": "B",
        "name": "Grid Reconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1816,
        "index": "A",
        "name": "Ian Visits Mary",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1815,
        "index": "F",
        "name": "OH NO1 (-2-3-4)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1815,
        "index": "E",
        "name": "Bosco and Particle",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory",
          "strings"
        ],
        "points": 3100
      },
      {
        "contestId": 1815,
        "index": "D",
        "name": "XOR Counting",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1815,
        "index": "C",
        "name": "Between",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1815,
        "index": "B",
        "name": "Sum Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "implementation",
          "interactive",
          "shortest paths",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1815,
        "index": "A",
        "name": "Ian and Array Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1814,
        "index": "F",
        "name": "Communication Towers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "dsu"
        ],
        "points": 2700
      },
      {
        "contestId": 1814,
        "index": "E",
        "name": "Chain Chips",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "matrices"
        ],
        "points": 2300
      },
      {
        "contestId": 1814,
        "index": "D",
        "name": "Balancing Weapons",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "math",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1814,
        "index": "C",
        "name": "Search in Parallel",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1814,
        "index": "B",
        "name": "Long Legs",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1814,
        "index": "A",
        "name": "Coins",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1811,
        "index": "G2",
        "name": "Vlad and the Nice Paths (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "data structures",
          "dp",
          "math",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1811,
        "index": "G1",
        "name": "Vlad and the Nice Paths (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1811,
        "index": "F",
        "name": "Is It Flower?",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1811,
        "index": "E",
        "name": "Living Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1811,
        "index": "D",
        "name": "Umka and a Long Flight",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1811,
        "index": "C",
        "name": "Restore the Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1811,
        "index": "B",
        "name": "Conveyor Belts",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1811,
        "index": "A",
        "name": "Insert Digit",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1810,
        "index": "H",
        "name": "Last Number",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1810,
        "index": "G",
        "name": "The Maximum Prefix",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 1810,
        "index": "F",
        "name": "M-tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "sortings",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1810,
        "index": "E",
        "name": "Monsters",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1810,
        "index": "D",
        "name": "Climbing the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1810,
        "index": "C",
        "name": "Make It Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1810,
        "index": "B",
        "name": "Candies",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1810,
        "index": "A",
        "name": "Beautiful Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1809,
        "index": "G",
        "name": "Prediction",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1809,
        "index": "F",
        "name": "Traveling in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1809,
        "index": "E",
        "name": "Two Tanks",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "implementation",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1809,
        "index": "D",
        "name": "Binary String Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1809,
        "index": "C",
        "name": "Sum on Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1809,
        "index": "B",
        "name": "Points on Plane",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1809,
        "index": "A",
        "name": "Garland",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1808,
        "index": "E3",
        "name": "Minibuses on Venus (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1808,
        "index": "E2",
        "name": "Minibuses on Venus (medium version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp",
          "matrices"
        ],
        "points": 2500
      },
      {
        "contestId": 1808,
        "index": "E1",
        "name": "Minibuses on Venus (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1808,
        "index": "D",
        "name": "Petya, Petya, Petr, and Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1808,
        "index": "C",
        "name": "Unlucky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1808,
        "index": "B",
        "name": "Playing in a Casino",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1808,
        "index": "A",
        "name": "Lucky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1807,
        "index": "G2",
        "name": "Subsequence Addition (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1807,
        "index": "G1",
        "name": "Subsequence Addition (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1807,
        "index": "F",
        "name": "Bouncy Ball",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1807,
        "index": "E",
        "name": "Interview",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "interactive"
        ],
        "points": 1300
      },
      {
        "contestId": 1807,
        "index": "D",
        "name": "Odd Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1807,
        "index": "C",
        "name": "Find and Replace",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1807,
        "index": "B",
        "name": "Grab the Candies",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1807,
        "index": "A",
        "name": "Plus or Minus",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1806,
        "index": "F2",
        "name": "GCD Master (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2900
      },
      {
        "contestId": 1806,
        "index": "F1",
        "name": "GCD Master (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 2900
      },
      {
        "contestId": 1806,
        "index": "E",
        "name": "Tree Master",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1806,
        "index": "D",
        "name": "DSU Master",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "dsu",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1806,
        "index": "C",
        "name": "Sequence Master",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1806,
        "index": "B",
        "name": "Mex Master",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1806,
        "index": "A",
        "name": "Walking Master",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1805,
        "index": "F2",
        "name": "Survival of the Weakest (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 3100
      },
      {
        "contestId": 1805,
        "index": "F1",
        "name": "Survival of the Weakest (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 1805,
        "index": "E",
        "name": "There Should Be a Lot of Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "dp",
          "trees",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1805,
        "index": "D",
        "name": "A Wide, Wide Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1805,
        "index": "C",
        "name": "Place for a Selfie",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "geometry",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1805,
        "index": "B",
        "name": "The String Has a Target",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1805,
        "index": "A",
        "name": "We Need the Zero",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 1804,
        "index": "H",
        "name": "Code Lock",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 3300
      },
      {
        "contestId": 1804,
        "index": "G",
        "name": "Flow Control",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "implementation"
        ],
        "points": 3500
      },
      {
        "contestId": 1804,
        "index": "F",
        "name": "Approximate Diameter",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "divide and conquer",
          "graphs",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 1804,
        "index": "E",
        "name": "Routing",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1804,
        "index": "D",
        "name": "Accommodation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1804,
        "index": "C",
        "name": "Pull Your Luck",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1804,
        "index": "B",
        "name": "Vaccination",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1804,
        "index": "A",
        "name": "Lame King",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1802,
        "index": "B",
        "name": "Settlement of Guinea Pigs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1802,
        "index": "A",
        "name": "Likes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1801,
        "index": "G",
        "name": "A task for substrings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures",
          "strings"
        ],
        "points": 3400
      },
      {
        "contestId": 1801,
        "index": "F",
        "name": "Another n-dimensional chocolate bar",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1801,
        "index": "E",
        "name": "Gasoline prices",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu",
          "hashing",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1801,
        "index": "D",
        "name": "The way home",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "graphs",
          "greedy",
          "shortest paths",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1801,
        "index": "C",
        "name": "Music Festival",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1801,
        "index": "B",
        "name": "Buying gifts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1801,
        "index": "A",
        "name": "The Very Beautiful Blanket",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 1800,
        "index": "G",
        "name": "Symmetree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "hashing",
          "implementation",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1800,
        "index": "F",
        "name": "Dasha and Nightmares",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "hashing",
          "meet-in-the-middle",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1800,
        "index": "E2",
        "name": "Unforgivable Curse (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1800,
        "index": "E1",
        "name": "Unforgivable Curse (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1800,
        "index": "D",
        "name": "Remove Two Letters",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "hashing",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1800,
        "index": "C2",
        "name": "Powering the Hero (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1800,
        "index": "C1",
        "name": "Powering the Hero (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1800,
        "index": "B",
        "name": "Count the Number of Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1800,
        "index": "A",
        "name": "Is It a Cat?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1799,
        "index": "H",
        "name": "Tree Cutting",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 1799,
        "index": "G",
        "name": "Count Voting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1799,
        "index": "F",
        "name": "Halve or Subtract",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 1799,
        "index": "E",
        "name": "City Union",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "geometry",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1799,
        "index": "D2",
        "name": "Hot Start Up (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1799,
        "index": "D1",
        "name": "Hot Start Up (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1799,
        "index": "C",
        "name": "Double Lexicographically Minimum",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1799,
        "index": "B",
        "name": "Equalize by Divide",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1799,
        "index": "A",
        "name": "Recent Actions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1798,
        "index": "F",
        "name": "Gifts from Grandfather Ahmed",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1798,
        "index": "E",
        "name": "Multitest Generator",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1798,
        "index": "D",
        "name": "Shocking Arrangement",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1798,
        "index": "C",
        "name": "Candy Store",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1798,
        "index": "B",
        "name": "Three Sevens",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1798,
        "index": "A",
        "name": "Showstopper",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1797,
        "index": "F",
        "name": "Li Hua and Path",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dsu",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1797,
        "index": "E",
        "name": "Li Hua and Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dsu",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1797,
        "index": "D",
        "name": "Li Hua and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "dp",
          "implementation",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1797,
        "index": "C",
        "name": "Li Hua and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "interactive"
        ],
        "points": 1600
      },
      {
        "contestId": 1797,
        "index": "B",
        "name": "Li Hua and Pattern",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1797,
        "index": "A",
        "name": "Li Hua and Maze",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1796,
        "index": "F",
        "name": "Strange Triples",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1796,
        "index": "E",
        "name": "Colored Subgraphs",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1796,
        "index": "D",
        "name": "Maximum Subarray",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1796,
        "index": "C",
        "name": "Maximum Set",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1796,
        "index": "B",
        "name": "Asterisk-Minor Template",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1796,
        "index": "A",
        "name": "Typical Interview Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1795,
        "index": "G",
        "name": "Removal Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 1795,
        "index": "F",
        "name": "Blocking Chips",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1795,
        "index": "E",
        "name": "Explosions?",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1795,
        "index": "D",
        "name": "Triangle Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1795,
        "index": "C",
        "name": "Tea Tasting",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1795,
        "index": "B",
        "name": "Ideal Point",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1795,
        "index": "A",
        "name": "Two Towers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1794,
        "index": "E",
        "name": "Labeling the Tree with Distances",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "hashing",
          "implementation",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1794,
        "index": "D",
        "name": "Counting Factorizations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1794,
        "index": "C",
        "name": "Scoring Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1794,
        "index": "B",
        "name": "Not Dividing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1794,
        "index": "A",
        "name": "Prefix and Suffix Array",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1793,
        "index": "F",
        "name": "Rebrending",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "divide and conquer",
          "implementation"
        ],
        "points": 2600
      },
      {
        "contestId": 1793,
        "index": "E",
        "name": "Velepin and Marketing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1793,
        "index": "D",
        "name": "Moscow Gorillas",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1793,
        "index": "C",
        "name": "Dora and Search",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1793,
        "index": "B",
        "name": "Fedya and Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1793,
        "index": "A",
        "name": "Yet Another Promotion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1792,
        "index": "F2",
        "name": "Graph Coloring (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "divide and conquer",
          "dp",
          "fft",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 1792,
        "index": "F1",
        "name": "Graph Coloring (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 1792,
        "index": "E",
        "name": "Divisors and Table",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1792,
        "index": "D",
        "name": "Fixed Prefix Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures",
          "hashing",
          "math",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1792,
        "index": "C",
        "name": "Min Max Sort",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1792,
        "index": "B",
        "name": "Stand-up Comedian",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1792,
        "index": "A",
        "name": "GamingForces",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1791,
        "index": "G2",
        "name": "Teleporters (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1791,
        "index": "G1",
        "name": "Teleporters (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1791,
        "index": "F",
        "name": "Range Update Point Query",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 1791,
        "index": "E",
        "name": "Negatives and Positives",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1791,
        "index": "D",
        "name": "Distinct Split",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1791,
        "index": "C",
        "name": "Prepend and Append",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1791,
        "index": "B",
        "name": "Following Directions",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1791,
        "index": "A",
        "name": "Codeforces Checking",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1790,
        "index": "G",
        "name": "Tokens on Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 1790,
        "index": "F",
        "name": "Timofey and Black-White Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "divide and conquer",
          "graphs",
          "greedy",
          "math",
          "shortest paths",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1790,
        "index": "E",
        "name": "Vlad and a Pair of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1400
      },
      {
        "contestId": 1790,
        "index": "D",
        "name": "Matryoshkas",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1790,
        "index": "C",
        "name": "Premutation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1790,
        "index": "B",
        "name": "Taisia and Dice",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1790,
        "index": "A",
        "name": "Polycarp and the Day of Pi",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1789,
        "index": "F",
        "name": "Serval and Brain Power",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 1789,
        "index": "E",
        "name": "Serval and Music Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1789,
        "index": "D",
        "name": "Serval and Shift-Shift-Shift",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1789,
        "index": "C",
        "name": "Serval and Toxel's Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1789,
        "index": "B",
        "name": "Serval and Inversion Magic",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1789,
        "index": "A",
        "name": "Serval and Mocha's Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1788,
        "index": "F",
        "name": "XOR, Tree, and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1788,
        "index": "E",
        "name": "Sum Over Zero",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1788,
        "index": "D",
        "name": "Moving Dots",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1788,
        "index": "C",
        "name": "Matching Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1788,
        "index": "B",
        "name": "Sum of Two Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math",
          "probabilities"
        ],
        "points": 1100
      },
      {
        "contestId": 1788,
        "index": "A",
        "name": "One and Two",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1787,
        "index": "I",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "two pointers"
        ],
        "points": 3400
      },
      {
        "contestId": 1787,
        "index": "H",
        "name": "Codeforces Scoreboard",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "geometry"
        ],
        "points": 3300
      },
      {
        "contestId": 1787,
        "index": "G",
        "name": "Colorful Tree Again",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1787,
        "index": "F",
        "name": "Inverse Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1787,
        "index": "E",
        "name": "The Harmonization of XOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1787,
        "index": "D",
        "name": "Game on Axis",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dsu",
          "graphs",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1787,
        "index": "C",
        "name": "Remove the Bracket",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1787,
        "index": "B",
        "name": "Number Factorization",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1787,
        "index": "A",
        "name": "Exponential Equation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1786,
        "index": "B",
        "name": "Cake Assembly Line",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1786,
        "index": "A2",
        "name": "Alternating Deck (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1786,
        "index": "A1",
        "name": "Non-alternating Deck (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1784,
        "index": "F",
        "name": "Minimums or Medians",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3400
      },
      {
        "contestId": 1784,
        "index": "E",
        "name": "Infinite Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "games",
          "probabilities"
        ],
        "points": 3100
      },
      {
        "contestId": 1784,
        "index": "D",
        "name": "Wooden Spoon",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1784,
        "index": "C",
        "name": "Monsters (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1784,
        "index": "B",
        "name": "Letter Exchange",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 1784,
        "index": "A",
        "name": "Monsters (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1783,
        "index": "G",
        "name": "Weighed Tree Radius",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "implementation",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1783,
        "index": "F",
        "name": "Double Sort II",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "flows",
          "graph matchings",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1783,
        "index": "E",
        "name": "Game of the Year",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1783,
        "index": "D",
        "name": "Different Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1783,
        "index": "C",
        "name": "Yet Another Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1783,
        "index": "B",
        "name": "Matrix of Differences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1783,
        "index": "A",
        "name": "Make it Beautiful",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1781,
        "index": "H2",
        "name": "Window Signals (hard version)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1781,
        "index": "H1",
        "name": "Window Signals (easy version)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 1781,
        "index": "G",
        "name": "Diverse Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1781,
        "index": "F",
        "name": "Bracket Insertion",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1781,
        "index": "E",
        "name": "Rectangle Shrinking",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1781,
        "index": "D",
        "name": "Many Perfect Squares",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1781,
        "index": "C",
        "name": "Equal Frequencies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1781,
        "index": "B",
        "name": "Going to the Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1781,
        "index": "A",
        "name": "Parallel Projection",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1780,
        "index": "G",
        "name": "Delicious Dessert",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dsu",
          "hashing",
          "math",
          "number theory",
          "string suffix structures"
        ],
        "points": 2400
      },
      {
        "contestId": 1780,
        "index": "F",
        "name": "Three Chairs",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "data structures",
          "dp",
          "number theory",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1780,
        "index": "E",
        "name": "Josuke and Complete Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1780,
        "index": "D",
        "name": "Bit Guessing Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "constructive algorithms",
          "interactive"
        ],
        "points": 1800
      },
      {
        "contestId": 1780,
        "index": "B",
        "name": "GCD Partition",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1779,
        "index": "H",
        "name": "Olympic Team Building",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "meet-in-the-middle"
        ],
        "points": 3500
      },
      {
        "contestId": 1779,
        "index": "G",
        "name": "The Game of the Century",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 1779,
        "index": "F",
        "name": "Xorcerer's Stones",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1779,
        "index": "E",
        "name": "Anya's Simultaneous Exhibition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "interactive",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1779,
        "index": "D",
        "name": "Boris and His Amazing Haircut",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "dsu",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1779,
        "index": "C",
        "name": "Least Prefix Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1779,
        "index": "B",
        "name": "MKnez's ConstructiveForces Task",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1779,
        "index": "A",
        "name": "Hall of Fame",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1778,
        "index": "F",
        "name": "Maximizing Root",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1778,
        "index": "E",
        "name": "The Tree Has Fallen!",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "math",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1778,
        "index": "D",
        "name": "Flexible String Revisit",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2100
      },
      {
        "contestId": 1778,
        "index": "C",
        "name": "Flexible String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1778,
        "index": "B",
        "name": "The Forbidden Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1778,
        "index": "A",
        "name": "Flip Flop Sum",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1777,
        "index": "F",
        "name": "Comfortably Numb",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer",
          "strings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1777,
        "index": "E",
        "name": "Edge Reverse",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1777,
        "index": "D",
        "name": "Score of a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dfs and similar",
          "dp",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1777,
        "index": "C",
        "name": "Quiz Master",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1777,
        "index": "B",
        "name": "Emordnilap",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1777,
        "index": "A",
        "name": "Everybody Likes Good Arrays!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1776,
        "index": "N",
        "name": "Count Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1776,
        "index": "M",
        "name": "Parmigiana With Seafood",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1776,
        "index": "L",
        "name": "Controllers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1776,
        "index": "K",
        "name": "Uniform Chemistry",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1776,
        "index": "J",
        "name": "Italian Data Centers",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 1776,
        "index": "I",
        "name": "Spinach Pizza",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "geometry",
          "greedy",
          "interactive"
        ],
        "points": 2500
      },
      {
        "contestId": 1776,
        "index": "H",
        "name": "Beppa and SwerChat",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1776,
        "index": "G",
        "name": "Another Wine Tasting Event",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1776,
        "index": "F",
        "name": "Train Splitting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1776,
        "index": "E",
        "name": "Crossing the Railways",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1776,
        "index": "D",
        "name": "Teamwork",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1776,
        "index": "C",
        "name": "Library game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "interactive",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1776,
        "index": "B",
        "name": "Vittorio Plays with LEGO Bricks",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2200
      },
      {
        "contestId": 1776,
        "index": "A",
        "name": "Walking Boy",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1775,
        "index": "F",
        "name": "Laboratory on Pluto",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1775,
        "index": "E",
        "name": "The Human Equation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1775,
        "index": "D",
        "name": "Friendly Spiders",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math",
          "number theory",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1775,
        "index": "C",
        "name": "Interesting Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1775,
        "index": "B",
        "name": "Gardener and the Array",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 1775,
        "index": "A2",
        "name": "Gardener and the Capybaras (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1775,
        "index": "A1",
        "name": "Gardener and the Capybaras (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1774,
        "index": "H",
        "name": "Maximum Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3500
      },
      {
        "contestId": 1774,
        "index": "G",
        "name": "Segment Covering",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "data structures",
          "dp",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1774,
        "index": "F2",
        "name": "Magician and Pigs (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 1774,
        "index": "F1",
        "name": "Magician and Pigs (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1774,
        "index": "E",
        "name": "Two Chess Pieces",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1774,
        "index": "D",
        "name": "Same Count One",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1774,
        "index": "C",
        "name": "Ice and Fire",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1774,
        "index": "B",
        "name": "Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1774,
        "index": "A",
        "name": "Add Plus Minus Sign",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1773,
        "index": "L",
        "name": "Lisa's Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1773,
        "index": "K",
        "name": "King's Puzzle",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1773,
        "index": "J",
        "name": "Jumbled Trees",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1773,
        "index": "I",
        "name": "Interactive Factorial Guessing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "games",
          "implementation",
          "interactive"
        ],
        "points": 2500
      },
      {
        "contestId": 1773,
        "index": "H",
        "name": "Hot and Cold",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 2600
      },
      {
        "contestId": 1773,
        "index": "G",
        "name": "Game of Questions",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "fft",
          "math",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 1773,
        "index": "F",
        "name": "Football",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1773,
        "index": "E",
        "name": "Easy Assembly",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1773,
        "index": "D",
        "name": "Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "flows",
          "graph matchings",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1773,
        "index": "C",
        "name": "Cactus Meets Torus",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1773,
        "index": "B",
        "name": "BinCoin",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "divide and conquer",
          "hashing",
          "implementation",
          "probabilities",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1773,
        "index": "A",
        "name": "Amazing Trick",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graph matchings",
          "math",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 1772,
        "index": "G",
        "name": "Gaining Rating",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1772,
        "index": "F",
        "name": "Copy of a Copy of a Copy",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "implementation",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1772,
        "index": "E",
        "name": "Permutation Game",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 1700
      },
      {
        "contestId": 1772,
        "index": "D",
        "name": "Absolute Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1772,
        "index": "C",
        "name": "Different Differences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1772,
        "index": "B",
        "name": "Matrix Rotation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1772,
        "index": "A",
        "name": "A+B?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1771,
        "index": "F",
        "name": "Hossam and Range Minimum Query",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures",
          "hashing",
          "probabilities",
          "strings",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1771,
        "index": "E",
        "name": "Hossam and a Letter",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1771,
        "index": "D",
        "name": "Hossam and (sub-)palindromic tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "dp",
          "strings",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1771,
        "index": "C",
        "name": "Hossam and Trainees",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1771,
        "index": "B",
        "name": "Hossam and Friends",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dp",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1771,
        "index": "A",
        "name": "Hossam and Combinatorics",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1770,
        "index": "H",
        "name": "Koxia, Mahiru and Winter Festival",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3500
      },
      {
        "contestId": 1770,
        "index": "G",
        "name": "Koxia and Bracket",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "fft",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1770,
        "index": "F",
        "name": "Koxia and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 3100
      },
      {
        "contestId": 1770,
        "index": "E",
        "name": "Koxia and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "dsu",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1770,
        "index": "D",
        "name": "Koxia and Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "dsu",
          "flows",
          "games",
          "graph matchings",
          "graphs",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1770,
        "index": "C",
        "name": "Koxia and Number Theory",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "chinese remainder theorem",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1770,
        "index": "B",
        "name": "Koxia and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 1770,
        "index": "A",
        "name": "Koxia and Whiteboards",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1769,
        "index": "D3",
        "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 III",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force"
        ],
        "points": 2300
      },
      {
        "contestId": 1769,
        "index": "D2",
        "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 II",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force"
        ],
        "points": 2200
      },
      {
        "contestId": 1769,
        "index": "D1",
        "name": "\u0418\u0433\u0440\u0430 \u0432 \u0414\u0435\u0432\u044f\u0442\u043a\u0443 I",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 1769,
        "index": "C2",
        "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 II",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 1300
      },
      {
        "contestId": 1769,
        "index": "C1",
        "name": "\u041f\u043e\u0434\u043a\u0440\u0443\u0442\u043a\u0430 I",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1769,
        "index": "B2",
        "name": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 II",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1769,
        "index": "B1",
        "name": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 I",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1769,
        "index": "A",
        "name": "\u0423\u0437\u043a\u0430\u044f \u0434\u043e\u0440\u043e\u0433\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1768,
        "index": "F",
        "name": "Wonderful Jump",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 1768,
        "index": "E",
        "name": "Partial Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1768,
        "index": "D",
        "name": "Lucky Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1768,
        "index": "C",
        "name": "Elemental Decompress",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1768,
        "index": "B",
        "name": "Quick Sort",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1768,
        "index": "A",
        "name": "Greatest Convex",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1767,
        "index": "F",
        "name": "Two Subtrees",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1767,
        "index": "E",
        "name": "Algebra Flash",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "graphs",
          "math",
          "meet-in-the-middle",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1767,
        "index": "D",
        "name": "Playoff",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1767,
        "index": "C",
        "name": "Count Binary Strings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1767,
        "index": "B",
        "name": "Block Towers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1767,
        "index": "A",
        "name": "Cut the Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1766,
        "index": "F",
        "name": "MCF",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2800
      },
      {
        "contestId": 1766,
        "index": "E",
        "name": "Decomposition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "divide and conquer",
          "dp",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1766,
        "index": "D",
        "name": "Lucky Chains",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1766,
        "index": "C",
        "name": "Hamiltonian Wall",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1766,
        "index": "B",
        "name": "Notepad#",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1766,
        "index": "A",
        "name": "Extremely Round",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1765,
        "index": "N",
        "name": "Number Reduction",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1765,
        "index": "M",
        "name": "Minimum LCM",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1765,
        "index": "L",
        "name": "Project Manager",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1765,
        "index": "K",
        "name": "Torus Path",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1765,
        "index": "J",
        "name": "Hero to Zero",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1765,
        "index": "I",
        "name": "Infinite Chess",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "shortest paths"
        ],
        "points": 2800
      },
      {
        "contestId": 1765,
        "index": "H",
        "name": "Hospital Queue",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1765,
        "index": "G",
        "name": "Guess the String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1765,
        "index": "F",
        "name": "Chemistry Lab",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 1765,
        "index": "E",
        "name": "Exchange",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1765,
        "index": "D",
        "name": "Watch the Videos",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1765,
        "index": "C",
        "name": "Card Guessing",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1765,
        "index": "B",
        "name": "Broken Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1765,
        "index": "A",
        "name": "Access Levels",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dsu",
          "flows",
          "graph matchings"
        ],
        "points": 2400
      },
      {
        "contestId": 1764,
        "index": "H",
        "name": "Doremy's Paint 2",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3400
      },
      {
        "contestId": 1764,
        "index": "G3",
        "name": "Doremy's Perfect DS Class (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 3300
      },
      {
        "contestId": 1764,
        "index": "G2",
        "name": "Doremy's Perfect DS Class (Medium Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 1764,
        "index": "G1",
        "name": "Doremy's Perfect DS Class (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 2900
      },
      {
        "contestId": 1764,
        "index": "F",
        "name": "Doremy's Experimental Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "sortings",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1764,
        "index": "E",
        "name": "Doremy's Number Line",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1764,
        "index": "D",
        "name": "Doremy's Pegging Game",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1764,
        "index": "C",
        "name": "Doremy's City Construction",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1764,
        "index": "B",
        "name": "Doremy's Perfect Math Class",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1764,
        "index": "A",
        "name": "Doremy's Paint",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1763,
        "index": "F",
        "name": "Edge Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1763,
        "index": "E",
        "name": "Node Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1763,
        "index": "D",
        "name": "Valid Bitonic Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1763,
        "index": "C",
        "name": "Another Array Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1763,
        "index": "B",
        "name": "Incinerate",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1763,
        "index": "A",
        "name": "Absolute Maximization",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1762,
        "index": "G",
        "name": "Unequal Adjacent Elements",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 3100
      },
      {
        "contestId": 1762,
        "index": "F",
        "name": "Good Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1762,
        "index": "E",
        "name": "Tree Sum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1762,
        "index": "D",
        "name": "GCD Queries",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1762,
        "index": "C",
        "name": "Binary Strings are Fun",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1762,
        "index": "B",
        "name": "Make Array Good",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "number theory",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1762,
        "index": "A",
        "name": "Divide and Conquer",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1761,
        "index": "G",
        "name": "Centroid Guess",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "probabilities",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1761,
        "index": "F2",
        "name": "Anti-median (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1761,
        "index": "F1",
        "name": "Anti-median (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1761,
        "index": "E",
        "name": "Make It Connected",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy",
          "matrices",
          "trees",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1761,
        "index": "D",
        "name": "Carry Bit",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1761,
        "index": "C",
        "name": "Set Construction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1761,
        "index": "B",
        "name": "Elimination of a Ring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1761,
        "index": "A",
        "name": "Two Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1760,
        "index": "G",
        "name": "SlavicG's Favorite Problem",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1760,
        "index": "F",
        "name": "Quests",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1760,
        "index": "E",
        "name": "Binary Inversions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1760,
        "index": "D",
        "name": "Challenging Valleys",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1760,
        "index": "C",
        "name": "Advantage",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1760,
        "index": "B",
        "name": "Atilla's Favorite Problem",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1760,
        "index": "A",
        "name": "Medium Number",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1759,
        "index": "G",
        "name": "Restore the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1759,
        "index": "F",
        "name": "All Possible Digits",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1759,
        "index": "E",
        "name": "The Humanoid",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1759,
        "index": "D",
        "name": "Make It Round",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1759,
        "index": "C",
        "name": "Thermostat",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "shortest paths"
        ],
        "points": 1100
      },
      {
        "contestId": 1759,
        "index": "B",
        "name": "Lost Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1759,
        "index": "A",
        "name": "Yes-Yes?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1758,
        "index": "F",
        "name": "Decent Division",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 1758,
        "index": "E",
        "name": "Tick, Tock",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1758,
        "index": "D",
        "name": "Range = \u221aSum",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "math",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1758,
        "index": "C",
        "name": "Almost All Multiples",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1758,
        "index": "B",
        "name": "XOR = Average",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 900
      },
      {
        "contestId": 1758,
        "index": "A",
        "name": "SSeeeeiinngg DDoouubbllee",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1754,
        "index": "B",
        "name": "Kevin and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1754,
        "index": "A",
        "name": "Technical Support",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1753,
        "index": "F",
        "name": "Minecraft Series",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "two pointers"
        ],
        "points": 3500
      },
      {
        "contestId": 1753,
        "index": "E",
        "name": "N Machines",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy"
        ],
        "points": 3300
      },
      {
        "contestId": 1753,
        "index": "D",
        "name": "The Beach",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1753,
        "index": "C",
        "name": "Wish I Knew How to Sort",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 1753,
        "index": "B",
        "name": "Factorial Divisibility",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1753,
        "index": "A2",
        "name": "Make Nonzero Sum (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1753,
        "index": "A1",
        "name": "Make Nonzero Sum (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1750,
        "index": "H",
        "name": "BinaryStringForces",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1750,
        "index": "G",
        "name": "Doping",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1750,
        "index": "F",
        "name": "Majority",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1750,
        "index": "D",
        "name": "Count GCD",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1750,
        "index": "C",
        "name": "Complementary XOR",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1750,
        "index": "B",
        "name": "Maximum Substring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1750,
        "index": "A",
        "name": "Indirect Sort",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1749,
        "index": "F",
        "name": "Distance to the Path",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1749,
        "index": "E",
        "name": "Cactus Wall",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1749,
        "index": "D",
        "name": "Counting Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1749,
        "index": "C",
        "name": "Number Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "games",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1749,
        "index": "B",
        "name": "Death's Blessing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1749,
        "index": "A",
        "name": "Cowardly Rooks",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1748,
        "index": "F",
        "name": "Circular Xor Reversal",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 3000
      },
      {
        "contestId": 1748,
        "index": "E",
        "name": "Yet Another Array Counting Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "dp",
          "flows",
          "math",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1748,
        "index": "D",
        "name": "ConstructOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "chinese remainder theorem",
          "combinatorics",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1748,
        "index": "C",
        "name": "Zero-Sum Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1748,
        "index": "B",
        "name": "Diverse Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1748,
        "index": "A",
        "name": "The Ultimate Square",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1747,
        "index": "E",
        "name": "List Generation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1747,
        "index": "D",
        "name": "Yet Another Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "constructive algorithms",
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 1747,
        "index": "C",
        "name": "Swap Game",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 1200
      },
      {
        "contestId": 1747,
        "index": "B",
        "name": "BAN BAN",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 900
      },
      {
        "contestId": 1747,
        "index": "A",
        "name": "Two Groups",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1746,
        "index": "G",
        "name": "Olympiad Training",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "flows",
          "geometry",
          "implementation",
          "sortings"
        ],
        "points": 3500
      },
      {
        "contestId": 1746,
        "index": "F",
        "name": "Kazaee",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 1746,
        "index": "E2",
        "name": "Joking (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "interactive"
        ],
        "points": 3200
      },
      {
        "contestId": 1746,
        "index": "E1",
        "name": "Joking (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive",
          "ternary search"
        ],
        "points": 2500
      },
      {
        "contestId": 1746,
        "index": "D",
        "name": "Paths on the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1746,
        "index": "C",
        "name": "Permutation Operations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1746,
        "index": "B",
        "name": "Rebellion",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1746,
        "index": "A",
        "name": "Maxmina",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1744,
        "index": "F",
        "name": "MEX vs MED",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1744,
        "index": "E2",
        "name": "Divisible Numbers (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1744,
        "index": "E1",
        "name": "Divisible Numbers (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1744,
        "index": "D",
        "name": "Divisibility by 2^n",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1744,
        "index": "C",
        "name": "Traffic Light",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1744,
        "index": "B",
        "name": "Even-Odd Increments",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1744,
        "index": "A",
        "name": "Number Replacement",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1743,
        "index": "G",
        "name": "Antifibonacci Cut",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "constructive algorithms",
          "data structures",
          "dp",
          "hashing",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1743,
        "index": "F",
        "name": "Intersection and Union",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "matrices",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1743,
        "index": "E",
        "name": "FTL",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1743,
        "index": "D",
        "name": "Problem with Random Tests",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "probabilities"
        ],
        "points": 1700
      },
      {
        "contestId": 1743,
        "index": "C",
        "name": "Save the Magazines",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1743,
        "index": "B",
        "name": "Permutation Value",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1743,
        "index": "A",
        "name": "Password",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1742,
        "index": "G",
        "name": "Orray",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1742,
        "index": "F",
        "name": "Smaller",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1742,
        "index": "E",
        "name": "Scuza",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1742,
        "index": "D",
        "name": "Coprime",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1742,
        "index": "C",
        "name": "Stripes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1742,
        "index": "B",
        "name": "Increasing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1742,
        "index": "A",
        "name": "Sum",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1741,
        "index": "G",
        "name": "Kirill and Company",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "dp",
          "flows",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1741,
        "index": "F",
        "name": "Multi-Colored Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "math",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1741,
        "index": "E",
        "name": "Sending a Sequence Over the Network",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 1741,
        "index": "D",
        "name": "Masha and a Beautiful Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "graphs",
          "sortings",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 1741,
        "index": "C",
        "name": "Minimize the Thickness",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1741,
        "index": "B",
        "name": "Funny Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1741,
        "index": "A",
        "name": "Compare T-Shirt Sizes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1740,
        "index": "I",
        "name": "Arranging Crystal Balls",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "divide and conquer",
          "dp",
          "geometry",
          "graphs",
          "number theory"
        ],
        "points": 3500
      },
      {
        "contestId": 1740,
        "index": "H",
        "name": "MEX Tree Manipulation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 1740,
        "index": "G",
        "name": "Dangerous Laser Power",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "sortings"
        ],
        "points": 3100
      },
      {
        "contestId": 1740,
        "index": "F",
        "name": "Conditional Mix",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1740,
        "index": "E",
        "name": "Hanging Hearts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1740,
        "index": "D",
        "name": "Knowledge Cards",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 1740,
        "index": "C",
        "name": "Bricks and Bags",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1740,
        "index": "B",
        "name": "Jumbo Extra Cheese 2",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1740,
        "index": "A",
        "name": "Factorise N+M",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1739,
        "index": "F",
        "name": "Keyboard Design",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dp",
          "string suffix structures",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1739,
        "index": "E",
        "name": "Cleaning Robot",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1739,
        "index": "D",
        "name": "Reset K Edges",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1739,
        "index": "C",
        "name": "Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "dp",
          "games"
        ],
        "points": 1500
      },
      {
        "contestId": 1739,
        "index": "B",
        "name": "Array Recovery",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1739,
        "index": "A",
        "name": "Immobile Knight",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1738,
        "index": "H",
        "name": "Palindrome Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 3300
      },
      {
        "contestId": 1738,
        "index": "G",
        "name": "Anti-Increasing Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1738,
        "index": "F",
        "name": "Connectivity Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy",
          "interactive",
          "shortest paths",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1738,
        "index": "E",
        "name": "Balance Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1738,
        "index": "D",
        "name": "Permutation Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1738,
        "index": "C",
        "name": "Even Number Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1738,
        "index": "B",
        "name": "Prefix Sum Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1738,
        "index": "A",
        "name": "Glory Addicts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1737,
        "index": "G",
        "name": "Ela Takes Dancing Class",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 3500
      },
      {
        "contestId": 1737,
        "index": "F",
        "name": "Ela and Prime GCD",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 3300
      },
      {
        "contestId": 1737,
        "index": "E",
        "name": "Ela Goes Hiking",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 1737,
        "index": "D",
        "name": "Ela and the Wiring Wizard",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "graphs",
          "greedy",
          "implementation",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1737,
        "index": "C",
        "name": "Ela and Crickets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1737,
        "index": "B",
        "name": "Ela's Fitness and the Luxury Number",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1737,
        "index": "A",
        "name": "Ela Sorting Books",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1736,
        "index": "E",
        "name": "Swap and Take",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1736,
        "index": "D",
        "name": "Equal Binary Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1736,
        "index": "C2",
        "name": "Good Subarrays (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1736,
        "index": "C1",
        "name": "Good Subarrays (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "schedules",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1736,
        "index": "B",
        "name": "Playing with GCD",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1736,
        "index": "A",
        "name": "Make A Equal to B",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1735,
        "index": "F",
        "name": "Pebbles and Beads",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 1735,
        "index": "E",
        "name": "House Planning",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graph matchings",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "data structures",
          "hashing",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1735,
        "index": "C",
        "name": "Phase Shift",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1735,
        "index": "B",
        "name": "Tea with Tangerines",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1735,
        "index": "A",
        "name": "Working Week",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1734,
        "index": "F",
        "name": "Zeros and Ones",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1734,
        "index": "E",
        "name": "Rectangular Congruence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1734,
        "index": "D",
        "name": "Slime Escape",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1734,
        "index": "C",
        "name": "Removing Smallest Multiples",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1734,
        "index": "B",
        "name": "Bright, Nice, Brilliant",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1734,
        "index": "A",
        "name": "Select Three Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1733,
        "index": "E",
        "name": "Conveyor",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1733,
        "index": "D2",
        "name": "Zero-One (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1733,
        "index": "D1",
        "name": "Zero-One (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1733,
        "index": "C",
        "name": "Parity Shuffle Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1733,
        "index": "B",
        "name": "Rule of League",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1733,
        "index": "A",
        "name": "Consecutive Sum",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1732,
        "index": "E",
        "name": "Location",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 1732,
        "index": "D2",
        "name": "Balance (Hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1732,
        "index": "D1",
        "name": "Balance (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1732,
        "index": "C2",
        "name": "Sheikh (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1732,
        "index": "C1",
        "name": "Sheikh (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "greedy",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1732,
        "index": "B",
        "name": "Ugu",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1732,
        "index": "A",
        "name": "Bestie",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1731,
        "index": "F",
        "name": "Function Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1731,
        "index": "E",
        "name": "Graph Cost",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1731,
        "index": "D",
        "name": "Valiant's New Map",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1731,
        "index": "C",
        "name": "Even Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "hashing",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1731,
        "index": "B",
        "name": "Kill Demodogs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1731,
        "index": "A",
        "name": "Joey Takes Money",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1730,
        "index": "F",
        "name": "Almost Sorted",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 1730,
        "index": "E",
        "name": "Maximums and Minimums",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "divide and conquer",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1730,
        "index": "D",
        "name": "Prefixes and Suffixes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1730,
        "index": "C",
        "name": "Minimum Notation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1730,
        "index": "B",
        "name": "Meeting on the Line",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "greedy",
          "implementation",
          "math",
          "ternary search"
        ],
        "points": 1600
      },
      {
        "contestId": 1730,
        "index": "A",
        "name": "Planets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1729,
        "index": "G",
        "name": "Cut Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "hashing",
          "strings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1729,
        "index": "F",
        "name": "Kirei and the Linear Function",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1729,
        "index": "E",
        "name": "Guess the Cycle Size",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 1729,
        "index": "D",
        "name": "Friends and the Restaurant",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1729,
        "index": "C",
        "name": "Jumping on Tiles",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1729,
        "index": "B",
        "name": "Decode String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1729,
        "index": "A",
        "name": "Two Elevators",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1728,
        "index": "G",
        "name": "Illumination",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "combinatorics",
          "dp",
          "math",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1728,
        "index": "F",
        "name": "Fishermen",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 1728,
        "index": "E",
        "name": "Red-Black Pepper",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1728,
        "index": "D",
        "name": "Letter Picking",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "games",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1728,
        "index": "C",
        "name": "Digital Logarithm",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1728,
        "index": "B",
        "name": "Best Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1728,
        "index": "A",
        "name": "Colored Balls: Revisited",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1726,
        "index": "H",
        "name": "Mainak and the Bleeding Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1726,
        "index": "G",
        "name": "A Certain Magical Party",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 3300
      },
      {
        "contestId": 1726,
        "index": "F",
        "name": "Late For Work (submissions are not allowed)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "schedules",
          "shortest paths"
        ],
        "points": 2900
      },
      {
        "contestId": 1726,
        "index": "E",
        "name": "Almost Perfect",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "probabilities",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1726,
        "index": "C",
        "name": "Jatayu's Balanced Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1726,
        "index": "B",
        "name": "Mainak and Interesting Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1726,
        "index": "A",
        "name": "Mainak and Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1725,
        "index": "M",
        "name": "Moving Both Hands",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1725,
        "index": "L",
        "name": "Lemper Cooking Competition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 1725,
        "index": "K",
        "name": "Kingdom of Criticism",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 2500
      },
      {
        "contestId": 1725,
        "index": "J",
        "name": "Journey",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1725,
        "index": "I",
        "name": "Imitating the Key Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dsu",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1725,
        "index": "H",
        "name": "Hot Black Hot White",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1725,
        "index": "G",
        "name": "Garage",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1725,
        "index": "F",
        "name": "Field Photography",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1725,
        "index": "E",
        "name": "Electrical Efficiency",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1725,
        "index": "D",
        "name": "Deducing Sortability",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1725,
        "index": "C",
        "name": "Circular Mirror",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "geometry",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1725,
        "index": "B",
        "name": "Basketball Together",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1725,
        "index": "A",
        "name": "Accumulation of Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1722,
        "index": "G",
        "name": "Even-Odd XOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1722,
        "index": "F",
        "name": "L-shapes",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1722,
        "index": "E",
        "name": "Counting Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1722,
        "index": "D",
        "name": "Line",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1722,
        "index": "C",
        "name": "Word Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1722,
        "index": "B",
        "name": "Colourblindness",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1722,
        "index": "A",
        "name": "Spell Check",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1721,
        "index": "F",
        "name": "Matching Reduction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "flows",
          "graph matchings",
          "graphs",
          "interactive"
        ],
        "points": 2800
      },
      {
        "contestId": 1721,
        "index": "E",
        "name": "Prefix Function Queries",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "hashing",
          "string suffix structures",
          "strings",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1721,
        "index": "D",
        "name": "Maximum AND",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "divide and conquer",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1721,
        "index": "C",
        "name": "Min-Max Array Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1721,
        "index": "B",
        "name": "Deadly Laser",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1721,
        "index": "A",
        "name": "Image",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1720,
        "index": "E",
        "name": "Misha and Paintings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1720,
        "index": "D2",
        "name": "Xor-Subsequence (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dp",
          "strings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1720,
        "index": "D1",
        "name": "Xor-Subsequence (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "strings",
          "trees",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1720,
        "index": "C",
        "name": "Corners",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1720,
        "index": "B",
        "name": "Interesting Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1720,
        "index": "A",
        "name": "Burenka Plays with Fractions",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1719,
        "index": "C",
        "name": "Fighting Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1719,
        "index": "B",
        "name": "Mathematical Circus",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1719,
        "index": "A",
        "name": "Chip Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1718,
        "index": "F",
        "name": "Burenka, an Array and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "number theory"
        ],
        "points": 3300
      },
      {
        "contestId": 1718,
        "index": "E",
        "name": "Impressionism",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1718,
        "index": "D",
        "name": "Permutation for Burenka",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graph matchings",
          "greedy",
          "math",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 1718,
        "index": "C",
        "name": "Tonya and Burenka-179",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1718,
        "index": "B",
        "name": "Fibonacci Strings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1718,
        "index": "A2",
        "name": "Burenka and Traditions (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1718,
        "index": "A1",
        "name": "Burenka and Traditions (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1717,
        "index": "F",
        "name": "Madoka and The First Session",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graph matchings",
          "graphs",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1717,
        "index": "E",
        "name": "Madoka and The Best University",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1717,
        "index": "D",
        "name": "Madoka and The Corruption Scheme",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1717,
        "index": "C",
        "name": "Madoka and Formal Statement",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1717,
        "index": "B",
        "name": "Madoka and Underground Competitions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1717,
        "index": "A",
        "name": "Madoka and Strange Thoughts",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1716,
        "index": "F",
        "name": "Bags with Balls",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1716,
        "index": "E",
        "name": "Swap and Maximum Block",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1716,
        "index": "D",
        "name": "Chip Move",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1716,
        "index": "C",
        "name": "Robot in a Hallway",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "ternary search"
        ],
        "points": 2000
      },
      {
        "contestId": 1716,
        "index": "B",
        "name": "Permutation Chain",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1716,
        "index": "A",
        "name": "2-3 Moves",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1715,
        "index": "F",
        "name": "Crop Squares",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "interactive",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1715,
        "index": "E",
        "name": "Long Way Home",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "geometry",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1715,
        "index": "D",
        "name": "2+ doors",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "bitmasks",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1715,
        "index": "C",
        "name": "Monoblock",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1715,
        "index": "B",
        "name": "Beautiful Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1715,
        "index": "A",
        "name": "Crossmarket",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1714,
        "index": "G",
        "name": "Path Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1714,
        "index": "F",
        "name": "Build a Tree and That Is It",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1714,
        "index": "E",
        "name": "Add Modulo 10",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1714,
        "index": "D",
        "name": "Color with Occurrences",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1714,
        "index": "C",
        "name": "Minimum  Varied Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1714,
        "index": "B",
        "name": "Remove Prefix",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1714,
        "index": "A",
        "name": "Everyone Loves to Sleep",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1713,
        "index": "F",
        "name": "Lost Array",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1713,
        "index": "E",
        "name": "Cross Swapping",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "data structures",
          "dsu",
          "greedy",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 1713,
        "index": "D",
        "name": "Tournament Countdown",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "interactive",
          "number theory",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 1713,
        "index": "C",
        "name": "Build Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1713,
        "index": "B",
        "name": "Optimal Reduction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1713,
        "index": "A",
        "name": "Traveling Salesman Problem",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1712,
        "index": "F",
        "name": "Triameter",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1712,
        "index": "E2",
        "name": "LCM Sum (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1712,
        "index": "E1",
        "name": "LCM Sum (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1712,
        "index": "D",
        "name": "Empty Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 1712,
        "index": "C",
        "name": "Sort Zero",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1712,
        "index": "B",
        "name": "Woeful Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1712,
        "index": "A",
        "name": "Wonderful Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1711,
        "index": "B",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs"
        ],
        "points": 1300
      },
      {
        "contestId": 1711,
        "index": "A",
        "name": "Perfect Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1710,
        "index": "E",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "games",
          "graph matchings"
        ],
        "points": 2400
      },
      {
        "contestId": 1710,
        "index": "D",
        "name": "Recover the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1710,
        "index": "C",
        "name": "XOR Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1710,
        "index": "B",
        "name": "Rain",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "geometry",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1710,
        "index": "A",
        "name": "Color the Picture",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1709,
        "index": "F",
        "name": "Multiset of Strings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "fft",
          "flows",
          "graphs",
          "math",
          "meet-in-the-middle",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1709,
        "index": "E",
        "name": "XOR Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dfs and similar",
          "dsu",
          "greedy",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1709,
        "index": "D",
        "name": "Rorororobot",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1709,
        "index": "C",
        "name": "Recover an RBS",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1709,
        "index": "B",
        "name": "Also Try Minecraft",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1709,
        "index": "A",
        "name": "Three Doors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1708,
        "index": "B",
        "name": "Difference of GCDs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1708,
        "index": "A",
        "name": "Difference Operations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1707,
        "index": "F",
        "name": "Bugaboo",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "number theory"
        ],
        "points": 3500
      },
      {
        "contestId": 1707,
        "index": "E",
        "name": "Replace",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 3500
      },
      {
        "contestId": 1707,
        "index": "D",
        "name": "Partial Virtual Trees",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1707,
        "index": "C",
        "name": "DFS Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1707,
        "index": "B",
        "name": "Difference Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1707,
        "index": "A",
        "name": "Doremy's IQ",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dsu",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1706,
        "index": "D2",
        "name": "Chopping Carrots (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1706,
        "index": "D1",
        "name": "Chopping Carrots (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1706,
        "index": "C",
        "name": "Qpwoeirut And The City",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1706,
        "index": "A",
        "name": "Another String Minimization Problem",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "constructive algorithms",
          "greedy",
          "string suffix structures",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1705,
        "index": "F",
        "name": "Mark and the Online Exam",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "interactive",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 1705,
        "index": "E",
        "name": "Mark and Professor Koro",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "combinatorics",
          "data structures",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1705,
        "index": "D",
        "name": "Mark and Lightbulbs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1705,
        "index": "C",
        "name": "Mark and His Unfinished Essay",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1705,
        "index": "B",
        "name": "Mark the Dust Sweeper",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1705,
        "index": "A",
        "name": "Mark the Photographer",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1704,
        "index": "H2",
        "name": "Game of AI (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1704,
        "index": "H1",
        "name": "Game of AI (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "dp",
          "fft",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1704,
        "index": "G",
        "name": "Mio and Lucky Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "fft",
          "math",
          "strings"
        ],
        "points": 3500
      },
      {
        "contestId": 1704,
        "index": "F",
        "name": "Colouring Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "games"
        ],
        "points": 2600
      },
      {
        "contestId": 1704,
        "index": "E",
        "name": "Count Seconds",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1704,
        "index": "D",
        "name": "Magical Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "hashing",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1704,
        "index": "C",
        "name": "Virus",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1704,
        "index": "B",
        "name": "Luke is a Foodie",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1704,
        "index": "A",
        "name": "Two 0-1 Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1703,
        "index": "G",
        "name": "Good Key, Bad Key",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1703,
        "index": "F",
        "name": "Yet Another Problem About Pairs Satisfying an Inequality",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1703,
        "index": "E",
        "name": "Mirror Grid",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1703,
        "index": "D",
        "name": "Double Strings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1703,
        "index": "C",
        "name": "Cypher",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1703,
        "index": "B",
        "name": "ICPC Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1703,
        "index": "A",
        "name": "YES or YES?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1702,
        "index": "G2",
        "name": "Passable Paths (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1702,
        "index": "G1",
        "name": "Passable Paths (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1702,
        "index": "F",
        "name": "Equate Multisets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1702,
        "index": "E",
        "name": "Split Into Two Sets",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 1702,
        "index": "D",
        "name": "Not a Cheap String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1702,
        "index": "C",
        "name": "Train and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1702,
        "index": "B",
        "name": "Polycarp Writes a String from Memory",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1702,
        "index": "A",
        "name": "Round Down the Price",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1701,
        "index": "F",
        "name": "Points",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "implementation",
          "math",
          "matrices"
        ],
        "points": 2500
      },
      {
        "contestId": 1701,
        "index": "E",
        "name": "Text Editor",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 1701,
        "index": "D",
        "name": "Permutation Restoration",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1701,
        "index": "C",
        "name": "Schedule Management",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1701,
        "index": "B",
        "name": "Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1701,
        "index": "A",
        "name": "Grass Field",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1700,
        "index": "F",
        "name": "Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1700,
        "index": "E",
        "name": "Serega the Pirate",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1700,
        "index": "D",
        "name": "River Locks",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1700,
        "index": "C",
        "name": "Helping the Nature",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1700,
        "index": "B",
        "name": "Palindromic Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1700,
        "index": "A",
        "name": "Optimal Path",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1699,
        "index": "E",
        "name": "Three Days Grace",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1699,
        "index": "D",
        "name": "Almost Triple Deletions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1699,
        "index": "C",
        "name": "The Third Problem",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1699,
        "index": "B",
        "name": "Almost Ternary Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "matrices"
        ],
        "points": 900
      },
      {
        "contestId": 1699,
        "index": "A",
        "name": "The Third Three Number Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1698,
        "index": "G",
        "name": "Long Binary String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math",
          "matrices",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1698,
        "index": "F",
        "name": "Equal Reversal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1698,
        "index": "E",
        "name": "PermutationForces II",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "greedy",
          "sortings",
          "trees",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1698,
        "index": "D",
        "name": "Fixed Point Guessing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 1600
      },
      {
        "contestId": 1698,
        "index": "C",
        "name": "3SUM Closure",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 1300
      },
      {
        "contestId": 1698,
        "index": "B",
        "name": "Rising Sand",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1698,
        "index": "A",
        "name": "XOR Mixup",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 1697,
        "index": "F",
        "name": "Too Many Constraints",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 1697,
        "index": "E",
        "name": "Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "dp",
          "geometry",
          "graphs",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1697,
        "index": "D",
        "name": "Guess The String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 1900
      },
      {
        "contestId": 1697,
        "index": "C",
        "name": "awoo's Favorite Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation",
          "strings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1697,
        "index": "B",
        "name": "Promo",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1697,
        "index": "A",
        "name": "Parkway Walk",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1696,
        "index": "H",
        "name": "Maximum Product?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "greedy",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 3500
      },
      {
        "contestId": 1696,
        "index": "G",
        "name": "Fishingprince Plays With Array Again",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "geometry",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1696,
        "index": "F",
        "name": "Tree Recovery",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1696,
        "index": "E",
        "name": "Placing Jinas",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1696,
        "index": "D",
        "name": "Permutation Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "divide and conquer",
          "greedy",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1696,
        "index": "C",
        "name": "Fishingprince Plays With Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1696,
        "index": "B",
        "name": "NIT Destroys the Universe",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1696,
        "index": "A",
        "name": "NIT orz!",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1695,
        "index": "E",
        "name": "Ambiguous Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 1695,
        "index": "D2",
        "name": "Tree Queries (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1695,
        "index": "D1",
        "name": "Tree Queries (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1695,
        "index": "C",
        "name": "Zero Path",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1695,
        "index": "B",
        "name": "Circle Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1695,
        "index": "A",
        "name": "Subrectangle Guess",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 800
      },
      {
        "contestId": 1694,
        "index": "B",
        "name": "Paranoid String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1694,
        "index": "A",
        "name": "Creep",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1693,
        "index": "F",
        "name": "I Might Be Wrong",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "two pointers"
        ],
        "points": 3400
      },
      {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3400
      },
      {
        "contestId": 1693,
        "index": "D",
        "name": "Decinc Dividing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "divide and conquer",
          "dp",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1693,
        "index": "C",
        "name": "Keshi in Search of AmShZ",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 1693,
        "index": "B",
        "name": "Fake Plastic Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1693,
        "index": "A",
        "name": "Directional Increase",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1692,
        "index": "H",
        "name": "Gambling",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1692,
        "index": "G",
        "name": "2^Sort",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "sortings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1692,
        "index": "F",
        "name": "3SUM",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1692,
        "index": "E",
        "name": "Binary Deque",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1692,
        "index": "D",
        "name": "The Clock",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1692,
        "index": "C",
        "name": "Where's the Bishop?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1692,
        "index": "B",
        "name": "All Distinct",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1692,
        "index": "A",
        "name": "Marathon",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1691,
        "index": "F",
        "name": "K-Set Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1691,
        "index": "E",
        "name": "Number of Groups",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1691,
        "index": "D",
        "name": "Max GEQ Sum",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "divide and conquer",
          "implementation",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1691,
        "index": "C",
        "name": "Sum of Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1691,
        "index": "B",
        "name": "Shoe Shuffling",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1691,
        "index": "A",
        "name": "Beat The Odds",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1690,
        "index": "G",
        "name": "Count the Trains",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1690,
        "index": "F",
        "name": "Shifting String",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math",
          "number theory",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1690,
        "index": "E",
        "name": "Price Maximization",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1690,
        "index": "D",
        "name": "Black and White Stripe",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1690,
        "index": "C",
        "name": "Restoring the Duration of Tasks",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1690,
        "index": "B",
        "name": "Array Decrements",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1690,
        "index": "A",
        "name": "Print a Pedestal (Codeforces logo?)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1689,
        "index": "E",
        "name": "ANDfinity",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1689,
        "index": "D",
        "name": "Lena and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1689,
        "index": "C",
        "name": "Infected Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1689,
        "index": "B",
        "name": "Mystic Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1689,
        "index": "A",
        "name": "Lex String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1688,
        "index": "C",
        "name": "Manipulating History",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1688,
        "index": "B",
        "name": "Patchouli's Magical Talisman",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1688,
        "index": "A",
        "name": "Cirno's Perfect Bitmasks Classroom",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 1687,
        "index": "F",
        "name": "Koishi's Unconscious Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1687,
        "index": "E",
        "name": "Become Big For Me",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 3500
      },
      {
        "contestId": 1687,
        "index": "D",
        "name": "Cute number",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dsu",
          "implementation",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1687,
        "index": "C",
        "name": "Sanae and Giant Robot",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dsu",
          "greedy",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1687,
        "index": "B",
        "name": "Railway System",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "interactive",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1687,
        "index": "A",
        "name": "The Enchanted Forest",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1686,
        "index": "B",
        "name": "Odd Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1686,
        "index": "A",
        "name": "Everything Everywhere All But One",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1685,
        "index": "E",
        "name": "The Ultimate LIS Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1685,
        "index": "D2",
        "name": "Permutation Weight (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1685,
        "index": "D1",
        "name": "Permutation Weight (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu"
        ],
        "points": 2800
      },
      {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1685,
        "index": "B",
        "name": "Linguistics",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1685,
        "index": "A",
        "name": "Circular Local MiniMax",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1684,
        "index": "H",
        "name": "Hard Cut",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "divide and conquer",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1684,
        "index": "G",
        "name": "Euclid Guess",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graph matchings",
          "math",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 1684,
        "index": "F",
        "name": "Diverse Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1684,
        "index": "E",
        "name": "MEX vs DIFF",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1684,
        "index": "D",
        "name": "Traps",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1684,
        "index": "C",
        "name": "Column Swapping",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1684,
        "index": "B",
        "name": "Z mod X = C",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1684,
        "index": "A",
        "name": "Digit Minimization",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "math",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1682,
        "index": "F",
        "name": "MCMF?",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "flows",
          "graphs",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1682,
        "index": "E",
        "name": "Unordered Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "math",
          "sortings",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1682,
        "index": "D",
        "name": "Circular Spanning Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1682,
        "index": "C",
        "name": "LIS or Reverse LIS?",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1682,
        "index": "B",
        "name": "AND Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1682,
        "index": "A",
        "name": "Palindromic Indices",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1681,
        "index": "F",
        "name": "Unique Occurrences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dp",
          "dsu",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1681,
        "index": "E",
        "name": "Labyrinth Adventures",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "matrices",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 1681,
        "index": "D",
        "name": "Required Length",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "hashing",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1681,
        "index": "C",
        "name": "Double Sort",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1681,
        "index": "B",
        "name": "Card Trick",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1681,
        "index": "A",
        "name": "Game with Cards",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1680,
        "index": "F",
        "name": "Lenient Vertex Cover",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1680,
        "index": "E",
        "name": "Moving Chips",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1680,
        "index": "D",
        "name": "Dog Walking",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1680,
        "index": "C",
        "name": "Binary String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "strings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1680,
        "index": "B",
        "name": "Robots",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1680,
        "index": "A",
        "name": "Minimums and Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1679,
        "index": "F",
        "name": "Formalism for Formalism",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1679,
        "index": "E",
        "name": "Typical Party in Dorm",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1679,
        "index": "D",
        "name": "Toss a Coin to Your Graph...",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 1679,
        "index": "C",
        "name": "Rooks Defenders",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1679,
        "index": "B",
        "name": "Stone Age Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1679,
        "index": "A",
        "name": "AvtoBus",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1678,
        "index": "B2",
        "name": "Tokitsukaze and Good 01-String (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1678,
        "index": "B1",
        "name": "Tokitsukaze and Good 01-String (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1678,
        "index": "A",
        "name": "Tokitsukaze and All Zero Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1677,
        "index": "F",
        "name": "Tokitsukaze and Gems",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1677,
        "index": "E",
        "name": "Tokitsukaze and Beautiful Subsegments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2900
      },
      {
        "contestId": 1677,
        "index": "D",
        "name": "Tokitsukaze and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1677,
        "index": "C",
        "name": "Tokitsukaze and Two Colorful Tapes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1677,
        "index": "B",
        "name": "Tokitsukaze and Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1677,
        "index": "A",
        "name": "Tokitsukaze and Strange Inequality",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 1676,
        "index": "H2",
        "name": "Maximum Crossings (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1676,
        "index": "H1",
        "name": "Maximum Crossings (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 1676,
        "index": "G",
        "name": "White-Black Balanced Subtrees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 1676,
        "index": "F",
        "name": "Longest Strike",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1676,
        "index": "E",
        "name": "Eating Queries",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1676,
        "index": "D",
        "name": "X-Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1676,
        "index": "C",
        "name": "Most Similar Words",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "implementation",
          "math",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1676,
        "index": "B",
        "name": "Equal Candies",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1676,
        "index": "A",
        "name": "Lucky?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1675,
        "index": "G",
        "name": "Sorting Pancakes",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1675,
        "index": "F",
        "name": "Vlad and Unfinished Business",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1675,
        "index": "E",
        "name": "Replace With the Previous, Minimize",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "greedy",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1675,
        "index": "D",
        "name": "Vertical Paths",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 1675,
        "index": "C",
        "name": "Detective Task",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1675,
        "index": "B",
        "name": "Make It Increasing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1675,
        "index": "A",
        "name": "Food for Animals",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1674,
        "index": "G",
        "name": "Remove Directed Edges",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 1674,
        "index": "F",
        "name": "Desktop Rearrangement",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1674,
        "index": "E",
        "name": "Breaking the Wall",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1674,
        "index": "D",
        "name": "A-B-C Sort",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1674,
        "index": "C",
        "name": "Infinite Replacement",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1674,
        "index": "B",
        "name": "Dictionary",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1674,
        "index": "A",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1673,
        "index": "F",
        "name": "Anti-Theft Road Planning",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "divide and conquer",
          "greedy",
          "interactive",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1673,
        "index": "E",
        "name": "Power or XOR?",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1673,
        "index": "D",
        "name": "Lost Arithmetic Progression",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1673,
        "index": "C",
        "name": "Palindrome Basis",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1673,
        "index": "B",
        "name": "A Perfectly Balanced String?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1673,
        "index": "A",
        "name": "Subtle Substring Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1672,
        "index": "I",
        "name": "PermutationForces",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 1672,
        "index": "H",
        "name": "Zigu Zagu",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 1672,
        "index": "G",
        "name": "Cross Xor",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math",
          "matrices"
        ],
        "points": 3200
      },
      {
        "contestId": 1672,
        "index": "F2",
        "name": "Checker for Array Shuffling",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 1672,
        "index": "F1",
        "name": "Array Shuffling",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1672,
        "index": "E",
        "name": "notepad.exe",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "interactive"
        ],
        "points": 2200
      },
      {
        "contestId": 1672,
        "index": "D",
        "name": "Cyclic Rotation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1672,
        "index": "C",
        "name": "Unequal Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1672,
        "index": "B",
        "name": "I love AAAB",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1672,
        "index": "A",
        "name": "Log Chopping",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1671,
        "index": "F",
        "name": "Permutation Counting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1671,
        "index": "E",
        "name": "Preorder",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp",
          "dsu",
          "hashing",
          "sortings",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1671,
        "index": "D",
        "name": "Insert a Progression",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1671,
        "index": "C",
        "name": "Dolce Vita",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1671,
        "index": "B",
        "name": "Consecutive Points Segment",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1671,
        "index": "A",
        "name": "String Building",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1670,
        "index": "F",
        "name": "Jee, You See?",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1670,
        "index": "E",
        "name": "Hemose on the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1670,
        "index": "D",
        "name": "Very Suspicious",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "geometry",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1670,
        "index": "C",
        "name": "Where is the Pizza?",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1670,
        "index": "B",
        "name": "Dorms War",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1670,
        "index": "A",
        "name": "Prof. Slim",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1669,
        "index": "H",
        "name": "Maximal AND",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1669,
        "index": "G",
        "name": "Fall Down",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1669,
        "index": "F",
        "name": "Eating Candies",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1669,
        "index": "E",
        "name": "2-Letter Strings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1669,
        "index": "D",
        "name": "Colorful Stamp",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1669,
        "index": "C",
        "name": "Odd/Even Increments",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1669,
        "index": "B",
        "name": "Triple",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1669,
        "index": "A",
        "name": "Division?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1668,
        "index": "B",
        "name": "Social Distance",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1668,
        "index": "A",
        "name": "Direction Change",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1667,
        "index": "F",
        "name": "Yin Yang",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 3500
      },
      {
        "contestId": 1667,
        "index": "E",
        "name": "Centroid Probabilities",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1667,
        "index": "D",
        "name": "Edge Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1667,
        "index": "C",
        "name": "Half Queen Cover",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1667,
        "index": "B",
        "name": "Optimal Partition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1667,
        "index": "A",
        "name": "Make it Increasing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1666,
        "index": "L",
        "name": "Labyrinth",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 1666,
        "index": "K",
        "name": "Kingdom Partition",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 3200
      },
      {
        "contestId": 1666,
        "index": "J",
        "name": "Job Lookup",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "shortest paths",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1666,
        "index": "I",
        "name": "Interactive Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "geometry",
          "interactive",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1666,
        "index": "H",
        "name": "Heroes of Might",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1666,
        "index": "G",
        "name": "Global Warming",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1666,
        "index": "F",
        "name": "Fancy Stack",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1666,
        "index": "E",
        "name": "Even Split",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1666,
        "index": "D",
        "name": "Deletive Editing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1666,
        "index": "C",
        "name": "Connect the Points",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 1666,
        "index": "B",
        "name": "Budget Distribution",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3300
      },
      {
        "contestId": 1666,
        "index": "A",
        "name": "Admissible Map",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3300
      },
      {
        "contestId": 1665,
        "index": "E",
        "name": "MinimizOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "divide and conquer",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1665,
        "index": "D",
        "name": "GCD Guess",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "chinese remainder theorem",
          "constructive algorithms",
          "games",
          "interactive",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1665,
        "index": "B",
        "name": "Array Cloning Technique",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1665,
        "index": "A",
        "name": "GCD vs LCM",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1663,
        "index": "H",
        "name": "Cross-Language Program",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ]
      },
      {
        "contestId": 1663,
        "index": "G",
        "name": "Six Characters",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "strings"
        ]
      },
      {
        "contestId": 1663,
        "index": "F",
        "name": "In Every Generation...",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ]
      },
      {
        "contestId": 1663,
        "index": "E",
        "name": "Are You Safe?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1663,
        "index": "D",
        "name": "Is it rated - 3",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "combinatorics",
          "dp",
          "math"
        ]
      },
      {
        "contestId": 1663,
        "index": "C",
        "name": "P\u014dja Verdon",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "math"
        ]
      },
      {
        "contestId": 1663,
        "index": "B",
        "name": "Mike's Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "divide and conquer",
          "implementation",
          "math"
        ]
      },
      {
        "contestId": 1663,
        "index": "A",
        "name": "Who Tested?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "expression parsing",
          "trees"
        ]
      },
      {
        "contestId": 1662,
        "index": "O",
        "name": "Circular Maze",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation"
        ]
      },
      {
        "contestId": 1662,
        "index": "N",
        "name": "Drone Photo",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "sortings"
        ]
      },
      {
        "contestId": 1662,
        "index": "M",
        "name": "Bottle Arrangements",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ]
      },
      {
        "contestId": 1662,
        "index": "L",
        "name": "Il Derby della Madonnina",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math"
        ]
      },
      {
        "contestId": 1662,
        "index": "K",
        "name": "Pandemic Restrictions",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "ternary search"
        ]
      },
      {
        "contestId": 1662,
        "index": "J",
        "name": "Training Camp",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ]
      },
      {
        "contestId": 1662,
        "index": "I",
        "name": "Ice Cream Shop",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ]
      },
      {
        "contestId": 1662,
        "index": "H",
        "name": "Boundary",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ]
      },
      {
        "contestId": 1662,
        "index": "G",
        "name": "Gastronomic Event",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "trees"
        ]
      },
      {
        "contestId": 1662,
        "index": "F",
        "name": "Antennas",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "graphs",
          "implementation",
          "implementation",
          "shortest paths",
          "shortest paths"
        ]
      },
      {
        "contestId": 1662,
        "index": "E",
        "name": "Round Table",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1662,
        "index": "D",
        "name": "Evolution of Weasels",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ]
      },
      {
        "contestId": 1662,
        "index": "C",
        "name": "European Trip",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "math",
          "matrices"
        ]
      },
      {
        "contestId": 1662,
        "index": "B",
        "name": "Toys",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ]
      },
      {
        "contestId": 1662,
        "index": "A",
        "name": "Organizing SWERC",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ]
      },
      {
        "contestId": 1661,
        "index": "F",
        "name": "Teleporters",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1661,
        "index": "E",
        "name": "Narrow Components",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "dsu",
          "math",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1661,
        "index": "D",
        "name": "Progressions Covering",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1661,
        "index": "C",
        "name": "Water the Trees",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1661,
        "index": "B",
        "name": "Getting Zero",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1300
      },
      {
        "contestId": 1661,
        "index": "A",
        "name": "Array Balancing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1660,
        "index": "F2",
        "name": "Promising String (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1660,
        "index": "F1",
        "name": "Promising String (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1660,
        "index": "E",
        "name": "Matrix and Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1660,
        "index": "D",
        "name": "Maximum Product Strikes Back",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1660,
        "index": "C",
        "name": "Get an Even String",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1660,
        "index": "B",
        "name": "Vlad and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1660,
        "index": "A",
        "name": "Vasya and Coins",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1659,
        "index": "F",
        "name": "Tree and Permutation Game",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "games",
          "graphs",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1659,
        "index": "E",
        "name": "AND-MEX Walk",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 1659,
        "index": "D",
        "name": "Reverse Sort Sum",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1659,
        "index": "C",
        "name": "Line Empire",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1659,
        "index": "B",
        "name": "Bit Flipping",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1659,
        "index": "A",
        "name": "Red Versus Blue",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1658,
        "index": "F",
        "name": "Juju and Binary String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1658,
        "index": "E",
        "name": "Gojou and Matrix Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "games",
          "hashing",
          "implementation",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1658,
        "index": "D2",
        "name": "388535 (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1658,
        "index": "D1",
        "name": "388535 (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1658,
        "index": "C",
        "name": "Shinju and the Lost Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1658,
        "index": "B",
        "name": "Marin and Anti-coprime Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1658,
        "index": "A",
        "name": "Marin and Photoshoot",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1657,
        "index": "F",
        "name": "Words on Tree",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1657,
        "index": "E",
        "name": "Star MST",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graph matchings",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1657,
        "index": "D",
        "name": "For Gamers. By Gamers.",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1657,
        "index": "C",
        "name": "Bracket Sequence Deletion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1657,
        "index": "B",
        "name": "XY Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1657,
        "index": "A",
        "name": "Integer Moves",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1656,
        "index": "I",
        "name": "Neighbour Ordering",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 3500
      },
      {
        "contestId": 1656,
        "index": "H",
        "name": "Equal LCM Subsets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 1656,
        "index": "G",
        "name": "Cycle Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1656,
        "index": "F",
        "name": "Parametric MST",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "graphs",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 1656,
        "index": "E",
        "name": "Equal Tree Sums",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "math",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1656,
        "index": "D",
        "name": "K-good",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1656,
        "index": "C",
        "name": "Make Equal With Mod",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1656,
        "index": "B",
        "name": "Subtract Operation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1656,
        "index": "A",
        "name": "Good Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1654,
        "index": "H",
        "name": "Three Minimums",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "divide and conquer",
          "dp",
          "fft",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1654,
        "index": "G",
        "name": "Snowy Mountain",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1654,
        "index": "F",
        "name": "Minimal String Xoration",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer",
          "greedy",
          "hashing",
          "sortings",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1654,
        "index": "E",
        "name": "Arithmetic Operations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "graphs",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1654,
        "index": "D",
        "name": "Potion Brewing Class",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1654,
        "index": "C",
        "name": "Alice and the Cake",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1654,
        "index": "B",
        "name": "Prefix Removals",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1654,
        "index": "A",
        "name": "Maximum Cake Tastiness",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1651,
        "index": "F",
        "name": "Tower Defense",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 1651,
        "index": "E",
        "name": "Sum of Matchings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "dfs and similar",
          "graph matchings",
          "greedy",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1651,
        "index": "D",
        "name": "Nearest Excluded Points",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1651,
        "index": "C",
        "name": "Fault-tolerant Network",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1651,
        "index": "B",
        "name": "Prove Him Wrong",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1651,
        "index": "A",
        "name": "Playoff",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1650,
        "index": "G",
        "name": "Counting Shortcuts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 1650,
        "index": "F",
        "name": "Vitaly and Advanced Useless Algorithms",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1650,
        "index": "E",
        "name": "Rescheduling the Exam",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1650,
        "index": "D",
        "name": "Twist the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1650,
        "index": "C",
        "name": "Weight of the System of Nested Segments",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1650,
        "index": "B",
        "name": "DIV + MOD",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1650,
        "index": "A",
        "name": "Deletions of Two Adjacent Letters",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1649,
        "index": "B",
        "name": "Game of Ball Passing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1649,
        "index": "A",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1648,
        "index": "F",
        "name": "Two Avenues",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs"
        ],
        "points": 3500
      },
      {
        "contestId": 1648,
        "index": "E",
        "name": "Air Reform",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dsu",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1648,
        "index": "D",
        "name": "Serious Business",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "implementation",
          "shortest paths"
        ],
        "points": 2800
      },
      {
        "contestId": 1648,
        "index": "C",
        "name": "Tyler and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1648,
        "index": "B",
        "name": "Integral Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1648,
        "index": "A",
        "name": "Weird Sum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "geometry",
          "math",
          "matrices",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1647,
        "index": "F",
        "name": "Madoka and Laziness",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 1647,
        "index": "E",
        "name": "Madoka and the Sixth-graders",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1647,
        "index": "D",
        "name": "Madoka and the Best School in Russia",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1647,
        "index": "C",
        "name": "Madoka and Childish Pranks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1647,
        "index": "B",
        "name": "Madoka and the Elegant Gift",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1647,
        "index": "A",
        "name": "Madoka and Math Dad",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1646,
        "index": "F",
        "name": "Playing Around the Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 2900
      },
      {
        "contestId": 1646,
        "index": "E",
        "name": "Power Board",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1646,
        "index": "D",
        "name": "Weight the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "implementation",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1646,
        "index": "C",
        "name": "Factorials and Powers of Two",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1646,
        "index": "B",
        "name": "Quality vs Quantity",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1646,
        "index": "A",
        "name": "Square Counting",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1644,
        "index": "F",
        "name": "Basis",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1644,
        "index": "E",
        "name": "Expand the Path",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1644,
        "index": "D",
        "name": "Cross Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1644,
        "index": "C",
        "name": "Increase Subarray Sums",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1644,
        "index": "B",
        "name": "Anti-Fibonacci Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1644,
        "index": "A",
        "name": "Doors and Keys",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1642,
        "index": "B",
        "name": "Power Walking",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1642,
        "index": "A",
        "name": "Hard Way",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 800
      },
      {
        "contestId": 1641,
        "index": "F",
        "name": "Covering Circle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3500
      },
      {
        "contestId": 1641,
        "index": "E",
        "name": "Special Positions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "fft",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1641,
        "index": "D",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "greedy",
          "hashing",
          "math",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1641,
        "index": "C",
        "name": "Anonymity Is Important",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dsu",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1641,
        "index": "B",
        "name": "Repetitions Decoding",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1641,
        "index": "A",
        "name": "Great Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1639,
        "index": "K",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "J",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "I",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "H",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "G",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "F",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "E",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "D",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "C",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "B",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1639,
        "index": "A",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ]
      },
      {
        "contestId": 1638,
        "index": "F",
        "name": "Two Posters",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 3200
      },
      {
        "contestId": 1638,
        "index": "E",
        "name": "Colorful Operations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1638,
        "index": "D",
        "name": "Big Brush",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1638,
        "index": "C",
        "name": "Inversion Graph",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1638,
        "index": "B",
        "name": "Odd Swap Sort",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1638,
        "index": "A",
        "name": "Reverse",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1637,
        "index": "H",
        "name": "Minimize Inversions Number",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 3500
      },
      {
        "contestId": 1637,
        "index": "G",
        "name": "Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1637,
        "index": "F",
        "name": "Towers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1637,
        "index": "E",
        "name": "Best Pair",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1637,
        "index": "D",
        "name": "Yet Another Minimization Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1637,
        "index": "C",
        "name": "Andrew and Stones",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1637,
        "index": "B",
        "name": "MEX and Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1637,
        "index": "A",
        "name": "Sorting Parts",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1635,
        "index": "F",
        "name": "Closest Pair",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1635,
        "index": "E",
        "name": "Cars",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1635,
        "index": "D",
        "name": "Infinite Set",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math",
          "matrices",
          "number theory",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1635,
        "index": "C",
        "name": "Differential Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1635,
        "index": "B",
        "name": "Avoid Local Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1635,
        "index": "A",
        "name": "Min Or Sum",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1634,
        "index": "F",
        "name": "Fibonacci Additions",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "hashing",
          "implementation",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1634,
        "index": "E",
        "name": "Fair Share",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "graph matchings",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1634,
        "index": "D",
        "name": "Finding Zero",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1634,
        "index": "C",
        "name": "OKEA",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 1634,
        "index": "B",
        "name": "Fortune Telling",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1634,
        "index": "A",
        "name": "Reverse and Concatenate",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1633,
        "index": "F",
        "name": "Perfect Matching",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "interactive",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1633,
        "index": "E",
        "name": "Spanning Tree Queries",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "math",
          "sortings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1633,
        "index": "D",
        "name": "Make Them Equal",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1633,
        "index": "C",
        "name": "Kill the Monster",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1633,
        "index": "B",
        "name": "Minority",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1633,
        "index": "A",
        "name": "Div. 7",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 1632,
        "index": "E2",
        "name": "Distance Tree (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "shortest paths",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1632,
        "index": "E1",
        "name": "Distance Tree (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1632,
        "index": "D",
        "name": "New Year Concert",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1632,
        "index": "C",
        "name": "Strange Test",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1632,
        "index": "B",
        "name": "Roof Construction",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 1632,
        "index": "A",
        "name": "ABC",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1631,
        "index": "B",
        "name": "Fun with Even Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1631,
        "index": "A",
        "name": "Min Max Swap",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1630,
        "index": "F",
        "name": "Making It Bipartite",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 1630,
        "index": "E",
        "name": "Expected Components",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 1630,
        "index": "D",
        "name": "Flipping Range",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1630,
        "index": "C",
        "name": "Paint the Middle",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1630,
        "index": "B",
        "name": "Range and Partition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1630,
        "index": "A",
        "name": "And Matching",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1500
      },
      {
        "contestId": 1629,
        "index": "B",
        "name": "GCD Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1629,
        "index": "A",
        "name": "Download More RAM",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1628,
        "index": "F",
        "name": "Spaceship Crisis Management",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "geometry",
          "sortings"
        ],
        "points": 3500
      },
      {
        "contestId": 1628,
        "index": "E",
        "name": "Groceries in Meteor Town",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1628,
        "index": "D2",
        "name": "Game on Sum (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "games",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1628,
        "index": "D1",
        "name": "Game on Sum (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "games",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1628,
        "index": "C",
        "name": "Grid Xor",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "interactive",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1628,
        "index": "B",
        "name": "Peculiar Movie Preferences",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1628,
        "index": "A",
        "name": "Meximum Array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1627,
        "index": "F",
        "name": "Not Splitting",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "graphs",
          "greedy",
          "implementation",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "shortest paths",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1627,
        "index": "D",
        "name": "Not Adding",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1627,
        "index": "C",
        "name": "Not Assigning",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "number theory",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 1627,
        "index": "B",
        "name": "Not Sitting",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1627,
        "index": "A",
        "name": "Not Shading",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1626,
        "index": "F",
        "name": "A Random Code Problem",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 1626,
        "index": "E",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1626,
        "index": "D",
        "name": "Martial Arts Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1626,
        "index": "C",
        "name": "Monsters And Spells",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1626,
        "index": "B",
        "name": "Minor Reduction",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1626,
        "index": "A",
        "name": "Equidistant Letters",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1625,
        "index": "E2",
        "name": "Cats on the Upgrade (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1625,
        "index": "E1",
        "name": "Cats on the Upgrade (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1625,
        "index": "D",
        "name": "Binary Spiders",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "implementation",
          "math",
          "sortings",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1625,
        "index": "C",
        "name": "Road Optimization",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 1625,
        "index": "B",
        "name": "Elementary Particles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1625,
        "index": "A",
        "name": "Ancient Civilization",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1624,
        "index": "G",
        "name": "MinOr Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1624,
        "index": "F",
        "name": "Interacdive Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 1624,
        "index": "E",
        "name": "Masha-forgetful",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1624,
        "index": "D",
        "name": "Palindromes Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1624,
        "index": "C",
        "name": "Division by Two and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graph matchings",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1624,
        "index": "B",
        "name": "Make AP",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1624,
        "index": "A",
        "name": "Plus One on the Subset",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1623,
        "index": "E",
        "name": "Middle Duplication",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1623,
        "index": "D",
        "name": "Robot Cleaner Revisit",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1623,
        "index": "C",
        "name": "Balanced Stone Heaps",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1623,
        "index": "B",
        "name": "Game on Ranges",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1623,
        "index": "A",
        "name": "Robot Cleaner",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1622,
        "index": "F",
        "name": "Quadratic Set",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "hashing",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1622,
        "index": "E",
        "name": "Math Test",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1622,
        "index": "D",
        "name": "Shuffle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1622,
        "index": "C",
        "name": "Set or Decrease",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1622,
        "index": "B",
        "name": "Berland Music",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1622,
        "index": "A",
        "name": "Construct a Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1621,
        "index": "I",
        "name": "Two Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "string suffix structures"
        ],
        "points": 3500
      },
      {
        "contestId": 1621,
        "index": "H",
        "name": "Trains and Airplanes",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1621,
        "index": "G",
        "name": "Weighted Increasing Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1621,
        "index": "F",
        "name": "Strange Instructions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 1621,
        "index": "E",
        "name": "New School",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1621,
        "index": "D",
        "name": "The Winter Hike",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1621,
        "index": "C",
        "name": "Hidden Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "interactive",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1621,
        "index": "B",
        "name": "Integers Shop",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1621,
        "index": "A",
        "name": "Stable Arrangement of Rooks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1620,
        "index": "G",
        "name": "Subsequences Galore",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1620,
        "index": "F",
        "name": "Bipartite Array",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1620,
        "index": "E",
        "name": "Replace the Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dsu",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1620,
        "index": "D",
        "name": "Exact Change",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1620,
        "index": "C",
        "name": "BA-String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1620,
        "index": "B",
        "name": "Triangles on a Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1620,
        "index": "A",
        "name": "Equal or Not Equal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1619,
        "index": "H",
        "name": "Permutation and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "divide and conquer",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1619,
        "index": "G",
        "name": "Unusual Minesweeper",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "dsu",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1619,
        "index": "F",
        "name": "Let's Play the Hat?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1619,
        "index": "E",
        "name": "MEX and Increments",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1619,
        "index": "D",
        "name": "New Year's Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1619,
        "index": "C",
        "name": "Wrong Addition",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1619,
        "index": "B",
        "name": "Squares and Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1619,
        "index": "A",
        "name": "Square String?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1618,
        "index": "G",
        "name": "Trader Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1618,
        "index": "F",
        "name": "Reverse",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "implementation",
          "math",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1618,
        "index": "E",
        "name": "Singers' Tour",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1618,
        "index": "D",
        "name": "Array and Operations",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1618,
        "index": "C",
        "name": "Paint the Array",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1618,
        "index": "B",
        "name": "Missing Bigram",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1618,
        "index": "A",
        "name": "Polycarp and Sums of Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1617,
        "index": "E",
        "name": "Christmas Chocolates",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games",
          "graphs",
          "implementation",
          "math",
          "number theory",
          "shortest paths",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1617,
        "index": "D2",
        "name": "Too Many Impostors (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "interactive",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1617,
        "index": "D1",
        "name": "Too Many Impostors (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "interactive"
        ],
        "points": 1800
      },
      {
        "contestId": 1617,
        "index": "C",
        "name": "Paprika and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1617,
        "index": "B",
        "name": "GCD Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1617,
        "index": "A",
        "name": "Forbidden Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1616,
        "index": "H",
        "name": "Keep XOR Low",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "data structures",
          "divide and conquer",
          "dp",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1616,
        "index": "G",
        "name": "Just Add an Edge",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 3500
      },
      {
        "contestId": 1616,
        "index": "F",
        "name": "Tricolor Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math",
          "matrices"
        ],
        "points": 2900
      },
      {
        "contestId": 1616,
        "index": "E",
        "name": "Lexicographically Small Enough",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1616,
        "index": "D",
        "name": "Keep the Average High",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1616,
        "index": "C",
        "name": "Representative Edges",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1616,
        "index": "B",
        "name": "Mirror in the String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1616,
        "index": "A",
        "name": "Integer Diversity",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1615,
        "index": "H",
        "name": "Reindeer Games",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "divide and conquer",
          "flows",
          "graphs",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 1615,
        "index": "G",
        "name": "Maximum Adjacent Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graph matchings"
        ],
        "points": 3300
      },
      {
        "contestId": 1615,
        "index": "F",
        "name": "LEGOndary Grandmaster",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1615,
        "index": "E",
        "name": "Purple Crayon",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "games",
          "graphs",
          "greedy",
          "math",
          "sortings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1615,
        "index": "D",
        "name": "X(or)-mas Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1615,
        "index": "C",
        "name": "Menorah",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1615,
        "index": "B",
        "name": "And It's Non-Zero",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1615,
        "index": "A",
        "name": "Closing The Gap",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1614,
        "index": "E",
        "name": "Divan and a Cottage",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 1614,
        "index": "D2",
        "name": "Divan and Kostomuksha (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1614,
        "index": "D1",
        "name": "Divan and Kostomuksha (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1614,
        "index": "C",
        "name": "Divan and bitwise operations",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1614,
        "index": "B",
        "name": "Divan and a New Project",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1614,
        "index": "A",
        "name": "Divan and a Store",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1613,
        "index": "F",
        "name": "Tree Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "fft"
        ],
        "points": 2600
      },
      {
        "contestId": 1613,
        "index": "E",
        "name": "Crazy Robot",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 1613,
        "index": "D",
        "name": "MEX Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1613,
        "index": "C",
        "name": "Poisoned Dagger",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1200
      },
      {
        "contestId": 1613,
        "index": "B",
        "name": "Absent Remainder",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1613,
        "index": "A",
        "name": "Long Comparison",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1612,
        "index": "G",
        "name": "Max Sum Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "shortest paths"
        ],
        "points": 2800
      },
      {
        "contestId": 1612,
        "index": "E",
        "name": "Messages",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "probabilities",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1612,
        "index": "D",
        "name": "X-Magic Pair",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1612,
        "index": "C",
        "name": "Chat Ban",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1612,
        "index": "B",
        "name": "Special Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1612,
        "index": "A",
        "name": "Distance",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1611,
        "index": "G",
        "name": "Robot and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graph matchings",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1611,
        "index": "F",
        "name": "ATM and Students",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1611,
        "index": "E2",
        "name": "Escape The Maze (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "shortest paths",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1611,
        "index": "E1",
        "name": "Escape The Maze (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "shortest paths",
          "trees",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1611,
        "index": "D",
        "name": "Weights Assignment For Tree Edges",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 1611,
        "index": "C",
        "name": "Polycarp Recovers the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 1611,
        "index": "B",
        "name": "Team Composition: Programmers and Mathematicians",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1611,
        "index": "A",
        "name": "Make Even",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1610,
        "index": "I",
        "name": "Mashtali vs AtCoder",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1610,
        "index": "H",
        "name": "Squid Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1610,
        "index": "G",
        "name": "AmShZ Wins a Bet",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "hashing"
        ],
        "points": 3300
      },
      {
        "contestId": 1610,
        "index": "F",
        "name": "Mashtali: a Space Oddysey",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 1610,
        "index": "E",
        "name": "AmShZ and G.O.A.T.",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1610,
        "index": "D",
        "name": "Not Quite Lee",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1610,
        "index": "C",
        "name": "Keshi Is Throwing a Party",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1610,
        "index": "B",
        "name": "Kalindrome Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1610,
        "index": "A",
        "name": "Anti Light's Cell Guessing",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1609,
        "index": "H",
        "name": "Pushing Robots",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1609,
        "index": "G",
        "name": "A Stroll Around the Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1609,
        "index": "F",
        "name": "Interesting Sections",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "meet-in-the-middle",
          "two pointers"
        ],
        "points": 2800
      },
      {
        "contestId": 1609,
        "index": "E",
        "name": "William The Oblivious",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dp",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 1609,
        "index": "D",
        "name": "Social Network",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1609,
        "index": "C",
        "name": "Complex Market Analysis",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "implementation",
          "number theory",
          "schedules",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1609,
        "index": "B",
        "name": "William the Vigilant",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1609,
        "index": "A",
        "name": "Divide and Multiply",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1608,
        "index": "G",
        "name": "Alphabetic Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "hashing",
          "string suffix structures",
          "strings",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1608,
        "index": "F",
        "name": "MEX counting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 3200
      },
      {
        "contestId": 1608,
        "index": "E",
        "name": "The Cells on the Paper",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "sortings"
        ],
        "points": 2800
      },
      {
        "contestId": 1608,
        "index": "D",
        "name": "Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1608,
        "index": "C",
        "name": "Game Master",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1608,
        "index": "B",
        "name": "Build the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1608,
        "index": "A",
        "name": "Find Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1607,
        "index": "H",
        "name": "Banquet Preparations 2",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1607,
        "index": "G",
        "name": "Banquet Preparations 1",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1607,
        "index": "F",
        "name": "Robot on the Board 2",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1607,
        "index": "E",
        "name": "Robot on the Board 1",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1607,
        "index": "D",
        "name": "Blue-Red Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1607,
        "index": "C",
        "name": "Minimum Extraction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1607,
        "index": "B",
        "name": "Odd Grasshopper",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1607,
        "index": "A",
        "name": "Linear Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1606,
        "index": "F",
        "name": "Tree Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1606,
        "index": "E",
        "name": "Arena",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1606,
        "index": "D",
        "name": "Red-Blue Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1606,
        "index": "C",
        "name": "Banknotes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1606,
        "index": "B",
        "name": "Update Files",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1606,
        "index": "A",
        "name": "AB Balance",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1605,
        "index": "F",
        "name": "PalindORme",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1605,
        "index": "E",
        "name": "Array Equalizer",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1605,
        "index": "D",
        "name": "Treelabeling",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "games",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1605,
        "index": "C",
        "name": "Dominant Character",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1605,
        "index": "B",
        "name": "Reverse Sort",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1605,
        "index": "A",
        "name": "A.M. Deviation",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1604,
        "index": "B",
        "name": "XOR Specia-LIS-t",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1100
      },
      {
        "contestId": 1604,
        "index": "A",
        "name": "Era",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1603,
        "index": "F",
        "name": "October 18, 2017",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1603,
        "index": "E",
        "name": "A Perfect Problem",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1603,
        "index": "D",
        "name": "Artistic Partition",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "number theory"
        ],
        "points": 3000
      },
      {
        "contestId": 1603,
        "index": "C",
        "name": "Extreme Extension",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1603,
        "index": "B",
        "name": "Moderate Modular Mode",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1603,
        "index": "A",
        "name": "Di-visible Confusion",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1602,
        "index": "B",
        "name": "Divine Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1602,
        "index": "A",
        "name": "Two Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1601,
        "index": "F",
        "name": "Two Sorts",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "math",
          "meet-in-the-middle"
        ],
        "points": 3400
      },
      {
        "contestId": 1601,
        "index": "E",
        "name": "Phys Ed Online",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 1601,
        "index": "D",
        "name": "Difficult Mountain",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 1601,
        "index": "C",
        "name": "Optimal Insertion",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1601,
        "index": "B",
        "name": "Frog Traveler",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1601,
        "index": "A",
        "name": "Array Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1600,
        "index": "J",
        "name": "Robot Factory",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar"
        ],
        "points": 1400
      },
      {
        "contestId": 1600,
        "index": "F",
        "name": "Party Organization",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1600,
        "index": "E",
        "name": "Array Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1599,
        "index": "J",
        "name": "Bob's Beautiful Array",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1599,
        "index": "I",
        "name": "Desert",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 1599,
        "index": "H",
        "name": "Hidden Fortress",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1599,
        "index": "G",
        "name": "Shortest path",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 1599,
        "index": "F",
        "name": "Mars",
        "type": "PROGRAMMING",
        "tags": [
          "hashing"
        ],
        "points": 2700
      },
      {
        "contestId": 1599,
        "index": "E",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "matrices"
        ],
        "points": 3200
      },
      {
        "contestId": 1599,
        "index": "D",
        "name": "Bubble Popping",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 1599,
        "index": "C",
        "name": "Bubble Strike",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities",
          "ternary search"
        ],
        "points": 2000
      },
      {
        "contestId": 1599,
        "index": "B",
        "name": "Restaurant Game",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 1599,
        "index": "A",
        "name": "Weights",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1598,
        "index": "G",
        "name": "The Sum of Good Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "math",
          "string suffix structures",
          "strings"
        ],
        "points": 3200
      },
      {
        "contestId": 1598,
        "index": "F",
        "name": "RBS",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1598,
        "index": "E",
        "name": "Staircases",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "data structures",
          "dfs and similar",
          "dp",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1598,
        "index": "D",
        "name": "Training Session",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1598,
        "index": "C",
        "name": "Delete Two Elements",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1598,
        "index": "B",
        "name": "Groups",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1598,
        "index": "A",
        "name": "Computer Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1594,
        "index": "F",
        "name": "Ideal Farm",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1594,
        "index": "E2",
        "name": "Rubik's Cube Coloring (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation",
          "math",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1594,
        "index": "E1",
        "name": "Rubik's Cube Coloring (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1594,
        "index": "D",
        "name": "The Number of Imposters",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "dsu",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1594,
        "index": "C",
        "name": "Make Them Equal",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1594,
        "index": "B",
        "name": "Special Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1594,
        "index": "A",
        "name": "Consecutive Sum Riddle",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1593,
        "index": "G",
        "name": "Changing Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1593,
        "index": "F",
        "name": "Red-Black Number",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "implementation",
          "math",
          "meet-in-the-middle"
        ],
        "points": 2100
      },
      {
        "contestId": 1593,
        "index": "E",
        "name": "Gardener and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1593,
        "index": "D2",
        "name": "Half of Same",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1593,
        "index": "D1",
        "name": "All are Same",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1593,
        "index": "C",
        "name": "Save More Mice",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1593,
        "index": "B",
        "name": "Make it Divisible by 25",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "math",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1593,
        "index": "A",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1592,
        "index": "F2",
        "name": "Alice and Recoloring 2",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graph matchings",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1592,
        "index": "E",
        "name": "Bored Bakry",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1592,
        "index": "D",
        "name": "Hemose in ICPC ?",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "implementation",
          "interactive",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1592,
        "index": "C",
        "name": "Bakry and Partitioning",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1592,
        "index": "B",
        "name": "Hemose Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1592,
        "index": "A",
        "name": "Gamer Hemose",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1588,
        "index": "F",
        "name": "Jumping Through the Array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "graphs",
          "two pointers"
        ],
        "points": 3500
      },
      {
        "contestId": 1586,
        "index": "I",
        "name": "Omkar and Mosaic",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1585,
        "index": "G",
        "name": "Poachers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1585,
        "index": "F",
        "name": "Non-equal Neighbours",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1585,
        "index": "E",
        "name": "Frequency Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1585,
        "index": "D",
        "name": "Yet Another Sorting Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1585,
        "index": "C",
        "name": "Minimize Distance",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1585,
        "index": "B",
        "name": "Array Eversion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1585,
        "index": "A",
        "name": "Life of a Flower",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1584,
        "index": "G",
        "name": "Eligible Segments",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3200
      },
      {
        "contestId": 1584,
        "index": "F",
        "name": "Strange LCS",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "greedy",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1584,
        "index": "E",
        "name": "Game with Stones",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "games",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1584,
        "index": "D",
        "name": "Guess the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "interactive",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1584,
        "index": "C",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1584,
        "index": "B",
        "name": "Coloring Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1584,
        "index": "A",
        "name": "Mathematical Addition",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1583,
        "index": "H",
        "name": "Omkar and Tours",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "sortings",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 1583,
        "index": "G",
        "name": "Omkar and Time Travel",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1583,
        "index": "F",
        "name": "Defender of Childhood Dreams",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "divide and conquer"
        ],
        "points": 2500
      },
      {
        "contestId": 1583,
        "index": "E",
        "name": "Moment of Bloom",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graph matchings",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "interactive"
        ],
        "points": 1800
      },
      {
        "contestId": 1583,
        "index": "C",
        "name": "Omkar and Determination",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 1200
      },
      {
        "contestId": 1583,
        "index": "A",
        "name": "Windblume Ode",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1582,
        "index": "G",
        "name": "Kuzya and Homework",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1582,
        "index": "F2",
        "name": "Korney Korneevich and XOR (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1582,
        "index": "F1",
        "name": "Korney Korneevich and XOR (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1582,
        "index": "D",
        "name": "Vupsen, Pupsen and 0",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1582,
        "index": "C",
        "name": "Grandma Capa Knits a Scarf",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "strings",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1582,
        "index": "B",
        "name": "Luntik and Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1582,
        "index": "A",
        "name": "Luntik and Concerts",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1581,
        "index": "B",
        "name": "Diameter of Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1581,
        "index": "A",
        "name": "CQXYM Count Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1580,
        "index": "F",
        "name": "Problems for Codeforces",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1580,
        "index": "E",
        "name": "Railway Construction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 3400
      },
      {
        "contestId": 1580,
        "index": "D",
        "name": "Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1580,
        "index": "C",
        "name": "Train Maintenance",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1580,
        "index": "B",
        "name": "Mathematics Curriculum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1580,
        "index": "A",
        "name": "Portal",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1579,
        "index": "G",
        "name": "Minimal Coverage",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1579,
        "index": "F",
        "name": "Array Stabilization (AND version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math",
          "number theory",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1579,
        "index": "E2",
        "name": "Array Optimization by Deque",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1579,
        "index": "E1",
        "name": "Permutation Minimization by Deque",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1579,
        "index": "D",
        "name": "Productive Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1579,
        "index": "C",
        "name": "Ticks",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1579,
        "index": "B",
        "name": "Shifting Sort",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1579,
        "index": "A",
        "name": "Casimir's String Solitaire",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1578,
        "index": "M",
        "name": "The Mind",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 1578,
        "index": "L",
        "name": "Labyrinth",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dsu",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1578,
        "index": "K",
        "name": "Kingdom of Islands",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 1578,
        "index": "J",
        "name": "Just Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar"
        ],
        "points": 3100
      },
      {
        "contestId": 1578,
        "index": "I",
        "name": "Interactive Rays",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "interactive"
        ],
        "points": 3300
      },
      {
        "contestId": 1578,
        "index": "H",
        "name": "Higher Order Functions",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1578,
        "index": "G",
        "name": "Game of Chance",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 3500
      },
      {
        "contestId": 1578,
        "index": "F",
        "name": "Framing Pictures",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 1578,
        "index": "E",
        "name": "Easy Scheduling",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1578,
        "index": "D",
        "name": "Dragon Curve",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 1578,
        "index": "C",
        "name": "Cactus Lady and her Cing",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1578,
        "index": "B",
        "name": "Building Forest Trails",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 2800
      },
      {
        "contestId": 1578,
        "index": "A",
        "name": "Anti-Tetris",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 2800
      },
      {
        "contestId": 1576,
        "index": "A",
        "name": "Communication Routing Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1575,
        "index": "M",
        "name": "Managing Telephone Poles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 1575,
        "index": "L",
        "name": "Longest Array Deconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1575,
        "index": "K",
        "name": "Knitting Batik",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1575,
        "index": "J",
        "name": "Jeopardy of Dropped Balls",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dsu",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1575,
        "index": "I",
        "name": "Illusions of the Desert",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1575,
        "index": "H",
        "name": "Holiday Wall Ornaments",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1575,
        "index": "G",
        "name": "GCD Festival",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1575,
        "index": "F",
        "name": "Finding Expected Value",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1575,
        "index": "E",
        "name": "Eye-Pleasing City Park Tour",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1575,
        "index": "D",
        "name": "Divisible by Twenty-Five",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 1575,
        "index": "C",
        "name": "Cyclic Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "fft",
          "number theory"
        ],
        "points": 3000
      },
      {
        "contestId": 1575,
        "index": "B",
        "name": "Building an Amusement Park",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2300
      },
      {
        "contestId": 1575,
        "index": "A",
        "name": "Another Sorting Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1574,
        "index": "F",
        "name": "Occurrences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "dsu",
          "fft",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 1574,
        "index": "E",
        "name": "Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1574,
        "index": "D",
        "name": "The Strongest Build",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "hashing",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1574,
        "index": "C",
        "name": "Slay the Dragon",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings",
          "ternary search"
        ],
        "points": 1300
      },
      {
        "contestId": 1574,
        "index": "B",
        "name": "Combinatorics Homework",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1574,
        "index": "A",
        "name": "Regular Bracket Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1573,
        "index": "B",
        "name": "Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1573,
        "index": "A",
        "name": "Countdown",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1572,
        "index": "F",
        "name": "Stations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3400
      },
      {
        "contestId": 1572,
        "index": "E",
        "name": "Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 1572,
        "index": "D",
        "name": "Bridge Club",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1572,
        "index": "C",
        "name": "Paint",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 1572,
        "index": "B",
        "name": "Xor of 3",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1572,
        "index": "A",
        "name": "Book",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "graphs",
          "implementation",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1571,
        "index": "J",
        "name": "Two Railroads",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 3000
      },
      {
        "contestId": 1571,
        "index": "I",
        "name": "Physical Examination",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 1571,
        "index": "H",
        "name": "Laser Beams",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "geometry",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 1571,
        "index": "G",
        "name": "A Battle Against a Dragon",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1571,
        "index": "E",
        "name": "Fix the String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1571,
        "index": "D",
        "name": "Sweepstake",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1571,
        "index": "C",
        "name": "Rhyme",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1571,
        "index": "B",
        "name": "Epic Novel",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1571,
        "index": "A",
        "name": "Sequence of Comparisons",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 800
      },
      {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "graphs",
          "hashing"
        ],
        "points": 3000
      },
      {
        "contestId": 1569,
        "index": "E",
        "name": "Playoff Restoration",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "hashing",
          "implementation",
          "meet-in-the-middle"
        ],
        "points": 2600
      },
      {
        "contestId": 1569,
        "index": "D",
        "name": "Inconvenient Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1569,
        "index": "C",
        "name": "Jury Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1569,
        "index": "B",
        "name": "Chess Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 1569,
        "index": "A",
        "name": "Balanced Substring",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1567,
        "index": "F",
        "name": "One-Four Overload",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 1567,
        "index": "E",
        "name": "Non-Decreasing Dilemma",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1567,
        "index": "D",
        "name": "Expression Evaluation Error",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1567,
        "index": "C",
        "name": "Carrying Conundrum",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1567,
        "index": "B",
        "name": "MEXor Mixup",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1567,
        "index": "A",
        "name": "Domino Disaster",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1566,
        "index": "H",
        "name": "Xor-quiz",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "interactive",
          "math",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 1566,
        "index": "G",
        "name": "Four Vertices",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "greedy",
          "implementation",
          "shortest paths"
        ],
        "points": 3100
      },
      {
        "contestId": 1566,
        "index": "F",
        "name": "Points Movement",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 1566,
        "index": "E",
        "name": "Buds Re-hanging",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1566,
        "index": "D2",
        "name": "Seating Arrangements (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1566,
        "index": "D1",
        "name": "Seating Arrangements (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1566,
        "index": "C",
        "name": "MAX-MEX Cut",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1566,
        "index": "B",
        "name": "MIN-MEX Cut",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1566,
        "index": "A",
        "name": "Median Maximization",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1562,
        "index": "F",
        "name": "Tubular Bells",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 1562,
        "index": "E",
        "name": "Rescue Niwen!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "string suffix structures",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 1562,
        "index": "D2",
        "name": "Two Hundred Twenty One (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1562,
        "index": "D1",
        "name": "Two Hundred Twenty One (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1562,
        "index": "C",
        "name": "Rings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1562,
        "index": "B",
        "name": "Scenes From a Memory",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1562,
        "index": "A",
        "name": "The Miracle and the Sleeper",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1561,
        "index": "D1",
        "name": "Up the Strip (simplified version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1561,
        "index": "C",
        "name": "Deep Down Below",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1561,
        "index": "A",
        "name": "Simply Strange Sort",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1560,
        "index": "F2",
        "name": "Nearest Beautiful Number (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1560,
        "index": "F1",
        "name": "Nearest Beautiful Number (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1560,
        "index": "E",
        "name": "Polycarp and String Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1560,
        "index": "D",
        "name": "Make a Power of Two",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1560,
        "index": "C",
        "name": "Infinity Table",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1560,
        "index": "B",
        "name": "Who's Opposite?",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1560,
        "index": "A",
        "name": "Dislike of Threes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1559,
        "index": "E",
        "name": "Mocha and Stars",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1559,
        "index": "D2",
        "name": "Mocha and Diana (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "trees",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1559,
        "index": "D1",
        "name": "Mocha and Diana (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 1559,
        "index": "C",
        "name": "Mocha and Hiking",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1200
      },
      {
        "contestId": 1559,
        "index": "B",
        "name": "Mocha and Red and Blue",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1559,
        "index": "A",
        "name": "Mocha and Math",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1558,
        "index": "F",
        "name": "Strange Sort",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 3300
      },
      {
        "contestId": 1558,
        "index": "E",
        "name": "Down Below",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs",
          "greedy",
          "meet-in-the-middle",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 1558,
        "index": "D",
        "name": "Top-Notch Insertions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 1558,
        "index": "C",
        "name": "Bottom-Tier Reversals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1558,
        "index": "B",
        "name": "Up the Strip",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1558,
        "index": "A",
        "name": "Charmed by the Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1557,
        "index": "E",
        "name": "Assiut Chess",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2800
      },
      {
        "contestId": 1557,
        "index": "D",
        "name": "Ezzat and Grid",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1557,
        "index": "C",
        "name": "Moamen and XOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math",
          "matrices"
        ],
        "points": 1700
      },
      {
        "contestId": 1557,
        "index": "B",
        "name": "Moamen and k-subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1557,
        "index": "A",
        "name": "Ezzat and Two Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1556,
        "index": "H",
        "name": "DIY Tree",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "math",
          "probabilities"
        ],
        "points": 3300
      },
      {
        "contestId": 1556,
        "index": "G",
        "name": "Gates to Another World",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dsu",
          "two pointers"
        ],
        "points": 3300
      },
      {
        "contestId": 1556,
        "index": "F",
        "name": "Sports Betting",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "graphs",
          "math",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 1556,
        "index": "E",
        "name": "Equilibrium",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1556,
        "index": "D",
        "name": "Take a Guess",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1556,
        "index": "C",
        "name": "Compressed Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1556,
        "index": "B",
        "name": "Take Your Places!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1556,
        "index": "A",
        "name": "A Variety of Operations",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1555,
        "index": "F",
        "name": "Good Graph",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1555,
        "index": "E",
        "name": "Boring Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "trees",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1555,
        "index": "D",
        "name": "Say No to Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1555,
        "index": "C",
        "name": "Coin Rows",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1555,
        "index": "B",
        "name": "Two Tables",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 1555,
        "index": "A",
        "name": "PizzaForces",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1554,
        "index": "E",
        "name": "You",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1554,
        "index": "D",
        "name": "Diane",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1554,
        "index": "C",
        "name": "Mikasa",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1554,
        "index": "B",
        "name": "Cobb",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1554,
        "index": "A",
        "name": "Cherry",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1553,
        "index": "I",
        "name": "Stairs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp",
          "fft",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1553,
        "index": "H",
        "name": "XOR and Distance",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1553,
        "index": "G",
        "name": "Common Divisor Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dsu",
          "graphs",
          "hashing",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1553,
        "index": "F",
        "name": "Pairwise Modulo",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1553,
        "index": "E",
        "name": "Permutation Shift",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1553,
        "index": "D",
        "name": "Backspace",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1553,
        "index": "C",
        "name": "Penalty",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1553,
        "index": "B",
        "name": "Reverse String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1553,
        "index": "A",
        "name": "Digits Sum",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1552,
        "index": "I",
        "name": "Organizing a Music Festival",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1552,
        "index": "H",
        "name": "Guess the Perimeter",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "number theory"
        ],
        "points": 3300
      },
      {
        "contestId": 1552,
        "index": "G",
        "name": "A Serious Referee",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 1552,
        "index": "F",
        "name": "Telepanting",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1552,
        "index": "E",
        "name": "Colors and Intervals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1552,
        "index": "D",
        "name": "Array Differentiation",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "graphs",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1552,
        "index": "C",
        "name": "Maximize the Intersections",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "geometry",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1552,
        "index": "B",
        "name": "Running for Gold",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1552,
        "index": "A",
        "name": "Subsequence Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1551,
        "index": "F",
        "name": "Equidistant Vertices",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1551,
        "index": "E",
        "name": "Fixed Points",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1551,
        "index": "D2",
        "name": "Domino (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1551,
        "index": "D1",
        "name": "Domino (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1551,
        "index": "C",
        "name": "Interesting Story",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1551,
        "index": "B2",
        "name": "Wonderful Coloring - 2",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1551,
        "index": "B1",
        "name": "Wonderful Coloring - 1",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1551,
        "index": "A",
        "name": "Polycarp and Coins",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1550,
        "index": "F",
        "name": "Jumping Around",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "dp",
          "dsu",
          "graphs",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 1550,
        "index": "E",
        "name": "Stringforces",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "dp",
          "strings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1550,
        "index": "D",
        "name": "Excellent Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "constructive algorithms",
          "implementation",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1550,
        "index": "C",
        "name": "Manhattan Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1550,
        "index": "B",
        "name": "Maximum Cost Deletion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1550,
        "index": "A",
        "name": "Find The Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1549,
        "index": "B",
        "name": "Gregor and the Pawn Game",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "flows",
          "graph matchings",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1549,
        "index": "A",
        "name": "Gregor and Cryptography",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1548,
        "index": "E",
        "name": "Gregor and the Two Painters",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1548,
        "index": "D2",
        "name": "Gregor and the Odd Cows (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math",
          "number theory"
        ],
        "points": 3300
      },
      {
        "contestId": 1548,
        "index": "D1",
        "name": "Gregor and the Odd Cows (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "geometry",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1548,
        "index": "C",
        "name": "The Three Little Pigs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1548,
        "index": "B",
        "name": "Integers Have Friends",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1548,
        "index": "A",
        "name": "Web of Lies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1547,
        "index": "G",
        "name": "How Many Paths?",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1547,
        "index": "F",
        "name": "Array Stabilization (GCD version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "divide and conquer",
          "number theory",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1547,
        "index": "E",
        "name": "Air Conditioners",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "shortest paths",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1547,
        "index": "D",
        "name": "Co-growing Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1547,
        "index": "C",
        "name": "Pair Programming",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1100
      },
      {
        "contestId": 1547,
        "index": "B",
        "name": "Alphabetical Strings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1547,
        "index": "A",
        "name": "Shortest Path with Obstacle",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1546,
        "index": "B",
        "name": "AquaMoon and Stolen String",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1546,
        "index": "A",
        "name": "AquaMoon and Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1545,
        "index": "F",
        "name": "AquaMoon and Potatoes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1545,
        "index": "E2",
        "name": "AquaMoon and Time Stop (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1545,
        "index": "E1",
        "name": "AquaMoon and Time Stop (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1545,
        "index": "D",
        "name": "AquaMoon and Wrong Coordinate",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1545,
        "index": "C",
        "name": "AquaMoon and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "graph matchings",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 1545,
        "index": "B",
        "name": "AquaMoon and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1545,
        "index": "A",
        "name": "AquaMoon and Strange Sort",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1543,
        "index": "E",
        "name": "The Final Pursuit",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "divide and conquer",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1543,
        "index": "D2",
        "name": "RPD and Rap Sheet (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1543,
        "index": "D1",
        "name": "RPD and Rap Sheet (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1543,
        "index": "C",
        "name": "Need for Pink Slips",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "implementation",
          "math",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 1543,
        "index": "B",
        "name": "Customising the Track",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1543,
        "index": "A",
        "name": "Exciting Bets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1542,
        "index": "E2",
        "name": "Abnormal Permutation Pairs (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1542,
        "index": "E1",
        "name": "Abnormal Permutation Pairs (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1542,
        "index": "D",
        "name": "Priority Queue",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation",
          "math",
          "ternary search"
        ],
        "points": 2200
      },
      {
        "contestId": 1542,
        "index": "C",
        "name": "Strange Function",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1542,
        "index": "B",
        "name": "Plus and Multiply",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1542,
        "index": "A",
        "name": "Odd Set",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1541,
        "index": "B",
        "name": "Pleasant Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1541,
        "index": "A",
        "name": "Pretty Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1540,
        "index": "E",
        "name": "Tasty Dishes",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 3500
      },
      {
        "contestId": 1540,
        "index": "D",
        "name": "Inverse Inversions",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 1540,
        "index": "C2",
        "name": "Converging Array (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1540,
        "index": "C1",
        "name": "Converging Array (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1540,
        "index": "B",
        "name": "Tree Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "graphs",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1540,
        "index": "A",
        "name": "Great Graphs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "shortest paths",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1539,
        "index": "F",
        "name": "Strange Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 1539,
        "index": "E",
        "name": "Game with Cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1539,
        "index": "D",
        "name": "PriceFixed",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1539,
        "index": "C",
        "name": "Stable Groups",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1539,
        "index": "B",
        "name": "Love Song",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1539,
        "index": "A",
        "name": "Contest Start",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "geometry",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1538,
        "index": "G",
        "name": "Gift Set",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1538,
        "index": "F",
        "name": "Interesting Function",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1538,
        "index": "E",
        "name": "Funny Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "implementation",
          "matrices",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1538,
        "index": "D",
        "name": "Another Problem About Dividing Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1538,
        "index": "C",
        "name": "Number of Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "math",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1538,
        "index": "B",
        "name": "Friends and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1538,
        "index": "A",
        "name": "Stone Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1537,
        "index": "F",
        "name": "Figure Fixing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1537,
        "index": "E2",
        "name": "Erase and Extend (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "hashing",
          "string suffix structures",
          "strings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1537,
        "index": "E1",
        "name": "Erase and Extend (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "greedy",
          "hashing",
          "implementation",
          "string suffix structures",
          "strings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1537,
        "index": "D",
        "name": "Deleting Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1537,
        "index": "C",
        "name": "Challenging Cliffs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1537,
        "index": "B",
        "name": "Bad Boy",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1537,
        "index": "A",
        "name": "Arithmetic Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1536,
        "index": "F",
        "name": "Omkar and Akmar",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "combinatorics",
          "constructive algorithms",
          "fft",
          "games",
          "geometry",
          "math",
          "meet-in-the-middle",
          "string suffix structures"
        ],
        "points": 2600
      },
      {
        "contestId": 1536,
        "index": "E",
        "name": "Omkar and Forest",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "math",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 1536,
        "index": "D",
        "name": "Omkar and Medians",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1536,
        "index": "C",
        "name": "Diluc and Kaeya",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "hashing",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1536,
        "index": "B",
        "name": "Prinzessin der Verurteilung",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1536,
        "index": "A",
        "name": "Omkar and Bad Story",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1535,
        "index": "F",
        "name": "String Distance",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 3000
      },
      {
        "contestId": 1535,
        "index": "E",
        "name": "Gold Transfer",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "interactive",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1535,
        "index": "D",
        "name": "Playoff Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "implementation",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1535,
        "index": "C",
        "name": "Unstable String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "implementation",
          "strings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1535,
        "index": "B",
        "name": "Array Reodering",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1535,
        "index": "A",
        "name": "Fair Playoff",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1534,
        "index": "H",
        "name": "Lost Nodes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "graphs",
          "interactive",
          "sortings",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1534,
        "index": "G",
        "name": "A New Beginning",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry",
          "sortings"
        ],
        "points": 3300
      },
      {
        "contestId": 1534,
        "index": "F2",
        "name": "Falling Sand (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 1534,
        "index": "F1",
        "name": "Falling Sand (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1534,
        "index": "E",
        "name": "Lost Array",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "interactive",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 1534,
        "index": "D",
        "name": "Lost Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1534,
        "index": "C",
        "name": "Little Alawn's Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "dsu",
          "graphs",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1534,
        "index": "B",
        "name": "Histogram Ugliness",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1534,
        "index": "A",
        "name": "Colour the Flag",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1533,
        "index": "J",
        "name": "Pawns",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1533,
        "index": "I",
        "name": "Excursions",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "dfs and similar",
          "flows",
          "graph matchings",
          "graphs"
        ]
      },
      {
        "contestId": 1533,
        "index": "H",
        "name": "Submatrices",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "bitmasks",
          "data structures",
          "dp"
        ]
      },
      {
        "contestId": 1533,
        "index": "G",
        "name": "Biome Map",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ]
      },
      {
        "contestId": 1533,
        "index": "F",
        "name": "Binary String Partition",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy"
        ]
      },
      {
        "contestId": 1533,
        "index": "E",
        "name": "Chess Team Forming",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "data structures",
          "greedy"
        ]
      },
      {
        "contestId": 1533,
        "index": "D",
        "name": "String Searching",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "hashing"
        ]
      },
      {
        "contestId": 1533,
        "index": "C",
        "name": "Sweets",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "implementation"
        ]
      },
      {
        "contestId": 1533,
        "index": "B",
        "name": "Nearest Point Function",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1533,
        "index": "A",
        "name": "Travel to Bertown",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "math"
        ]
      },
      {
        "contestId": 1532,
        "index": "F",
        "name": "Prefixes and Suffixes",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ]
      },
      {
        "contestId": 1532,
        "index": "E",
        "name": "Good Array",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1532,
        "index": "D",
        "name": "Teams Forming",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ]
      },
      {
        "contestId": 1532,
        "index": "C",
        "name": "Uniform String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1532,
        "index": "B",
        "name": "Frog Jumping",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1532,
        "index": "A",
        "name": "A+B (Trial Problem)",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1531,
        "index": "E3",
        "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search"
        ]
      },
      {
        "contestId": 1531,
        "index": "E2",
        "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "*special problem",
          "brute force"
        ]
      },
      {
        "contestId": 1531,
        "index": "E1",
        "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1531,
        "index": "D",
        "name": "\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u043c \u0417\u0438\u043d\u0433\u0435\u0440 | color",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "*special problem"
        ]
      },
      {
        "contestId": 1531,
        "index": "C",
        "name": "\u0421\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0447\u043d\u044b\u0439 \u0430\u043c\u0444\u0438\u0442\u0435\u0430\u0442\u0440",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "dp"
        ]
      },
      {
        "contestId": 1531,
        "index": "B2",
        "name": "\u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1531,
        "index": "B1",
        "name": "\u041c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "*special problem"
        ]
      },
      {
        "contestId": 1531,
        "index": "A",
        "name": "\u0417\u0438\u043d\u0433\u0435\u0440 | color",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1530,
        "index": "H",
        "name": "Turing's Award",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3400
      },
      {
        "contestId": 1530,
        "index": "G",
        "name": "What a Reversal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3300
      },
      {
        "contestId": 1530,
        "index": "F",
        "name": "Bingo",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1530,
        "index": "E",
        "name": "Minimax",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1530,
        "index": "D",
        "name": "Secret Santa",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1530,
        "index": "C",
        "name": "Pursuit",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1530,
        "index": "B",
        "name": "Putting Plates",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1530,
        "index": "A",
        "name": "Binary Decimal",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1529,
        "index": "B",
        "name": "Sifid and Strange Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1529,
        "index": "A",
        "name": "Eshag Loves Big Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1528,
        "index": "F",
        "name": "AmShZ Farm",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1528,
        "index": "E",
        "name": "Mashtali and Hagh Trees",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1528,
        "index": "D",
        "name": "It's a bird! No, it's a plane! No, it's AaParsa!",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 1528,
        "index": "C",
        "name": "Trees of Tranquillity",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1528,
        "index": "B",
        "name": "Kavi on Pairing Duty",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1528,
        "index": "A",
        "name": "Parsa's Humongous Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1527,
        "index": "E",
        "name": "Partition Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1527,
        "index": "D",
        "name": "MEX Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "implementation",
          "math",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1527,
        "index": "C",
        "name": "Sequence Pair Weight",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1527,
        "index": "B2",
        "name": "Palindrome Game (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games"
        ],
        "points": 1900
      },
      {
        "contestId": 1527,
        "index": "B1",
        "name": "Palindrome Game (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games"
        ],
        "points": 1200
      },
      {
        "contestId": 1527,
        "index": "A",
        "name": "And Then There Were K",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 800
      },
      {
        "contestId": 1526,
        "index": "F",
        "name": "Median Queries",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "probabilities"
        ],
        "points": 3000
      },
      {
        "contestId": 1526,
        "index": "E",
        "name": "Oolimry and Suffix Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1526,
        "index": "D",
        "name": "Kill Anton",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "math",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1526,
        "index": "C2",
        "name": "Potions (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1526,
        "index": "C1",
        "name": "Potions (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1526,
        "index": "B",
        "name": "I Hate 1111",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1526,
        "index": "A",
        "name": "Mean Inequality",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1525,
        "index": "F",
        "name": "Goblins And Gnomes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "flows",
          "graph matchings"
        ],
        "points": 2800
      },
      {
        "contestId": 1525,
        "index": "E",
        "name": "Assimilation IV",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1525,
        "index": "D",
        "name": "Armchairs",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "graph matchings",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1525,
        "index": "C",
        "name": "Robot Collisions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1525,
        "index": "B",
        "name": "Permutation Sort",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1525,
        "index": "A",
        "name": "Potion-making",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1523,
        "index": "H",
        "name": "Hopping Around the Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1523,
        "index": "G",
        "name": "Try Booking",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 3200
      },
      {
        "contestId": 1523,
        "index": "F",
        "name": "Favorite Game",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 3300
      },
      {
        "contestId": 1523,
        "index": "E",
        "name": "Crypto Lights",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1523,
        "index": "D",
        "name": "Love-Hate",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 1523,
        "index": "C",
        "name": "Compression and Expansion",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1523,
        "index": "B",
        "name": "Lord of the Values",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1100
      },
      {
        "contestId": 1523,
        "index": "A",
        "name": "Game of Life",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1521,
        "index": "E",
        "name": "Nastia and a Beautiful Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 1521,
        "index": "D",
        "name": "Nastia Plays with a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "dp",
          "dsu",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1521,
        "index": "C",
        "name": "Nastia and a Hidden Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 1521,
        "index": "B",
        "name": "Nastia and a Good Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1521,
        "index": "A",
        "name": "Nastia and Nearly Good Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1520,
        "index": "G",
        "name": "To Go Or Not To Go?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "greedy",
          "implementation",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1520,
        "index": "F2",
        "name": "Guess the K-th Zero (Hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "interactive"
        ],
        "points": 2200
      },
      {
        "contestId": 1520,
        "index": "F1",
        "name": "Guess the K-th Zero (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 1600
      },
      {
        "contestId": 1520,
        "index": "E",
        "name": "Arranging The Sheep",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1520,
        "index": "D",
        "name": "Same Differences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1520,
        "index": "C",
        "name": "Not Adjacent Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 1520,
        "index": "B",
        "name": "Ordinary Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1520,
        "index": "A",
        "name": "Do Not Be Distracted!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1519,
        "index": "F",
        "name": "Chests and Keys",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "dp",
          "flows"
        ],
        "points": 3200
      },
      {
        "contestId": 1519,
        "index": "E",
        "name": "Off by One",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "geometry",
          "graphs",
          "sortings",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1519,
        "index": "C",
        "name": "Berland Regional",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "number theory",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1519,
        "index": "B",
        "name": "The Cake Is a Lie",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1519,
        "index": "A",
        "name": "Red and Blue Beans",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1517,
        "index": "H",
        "name": "Fly Around the World",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 3500
      },
      {
        "contestId": 1517,
        "index": "G",
        "name": "Starry Night Camping",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graphs"
        ],
        "points": 3300
      },
      {
        "contestId": 1517,
        "index": "F",
        "name": "Reunion",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1517,
        "index": "E",
        "name": "Group Photo",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1517,
        "index": "D",
        "name": "Explorer Space",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1517,
        "index": "C",
        "name": "Fillomino 2",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1517,
        "index": "B",
        "name": "Morning Jogging",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1517,
        "index": "A",
        "name": "Sum of 2050",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1516,
        "index": "E",
        "name": "Baby Ehab Plays with Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1516,
        "index": "D",
        "name": "Cut",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "graphs",
          "number theory",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1516,
        "index": "C",
        "name": "Baby Ehab Partitions Again",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1516,
        "index": "B",
        "name": "AGAGA XOOORRR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1516,
        "index": "A",
        "name": "Tit for Tat",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1515,
        "index": "I",
        "name": "Phoenix and Diamonds",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 3400
      },
      {
        "contestId": 1515,
        "index": "H",
        "name": "Phoenix and Bits",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "sortings"
        ],
        "points": 3500
      },
      {
        "contestId": 1515,
        "index": "G",
        "name": "Phoenix and Odometers",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1515,
        "index": "F",
        "name": "Phoenix and Earthquake",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1515,
        "index": "E",
        "name": "Phoenix and Computers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1515,
        "index": "D",
        "name": "Phoenix and Socks",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1515,
        "index": "C",
        "name": "Phoenix and Towers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1515,
        "index": "B",
        "name": "Phoenix and Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1515,
        "index": "A",
        "name": "Phoenix and Gold",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1514,
        "index": "E",
        "name": "Baby Ehab's Hyper Apartment",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "interactive",
          "sortings",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1514,
        "index": "D",
        "name": "Cut and Stick",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1514,
        "index": "C",
        "name": "Product 1 Modulo N",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1514,
        "index": "B",
        "name": "AND 0, Sum Big",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1514,
        "index": "A",
        "name": "Perfectly Imperfect Array",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1513,
        "index": "F",
        "name": "Swapping Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1513,
        "index": "E",
        "name": "Cost Equilibrium",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1513,
        "index": "D",
        "name": "GCD and MST",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy",
          "number theory",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1513,
        "index": "C",
        "name": "Add One",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 1600
      },
      {
        "contestId": 1513,
        "index": "B",
        "name": "AND Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1513,
        "index": "A",
        "name": "Array and Peaks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1512,
        "index": "G",
        "name": "Short Task",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1512,
        "index": "F",
        "name": "Education",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1512,
        "index": "E",
        "name": "Permutation by Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1512,
        "index": "D",
        "name": "Corrupted Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1512,
        "index": "C",
        "name": "A-B Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1512,
        "index": "B",
        "name": "Almost Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1512,
        "index": "A",
        "name": "Spy Detected!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1511,
        "index": "G",
        "name": "Chips on a Board",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "dp",
          "games",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1511,
        "index": "F",
        "name": "Chainword",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "matrices",
          "string suffix structures",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 1511,
        "index": "E",
        "name": "Colorings and Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1511,
        "index": "D",
        "name": "Min Cost String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "greedy",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1511,
        "index": "C",
        "name": "Yet Another Card Deck",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "trees"
        ],
        "points": 1100
      },
      {
        "contestId": 1511,
        "index": "B",
        "name": "GCD Length",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1511,
        "index": "A",
        "name": "Review Site",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1510,
        "index": "K",
        "name": "King's Task",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1510,
        "index": "J",
        "name": "Japanese Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1510,
        "index": "I",
        "name": "Is It Rated?",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "interactive",
          "math",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 1510,
        "index": "H",
        "name": "Hard Optimization",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 1510,
        "index": "G",
        "name": "Guide",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1510,
        "index": "F",
        "name": "Fiber Shape",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2800
      },
      {
        "contestId": 1510,
        "index": "E",
        "name": "Equilibrium Point /\\textbackslash/\\textbackslash",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1510,
        "index": "D",
        "name": "Digits",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1510,
        "index": "C",
        "name": "Cactus Not Enough",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graph matchings",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 1510,
        "index": "B",
        "name": "Button Lock",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 1510,
        "index": "A",
        "name": "ASCII Automata Art",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1509,
        "index": "C",
        "name": "The Sports Festival",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1509,
        "index": "B",
        "name": "TMT Document",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1509,
        "index": "A",
        "name": "Average Height",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1508,
        "index": "F",
        "name": "Optimal Encoding",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 3500
      },
      {
        "contestId": 1508,
        "index": "E",
        "name": "Tree Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "sortings",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1508,
        "index": "D",
        "name": "Swap Pass",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 1508,
        "index": "C",
        "name": "Complete the MST",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1508,
        "index": "B",
        "name": "Almost Sorted",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1508,
        "index": "A",
        "name": "Binary Literature",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "strings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1506,
        "index": "G",
        "name": "Maximize the Remaining String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1506,
        "index": "F",
        "name": "Triangular Paths",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math",
          "shortest paths",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1506,
        "index": "E",
        "name": "Restoring the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1506,
        "index": "D",
        "name": "Epic Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1506,
        "index": "C",
        "name": "Double-ended Strings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1506,
        "index": "B",
        "name": "Partial Replacement",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1506,
        "index": "A",
        "name": "Strange Table",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1505,
        "index": "I",
        "name": "Mysterious language again, seriously?",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2200
      },
      {
        "contestId": 1505,
        "index": "H",
        "name": "L BREAK into program",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2500
      },
      {
        "contestId": 1505,
        "index": "G",
        "name": "Encoded message",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 2600
      },
      {
        "contestId": 1505,
        "index": "F",
        "name": "Math",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1505,
        "index": "E",
        "name": "Cakewalk",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "implementation",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1505,
        "index": "D",
        "name": "Xenolith? Hippodrome?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1505,
        "index": "C",
        "name": "Fibonacci Words",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1505,
        "index": "B",
        "name": "DMCA",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1505,
        "index": "A",
        "name": "Is it rated - 2",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "interactive"
        ],
        "points": 900
      },
      {
        "contestId": 1504,
        "index": "B",
        "name": "Flip the Bits",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1504,
        "index": "A",
        "name": "D\u00e9j\u00e0 Vu",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1503,
        "index": "F",
        "name": "Balance the Cards",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "divide and conquer",
          "geometry",
          "graphs",
          "implementation"
        ],
        "points": 3500
      },
      {
        "contestId": 1503,
        "index": "E",
        "name": "2-Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1503,
        "index": "D",
        "name": "Flip the Cards",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1503,
        "index": "C",
        "name": "Travelling Salesman Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "shortest paths",
          "sortings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1503,
        "index": "B",
        "name": "3-Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "interactive"
        ],
        "points": 1700
      },
      {
        "contestId": 1503,
        "index": "A",
        "name": "Balance the Bits",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1501,
        "index": "B",
        "name": "Napoleon Cake",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1501,
        "index": "A",
        "name": "Alexey and Train",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1500,
        "index": "F",
        "name": "Cupboards Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1500,
        "index": "E",
        "name": "Subset Trick",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1500,
        "index": "D",
        "name": "Tiles for Bathroom",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 2900
      },
      {
        "contestId": 1500,
        "index": "C",
        "name": "Matrix Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "greedy",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1500,
        "index": "B",
        "name": "Two chandeliers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "chinese remainder theorem",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1500,
        "index": "A",
        "name": "Going Home",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "hashing",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1499,
        "index": "G",
        "name": "Graph Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "interactive"
        ],
        "points": 3100
      },
      {
        "contestId": 1499,
        "index": "F",
        "name": "Diameter Cuts",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1499,
        "index": "E",
        "name": "Chaotic Merge",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1499,
        "index": "D",
        "name": "The Number of Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1499,
        "index": "C",
        "name": "Minimum Grid Path",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1499,
        "index": "B",
        "name": "Binary Removals",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1499,
        "index": "A",
        "name": "Domino on Windowsill",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1498,
        "index": "F",
        "name": "Christmas Game",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dfs and similar",
          "dp",
          "games",
          "math",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1498,
        "index": "E",
        "name": "Two Houses",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy",
          "interactive",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1498,
        "index": "D",
        "name": "Bananas in a Microwave",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1498,
        "index": "C",
        "name": "Planar Reflections",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 1498,
        "index": "B",
        "name": "Box Fitting",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1498,
        "index": "A",
        "name": "GCD Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1497,
        "index": "E2",
        "name": "Square-free division (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1497,
        "index": "E1",
        "name": "Square-Free Division (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1497,
        "index": "D",
        "name": "Genius",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1497,
        "index": "C2",
        "name": "k-LCM (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1497,
        "index": "C1",
        "name": "k-LCM (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1497,
        "index": "B",
        "name": "M-arrays",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1497,
        "index": "A",
        "name": "Meximization",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1496,
        "index": "B",
        "name": "Max and Mex",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1496,
        "index": "A",
        "name": "Split it!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1495,
        "index": "F",
        "name": "Squares",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 1495,
        "index": "E",
        "name": "Qingshan and Daniel",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 3200
      },
      {
        "contestId": 1495,
        "index": "D",
        "name": "BFS Trees",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "graphs",
          "math",
          "shortest paths",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1495,
        "index": "C",
        "name": "Garden of the Sun",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 1495,
        "index": "B",
        "name": "Let's Go Hiking",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1495,
        "index": "A",
        "name": "Diamond Miner",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1494,
        "index": "F",
        "name": "Delete The Edges",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 2900
      },
      {
        "contestId": 1494,
        "index": "E",
        "name": "A-Z Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "hashing"
        ],
        "points": 2400
      },
      {
        "contestId": 1494,
        "index": "D",
        "name": "Dogeforces",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dsu",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1494,
        "index": "C",
        "name": "1D Sokoban",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1494,
        "index": "B",
        "name": "Berland Crossword",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1494,
        "index": "A",
        "name": "ABC String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1493,
        "index": "F",
        "name": "Enchanted Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "interactive",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1493,
        "index": "E",
        "name": "Enormous XOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "math",
          "strings",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1493,
        "index": "D",
        "name": "GCD of an Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "hashing",
          "implementation",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1493,
        "index": "C",
        "name": "K-beautiful Strings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1493,
        "index": "B",
        "name": "Planet Lapituletti",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1493,
        "index": "A",
        "name": "Anti-knapsack",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1492,
        "index": "E",
        "name": "Almost Fault-Tolerant Database",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1492,
        "index": "D",
        "name": "Genius's Gambit",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1492,
        "index": "C",
        "name": "Maximum width",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1492,
        "index": "B",
        "name": "Card Deck",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1492,
        "index": "A",
        "name": "Three swimmers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1491,
        "index": "I",
        "name": "Ruler Of The Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 3500
      },
      {
        "contestId": 1491,
        "index": "H",
        "name": "Yuezheng Ling and Dynamic Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1491,
        "index": "G",
        "name": "Switch and Flip",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2700
      },
      {
        "contestId": 1491,
        "index": "E",
        "name": "Fib-tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "divide and conquer",
          "number theory",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1491,
        "index": "D",
        "name": "Zookeeper and The Infinite Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1491,
        "index": "C",
        "name": "Pekora and Trampoline",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1491,
        "index": "B",
        "name": "Minimal Cost",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1491,
        "index": "A",
        "name": "K-th Largest Value",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1490,
        "index": "F",
        "name": "Equalize the Array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1490,
        "index": "E",
        "name": "Accidental Victory",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1490,
        "index": "D",
        "name": "Permutation Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1490,
        "index": "C",
        "name": "Sum of Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "brute force",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1490,
        "index": "B",
        "name": "Balanced Remainders",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1490,
        "index": "A",
        "name": "Dense Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1488,
        "index": "J",
        "name": "Flower Shop",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "fft",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1488,
        "index": "I",
        "name": "Demonic Invasion",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "flows"
        ],
        "points": 3100
      },
      {
        "contestId": 1488,
        "index": "H",
        "name": "Build From Suffixes",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "combinatorics",
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 1488,
        "index": "G",
        "name": "Painting Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "greedy",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1488,
        "index": "F",
        "name": "Dogecoin",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "*special problem",
          "binary search",
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 1488,
        "index": "E",
        "name": "Palindromic Doubles",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1488,
        "index": "D",
        "name": "Problemsolving Marathon",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1488,
        "index": "C",
        "name": "Two Policemen",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1488,
        "index": "B",
        "name": "RBS Deletion",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1488,
        "index": "A",
        "name": "From Zero To Y",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1487,
        "index": "G",
        "name": "String Counting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1487,
        "index": "F",
        "name": "Ones",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "shortest paths"
        ],
        "points": 2900
      },
      {
        "contestId": 1487,
        "index": "E",
        "name": "Cheap Dinner",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "graphs",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1487,
        "index": "D",
        "name": "Pythagorean Triples",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1487,
        "index": "C",
        "name": "Minimum Ties",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1487,
        "index": "B",
        "name": "Cat Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1487,
        "index": "A",
        "name": "Arena",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1486,
        "index": "F",
        "name": "Pairs of Paths",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1486,
        "index": "E",
        "name": "Paired Payment",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "dp",
          "flows",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1486,
        "index": "D",
        "name": "Max Median",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1486,
        "index": "C2",
        "name": "Guessing the Greatest (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 1900
      },
      {
        "contestId": 1486,
        "index": "C1",
        "name": "Guessing the Greatest (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 1600
      },
      {
        "contestId": 1486,
        "index": "B",
        "name": "Eastern Exhibition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "shortest paths",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1486,
        "index": "A",
        "name": "Shifting Stacks",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1485,
        "index": "F",
        "name": "Copy or Prefix Sum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1485,
        "index": "E",
        "name": "Move and Swap",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1485,
        "index": "D",
        "name": "Multiples and Power Differences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1485,
        "index": "C",
        "name": "Floor and Mod",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1485,
        "index": "B",
        "name": "Replace and Keep Sorted",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1485,
        "index": "A",
        "name": "Add and Divide",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1482,
        "index": "H",
        "name": "Exam",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1482,
        "index": "G",
        "name": "Vabank",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 3200
      },
      {
        "contestId": 1482,
        "index": "F",
        "name": "Useful Edges",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1482,
        "index": "E",
        "name": "Skyline Photo",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1482,
        "index": "D",
        "name": "Playlist",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "implementation",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1482,
        "index": "C",
        "name": "Basic Diplomacy",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1482,
        "index": "B",
        "name": "Restore Modulo",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1482,
        "index": "A",
        "name": "Prison Break",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1481,
        "index": "F",
        "name": "AB Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1481,
        "index": "E",
        "name": "Sorting Books",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1481,
        "index": "D",
        "name": "AB Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1481,
        "index": "C",
        "name": "Fence Painting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1481,
        "index": "B",
        "name": "New Colony",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1481,
        "index": "A",
        "name": "Space Navigation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1480,
        "index": "B",
        "name": "The Great Hero",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1480,
        "index": "A",
        "name": "Yet Another String Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1479,
        "index": "E",
        "name": "School Clubs",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "fft",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 3500
      },
      {
        "contestId": 1479,
        "index": "D",
        "name": "Odd Mineral Resource",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "data structures",
          "probabilities",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1479,
        "index": "C",
        "name": "Continuous City",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 1479,
        "index": "B2",
        "name": "Painting the Array II",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1479,
        "index": "B1",
        "name": "Painting the Array I",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1479,
        "index": "A",
        "name": "Searching Local Minimum",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "ternary search"
        ],
        "points": 1700
      },
      {
        "contestId": 1478,
        "index": "C",
        "name": "Nezzar and Symmetric Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1478,
        "index": "B",
        "name": "Nezzar and Lucky Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1478,
        "index": "A",
        "name": "Nezzar and Colorful Balls",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1477,
        "index": "F",
        "name": "Nezzar and Chocolate Bars",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math",
          "probabilities"
        ],
        "points": 3500
      },
      {
        "contestId": 1477,
        "index": "E",
        "name": "Nezzar and Tournaments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3300
      },
      {
        "contestId": 1477,
        "index": "D",
        "name": "Nezzar and Hidden Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 1477,
        "index": "C",
        "name": "Nezzar and Nice Beatmap",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1477,
        "index": "B",
        "name": "Nezzar and Binary String",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1477,
        "index": "A",
        "name": "Nezzar and Board",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1476,
        "index": "G",
        "name": "Minimum Difference",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "sortings",
          "two pointers"
        ],
        "points": 3100
      },
      {
        "contestId": 1476,
        "index": "F",
        "name": "Lanterns",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 1476,
        "index": "E",
        "name": "Pattern Matching",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dfs and similar",
          "graphs",
          "hashing",
          "sortings",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1476,
        "index": "D",
        "name": "Journey",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1476,
        "index": "C",
        "name": "Longest Simple Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1476,
        "index": "B",
        "name": "Inflation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1476,
        "index": "A",
        "name": "K-divisible Sum",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1475,
        "index": "G",
        "name": "Strange Beauty",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1475,
        "index": "F",
        "name": "Unusual Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "brute force",
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 1475,
        "index": "E",
        "name": "Advertising Agency",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1475,
        "index": "D",
        "name": "Cleaning the Phone",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "sortings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1475,
        "index": "C",
        "name": "Ball in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1475,
        "index": "B",
        "name": "New Year's Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1475,
        "index": "A",
        "name": "Odd Divisor",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1474,
        "index": "F",
        "name": "1 2 3 4 ...",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices"
        ],
        "points": 3000
      },
      {
        "contestId": 1474,
        "index": "E",
        "name": "What Is It?",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1474,
        "index": "D",
        "name": "Cleaning",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1474,
        "index": "C",
        "name": "Array Destruction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1474,
        "index": "B",
        "name": "Different Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1474,
        "index": "A",
        "name": "Puzzle From the Future",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1473,
        "index": "G",
        "name": "Tiles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1473,
        "index": "F",
        "name": "Strange Set",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1473,
        "index": "E",
        "name": "Minimum Path",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1473,
        "index": "D",
        "name": "Program",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1473,
        "index": "C",
        "name": "No More Inversions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1473,
        "index": "B",
        "name": "String LCM",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1473,
        "index": "A",
        "name": "Replacing Elements",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1472,
        "index": "G",
        "name": "Moving to the Capital",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 1472,
        "index": "F",
        "name": "New Year's Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "graph matchings",
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1472,
        "index": "E",
        "name": "Correct Placement",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1472,
        "index": "D",
        "name": "Even-Odd Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1472,
        "index": "C",
        "name": "Long Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 1100
      },
      {
        "contestId": 1472,
        "index": "B",
        "name": "Fair Division",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1472,
        "index": "A",
        "name": "Cards for Friends",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1471,
        "index": "B",
        "name": "Strange List",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1471,
        "index": "A",
        "name": "Strange Partition",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1470,
        "index": "F",
        "name": "Strange Covering",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer"
        ],
        "points": 3500
      },
      {
        "contestId": 1470,
        "index": "E",
        "name": "Strange Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "data structures",
          "dp",
          "graphs",
          "implementation",
          "two pointers"
        ],
        "points": 3200
      },
      {
        "contestId": 1470,
        "index": "D",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graph matchings",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1470,
        "index": "C",
        "name": "Strange Shuffle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2500
      },
      {
        "contestId": 1470,
        "index": "B",
        "name": "Strange Definition",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "graphs",
          "hashing",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1470,
        "index": "A",
        "name": "Strange Birthday Party",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1469,
        "index": "F",
        "name": "Power Sockets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1469,
        "index": "E",
        "name": "A Bit Similar",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "hashing",
          "string suffix structures",
          "strings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1469,
        "index": "D",
        "name": "Ceil Divisions",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1469,
        "index": "C",
        "name": "Building a Fence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1469,
        "index": "B",
        "name": "Red and Blue",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1469,
        "index": "A",
        "name": "Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1468,
        "index": "N",
        "name": "Waste Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1468,
        "index": "M",
        "name": "Similar Sets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1468,
        "index": "L",
        "name": "Prime Divisors Selection",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1468,
        "index": "K",
        "name": "The Robot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1468,
        "index": "J",
        "name": "Road Reform",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1468,
        "index": "I",
        "name": "Plane Tiling",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1468,
        "index": "H",
        "name": "K and Medians",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1468,
        "index": "G",
        "name": "Hobbits",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 1468,
        "index": "F",
        "name": "Full Turn",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "hashing",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1468,
        "index": "E",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1468,
        "index": "D",
        "name": "Firecrackers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1468,
        "index": "C",
        "name": "Berpizza",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1468,
        "index": "B",
        "name": "Bakery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 2900
      },
      {
        "contestId": 1468,
        "index": "A",
        "name": "LaIS",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1467,
        "index": "E",
        "name": "Distinctive Roots in a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1467,
        "index": "D",
        "name": "Sum of Paths",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1467,
        "index": "C",
        "name": "Three Bags",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1467,
        "index": "B",
        "name": "Hills And Valleys",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1467,
        "index": "A",
        "name": "Wizard of Orz",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1466,
        "index": "I",
        "name": "The Riddle of the Sphinx",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "data structures",
          "interactive"
        ],
        "points": 3400
      },
      {
        "contestId": 1466,
        "index": "H",
        "name": "Finding satisfactory solutions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1466,
        "index": "G",
        "name": "Song of the Sirens",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "hashing",
          "math",
          "string suffix structures",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1466,
        "index": "F",
        "name": "Euclid's nightmare",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1466,
        "index": "E",
        "name": "Apollo versus Pan",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1466,
        "index": "D",
        "name": "13th Labour of Heracles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 1466,
        "index": "C",
        "name": "Canine poetry",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1466,
        "index": "B",
        "name": "Last minute enhancements",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1466,
        "index": "A",
        "name": "Bovine Dilemma",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1464,
        "index": "F",
        "name": "My Beautiful Madness",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1463,
        "index": "F",
        "name": "Max Correct Set",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1463,
        "index": "E",
        "name": "Plan of Lectures",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "implementation",
          "sortings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1463,
        "index": "D",
        "name": "Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1463,
        "index": "C",
        "name": "Busy Robot",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1463,
        "index": "B",
        "name": "Find The Array",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1463,
        "index": "A",
        "name": "Dungeon",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1462,
        "index": "F",
        "name": "The Treasure of The Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1462,
        "index": "E2",
        "name": "Close Tuples (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "implementation",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1462,
        "index": "E1",
        "name": "Close Tuples (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1462,
        "index": "D",
        "name": "Add to Neighbour and Remove",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1462,
        "index": "C",
        "name": "Unique Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1462,
        "index": "B",
        "name": "Last Year's Substring",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1462,
        "index": "A",
        "name": "Favorite Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 1461,
        "index": "F",
        "name": "Mathematical Expression",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 1461,
        "index": "E",
        "name": "Water Level",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1461,
        "index": "D",
        "name": "Divide and Summarize",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "divide and conquer",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1461,
        "index": "C",
        "name": "Random Events",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 1500
      },
      {
        "contestId": 1461,
        "index": "B",
        "name": "Find the Spruce",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1461,
        "index": "A",
        "name": "String Generation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1459,
        "index": "B",
        "name": "Move and Turn",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1459,
        "index": "A",
        "name": "Red-Blue Shuffle",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 800
      },
      {
        "contestId": 1458,
        "index": "F",
        "name": "Range Diameter Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1458,
        "index": "E",
        "name": "Nim Shortcuts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "games"
        ],
        "points": 3100
      },
      {
        "contestId": 1458,
        "index": "D",
        "name": "Flip and Reverse",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 1458,
        "index": "C",
        "name": "Latin Square",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 1458,
        "index": "B",
        "name": "Glass Half Spilled",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1458,
        "index": "A",
        "name": "Row GCD",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1456,
        "index": "E",
        "name": "XOR-ranges",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1455,
        "index": "G",
        "name": "Forbidden Value",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1455,
        "index": "F",
        "name": "String and Operations",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1455,
        "index": "E",
        "name": "Four Points",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "flows",
          "geometry",
          "greedy",
          "implementation",
          "math",
          "ternary search"
        ],
        "points": 2400
      },
      {
        "contestId": 1455,
        "index": "D",
        "name": "Sequence and Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1455,
        "index": "C",
        "name": "Ping-pong",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1455,
        "index": "B",
        "name": "Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1455,
        "index": "A",
        "name": "Strange Functions",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1454,
        "index": "F",
        "name": "Array Partition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1454,
        "index": "E",
        "name": "Number of Simple Paths",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1454,
        "index": "D",
        "name": "Number into Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1454,
        "index": "C",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1454,
        "index": "B",
        "name": "Unique Bid Auction",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1454,
        "index": "A",
        "name": "Special Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "probabilities"
        ],
        "points": 800
      },
      {
        "contestId": 1453,
        "index": "F",
        "name": "Even Harder",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 1453,
        "index": "E",
        "name": "Dog Snacks",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1453,
        "index": "D",
        "name": "Checkpoints",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 1453,
        "index": "C",
        "name": "Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1453,
        "index": "B",
        "name": "Suffix Operations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1453,
        "index": "A",
        "name": "Cancel the Trains",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1452,
        "index": "G",
        "name": "Game On Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1452,
        "index": "F",
        "name": "Divide Powers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 1452,
        "index": "E",
        "name": "Two Editorials",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1452,
        "index": "D",
        "name": "Radio Towers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1452,
        "index": "C",
        "name": "Two Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1452,
        "index": "B",
        "name": "Toy Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1452,
        "index": "A",
        "name": "Robot Program",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1451,
        "index": "F",
        "name": "Nullify The Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games"
        ],
        "points": 2700
      },
      {
        "contestId": 1451,
        "index": "E2",
        "name": "Bitwise Queries (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1451,
        "index": "E1",
        "name": "Bitwise Queries (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1451,
        "index": "D",
        "name": "Circle Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1451,
        "index": "C",
        "name": "String Equality",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1451,
        "index": "B",
        "name": "Non-Substring Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1451,
        "index": "A",
        "name": "Subtract or Divide",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1450,
        "index": "H2",
        "name": "Multithreading (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1450,
        "index": "H1",
        "name": "Multithreading (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1450,
        "index": "G",
        "name": "Communism",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1450,
        "index": "F",
        "name": "The Struggling Contestant",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1450,
        "index": "E",
        "name": "Capitalism",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 1450,
        "index": "D",
        "name": "Rating Compression",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1450,
        "index": "C2",
        "name": "Errich-Tac-Toe (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1450,
        "index": "C1",
        "name": "Errich-Tac-Toe (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1450,
        "index": "B",
        "name": "Balls of Steel",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1450,
        "index": "A",
        "name": "Avoid Trygub",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1447,
        "index": "B",
        "name": "Numbers Box",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1447,
        "index": "A",
        "name": "Add Candies",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1446,
        "index": "F",
        "name": "Line Distance",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "geometry"
        ],
        "points": 3200
      },
      {
        "contestId": 1446,
        "index": "E",
        "name": "Long Recovery",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar"
        ],
        "points": 3500
      },
      {
        "contestId": 1446,
        "index": "D2",
        "name": "Frequency Problem (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 1446,
        "index": "D1",
        "name": "Frequency Problem (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1446,
        "index": "C",
        "name": "Xor Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures",
          "divide and conquer",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1446,
        "index": "A",
        "name": "Knapsack",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1445,
        "index": "B",
        "name": "Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1445,
        "index": "A",
        "name": "Array Rearrangment",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1444,
        "index": "E",
        "name": "Finding the Vertex",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "interactive",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1444,
        "index": "D",
        "name": "Rectangular Polyline",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 1444,
        "index": "C",
        "name": "Team-Building",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1444,
        "index": "B",
        "name": "Divide and Sum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1444,
        "index": "A",
        "name": "Division",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1443,
        "index": "E",
        "name": "Long Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1443,
        "index": "C",
        "name": "The Delivery Dilemma",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1443,
        "index": "B",
        "name": "Saving the City",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1443,
        "index": "A",
        "name": "Kids Seating",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1442,
        "index": "F",
        "name": "Differentiating Games",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "interactive"
        ],
        "points": 3400
      },
      {
        "contestId": 1442,
        "index": "E",
        "name": "Black, White and Grey Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1442,
        "index": "D",
        "name": "Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1442,
        "index": "C",
        "name": "Graph Transpositions",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1442,
        "index": "B",
        "name": "Identify the Operations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dsu",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1442,
        "index": "A",
        "name": "Extreme Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1440,
        "index": "B",
        "name": "Sum of Medians",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1440,
        "index": "A",
        "name": "Buy the String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1439,
        "index": "E",
        "name": "Cheat and Win",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "games",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1439,
        "index": "D",
        "name": "INOI Final Contests",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft"
        ],
        "points": 3100
      },
      {
        "contestId": 1439,
        "index": "C",
        "name": "Greedy Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "greedy",
          "implementation"
        ],
        "points": 2600
      },
      {
        "contestId": 1439,
        "index": "B",
        "name": "Graph Subset Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 1439,
        "index": "A2",
        "name": "Binary Table (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1439,
        "index": "A1",
        "name": "Binary Table (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1438,
        "index": "F",
        "name": "Olha and Igor",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "probabilities",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1438,
        "index": "E",
        "name": "Yurii Can Do Everything",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "divide and conquer",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1438,
        "index": "D",
        "name": "Powerful Ksenia",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1438,
        "index": "C",
        "name": "Engineer Artem",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "chinese remainder theorem",
          "constructive algorithms",
          "fft",
          "flows"
        ],
        "points": 2000
      },
      {
        "contestId": 1438,
        "index": "B",
        "name": "Valerii Against Everyone",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1438,
        "index": "A",
        "name": "Specific Tastes of Andre",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1437,
        "index": "G",
        "name": "Death DBMS",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures",
          "strings",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1437,
        "index": "F",
        "name": "Emotional Fishermen",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1437,
        "index": "E",
        "name": "Make It Increasing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1437,
        "index": "D",
        "name": "Minimal Height Tree",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1437,
        "index": "C",
        "name": "Chef Monocarp",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "graph matchings",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1437,
        "index": "B",
        "name": "Reverse Binary Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1437,
        "index": "A",
        "name": "Marketing Scheme",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1436,
        "index": "F",
        "name": "Sum Over Subsets",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 1436,
        "index": "E",
        "name": "Complicated Computations",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1436,
        "index": "D",
        "name": "Bandit in a City",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1436,
        "index": "C",
        "name": "Binary Search",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics"
        ],
        "points": 1500
      },
      {
        "contestId": 1436,
        "index": "B",
        "name": "Prime Square",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1436,
        "index": "A",
        "name": "Reorder",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1434,
        "index": "E",
        "name": "A Convex Game",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "games"
        ],
        "points": 3500
      },
      {
        "contestId": 1433,
        "index": "G",
        "name": "Reducing Delivery Cost",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 1433,
        "index": "F",
        "name": "Zero Remainder Sum",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1433,
        "index": "E",
        "name": "Two Round Dances",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1433,
        "index": "D",
        "name": "Districts Connection",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar"
        ],
        "points": 1200
      },
      {
        "contestId": 1433,
        "index": "C",
        "name": "Dominant Piranha",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1433,
        "index": "B",
        "name": "Yet Another Bookshelf",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1433,
        "index": "A",
        "name": "Boring Apartments",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1431,
        "index": "J",
        "name": "Zero-XOR Array",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 3400
      },
      {
        "contestId": 1431,
        "index": "I",
        "name": "Cyclic Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ],
        "points": 2900
      },
      {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "greedy",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1431,
        "index": "G",
        "name": "Number Deletion Game",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "games",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1431,
        "index": "F",
        "name": "Neural Network Problem",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1431,
        "index": "E",
        "name": "Chess Match",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 1431,
        "index": "D",
        "name": "Used Markers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1431,
        "index": "C",
        "name": "Black Friday",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1431,
        "index": "B",
        "name": "Polycarp and the Language of Gods",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1431,
        "index": "A",
        "name": "Selling Hamburgers",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 800
      },
      {
        "contestId": 1430,
        "index": "G",
        "name": "Yet Another DAG Problem",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp",
          "flows",
          "graphs",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1430,
        "index": "F",
        "name": "Realistic Gameplay",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1430,
        "index": "E",
        "name": "String Reversal",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1430,
        "index": "D",
        "name": "String Deletion",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1430,
        "index": "C",
        "name": "Numbers on Whiteboard",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1430,
        "index": "B",
        "name": "Barrels",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1430,
        "index": "A",
        "name": "Number of Apartments",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1428,
        "index": "H",
        "name": "Rotary Laser Lock",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 3500
      },
      {
        "contestId": 1428,
        "index": "G2",
        "name": "Lucky Numbers (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 1428,
        "index": "G1",
        "name": "Lucky Numbers (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 1428,
        "index": "F",
        "name": "Fruit Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "dp",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1428,
        "index": "E",
        "name": "Carrots for Rabbits",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1428,
        "index": "D",
        "name": "Bouncing Boomerangs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1428,
        "index": "C",
        "name": "ABBB",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1428,
        "index": "B",
        "name": "Belted Rooms",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1428,
        "index": "A",
        "name": "Box is Pull",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1427,
        "index": "H",
        "name": "Prison Break",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "games",
          "geometry",
          "ternary search"
        ],
        "points": 3500
      },
      {
        "contestId": 1427,
        "index": "G",
        "name": "One Billion Shades of Grey",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 3300
      },
      {
        "contestId": 1427,
        "index": "F",
        "name": "Boring Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1427,
        "index": "E",
        "name": "Xum",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "math",
          "matrices",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1427,
        "index": "D",
        "name": "Unshuffling a Deck",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1427,
        "index": "C",
        "name": "The Hard Work of Paparazzi",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1427,
        "index": "B",
        "name": "Chess Cheater",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1427,
        "index": "A",
        "name": "Avoiding Zero",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1426,
        "index": "F",
        "name": "Number of Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1426,
        "index": "E",
        "name": "Rock, Paper, Scissors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "flows",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1426,
        "index": "D",
        "name": "Non-zero Segments",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1426,
        "index": "B",
        "name": "Symmetric Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1426,
        "index": "A",
        "name": "Floor Number",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1425,
        "index": "I",
        "name": "Impressive Harvesting of The Orchard",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 1425,
        "index": "H",
        "name": "Huge Boxes of Animal Toys",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 1425,
        "index": "F",
        "name": "Flamingoes of Mystery",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ],
        "points": 1400
      },
      {
        "contestId": 1425,
        "index": "E",
        "name": "Excitation of Atoms",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1425,
        "index": "D",
        "name": "Danger of Mad Snakes",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1425,
        "index": "C",
        "name": "Captain of Knights",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1425,
        "index": "B",
        "name": "Blue and Red of Our Faculty!",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1425,
        "index": "A",
        "name": "Arena of Greed",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1424,
        "index": "M",
        "name": "Ancient Language",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1424,
        "index": "G",
        "name": "Years",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1423,
        "index": "N",
        "name": "BubbleSquare Tokens",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1423,
        "index": "M",
        "name": "Milutin's Plums",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ],
        "points": 2800
      },
      {
        "contestId": 1423,
        "index": "L",
        "name": "Light switches",
        "type": "PROGRAMMING",
        "tags": [
          "meet-in-the-middle"
        ],
        "points": 2600
      },
      {
        "contestId": 1423,
        "index": "K",
        "name": "Lonely Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1423,
        "index": "J",
        "name": "Bubble Cup hypothesis",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1423,
        "index": "I",
        "name": "Lookup Tables",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 3000
      },
      {
        "contestId": 1423,
        "index": "H",
        "name": "Virus",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1423,
        "index": "G",
        "name": "Growing flowers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3500
      },
      {
        "contestId": 1423,
        "index": "F",
        "name": "Coins",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1423,
        "index": "E",
        "name": "5G Antenna Towers",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 1423,
        "index": "D",
        "name": "Does anyone else hate the wind?",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 1423,
        "index": "C",
        "name": "Du\u0161an's Railway",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "graphs",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1423,
        "index": "B",
        "name": "Valuable Paper",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graph matchings",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 1423,
        "index": "A",
        "name": "Wakanda Forever",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1422,
        "index": "F",
        "name": "Boring Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1422,
        "index": "E",
        "name": "Minlexes",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 1422,
        "index": "D",
        "name": "Returning Home",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1422,
        "index": "C",
        "name": "Bargain",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1422,
        "index": "B",
        "name": "Nice Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1422,
        "index": "A",
        "name": "Fence",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1421,
        "index": "E",
        "name": "Swedish Heroes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 1421,
        "index": "D",
        "name": "Hexagons",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1421,
        "index": "C",
        "name": "Palindromifier",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1421,
        "index": "B",
        "name": "Putting Bricks in the Wall",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1421,
        "index": "A",
        "name": "XORwice",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1420,
        "index": "E",
        "name": "Battle Lemmings",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1420,
        "index": "D",
        "name": "Rescue Nibel!",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1420,
        "index": "C2",
        "name": "Pok\u00e9mon Army (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1420,
        "index": "C1",
        "name": "Pok\u00e9mon Army (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1420,
        "index": "B",
        "name": "Rock and Lever",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1420,
        "index": "A",
        "name": "Cubes Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1419,
        "index": "F",
        "name": "Rain of Fire",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 1419,
        "index": "E",
        "name": "Decryption",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1419,
        "index": "D2",
        "name": "Sage's Birthday (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1419,
        "index": "D1",
        "name": "Sage's Birthday (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1419,
        "index": "C",
        "name": "Killjoy",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1419,
        "index": "B",
        "name": "Stairs",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1419,
        "index": "A",
        "name": "Digit Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1418,
        "index": "G",
        "name": "Three Occurrences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "hashing",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1418,
        "index": "F",
        "name": "Equal Product",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "number theory",
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 1418,
        "index": "E",
        "name": "Expected Damage",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 1418,
        "index": "D",
        "name": "Trash Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1418,
        "index": "C",
        "name": "Mortal Kombat Tower",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1500
      },
      {
        "contestId": 1418,
        "index": "B",
        "name": "Negative Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1418,
        "index": "A",
        "name": "Buying Torches",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1417,
        "index": "B",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1417,
        "index": "A",
        "name": "Copy-paste",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1416,
        "index": "F",
        "name": "Showing Off",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "greedy",
          "implementation"
        ],
        "points": 3300
      },
      {
        "contestId": 1416,
        "index": "E",
        "name": "Split",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 3200
      },
      {
        "contestId": 1416,
        "index": "D",
        "name": "Graph and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1416,
        "index": "C",
        "name": "XOR Inverse",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer",
          "dp",
          "greedy",
          "math",
          "sortings",
          "strings",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1416,
        "index": "B",
        "name": "Make Them Equal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1416,
        "index": "A",
        "name": "k-Amazing Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1415,
        "index": "F",
        "name": "Cakes for Clones",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1415,
        "index": "E",
        "name": "New Game Plus!",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1415,
        "index": "D",
        "name": "XOR-gun",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms"
        ],
        "points": 2000
      },
      {
        "contestId": 1415,
        "index": "C",
        "name": "Bouncing Ball",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1415,
        "index": "B",
        "name": "Repainting Street",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "brute force",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1415,
        "index": "A",
        "name": "Prison Break",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1413,
        "index": "F",
        "name": "Roads and Ramen",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1413,
        "index": "E",
        "name": "Solo mid Oracle",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1413,
        "index": "D",
        "name": "Shurikens",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1413,
        "index": "C",
        "name": "Perform Easily",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1413,
        "index": "B",
        "name": "A New Technique",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1413,
        "index": "A",
        "name": "Finding Sasuke",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1411,
        "index": "G",
        "name": "No Game No Life",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "games",
          "math",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 1411,
        "index": "F",
        "name": "The Thorny Path",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1411,
        "index": "E",
        "name": "Poman Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1411,
        "index": "D",
        "name": "Grime Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1411,
        "index": "C",
        "name": "Peaceful Rooks",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1411,
        "index": "B",
        "name": "Fair Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1411,
        "index": "A",
        "name": "In-game Chat",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1409,
        "index": "F",
        "name": "Subsequences of Length Two",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1409,
        "index": "E",
        "name": "Two Platforms",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "sortings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1409,
        "index": "D",
        "name": "Decrease the Sum of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1409,
        "index": "C",
        "name": "Yet Another Array Restoration",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1409,
        "index": "B",
        "name": "Minimum Product",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1409,
        "index": "A",
        "name": "Yet Another Two Integers Problem",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1408,
        "index": "I",
        "name": "Bitwise Magic",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1408,
        "index": "H",
        "name": "Rainbow Triples",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "flows",
          "greedy"
        ],
        "points": 3300
      },
      {
        "contestId": 1408,
        "index": "G",
        "name": "Clusterization Counting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "dsu",
          "fft",
          "graphs",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1408,
        "index": "F",
        "name": "Two Different",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer"
        ],
        "points": 2300
      },
      {
        "contestId": 1408,
        "index": "E",
        "name": "Avoid Rainbow Cycles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1408,
        "index": "D",
        "name": "Searchlights",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1408,
        "index": "C",
        "name": "Discrete Acceleration",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1408,
        "index": "B",
        "name": "Arrays Sum",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1408,
        "index": "A",
        "name": "Circle Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1407,
        "index": "E",
        "name": "Egor in the Republic of Dagestan",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 1407,
        "index": "D",
        "name": "Discrete Centrifugal Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 1407,
        "index": "C",
        "name": "Chocolate Bunny",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1407,
        "index": "B",
        "name": "Big Vova",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1407,
        "index": "A",
        "name": "Ahahahahahahahaha",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1406,
        "index": "D",
        "name": "Three Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1406,
        "index": "C",
        "name": "Link Cut Centroids",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1406,
        "index": "B",
        "name": "Maximum Product",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1406,
        "index": "A",
        "name": "Subset Mex",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1405,
        "index": "B",
        "name": "Array Cancellation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1405,
        "index": "A",
        "name": "Permutation Forgery",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1404,
        "index": "E",
        "name": "Bricks",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 1404,
        "index": "D",
        "name": "Game of Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "interactive",
          "math",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 1404,
        "index": "C",
        "name": "Fixed Point Removal",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1404,
        "index": "B",
        "name": "Tree Tag",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1404,
        "index": "A",
        "name": "Balanced Bitstring",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1403,
        "index": "C",
        "name": "Chess Rush",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "combinatorics",
          "dp",
          "implementation",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1403,
        "index": "B",
        "name": "Spring cleaning",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1403,
        "index": "A",
        "name": "The Potion of Great Power",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "2-sat",
          "binary search",
          "data structures",
          "graphs",
          "interactive",
          "sortings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1402,
        "index": "C",
        "name": "Star Trek",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "combinatorics",
          "dfs and similar",
          "dp",
          "games",
          "graphs",
          "matrices",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1402,
        "index": "B",
        "name": "Roads",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "geometry",
          "sortings"
        ],
        "points": 2900
      },
      {
        "contestId": 1402,
        "index": "A",
        "name": "Fancy Fence",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dsu",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1401,
        "index": "F",
        "name": "Reverse and Swap",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 1401,
        "index": "E",
        "name": "Divide Square",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "implementation",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1401,
        "index": "D",
        "name": "Maximum Distributed Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "implementation",
          "math",
          "number theory",
          "sortings",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1401,
        "index": "C",
        "name": "Mere Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1401,
        "index": "B",
        "name": "Ternary Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1401,
        "index": "A",
        "name": "Distance and Axis",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1400,
        "index": "G",
        "name": "Mercenaries",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "dp",
          "dsu",
          "math",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1400,
        "index": "F",
        "name": "x-prime Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "string suffix structures",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1400,
        "index": "E",
        "name": "Clear the Multiset",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1400,
        "index": "D",
        "name": "Zigzags",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "data structures",
          "math",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1400,
        "index": "C",
        "name": "Binary String Reconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1400,
        "index": "B",
        "name": "RPG Protagonist",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1400,
        "index": "A",
        "name": "String Similarity",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1399,
        "index": "F",
        "name": "Yet Another Segments Subset",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1399,
        "index": "E2",
        "name": "Weights Division (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "greedy",
          "sortings",
          "trees",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1399,
        "index": "E1",
        "name": "Weights Division (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1399,
        "index": "D",
        "name": "Binary String To Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1399,
        "index": "C",
        "name": "Boats Competition",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1399,
        "index": "B",
        "name": "Gifts Fixing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1399,
        "index": "A",
        "name": "Remove Smallest",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1398,
        "index": "G",
        "name": "Running Competition",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "fft",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1398,
        "index": "F",
        "name": "Controversial Rounds",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1398,
        "index": "E",
        "name": "Two Types of Spells",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1398,
        "index": "D",
        "name": "Colored Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1398,
        "index": "C",
        "name": "Good Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1398,
        "index": "B",
        "name": "Substring Removal Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1398,
        "index": "A",
        "name": "Bad Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1397,
        "index": "B",
        "name": "Power Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1397,
        "index": "A",
        "name": "Juggling Letters",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1396,
        "index": "E",
        "name": "Distance Matching",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1396,
        "index": "D",
        "name": "Rainbow Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 3300
      },
      {
        "contestId": 1396,
        "index": "C",
        "name": "Monster Invaders",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1396,
        "index": "B",
        "name": "Stoned Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "games",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1396,
        "index": "A",
        "name": "Multiples of Length",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1395,
        "index": "C",
        "name": "Boboniu and Bit Operations",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1395,
        "index": "B",
        "name": "Boboniu Plays Chess",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1100
      },
      {
        "contestId": 1395,
        "index": "A",
        "name": "Boboniu Likes to Color Balls",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1394,
        "index": "E",
        "name": "Boboniu and Banknote Collection",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 3500
      },
      {
        "contestId": 1394,
        "index": "D",
        "name": "Boboniu and Jianghu",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1394,
        "index": "C",
        "name": "Boboniu and String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "ternary search"
        ],
        "points": 2600
      },
      {
        "contestId": 1394,
        "index": "B",
        "name": "Boboniu Walks on Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "hashing"
        ],
        "points": 2300
      },
      {
        "contestId": 1394,
        "index": "A",
        "name": "Boboniu Chats with Du",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1393,
        "index": "E2",
        "name": "Twilight and Ancient Scroll (harder version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "implementation",
          "string suffix structures",
          "strings",
          "two pointers"
        ],
        "points": 3200
      },
      {
        "contestId": 1393,
        "index": "E1",
        "name": "Twilight and Ancient Scroll (easier version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "implementation",
          "string suffix structures",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1393,
        "index": "D",
        "name": "Rarity and New Dress",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "implementation",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 1393,
        "index": "C",
        "name": "Pinkie Pie Eats Patty-cakes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1393,
        "index": "B",
        "name": "Applejack and Storages",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1393,
        "index": "A",
        "name": "Rainbow Dash, Fluttershy and Chess Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1392,
        "index": "I",
        "name": "Kevin and Grid",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "graphs",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1392,
        "index": "H",
        "name": "ZS Shuffles Cards",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 3000
      },
      {
        "contestId": 1392,
        "index": "G",
        "name": "Omkar and Pies",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp",
          "math",
          "shortest paths"
        ],
        "points": 2900
      },
      {
        "contestId": 1392,
        "index": "F",
        "name": "Omkar and Landslide",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1392,
        "index": "E",
        "name": "Omkar and Duck",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1392,
        "index": "D",
        "name": "Omkar and Bed Wars",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1392,
        "index": "C",
        "name": "Omkar and Waterslide",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1392,
        "index": "B",
        "name": "Omkar and Infinity Clock",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1392,
        "index": "A",
        "name": "Omkar and Password",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1391,
        "index": "E",
        "name": "Pairs of Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1391,
        "index": "D",
        "name": "505",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1391,
        "index": "C",
        "name": "Cyclic Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1391,
        "index": "B",
        "name": "Fix You",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1391,
        "index": "A",
        "name": "Suborrays",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1389,
        "index": "G",
        "name": "Directing Edges",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1389,
        "index": "F",
        "name": "Bicolored Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graph matchings",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 1389,
        "index": "E",
        "name": "Calendar Ambiguity",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1389,
        "index": "D",
        "name": "Segment Intersections",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1389,
        "index": "C",
        "name": "Good String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1389,
        "index": "B",
        "name": "Array Walk",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1389,
        "index": "A",
        "name": "LCM Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1388,
        "index": "E",
        "name": "Uncle Bogdan and Projections",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 1388,
        "index": "D",
        "name": "Captain Flint and Treasure",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1388,
        "index": "C",
        "name": "Uncle Bogdan and Country Happiness",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "math",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1388,
        "index": "B",
        "name": "Captain Flint and a Long Voyage",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1388,
        "index": "A",
        "name": "Captain Flint and Crew Recruitment",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1387,
        "index": "C",
        "name": "Viruses",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "shortest paths",
          "string suffix structures"
        ],
        "points": 2900
      },
      {
        "contestId": 1387,
        "index": "B2",
        "name": "Village (Maximum)",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1387,
        "index": "B1",
        "name": "Village (Minimum)",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1387,
        "index": "A",
        "name": "Graph",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "dfs and similar",
          "dp",
          "math",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1386,
        "index": "C",
        "name": "Joker",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "bitmasks",
          "data structures",
          "divide and conquer",
          "dsu"
        ],
        "points": 2800
      },
      {
        "contestId": 1386,
        "index": "B",
        "name": "Mixture",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "geometry",
          "math",
          "sortings"
        ],
        "points": 2900
      },
      {
        "contestId": 1386,
        "index": "A",
        "name": "Colors",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2700
      },
      {
        "contestId": 1385,
        "index": "G",
        "name": "Columns Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "dsu",
          "graphs",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1385,
        "index": "F",
        "name": "Removing Leaves",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1385,
        "index": "E",
        "name": "Directing Edges",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 1385,
        "index": "D",
        "name": "a-Good String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "divide and conquer",
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1385,
        "index": "C",
        "name": "Make It Good",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1385,
        "index": "B",
        "name": "Restore the Permutation by Merger",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1385,
        "index": "A",
        "name": "Three Pairwise Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1384,
        "index": "B2",
        "name": "Koa and the Beach (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1384,
        "index": "B1",
        "name": "Koa and the Beach (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1384,
        "index": "A",
        "name": "Common Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1383,
        "index": "F",
        "name": "Special Edges",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 3200
      },
      {
        "contestId": 1383,
        "index": "E",
        "name": "Strange Operation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 1383,
        "index": "D",
        "name": "Rearrange",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 2800
      },
      {
        "contestId": 1383,
        "index": "C",
        "name": "String Transformation 2",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1383,
        "index": "B",
        "name": "GameGame",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "games",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1383,
        "index": "A",
        "name": "String Transformation 1",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy",
          "sortings",
          "strings",
          "trees",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1382,
        "index": "B",
        "name": "Sequential Nim",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 1100
      },
      {
        "contestId": 1382,
        "index": "A",
        "name": "Common Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 1381,
        "index": "E",
        "name": "Origami",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math",
          "sortings"
        ],
        "points": 3300
      },
      {
        "contestId": 1381,
        "index": "D",
        "name": "The Majestic Brown Tree Snake",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees",
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 1381,
        "index": "C",
        "name": "Mastermind",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graph matchings",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1381,
        "index": "B",
        "name": "Unmerge",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 1381,
        "index": "A2",
        "name": "Prefix Flip (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "implementation",
          "strings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1381,
        "index": "A1",
        "name": "Prefix Flip (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1380,
        "index": "G",
        "name": "Circular Dungeon",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1380,
        "index": "F",
        "name": "Strange Addition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "matrices"
        ],
        "points": 2600
      },
      {
        "contestId": 1380,
        "index": "E",
        "name": "Merging Towers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "implementation",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1380,
        "index": "D",
        "name": "Berserk And Fireball",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1380,
        "index": "C",
        "name": "Create The Teams",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1380,
        "index": "B",
        "name": "Universal Solution",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1380,
        "index": "A",
        "name": "Three Indices",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 900
      },
      {
        "contestId": 1379,
        "index": "F2",
        "name": "Chess Strikes Back (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2800
      },
      {
        "contestId": 1379,
        "index": "F1",
        "name": "Chess Strikes Back (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 1379,
        "index": "E",
        "name": "Inverse Genealogy",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "dp",
          "math",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1379,
        "index": "D",
        "name": "New Passenger Trams",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1379,
        "index": "C",
        "name": "Choosing flowers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dfs and similar",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1379,
        "index": "B",
        "name": "Dubious Cyrpto",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1379,
        "index": "A",
        "name": "Acacius and String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1375,
        "index": "I",
        "name": "Cubic Lattice",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math",
          "matrices",
          "number theory"
        ],
        "points": 3500
      },
      {
        "contestId": 1375,
        "index": "H",
        "name": "Set Merging",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer"
        ],
        "points": 3300
      },
      {
        "contestId": 1375,
        "index": "G",
        "name": "Tree Modification",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "graph matchings",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1375,
        "index": "F",
        "name": "Integer Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "interactive",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1375,
        "index": "E",
        "name": "Inversion SwapSort",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1375,
        "index": "D",
        "name": "Replace by MEX",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1375,
        "index": "C",
        "name": "Element Extermination",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1375,
        "index": "B",
        "name": "Neighbor Grid",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1375,
        "index": "A",
        "name": "Sign Flipping",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1374,
        "index": "F",
        "name": "Cyclic Shifts Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1374,
        "index": "E2",
        "name": "Reading Books (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings",
          "ternary search",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1374,
        "index": "E1",
        "name": "Reading Books (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1374,
        "index": "D",
        "name": "Zero Remainder Array",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1374,
        "index": "C",
        "name": "Move Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1374,
        "index": "B",
        "name": "Multiply by 2, divide by 6",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1374,
        "index": "A",
        "name": "Required Remainder",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1373,
        "index": "G",
        "name": "Pawns",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1373,
        "index": "F",
        "name": "Network Coverage",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1373,
        "index": "E",
        "name": "Sum of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1373,
        "index": "D",
        "name": "Maximum Sum on Even Positions",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1373,
        "index": "C",
        "name": "Pluses and Minuses",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1373,
        "index": "B",
        "name": "01 Game",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 900
      },
      {
        "contestId": 1373,
        "index": "A",
        "name": "Donut Shops",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1372,
        "index": "F",
        "name": "Omkar and Modes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "divide and conquer",
          "interactive"
        ],
        "points": 2700
      },
      {
        "contestId": 1372,
        "index": "E",
        "name": "Omkar and Last Floor",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2900
      },
      {
        "contestId": 1372,
        "index": "D",
        "name": "Omkar and Circle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "games",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1372,
        "index": "C",
        "name": "Omkar and Baseball",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1372,
        "index": "B",
        "name": "Omkar and Last Class of Math",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1372,
        "index": "A",
        "name": "Omkar and Completion",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1371,
        "index": "F",
        "name": "Raging Thunder",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "dp",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1371,
        "index": "E1",
        "name": "Asterism (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1371,
        "index": "D",
        "name": "Grid-00100",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1371,
        "index": "C",
        "name": "A Cookie for You",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1371,
        "index": "B",
        "name": "Magical Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1371,
        "index": "A",
        "name": "Magical Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1370,
        "index": "F2",
        "name": "The Hidden Pair (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs",
          "interactive",
          "shortest paths",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1370,
        "index": "F1",
        "name": "The Hidden Pair (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs",
          "interactive",
          "shortest paths",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1370,
        "index": "E",
        "name": "Binary Subsequence Rotation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1370,
        "index": "D",
        "name": "Odd-Even Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "dsu",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1370,
        "index": "C",
        "name": "Number Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1370,
        "index": "B",
        "name": "GCD Compression",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1370,
        "index": "A",
        "name": "Maximum GCD",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1369,
        "index": "F",
        "name": "BareLee",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games"
        ],
        "points": 2700
      },
      {
        "contestId": 1369,
        "index": "E",
        "name": "DeadLee",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1369,
        "index": "D",
        "name": "TediousLee",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy",
          "math",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1369,
        "index": "C",
        "name": "RationalLee",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1369,
        "index": "B",
        "name": "AccurateLee",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1369,
        "index": "A",
        "name": "FashionabLee",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1368,
        "index": "H2",
        "name": "Breadboard Capacity (hard version)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1368,
        "index": "H1",
        "name": "Breadboard Capacity (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "greedy"
        ],
        "points": 3300
      },
      {
        "contestId": 1368,
        "index": "G",
        "name": "Shifting Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "graphs",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1368,
        "index": "F",
        "name": "Lamps on a Circle",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "implementation",
          "interactive",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1368,
        "index": "E",
        "name": "Ski Accidents",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1368,
        "index": "D",
        "name": "AND, OR and square sum",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1368,
        "index": "C",
        "name": "Even Picture",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1500
      },
      {
        "contestId": 1368,
        "index": "B",
        "name": "Codeforces Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1368,
        "index": "A",
        "name": "C+=",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1367,
        "index": "F2",
        "name": "Flying Sort (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1367,
        "index": "F1",
        "name": "Flying Sort (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1367,
        "index": "E",
        "name": "Necklace Assembly",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1367,
        "index": "D",
        "name": "Task On The Board",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1367,
        "index": "C",
        "name": "Social Distance",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1367,
        "index": "B",
        "name": "Even Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1367,
        "index": "A",
        "name": "Short Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1366,
        "index": "G",
        "name": "Construct the String",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 1366,
        "index": "F",
        "name": "Jog Around The Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "geometry",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 1366,
        "index": "E",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "dp",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1366,
        "index": "D",
        "name": "Two Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1366,
        "index": "C",
        "name": "Palindromic Paths",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1366,
        "index": "B",
        "name": "Shuffle",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1366,
        "index": "A",
        "name": "Shovels and Swords",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1365,
        "index": "G",
        "name": "Secure Password",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1365,
        "index": "F",
        "name": "Swaps Again",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1365,
        "index": "E",
        "name": "Maximum Subsequence Value",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 1365,
        "index": "D",
        "name": "Solve The Maze",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "implementation",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1365,
        "index": "C",
        "name": "Rotation Matching",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1365,
        "index": "B",
        "name": "Trouble Sort",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1365,
        "index": "A",
        "name": "Matrix Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1364,
        "index": "E",
        "name": "X-OR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "divide and conquer",
          "interactive",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 1364,
        "index": "D",
        "name": "Ehab's Last Corollary",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1364,
        "index": "C",
        "name": "Ehab and Prefix MEXs",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1364,
        "index": "B",
        "name": "Most socially-distanced subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1364,
        "index": "A",
        "name": "XXXXX",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "number theory",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1363,
        "index": "F",
        "name": "Rotating Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1363,
        "index": "E",
        "name": "Tree Shuffling",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1363,
        "index": "D",
        "name": "Guess The Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "interactive",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1363,
        "index": "C",
        "name": "Game On Leaves",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1363,
        "index": "B",
        "name": "Subsequence Hate",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1363,
        "index": "A",
        "name": "Odd Selection",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1362,
        "index": "C",
        "name": "Johnny and Another Rating Drop",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1362,
        "index": "B",
        "name": "Johnny and His Hobbies",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ],
        "points": 1200
      },
      {
        "contestId": 1362,
        "index": "A",
        "name": "Johnny and Ancient Computer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1361,
        "index": "F",
        "name": "Johnny and New Toy",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1361,
        "index": "E",
        "name": "James and the Chase",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "probabilities",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1361,
        "index": "D",
        "name": "Johnny and James",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1361,
        "index": "C",
        "name": "Johnny and Megan's Necklace",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1361,
        "index": "B",
        "name": "Johnny and Grandmaster",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1361,
        "index": "A",
        "name": "Johnny and Contribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1360,
        "index": "H",
        "name": "Binary Median",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "constructive algorithms"
        ],
        "points": 2100
      },
      {
        "contestId": 1360,
        "index": "G",
        "name": "A/B Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1360,
        "index": "F",
        "name": "Spy-string",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dp",
          "hashing",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1360,
        "index": "E",
        "name": "Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 1300
      },
      {
        "contestId": 1360,
        "index": "D",
        "name": "Buying Shovels",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1360,
        "index": "C",
        "name": "Similar Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graph matchings",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1360,
        "index": "B",
        "name": "Honest Coach",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1360,
        "index": "A",
        "name": "Minimal Square",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1359,
        "index": "F",
        "name": "RC Kaboom Show",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "geometry",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1359,
        "index": "E",
        "name": "Modular Stability",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1359,
        "index": "D",
        "name": "Yet Another Yet Another Task",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1359,
        "index": "C",
        "name": "Mixing Water",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1359,
        "index": "B",
        "name": "New Theatre Square",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1359,
        "index": "A",
        "name": "Berland Poker",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1358,
        "index": "F",
        "name": "Tasty Cookie",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 1358,
        "index": "E",
        "name": "Are You Fired?",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1358,
        "index": "D",
        "name": "The Best Vacation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1358,
        "index": "C",
        "name": "Celex Update",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1358,
        "index": "B",
        "name": "Maria Breaks the Self-isolation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1358,
        "index": "A",
        "name": "Park Lighting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1357,
        "index": "E2",
        "name": "Root of quantum Fourier transform",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "E1",
        "name": "Power of quantum Fourier transform",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "D5",
        "name": "Quantum Classification - Dataset 7",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "D4",
        "name": "Quantum Classification - Dataset 6",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "D3",
        "name": "Quantum Classification - Dataset 5",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "D2",
        "name": "Quantum Classification - Dataset 4",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "D1",
        "name": "Quantum Classification - Dataset 3",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "C2",
        "name": "Prepare superposition of basis states with the same parity",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "C1",
        "name": "Prepare superposition of basis states with 0s",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "B2",
        "name": "\"Is the number divisible by 3?\" oracle",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "B1",
        "name": "\"Is the bit string balanced?\" oracle",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "A7",
        "name": "Distinguish Y, XZ, -Y and -XZ",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "A6",
        "name": "Distinguish four Pauli gates",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "A5",
        "name": "Distinguish Rz(\u03b8) from Ry(\u03b8)",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "A4",
        "name": "Distinguish Rz from R1",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "A3",
        "name": "Distinguish H from X",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "A2",
        "name": "Distinguish I, CNOTs and SWAP",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1357,
        "index": "A1",
        "name": "Figure out direction of CNOT",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1356,
        "index": "D2",
        "name": "Quantum Classification - 2",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "D1",
        "name": "Quantum Classification - 1",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "C",
        "name": "Prepare state |01\u27e9 + |10\u27e9 + |11\u27e9",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "B2",
        "name": "Decrement",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "B1",
        "name": "Increment",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "A5",
        "name": "Distinguish Z from -Z",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "A4",
        "name": "Distinguish I \u2297 X from CNOT",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "A3",
        "name": "Distinguish Z from S",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "A2",
        "name": "Distinguish I from Z",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1356,
        "index": "A1",
        "name": "Distinguish I from X",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1355,
        "index": "F",
        "name": "Guess Divisors Count",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1355,
        "index": "E",
        "name": "Restorer Distance",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "sortings",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1355,
        "index": "D",
        "name": "Game With Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1355,
        "index": "C",
        "name": "Count Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1355,
        "index": "B",
        "name": "Young Explorers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1355,
        "index": "A",
        "name": "Sequence with Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1354,
        "index": "G",
        "name": "Find a Gift",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1354,
        "index": "F",
        "name": "Summoning Minions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "flows",
          "graph matchings",
          "greedy",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1354,
        "index": "E",
        "name": "Graph Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 1354,
        "index": "D",
        "name": "Multiset",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 1354,
        "index": "C2",
        "name": "Not So Simple Polygon Embedding",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "geometry",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1354,
        "index": "C1",
        "name": "Simple Polygon Embedding",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "math",
          "ternary search"
        ],
        "points": 1400
      },
      {
        "contestId": 1354,
        "index": "B",
        "name": "Ternary String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1354,
        "index": "A",
        "name": "Alarm Clock",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1353,
        "index": "F",
        "name": "Decreasing Heights",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1353,
        "index": "E",
        "name": "K-periodic Garland",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1353,
        "index": "C",
        "name": "Board Moves",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1353,
        "index": "B",
        "name": "Two Arrays And Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1353,
        "index": "A",
        "name": "Most Unstable Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1352,
        "index": "G",
        "name": "Special Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 1352,
        "index": "F",
        "name": "Binary String Reconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1352,
        "index": "E",
        "name": "Special Elements",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1352,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1352,
        "index": "C",
        "name": "K-th Not Divisible by n",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1352,
        "index": "B",
        "name": "Same Parity Summands",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1352,
        "index": "A",
        "name": "Sum of Round Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1351,
        "index": "C",
        "name": "Skier",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1351,
        "index": "B",
        "name": "Square?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1351,
        "index": "A",
        "name": "A+B (Trial Problem)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1350,
        "index": "B",
        "name": "Orac and Models",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1350,
        "index": "A",
        "name": "Orac and Factors",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1349,
        "index": "F2",
        "name": "Slime and Sequences (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "fft",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1349,
        "index": "F1",
        "name": "Slime and Sequences (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "fft",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1349,
        "index": "E",
        "name": "Slime and Hats",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1349,
        "index": "D",
        "name": "Slime and Biscuits",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 3200
      },
      {
        "contestId": 1349,
        "index": "C",
        "name": "Orac and Game of Life",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 1349,
        "index": "B",
        "name": "Orac and Medians",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1349,
        "index": "A",
        "name": "Orac and LCM",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1348,
        "index": "F",
        "name": "Phoenix and Memory",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1348,
        "index": "E",
        "name": "Phoenix and Berries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1348,
        "index": "D",
        "name": "Phoenix and Science",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1348,
        "index": "C",
        "name": "Phoenix and Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1348,
        "index": "B",
        "name": "Phoenix and Beauty",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1348,
        "index": "A",
        "name": "Phoenix and Balance",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1346,
        "index": "I",
        "name": "Pac-Man 2.0",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1346,
        "index": "H",
        "name": "Game with Segments",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "games"
        ],
        "points": 2700
      },
      {
        "contestId": 1346,
        "index": "G",
        "name": "Two IP Cameras",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1346,
        "index": "F",
        "name": "Dune II: Battle For Arrakis",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1346,
        "index": "E",
        "name": "Magic Tricks",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1346,
        "index": "D",
        "name": "Constructing the Dungeon",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1346,
        "index": "C",
        "name": "Spring Cleaning",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1346,
        "index": "B",
        "name": "Boot Camp",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1346,
        "index": "A",
        "name": "Color Revolution",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1345,
        "index": "B",
        "name": "Card Constructions",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1345,
        "index": "A",
        "name": "Puzzle Pieces",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1344,
        "index": "F",
        "name": "Piet's Palette",
        "type": "PROGRAMMING",
        "tags": [
          "matrices"
        ],
        "points": 3200
      },
      {
        "contestId": 1344,
        "index": "E",
        "name": "Train Tracks",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1344,
        "index": "D",
        "name": "R\u00e9sum\u00e9 Review",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1344,
        "index": "B",
        "name": "Monopole Magnets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 1344,
        "index": "A",
        "name": "Hilbert's Hotel",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1343,
        "index": "F",
        "name": "Restore the Permutation by Sorted Segments",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1343,
        "index": "E",
        "name": "Weights Distributing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy",
          "shortest paths",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1343,
        "index": "D",
        "name": "Constant Palindrome Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1343,
        "index": "C",
        "name": "Alternating Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1343,
        "index": "B",
        "name": "Balanced Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1343,
        "index": "A",
        "name": "Candies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1342,
        "index": "F",
        "name": "Make It Ascending",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 1342,
        "index": "E",
        "name": "Placing Rooks",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1342,
        "index": "D",
        "name": "Multiple Testcases",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1342,
        "index": "C",
        "name": "Yet Another Counting Problem",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1342,
        "index": "B",
        "name": "Binary Period",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1342,
        "index": "A",
        "name": "Road To Zero",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1341,
        "index": "B",
        "name": "Nastya and Door",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1341,
        "index": "A",
        "name": "Nastya and Rice",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1340,
        "index": "F",
        "name": "Nastya and CBS",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "hashing"
        ],
        "points": 3300
      },
      {
        "contestId": 1340,
        "index": "E",
        "name": "Nastya and Bees",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive",
          "probabilities"
        ],
        "points": 3000
      },
      {
        "contestId": 1340,
        "index": "D",
        "name": "Nastya and Time Machine",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1340,
        "index": "C",
        "name": "Nastya and Unexpected Guest",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1340,
        "index": "B",
        "name": "Nastya and Scoreboard",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1340,
        "index": "A",
        "name": "Nastya and Strange Generator",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1339,
        "index": "B",
        "name": "Sorted Adjacent Differences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1339,
        "index": "A",
        "name": "Filling Diamonds",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1338,
        "index": "E",
        "name": "JYPnation",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3500
      },
      {
        "contestId": 1338,
        "index": "D",
        "name": "Nested Rubber Bands",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1338,
        "index": "C",
        "name": "Perfect Triples",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "divide and conquer",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1338,
        "index": "B",
        "name": "Edge Weight Assignment",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "math",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1338,
        "index": "A",
        "name": "Powered Addition",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1337,
        "index": "B",
        "name": "Kana and Dragon Quest game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1337,
        "index": "A",
        "name": "Ichihime and Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1336,
        "index": "F",
        "name": "Journey",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "graphs",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1336,
        "index": "E2",
        "name": "Chiori and Doll Picking (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1336,
        "index": "E1",
        "name": "Chiori and Doll Picking (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1336,
        "index": "D",
        "name": "Yui and Mahjong Set",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive"
        ],
        "points": 3200
      },
      {
        "contestId": 1336,
        "index": "C",
        "name": "Kaavi and Magic Spell",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1336,
        "index": "B",
        "name": "Xenia and Colorful Gems",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1336,
        "index": "A",
        "name": "Linova and Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1335,
        "index": "F",
        "name": "Robots on a Grid",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "matrices"
        ],
        "points": 2200
      },
      {
        "contestId": 1335,
        "index": "E2",
        "name": "Three Blocks Palindrome (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1335,
        "index": "D",
        "name": "Anti-Sudoku",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1335,
        "index": "C",
        "name": "Two Teams Composing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1335,
        "index": "B",
        "name": "Construct the String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 900
      },
      {
        "contestId": 1335,
        "index": "A",
        "name": "Candies and Two Sisters",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1334,
        "index": "G",
        "name": "Substring Search",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "fft"
        ],
        "points": 2900
      },
      {
        "contestId": 1334,
        "index": "F",
        "name": "Strange Function",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1334,
        "index": "E",
        "name": "Divisor Paths",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1334,
        "index": "D",
        "name": "Minimum Euler Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1334,
        "index": "C",
        "name": "Circle of Monsters",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1334,
        "index": "B",
        "name": "Middle Class",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1334,
        "index": "A",
        "name": "Level Statistics",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1333,
        "index": "F",
        "name": "Kate and imperfection",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1333,
        "index": "E",
        "name": "Road to 1600",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 2400
      },
      {
        "contestId": 1333,
        "index": "D",
        "name": "Challenges in school \u211641",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "games",
          "graphs",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1333,
        "index": "C",
        "name": "Eugene and an array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1333,
        "index": "B",
        "name": "Kind Anton",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1333,
        "index": "A",
        "name": "Little Artem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 1332,
        "index": "G",
        "name": "No Monotone Triples",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 1332,
        "index": "F",
        "name": "Independent Set",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1332,
        "index": "E",
        "name": "Height All the Same",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math",
          "matrices"
        ],
        "points": 2100
      },
      {
        "contestId": 1332,
        "index": "D",
        "name": "Walk on Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1332,
        "index": "C",
        "name": "K-Complete Word",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1332,
        "index": "B",
        "name": "Composite Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1332,
        "index": "A",
        "name": "Exercising Walk",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1331,
        "index": "H",
        "name": "It's showtime",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1331,
        "index": "G",
        "name": "Lingua Romana",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1331,
        "index": "F",
        "name": "Elementary!",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "dp",
          "strings"
        ]
      },
      {
        "contestId": 1331,
        "index": "E",
        "name": "Jordan Smiley",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "geometry",
          "implementation"
        ]
      },
      {
        "contestId": 1331,
        "index": "D",
        "name": "Again?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1331,
        "index": "C",
        "name": "...And after happily lived ever they",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "bitmasks"
        ]
      },
      {
        "contestId": 1331,
        "index": "B",
        "name": "Limericks",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math",
          "number theory"
        ]
      },
      {
        "contestId": 1331,
        "index": "A",
        "name": "Is it rated?",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1330,
        "index": "B",
        "name": "Dreamoon Likes Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1330,
        "index": "A",
        "name": "Dreamoon and Ranking Collection",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1329,
        "index": "E",
        "name": "Dreamoon Loves AA",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 3300
      },
      {
        "contestId": 1329,
        "index": "D",
        "name": "Dreamoon Likes Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 1329,
        "index": "C",
        "name": "Drazil Likes Heap",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1329,
        "index": "B",
        "name": "Dreamoon Likes Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1329,
        "index": "A",
        "name": "Dreamoon Likes Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1328,
        "index": "F",
        "name": "Make k Equal",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1328,
        "index": "E",
        "name": "Tree Queries",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1328,
        "index": "D",
        "name": "Carousel",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1328,
        "index": "C",
        "name": "Ternary XOR",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1328,
        "index": "B",
        "name": "K-th Beautiful String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1328,
        "index": "A",
        "name": "Divisibility Problem",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1327,
        "index": "G",
        "name": "Letters and Question Marks",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "string suffix structures"
        ],
        "points": 2800
      },
      {
        "contestId": 1327,
        "index": "F",
        "name": "AND Segments",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1327,
        "index": "E",
        "name": "Count The Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1327,
        "index": "D",
        "name": "Infinite Path",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1327,
        "index": "C",
        "name": "Game with Chips",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1327,
        "index": "B",
        "name": "Princesses and Princes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1327,
        "index": "A",
        "name": "Sum of Odd Integers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1326,
        "index": "G",
        "name": "Spiderweb Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1326,
        "index": "F2",
        "name": "Wise Men (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1326,
        "index": "F1",
        "name": "Wise Men (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 2600
      },
      {
        "contestId": 1326,
        "index": "E",
        "name": "Bombs",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1326,
        "index": "D2",
        "name": "Prefix-Suffix Palindrome (Hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1326,
        "index": "D1",
        "name": "Prefix-Suffix Palindrome (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1326,
        "index": "C",
        "name": "Permutation Partitions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1326,
        "index": "B",
        "name": "Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1326,
        "index": "A",
        "name": "Bad Ugly Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1325,
        "index": "F",
        "name": "Ehab's Last Theorem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1325,
        "index": "E",
        "name": "Ehab's REAL Number Theory Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "number theory",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 1325,
        "index": "D",
        "name": "Ehab the Xorcist",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1325,
        "index": "C",
        "name": "Ehab and Path-etic MEXs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 1325,
        "index": "B",
        "name": "CopyCopyCopyCopyCopy",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1325,
        "index": "A",
        "name": "EhAb AnD gCd",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1324,
        "index": "F",
        "name": "Maximum White Subtree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1324,
        "index": "E",
        "name": "Sleeping Schedule",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1324,
        "index": "D",
        "name": "Pair of Topics",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1324,
        "index": "C",
        "name": "Frog Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1324,
        "index": "B",
        "name": "Yet Another Palindrome Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1324,
        "index": "A",
        "name": "Yet Another Tetris Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1323,
        "index": "B",
        "name": "Count Subrectangles",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1323,
        "index": "A",
        "name": "Even Subset Sum Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1322,
        "index": "F",
        "name": "Assigning Fares",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1322,
        "index": "E",
        "name": "Median Mountain Range",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1322,
        "index": "D",
        "name": "Reality Show",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 1322,
        "index": "C",
        "name": "Instant Noodles",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "hashing",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1322,
        "index": "B",
        "name": "Present",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "constructive algorithms",
          "data structures",
          "math",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1322,
        "index": "A",
        "name": "Unusual Competitions",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1321,
        "index": "C",
        "name": "Remove Adjacent",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1321,
        "index": "A",
        "name": "Contest for Robots",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1320,
        "index": "F",
        "name": "Blocks and Sensors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 3500
      },
      {
        "contestId": 1320,
        "index": "E",
        "name": "Treeland and Viruses",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "shortest paths",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1320,
        "index": "D",
        "name": "Reachable Strings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 1320,
        "index": "C",
        "name": "World of Darkraft: Battle for Azathoth",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1320,
        "index": "B",
        "name": "Navigation System",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1320,
        "index": "A",
        "name": "Journey Planning",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1316,
        "index": "F",
        "name": "Battalion Strength",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1316,
        "index": "D",
        "name": "Nash Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1316,
        "index": "C",
        "name": "Primitive Primes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "ternary search"
        ],
        "points": 1800
      },
      {
        "contestId": 1316,
        "index": "B",
        "name": "String Modification",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1316,
        "index": "A",
        "name": "Grade Allocation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1315,
        "index": "C",
        "name": "Restoring Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1315,
        "index": "B",
        "name": "Homecoming",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1315,
        "index": "A",
        "name": "Dead Pixel",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1313,
        "index": "E",
        "name": "Concatenation with intersection",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "strings",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1313,
        "index": "D",
        "name": "Happy New Year",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1313,
        "index": "C2",
        "name": "Skyscrapers (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1313,
        "index": "C1",
        "name": "Skyscrapers (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1313,
        "index": "B",
        "name": "Different Rules",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1313,
        "index": "A",
        "name": "Fast Food Restaurant",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1312,
        "index": "G",
        "name": "Autocompletion",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1312,
        "index": "F",
        "name": "Attack on Red Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1312,
        "index": "E",
        "name": "Array Shrinking",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1312,
        "index": "D",
        "name": "Count the Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1312,
        "index": "C",
        "name": "Adding Powers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "implementation",
          "math",
          "number theory",
          "ternary search"
        ],
        "points": 1400
      },
      {
        "contestId": 1312,
        "index": "B",
        "name": "Bogosort",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1312,
        "index": "A",
        "name": "Two Regular Polygons",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1311,
        "index": "F",
        "name": "Moving Points",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "implementation",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1311,
        "index": "E",
        "name": "Construct the Binary Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1311,
        "index": "D",
        "name": "Three Integers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1311,
        "index": "C",
        "name": "Perform the Combo",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 1311,
        "index": "B",
        "name": "WeirdSort",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1311,
        "index": "A",
        "name": "Add Odd or Subtract Even",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1310,
        "index": "F",
        "name": "Bad Cryptography",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 1310,
        "index": "E",
        "name": "Strange Function",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1310,
        "index": "D",
        "name": "Tourism",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1310,
        "index": "C",
        "name": "Au Pont Rouge",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1310,
        "index": "B",
        "name": "Double Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1310,
        "index": "A",
        "name": "Recommendations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs",
          "shortest paths"
        ],
        "points": 3100
      },
      {
        "contestId": 1307,
        "index": "F",
        "name": "Cow and Vacation",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 1307,
        "index": "E",
        "name": "Cow and Treats",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1307,
        "index": "D",
        "name": "Cow and Fields",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1307,
        "index": "C",
        "name": "Cow and Message",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1307,
        "index": "B",
        "name": "Cow and Friend",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1307,
        "index": "A",
        "name": "Cow and Haybales",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1305,
        "index": "H",
        "name": "Kuroni the Private Tutor",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1305,
        "index": "G",
        "name": "Kuroni and Antihype",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "dsu",
          "graphs"
        ],
        "points": 3500
      },
      {
        "contestId": 1305,
        "index": "F",
        "name": "Kuroni and the Punishment",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 1305,
        "index": "E",
        "name": "Kuroni and the Score Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1305,
        "index": "D",
        "name": "Kuroni and the Celebration",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "interactive",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1305,
        "index": "C",
        "name": "Kuroni and Impossible Calculation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1305,
        "index": "B",
        "name": "Kuroni and Simple Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1305,
        "index": "A",
        "name": "Kuroni and the Gifts",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1304,
        "index": "F2",
        "name": "Animal Observation (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1304,
        "index": "F1",
        "name": "Animal Observation (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1304,
        "index": "E",
        "name": "1-Trees and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "shortest paths",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1304,
        "index": "D",
        "name": "Shortest and Longest LIS",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1304,
        "index": "C",
        "name": "Air Conditioner",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1304,
        "index": "B",
        "name": "Longest Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1304,
        "index": "A",
        "name": "Two Rabbits",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1303,
        "index": "G",
        "name": "Sum of Prefix Sums",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "geometry",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1303,
        "index": "F",
        "name": "Number of Components",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 1303,
        "index": "E",
        "name": "Erase Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1303,
        "index": "D",
        "name": "Fill The Bag",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1303,
        "index": "C",
        "name": "Perfect Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1303,
        "index": "B",
        "name": "National Project",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1303,
        "index": "A",
        "name": "Erasing Zeroes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1302,
        "index": "J",
        "name": "Keep talking and nobody explodes -- hard",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1302,
        "index": "I",
        "name": "Deja vu",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1302,
        "index": "H",
        "name": "Who needs suffix structures?",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1302,
        "index": "G",
        "name": "Keep talking and nobody explodes -- medium",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1302,
        "index": "F",
        "name": "Keep talking and nobody explodes -- easy",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "expression parsing"
        ]
      },
      {
        "contestId": 1302,
        "index": "E",
        "name": "Amazing bitset",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1302,
        "index": "D",
        "name": "Dijkstra",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1302,
        "index": "C",
        "name": "Segment tree or Fenwick?",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ]
      },
      {
        "contestId": 1302,
        "index": "B",
        "name": "DAG",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ]
      },
      {
        "contestId": 1302,
        "index": "A",
        "name": "Nash equilibrium",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1301,
        "index": "F",
        "name": "Super Jaber",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 1301,
        "index": "E",
        "name": "Nanosoft",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1301,
        "index": "D",
        "name": "Time to Run",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1301,
        "index": "C",
        "name": "Ayoub's function",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1301,
        "index": "B",
        "name": "Motarack's Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "ternary search"
        ],
        "points": 1500
      },
      {
        "contestId": 1301,
        "index": "A",
        "name": "Three Strings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1300,
        "index": "B",
        "name": "Assigning to Classes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1300,
        "index": "A",
        "name": "Non-zero",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1299,
        "index": "E",
        "name": "So Mean",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1299,
        "index": "D",
        "name": "Around the World",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dfs and similar",
          "dp",
          "graphs",
          "graphs",
          "math",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1299,
        "index": "C",
        "name": "Water Balance",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1299,
        "index": "B",
        "name": "Aerodynamic",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 1299,
        "index": "A",
        "name": "Anu Has a Function",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1297,
        "index": "I",
        "name": "Falling Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures"
        ]
      },
      {
        "contestId": 1297,
        "index": "H",
        "name": "Paint the String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "strings"
        ]
      },
      {
        "contestId": 1297,
        "index": "G",
        "name": "M-numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "math"
        ]
      },
      {
        "contestId": 1297,
        "index": "F",
        "name": "Movie Fan",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ]
      },
      {
        "contestId": 1297,
        "index": "E",
        "name": "Modernization of Treeland",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "trees"
        ]
      },
      {
        "contestId": 1297,
        "index": "D",
        "name": "Bonus Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy",
          "sortings"
        ]
      },
      {
        "contestId": 1297,
        "index": "C",
        "name": "Dream Team",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ]
      },
      {
        "contestId": 1297,
        "index": "B",
        "name": "Cartoons",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "sortings"
        ]
      },
      {
        "contestId": 1297,
        "index": "A",
        "name": "Likes Display",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1296,
        "index": "F",
        "name": "Berland Beauty",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1296,
        "index": "E2",
        "name": "String Coloring (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1296,
        "index": "E1",
        "name": "String Coloring (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1296,
        "index": "D",
        "name": "Fight with Monsters",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1296,
        "index": "C",
        "name": "Yet Another Walking Robot",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1296,
        "index": "B",
        "name": "Food Buying",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1296,
        "index": "A",
        "name": "Array with Odd Sum",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1295,
        "index": "F",
        "name": "Good Contest",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 1295,
        "index": "E",
        "name": "Permutation Separation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2200
      },
      {
        "contestId": 1295,
        "index": "D",
        "name": "Same GCDs",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1295,
        "index": "C",
        "name": "Obtain The String",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1295,
        "index": "B",
        "name": "Infinite Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1295,
        "index": "A",
        "name": "Display The Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1294,
        "index": "F",
        "name": "Three Paths on a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1294,
        "index": "E",
        "name": "Obtain a Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1294,
        "index": "D",
        "name": "MEX maximizing",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1294,
        "index": "B",
        "name": "Collecting Packages",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1294,
        "index": "A",
        "name": "Collecting Coins",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1293,
        "index": "B",
        "name": "JOE is on TV!",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1293,
        "index": "A",
        "name": "ConneR and the A.R.C. Markland-N",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1292,
        "index": "F",
        "name": "Nora's Toy Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1292,
        "index": "E",
        "name": "Rin and The Unknown Flower",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "interactive",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1292,
        "index": "D",
        "name": "Chaotic V.",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1292,
        "index": "C",
        "name": "Xenon's Attack on the Gangs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1292,
        "index": "B",
        "name": "Aroma's Search",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "geometry",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1292,
        "index": "A",
        "name": "NEKO's Maze Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1291,
        "index": "F",
        "name": "Coffee Varieties (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ],
        "points": 2800
      },
      {
        "contestId": 1291,
        "index": "B",
        "name": "Array Sharpening",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1291,
        "index": "A",
        "name": "Even But Not Even",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1290,
        "index": "F",
        "name": "Making Shapes",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1290,
        "index": "E",
        "name": "Cartesian Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1290,
        "index": "D",
        "name": "Coffee Varieties (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 1290,
        "index": "C",
        "name": "Prefix Enlightenment",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1290,
        "index": "B",
        "name": "Irreducible Anagrams",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "strings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1290,
        "index": "A",
        "name": "Mind Control",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1288,
        "index": "F",
        "name": "Red-Blue Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows"
        ],
        "points": 2900
      },
      {
        "contestId": 1288,
        "index": "E",
        "name": "Messenger Simulator",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 1288,
        "index": "D",
        "name": "Minimax Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1288,
        "index": "C",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 1288,
        "index": "B",
        "name": "Yet Another Meme Problem",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1288,
        "index": "A",
        "name": "Deadline",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "ternary search"
        ],
        "points": 1100
      },
      {
        "contestId": 1287,
        "index": "B",
        "name": "Hyperset",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1287,
        "index": "A",
        "name": "Angry Students",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1286,
        "index": "F",
        "name": "Harry The Potter",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "fft",
          "implementation",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1286,
        "index": "E",
        "name": "Fedya the Potter Strikes Back",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 3200
      },
      {
        "contestId": 1286,
        "index": "D",
        "name": "LCC",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "matrices",
          "probabilities"
        ],
        "points": 3100
      },
      {
        "contestId": 1286,
        "index": "C2",
        "name": "Madhouse (Hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "hashing",
          "interactive",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1286,
        "index": "C1",
        "name": "Madhouse (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1286,
        "index": "B",
        "name": "Numbers on Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1286,
        "index": "A",
        "name": "Garland",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1285,
        "index": "F",
        "name": "Classical?",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1285,
        "index": "E",
        "name": "Delete a Segment",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "data structures",
          "dp",
          "graphs",
          "sortings",
          "trees",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1285,
        "index": "D",
        "name": "Dr. Evil Underscores",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "divide and conquer",
          "dp",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1285,
        "index": "C",
        "name": "Fadi and LCM",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1285,
        "index": "B",
        "name": "Just Eat It!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1285,
        "index": "A",
        "name": "Mezo Playing Zoma",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1284,
        "index": "G",
        "name": "Seollal",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3300
      },
      {
        "contestId": 1284,
        "index": "F",
        "name": "New Year and Social Network",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graph matchings",
          "graphs",
          "math",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1284,
        "index": "E",
        "name": "New Year and Castle Construction",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "geometry",
          "math",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1284,
        "index": "D",
        "name": "New Year and Conference",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "hashing",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1284,
        "index": "C",
        "name": "New Year and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1284,
        "index": "B",
        "name": "New Year and Ascent Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "data structures",
          "dp",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1284,
        "index": "A",
        "name": "New Year and Naming",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1283,
        "index": "F",
        "name": "DIY Garland",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1283,
        "index": "E",
        "name": "New Year Parties",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1283,
        "index": "D",
        "name": "Christmas Trees",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1283,
        "index": "C",
        "name": "Friends and Gifts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1283,
        "index": "B",
        "name": "Candies Division",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1283,
        "index": "A",
        "name": "Minutes Before the New Year",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1282,
        "index": "E",
        "name": "The Cake Is a Lie",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1282,
        "index": "D",
        "name": "Enchanted Artifact",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1282,
        "index": "C",
        "name": "Petya and Exam",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1282,
        "index": "B2",
        "name": "K for the Price of One (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1282,
        "index": "B1",
        "name": "K for the Price of One (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1282,
        "index": "A",
        "name": "Temporarily unavailable",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1281,
        "index": "B",
        "name": "Azamon Web Services",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1281,
        "index": "A",
        "name": "Suffix Three",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1280,
        "index": "F",
        "name": "Intergalactic Sliding Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1280,
        "index": "E",
        "name": "Kirchhoff's Current Loss",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1280,
        "index": "D",
        "name": "Miss Punyverse",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1280,
        "index": "C",
        "name": "Jeremy Bearimy",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1280,
        "index": "B",
        "name": "Beingawesomeism",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1280,
        "index": "A",
        "name": "Cut and Paste",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1279,
        "index": "F",
        "name": "New Year and Handle Change",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 1279,
        "index": "E",
        "name": "New Year Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 1279,
        "index": "D",
        "name": "Santa's Bot",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities"
        ],
        "points": 1700
      },
      {
        "contestId": 1279,
        "index": "C",
        "name": "Stack of Presents",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1279,
        "index": "B",
        "name": "Verse For Santa",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1279,
        "index": "A",
        "name": "New Year Garland",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1278,
        "index": "F",
        "name": "Cards",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1278,
        "index": "E",
        "name": "Tests for problem D",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "divide and conquer",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1278,
        "index": "D",
        "name": "Segment Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1278,
        "index": "C",
        "name": "Berry Jam",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1278,
        "index": "B",
        "name": "A and B",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1278,
        "index": "A",
        "name": "Shuffle Hashing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1277,
        "index": "D",
        "name": "Let's Play the Words?",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1277,
        "index": "B",
        "name": "Make Them Odd",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1277,
        "index": "A",
        "name": "Happy Birthday, Polycarp!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1276,
        "index": "F",
        "name": "Asterisk Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures"
        ],
        "points": 3400
      },
      {
        "contestId": 1276,
        "index": "E",
        "name": "Four Stones",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3500
      },
      {
        "contestId": 1276,
        "index": "D",
        "name": "Tree Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1276,
        "index": "C",
        "name": "Beautiful Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1276,
        "index": "B",
        "name": "Two Fairs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 1276,
        "index": "A",
        "name": "As Simple as One and Two",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1275,
        "index": "F",
        "name": "\u0428\u0430\u0440\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0441\u0442\u043e\u0432",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "interactive"
        ]
      },
      {
        "contestId": 1275,
        "index": "E3",
        "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1275,
        "index": "E2",
        "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1275,
        "index": "E1",
        "name": "\u041a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1275,
        "index": "D",
        "name": "Storage2",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1275,
        "index": "C",
        "name": "#define \u0417\u0430\u0434\u0430\u0447\u0430 B ...",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1275,
        "index": "B",
        "name": "Code Review",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1275,
        "index": "A",
        "name": "\u0421\u043a\u0440\u044b\u0442\u044b\u0439 \u0434\u0440\u0443\u0433",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1272,
        "index": "F",
        "name": "Two Bracket Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1272,
        "index": "E",
        "name": "Nearest Opposite Parity",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1272,
        "index": "D",
        "name": "Remove One Element",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 1272,
        "index": "C",
        "name": "Yet Another Broken Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1272,
        "index": "B",
        "name": "Snow Walking Robot",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1272,
        "index": "A",
        "name": "Three Friends",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1271,
        "index": "F",
        "name": "Divide The Students",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2700
      },
      {
        "contestId": 1271,
        "index": "E",
        "name": "Common Number",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1271,
        "index": "D",
        "name": "Portals",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1271,
        "index": "C",
        "name": "Shawarma Tent",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1271,
        "index": "B",
        "name": "Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1271,
        "index": "A",
        "name": "Suits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1270,
        "index": "I",
        "name": "Xor on Figures",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "fft",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1270,
        "index": "H",
        "name": "Number of Components",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1270,
        "index": "G",
        "name": "Subset with Zero Sum",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1270,
        "index": "F",
        "name": "Awesome Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1270,
        "index": "E",
        "name": "Divide Points",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1270,
        "index": "D",
        "name": "Strange Device",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1270,
        "index": "C",
        "name": "Make Good",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1270,
        "index": "B",
        "name": "Interesting Subarray",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1270,
        "index": "A",
        "name": "Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1269,
        "index": "B",
        "name": "Modulo Equality",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1269,
        "index": "A",
        "name": "Equation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1268,
        "index": "E",
        "name": "Happy Cactus",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3400
      },
      {
        "contestId": 1268,
        "index": "D",
        "name": "Invertation in Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "graphs",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1268,
        "index": "C",
        "name": "K Integers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 1268,
        "index": "B",
        "name": "Domino for Young",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1268,
        "index": "A",
        "name": "Long Beautiful Integer",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1267,
        "index": "L",
        "name": "Lexicography",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1267,
        "index": "K",
        "name": "Key Storage",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1267,
        "index": "J",
        "name": "Just Arrange the Icons",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1267,
        "index": "I",
        "name": "Intriguing Selection",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "interactive",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 1267,
        "index": "H",
        "name": "Help BerLine",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3200
      },
      {
        "contestId": 1267,
        "index": "G",
        "name": "Game Relics",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 3000
      },
      {
        "contestId": 1267,
        "index": "F",
        "name": "Foolpr\u00fcf Security",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1267,
        "index": "E",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1267,
        "index": "D",
        "name": "DevOps Best Practices",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2800
      },
      {
        "contestId": 1267,
        "index": "C",
        "name": "Cactus Revenge",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1267,
        "index": "B",
        "name": "Balls of Buma",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 900
      },
      {
        "contestId": 1267,
        "index": "A",
        "name": "Apprentice Learning Trajectory",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1266,
        "index": "H",
        "name": "Red-Blue Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "math",
          "matrices",
          "meet-in-the-middle"
        ],
        "points": 3400
      },
      {
        "contestId": 1266,
        "index": "G",
        "name": "Permutation Concatenation",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1266,
        "index": "F",
        "name": "Almost Same Distance",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 1266,
        "index": "E",
        "name": "Spaceship Solitaire",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1266,
        "index": "D",
        "name": "Decreasing Debts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "greedy",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1266,
        "index": "C",
        "name": "Diverse Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1266,
        "index": "B",
        "name": "Dice Tower",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1266,
        "index": "A",
        "name": "Competitive Programmer",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1265,
        "index": "E",
        "name": "Beautiful Mirrors",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2100
      },
      {
        "contestId": 1265,
        "index": "B",
        "name": "Beautiful Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1265,
        "index": "A",
        "name": "Beautiful String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1264,
        "index": "F",
        "name": "Beautiful Fibonacci Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 3500
      },
      {
        "contestId": 1264,
        "index": "E",
        "name": "Beautiful League",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graph matchings"
        ],
        "points": 2700
      },
      {
        "contestId": 1264,
        "index": "D2",
        "name": "Beautiful Bracket Sequence (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 1264,
        "index": "D1",
        "name": "Beautiful Bracket Sequence (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1264,
        "index": "C",
        "name": "Beautiful Mirrors with queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 1264,
        "index": "B",
        "name": "Beautiful Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1264,
        "index": "A",
        "name": "Beautiful Regional Contest",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1263,
        "index": "F",
        "name": "Economic Difficulties",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "flows",
          "graphs",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1263,
        "index": "E",
        "name": "Editor",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1263,
        "index": "D",
        "name": "Secret Passwords",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 1263,
        "index": "C",
        "name": "Everyone is a Winner!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1263,
        "index": "B",
        "name": "PIN Codes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1263,
        "index": "A",
        "name": "Sweet Problem",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1261,
        "index": "F",
        "name": "Xor-Set",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1260,
        "index": "F",
        "name": "Colored Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1260,
        "index": "E",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1260,
        "index": "D",
        "name": "A Game with Traps",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1260,
        "index": "C",
        "name": "Infinite Fence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1260,
        "index": "B",
        "name": "Obtain Two Zeroes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1260,
        "index": "A",
        "name": "Heating",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1257,
        "index": "G",
        "name": "Divisor Set",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "fft",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1257,
        "index": "F",
        "name": "Make Them Similar",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "hashing",
          "meet-in-the-middle"
        ],
        "points": 2400
      },
      {
        "contestId": 1257,
        "index": "E",
        "name": "The Contest",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1257,
        "index": "D",
        "name": "Yet Another Monster Killing Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1257,
        "index": "C",
        "name": "Dominated Subarray",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "strings",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1257,
        "index": "B",
        "name": "Magic Stick",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1257,
        "index": "A",
        "name": "Two Rival Students",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1256,
        "index": "F",
        "name": "Equalizing Two Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1256,
        "index": "E",
        "name": "Yet Another Division Into Teams",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1256,
        "index": "D",
        "name": "Binary String Minimizing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1256,
        "index": "C",
        "name": "Platforms Jumping",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1256,
        "index": "B",
        "name": "Minimize the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1256,
        "index": "A",
        "name": "Payment Without Change",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1255,
        "index": "C",
        "name": "League of Leesins",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1255,
        "index": "B",
        "name": "Fridge Lockers",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1255,
        "index": "A",
        "name": "Changing Volume",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1254,
        "index": "E",
        "name": "Send Tree to Charlie",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dsu",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 1254,
        "index": "D",
        "name": "Tree Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "probabilities",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1254,
        "index": "C",
        "name": "Point Ordering",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "interactive",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1254,
        "index": "B2",
        "name": "Send Boxes to Alice (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory",
          "ternary search",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1254,
        "index": "B1",
        "name": "Send Boxes to Alice (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory",
          "ternary search",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1254,
        "index": "A",
        "name": "Feeding Chicken",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1253,
        "index": "F",
        "name": "Cheap Robot",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dsu",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1253,
        "index": "E",
        "name": "Antenna Coverage",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1253,
        "index": "D",
        "name": "Harmonious Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1253,
        "index": "C",
        "name": "Sweets Eating",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1253,
        "index": "B",
        "name": "Silly Mistake",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1253,
        "index": "A",
        "name": "Single Push",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1252,
        "index": "L",
        "name": "Road Construction",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 1252,
        "index": "K",
        "name": "Addition Robot",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "matrices"
        ],
        "points": 2100
      },
      {
        "contestId": 1252,
        "index": "J",
        "name": "Tiling Terrace",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1252,
        "index": "I",
        "name": "Mission Possible",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 1252,
        "index": "H",
        "name": "Twin Buildings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1252,
        "index": "G",
        "name": "Performance Review",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 1252,
        "index": "F",
        "name": "Regular Forestation",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1252,
        "index": "E",
        "name": "Songwriter",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1252,
        "index": "D",
        "name": "Find String in a Grid",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "strings",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1252,
        "index": "C",
        "name": "Even Path",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1252,
        "index": "B",
        "name": "Cleaning Robots",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1252,
        "index": "A",
        "name": "Copying Homework",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1000
      },
      {
        "contestId": 1251,
        "index": "F",
        "name": "Red-White Fence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft"
        ],
        "points": 2500
      },
      {
        "contestId": 1251,
        "index": "E2",
        "name": "Voting (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1251,
        "index": "E1",
        "name": "Voting (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1251,
        "index": "D",
        "name": "Salary Changing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1251,
        "index": "C",
        "name": "Minimize The Integer",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1251,
        "index": "B",
        "name": "Binary Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 1251,
        "index": "A",
        "name": "Broken Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 1250,
        "index": "N",
        "name": "Wires",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1250,
        "index": "M",
        "name": "SmartGarden",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer"
        ],
        "points": 2500
      },
      {
        "contestId": 1250,
        "index": "L",
        "name": "Divide The Students",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1250,
        "index": "K",
        "name": "Projectors",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 3100
      },
      {
        "contestId": 1250,
        "index": "J",
        "name": "The Parade",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1250,
        "index": "I",
        "name": "Show Must Go On",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "shortest paths"
        ],
        "points": 3100
      },
      {
        "contestId": 1250,
        "index": "H",
        "name": "Happy Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1250,
        "index": "G",
        "name": "Discarding Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1250,
        "index": "F",
        "name": "Data Center",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1250,
        "index": "E",
        "name": "The Coronation",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1250,
        "index": "D",
        "name": "Conference Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 1250,
        "index": "C",
        "name": "Trip to Saint Petersburg",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 1250,
        "index": "B",
        "name": "The Feast and the Bus",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1250,
        "index": "A",
        "name": "Berstagram",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1249,
        "index": "F",
        "name": "Maximum Weight Subset",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1249,
        "index": "E",
        "name": "By Elevator or Stairs?",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1249,
        "index": "D2",
        "name": "Too Many Segments (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1249,
        "index": "D1",
        "name": "Too Many Segments (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1249,
        "index": "C2",
        "name": "Good Numbers (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "meet-in-the-middle"
        ],
        "points": 1500
      },
      {
        "contestId": 1249,
        "index": "C1",
        "name": "Good Numbers (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1249,
        "index": "B2",
        "name": "Books Exchange (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1249,
        "index": "B1",
        "name": "Books Exchange (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1249,
        "index": "A",
        "name": "Yet Another Dividing into Teams",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1248,
        "index": "D1",
        "name": "The World Is Just a Programming Task (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1248,
        "index": "B",
        "name": "Grow The Tree",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1248,
        "index": "A",
        "name": "Integer Points",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1246,
        "index": "F",
        "name": "Cursor Distance",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1245,
        "index": "F",
        "name": "Daniel and Spring Cleaning",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1245,
        "index": "E",
        "name": "Hyakugoku and Ladders",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 1245,
        "index": "D",
        "name": "Shichikuji and Power Grid",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy",
          "shortest paths",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1245,
        "index": "C",
        "name": "Constanze's Machine",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1400
      },
      {
        "contestId": 1245,
        "index": "B",
        "name": "Restricted RPS",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1245,
        "index": "A",
        "name": "Good ol' Numbers Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1244,
        "index": "G",
        "name": "Running in Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1244,
        "index": "F",
        "name": "Chips",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1244,
        "index": "E",
        "name": "Minimizing Difference",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "sortings",
          "ternary search",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1244,
        "index": "D",
        "name": "Paint the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1244,
        "index": "C",
        "name": "The Football Season",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1244,
        "index": "B",
        "name": "Rooms and Staircases",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1244,
        "index": "A",
        "name": "Pens and Pencils",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1243,
        "index": "B2",
        "name": "Character Swap (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1243,
        "index": "B1",
        "name": "Character Swap (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1243,
        "index": "A",
        "name": "Maximum Square",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1242,
        "index": "E",
        "name": "Planar Perimeter",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 3200
      },
      {
        "contestId": 1242,
        "index": "D",
        "name": "Number Discovery",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1242,
        "index": "C",
        "name": "Sum Balance",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1242,
        "index": "B",
        "name": "0-1 MST",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1242,
        "index": "A",
        "name": "Tile Painting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1240,
        "index": "F",
        "name": "Football",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3100
      },
      {
        "contestId": 1239,
        "index": "F",
        "name": "Swiper, no swiping!",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 3400
      },
      {
        "contestId": 1239,
        "index": "E",
        "name": "Turtle",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 3100
      },
      {
        "contestId": 1239,
        "index": "D",
        "name": "Catowice City",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "graph matchings",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1239,
        "index": "C",
        "name": "Queue in the Train",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1239,
        "index": "B",
        "name": "The World Is Just a Programming Task (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1239,
        "index": "A",
        "name": "Ivan the Fool and the Probability Theory",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1238,
        "index": "G",
        "name": "Adilbek and the Watering System",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 1238,
        "index": "F",
        "name": "The Maximum Subtree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1238,
        "index": "E",
        "name": "Keyboard Purchase",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1238,
        "index": "D",
        "name": "AB-string",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "dp",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1238,
        "index": "C",
        "name": "Standard Free2play",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1238,
        "index": "B",
        "name": "Kill `Em All",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1238,
        "index": "A",
        "name": "Prime Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 1237,
        "index": "H",
        "name": "Balanced Reversals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3300
      },
      {
        "contestId": 1237,
        "index": "G",
        "name": "Balanced Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 3500
      },
      {
        "contestId": 1237,
        "index": "F",
        "name": "Balanced Domino Placements",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1237,
        "index": "E",
        "name": "Balanced Binary Search Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1237,
        "index": "D",
        "name": "Balanced Playlist",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1237,
        "index": "C2",
        "name": "Balanced Removals (Harder)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "divide and conquer",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1237,
        "index": "C1",
        "name": "Balanced Removals (Easier)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1237,
        "index": "B",
        "name": "Balanced Tunnel",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1237,
        "index": "A",
        "name": "Balanced Rating Changes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math",
          "probabilities"
        ],
        "points": 3000
      },
      {
        "contestId": 1236,
        "index": "E",
        "name": "Alice and the Unfair Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "dsu"
        ],
        "points": 2500
      },
      {
        "contestId": 1236,
        "index": "D",
        "name": "Alice and the Doll",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1236,
        "index": "C",
        "name": "Labs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1236,
        "index": "B",
        "name": "Alice and the List of Presents",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1236,
        "index": "A",
        "name": "Stones",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1234,
        "index": "F",
        "name": "Yet Another Substring Reverse",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1234,
        "index": "E",
        "name": "Special Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1234,
        "index": "D",
        "name": "Distinct Characters Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1600
      },
      {
        "contestId": 1234,
        "index": "C",
        "name": "Pipes",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1234,
        "index": "B2",
        "name": "Social Network (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1234,
        "index": "B1",
        "name": "Social Network (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1234,
        "index": "A",
        "name": "Equalize Prices Again",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1231,
        "index": "E",
        "name": "Middle-Out",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1231,
        "index": "C",
        "name": "Increasing Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1230,
        "index": "B",
        "name": "Ania and Minimizing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1230,
        "index": "A",
        "name": "Dawid and Bags of Candies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1228,
        "index": "F",
        "name": "One Node is Gone",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1228,
        "index": "E",
        "name": "Another Filling the Grid",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1228,
        "index": "D",
        "name": "Complete Tripartite",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "hashing",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1228,
        "index": "C",
        "name": "Primes and Multiplication",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1228,
        "index": "B",
        "name": "Filling the Grid",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1228,
        "index": "A",
        "name": "Distinct Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1227,
        "index": "G",
        "name": "Not Same",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1227,
        "index": "F2",
        "name": "Wrong Answer on test 233 (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1227,
        "index": "F1",
        "name": "Wrong Answer on test 233 (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1227,
        "index": "E",
        "name": "Arson In Berland Forest",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1227,
        "index": "D2",
        "name": "Optimal Subsequences (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1227,
        "index": "D1",
        "name": "Optimal Subsequences (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1227,
        "index": "C",
        "name": "Messy",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1700
      },
      {
        "contestId": 1227,
        "index": "B",
        "name": "Box",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1200
      },
      {
        "contestId": 1227,
        "index": "A",
        "name": "Math Problem",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1225,
        "index": "G",
        "name": "To Make 1",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 3100
      },
      {
        "contestId": 1225,
        "index": "F",
        "name": "Tree Factory",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1225,
        "index": "E",
        "name": "Rock Is Push",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1225,
        "index": "D",
        "name": "Power Products",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1225,
        "index": "C",
        "name": "p-binary",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1225,
        "index": "B2",
        "name": "TV Subscriptions (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1225,
        "index": "B1",
        "name": "TV Subscriptions (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1225,
        "index": "A",
        "name": "Forgetting Things",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1223,
        "index": "G",
        "name": "Wooden Raft",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 1223,
        "index": "F",
        "name": "Stack Exterminable Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "hashing"
        ],
        "points": 2600
      },
      {
        "contestId": 1223,
        "index": "E",
        "name": "Paint the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1223,
        "index": "D",
        "name": "Sequence Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1223,
        "index": "C",
        "name": "Save the Nature",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1223,
        "index": "B",
        "name": "Strings Equalization",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1223,
        "index": "A",
        "name": "CME",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1221,
        "index": "G",
        "name": "Graph And Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 2900
      },
      {
        "contestId": 1221,
        "index": "F",
        "name": "Choose a Square",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1221,
        "index": "E",
        "name": "Game With String",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2500
      },
      {
        "contestId": 1221,
        "index": "D",
        "name": "Make The Fence Great Again",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 1221,
        "index": "C",
        "name": "Perfect Team",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1221,
        "index": "B",
        "name": "Knights",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1221,
        "index": "A",
        "name": "2048 Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1220,
        "index": "G",
        "name": "Geolocation",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3400
      },
      {
        "contestId": 1220,
        "index": "F",
        "name": "Gardener Alex",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 1220,
        "index": "E",
        "name": "Tourism",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1220,
        "index": "D",
        "name": "Alex and Julian",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1220,
        "index": "C",
        "name": "Substring Game in the Lesson",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1220,
        "index": "B",
        "name": "Multiplication Table",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1220,
        "index": "A",
        "name": "Cards",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1219,
        "index": "G",
        "name": "Harvester",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1219,
        "index": "C",
        "name": "Periodic integer number",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1218,
        "index": "I",
        "name": "The Light Square",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1218,
        "index": "H",
        "name": "Function Composition",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2900
      },
      {
        "contestId": 1218,
        "index": "G",
        "name": "Alpha planetary system",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 1218,
        "index": "F",
        "name": "Workout plan",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1218,
        "index": "E",
        "name": "Product Tuples",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "fft"
        ],
        "points": 2500
      },
      {
        "contestId": 1218,
        "index": "D",
        "name": "Xor Spanning Tree",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "fft",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1218,
        "index": "C",
        "name": "Jumping Transformers",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1218,
        "index": "B",
        "name": "Guarding warehouses",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 1218,
        "index": "A",
        "name": "BubbleReactor",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 1217,
        "index": "F",
        "name": "Forced Online Queries Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1217,
        "index": "E",
        "name": "Sum Queries?",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1217,
        "index": "D",
        "name": "Coloring Edges",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 1217,
        "index": "C",
        "name": "The Number Of Good Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force"
        ],
        "points": 1700
      },
      {
        "contestId": 1217,
        "index": "B",
        "name": "Zmei Gorynich",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1217,
        "index": "A",
        "name": "Creating a Character",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1216,
        "index": "F",
        "name": "Wi-Fi",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1216,
        "index": "E2",
        "name": "Numerical Sequence (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1216,
        "index": "E1",
        "name": "Numerical Sequence (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1216,
        "index": "D",
        "name": "Swords",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1216,
        "index": "C",
        "name": "White Sheet",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1216,
        "index": "B",
        "name": "Shooting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1216,
        "index": "A",
        "name": "Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1215,
        "index": "F",
        "name": "Radio Stations",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat"
        ],
        "points": 2700
      },
      {
        "contestId": 1215,
        "index": "E",
        "name": "Marbles",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1215,
        "index": "D",
        "name": "Ticket Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1215,
        "index": "C",
        "name": "Swap Letters",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1215,
        "index": "B",
        "name": "The Number of Products",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1215,
        "index": "A",
        "name": "Yellow Cards",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1214,
        "index": "H",
        "name": "Tiles Placement",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1214,
        "index": "G",
        "name": "Feeling Good",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 1214,
        "index": "F",
        "name": "Employment",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 1214,
        "index": "E",
        "name": "Petya and Construction Set",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math",
          "sortings",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1214,
        "index": "D",
        "name": "Treasure Island",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "flows",
          "hashing"
        ],
        "points": 1900
      },
      {
        "contestId": 1214,
        "index": "C",
        "name": "Bad Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1214,
        "index": "B",
        "name": "Badges",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1214,
        "index": "A",
        "name": "Optimal Currency Exchange",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1213,
        "index": "G",
        "name": "Path Queries",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dsu",
          "graphs",
          "sortings",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1213,
        "index": "F",
        "name": "Unstable String Sort",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1213,
        "index": "E",
        "name": "Two Small Strings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 1213,
        "index": "D2",
        "name": "Equalizing by Division (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1213,
        "index": "D1",
        "name": "Equalizing by Division (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1213,
        "index": "C",
        "name": "Book Reading",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1213,
        "index": "B",
        "name": "Bad Prices",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1213,
        "index": "A",
        "name": "Chips Moving",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1211,
        "index": "I",
        "name": "Unusual Graph",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 1211,
        "index": "H",
        "name": "Road Repair in Treeland",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "dp",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1211,
        "index": "G",
        "name": "King's Path",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1211,
        "index": "F",
        "name": "kotlinkotlinkotlinkotlin...",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs",
          "implementation",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1211,
        "index": "E",
        "name": "Double Permutation Inc.",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1211,
        "index": "D",
        "name": "Teams",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1211,
        "index": "C",
        "name": "Ice Cream",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1211,
        "index": "B",
        "name": "Traveling Around the Golden Ring of Berland",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1211,
        "index": "A",
        "name": "Three Problems",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1210,
        "index": "G",
        "name": "Mateusz and Escape Room",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1210,
        "index": "F2",
        "name": "Marek and Matching (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "probabilities"
        ],
        "points": 3200
      },
      {
        "contestId": 1210,
        "index": "F1",
        "name": "Marek and Matching (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "probabilities"
        ],
        "points": 3100
      },
      {
        "contestId": 1210,
        "index": "E",
        "name": "Wojtek and Card Tricks",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1210,
        "index": "D",
        "name": "Konrad and Company Evaluation",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1210,
        "index": "C",
        "name": "Kamil and Making a Stream",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1210,
        "index": "B",
        "name": "Marcin and Training Camp",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1210,
        "index": "A",
        "name": "Anadi and Domino",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1209,
        "index": "H",
        "name": "Moving Walkways",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1209,
        "index": "G2",
        "name": "Into Blocks (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 1209,
        "index": "G1",
        "name": "Into Blocks (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1209,
        "index": "F",
        "name": "Koala and Notebook",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "shortest paths",
          "strings",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1209,
        "index": "E2",
        "name": "Rotate Columns (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1209,
        "index": "E1",
        "name": "Rotate Columns (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1209,
        "index": "D",
        "name": "Cow and Snacks",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1209,
        "index": "C",
        "name": "Paint the Digits",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1209,
        "index": "B",
        "name": "Koala and Lights",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1209,
        "index": "A",
        "name": "Paint the Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1208,
        "index": "H",
        "name": "Red Blue Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1208,
        "index": "G",
        "name": "Polygons",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 1208,
        "index": "F",
        "name": "Bits And Pieces",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1208,
        "index": "E",
        "name": "Let Them Slide",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1208,
        "index": "D",
        "name": "Restore Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1208,
        "index": "C",
        "name": "Magic Grid",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 1208,
        "index": "B",
        "name": "Uniqueness",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1208,
        "index": "A",
        "name": "XORinacci",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1207,
        "index": "G",
        "name": "Indie Album",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "hashing",
          "string suffix structures",
          "strings",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1207,
        "index": "F",
        "name": "Remainder Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1207,
        "index": "E",
        "name": "XOR Guessing",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "interactive",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1207,
        "index": "D",
        "name": "Number Of Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1800
      },
      {
        "contestId": 1207,
        "index": "C",
        "name": "Gas Pipeline",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1207,
        "index": "B",
        "name": "Square Filling",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1207,
        "index": "A",
        "name": "There Are Two Types Of Burgers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1206,
        "index": "B",
        "name": "Make Product Equal One",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1206,
        "index": "A",
        "name": "Choose Two Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1205,
        "index": "F",
        "name": "Beauty of a Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1205,
        "index": "E",
        "name": "Expected Value Again",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "strings"
        ],
        "points": 3100
      },
      {
        "contestId": 1205,
        "index": "D",
        "name": "Almost All",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1205,
        "index": "C",
        "name": "Palindromic Paths",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "interactive"
        ],
        "points": 2400
      },
      {
        "contestId": 1205,
        "index": "B",
        "name": "Shortest Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1205,
        "index": "A",
        "name": "Almost Equal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1204,
        "index": "E",
        "name": "Natasha, Sasha and the Prefix Sums",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1204,
        "index": "D2",
        "name": "Kirk and a Binary String (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1204,
        "index": "D1",
        "name": "Kirk and a Binary String (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1204,
        "index": "C",
        "name": "Anna, Svyatoslav and Maps",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1204,
        "index": "B",
        "name": "Mislove Has Lost an Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1204,
        "index": "A",
        "name": "BowWow and the Timetable",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1203,
        "index": "F2",
        "name": "Complete the Projects (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1203,
        "index": "F1",
        "name": "Complete the Projects (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1203,
        "index": "E",
        "name": "Boxers",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1203,
        "index": "D2",
        "name": "Remove the Substring (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1203,
        "index": "D1",
        "name": "Remove the Substring (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1203,
        "index": "C",
        "name": "Common Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1203,
        "index": "B",
        "name": "Equal Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1203,
        "index": "A",
        "name": "Circle of Students",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1202,
        "index": "F",
        "name": "You Are Given Some Letters...",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1202,
        "index": "E",
        "name": "You Are Given Some Strings...",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "string suffix structures",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1202,
        "index": "D",
        "name": "Print a 1337-string...",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1202,
        "index": "C",
        "name": "You Are Given a WASD-string...",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "math",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1202,
        "index": "B",
        "name": "You Are Given a Decimal String...",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1202,
        "index": "A",
        "name": "You Are Given Two Binary Strings...",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1201,
        "index": "E2",
        "name": "Knightmare (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 1201,
        "index": "E1",
        "name": "Knightmare (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive",
          "shortest paths"
        ],
        "points": 2900
      },
      {
        "contestId": 1201,
        "index": "D",
        "name": "Treasure Hunting",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1201,
        "index": "C",
        "name": "Maximum Median",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1201,
        "index": "B",
        "name": "Zero Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1201,
        "index": "A",
        "name": "Important Exam",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1200,
        "index": "F",
        "name": "Graph Traveler",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1200,
        "index": "E",
        "name": "Compress Words",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "hashing",
          "implementation",
          "string suffix structures",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1200,
        "index": "D",
        "name": "White Lines",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1200,
        "index": "C",
        "name": "Round Corridor",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1200,
        "index": "B",
        "name": "Block Adventure",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1200,
        "index": "A",
        "name": "Hotelier",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1199,
        "index": "B",
        "name": "Water Lily",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1199,
        "index": "A",
        "name": "City Day",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1198,
        "index": "F",
        "name": "GCD Groups 2",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 1198,
        "index": "E",
        "name": "Rectangle Painting 2",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1198,
        "index": "D",
        "name": "Rectangle Painting 1",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1198,
        "index": "C",
        "name": "Matching vs  Independent Set",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1198,
        "index": "B",
        "name": "Welfare State",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1198,
        "index": "A",
        "name": "MP3",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1197,
        "index": "F",
        "name": "Coloring Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 1197,
        "index": "E",
        "name": "Culture Code",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "data structures",
          "dp",
          "shortest paths",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1197,
        "index": "D",
        "name": "Yet Another Subarray Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1197,
        "index": "C",
        "name": "Array Splitting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1197,
        "index": "B",
        "name": "Pillars",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1197,
        "index": "A",
        "name": "DIY Wooden Ladder",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1196,
        "index": "F",
        "name": "K-th Path",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "shortest paths",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1196,
        "index": "E",
        "name": "Connected Component on a Chessboard",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1196,
        "index": "D2",
        "name": "RGB Substring (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1196,
        "index": "D1",
        "name": "RGB Substring (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1196,
        "index": "C",
        "name": "Robot Breakout",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1196,
        "index": "B",
        "name": "Odd Sum Segments",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1196,
        "index": "A",
        "name": "Three Piles of Candies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1195,
        "index": "F",
        "name": "Geometers Anonymous Club",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "math",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1195,
        "index": "E",
        "name": "OpenStreetMap",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1195,
        "index": "D2",
        "name": "Submarine in the Rybinsk Sea (hard edition)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1195,
        "index": "D1",
        "name": "Submarine in the Rybinsk Sea (easy edition)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1195,
        "index": "C",
        "name": "Basketball Exercise",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1400
      },
      {
        "contestId": 1195,
        "index": "B",
        "name": "Sport Mafia",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1195,
        "index": "A",
        "name": "Drinks Choosing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1194,
        "index": "G",
        "name": "Another Meme Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 1194,
        "index": "F",
        "name": "Crossword Expert",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "number theory",
          "probabilities",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1194,
        "index": "E",
        "name": "Count The Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "geometry",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1194,
        "index": "D",
        "name": "1-2-K Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1194,
        "index": "C",
        "name": "From S To T",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1194,
        "index": "B",
        "name": "Yet Another Crosses Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1194,
        "index": "A",
        "name": "Remove a Progression",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1193,
        "index": "C",
        "name": "Scissors and Tape",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "geometry"
        ]
      },
      {
        "contestId": 1193,
        "index": "B",
        "name": "Magic Tree",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dp",
          "trees"
        ]
      },
      {
        "contestId": 1193,
        "index": "A",
        "name": "Amusement Park",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "math"
        ]
      },
      {
        "contestId": 1192,
        "index": "C",
        "name": "Cubeword",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "dp",
          "meet-in-the-middle"
        ]
      },
      {
        "contestId": 1192,
        "index": "B",
        "name": "Dynamic Diameter",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "trees"
        ]
      },
      {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1191,
        "index": "B",
        "name": "Tokitsukaze and Mahjong",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1191,
        "index": "A",
        "name": "Tokitsukaze and Enhancement",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 1190,
        "index": "F",
        "name": "Tokitsukaze and Powers",
        "type": "PROGRAMMING",
        "tags": [
          "number theory",
          "probabilities"
        ],
        "points": 3400
      },
      {
        "contestId": 1190,
        "index": "E",
        "name": "Tokitsukaze and Explosion",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 1190,
        "index": "D",
        "name": "Tokitsukaze and Strange Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "sortings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1190,
        "index": "C",
        "name": "Tokitsukaze and Duel",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "games",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1190,
        "index": "B",
        "name": "Tokitsukaze, CSL and Stone Game",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 1800
      },
      {
        "contestId": 1190,
        "index": "A",
        "name": "Tokitsukaze and Discard Items",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1189,
        "index": "C",
        "name": "Candies!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1189,
        "index": "B",
        "name": "Number Circle",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1189,
        "index": "A",
        "name": "Keanu Reeves",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1188,
        "index": "E",
        "name": "Problem from Red Panda",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 3300
      },
      {
        "contestId": 1188,
        "index": "D",
        "name": "Make Equal",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3100
      },
      {
        "contestId": 1188,
        "index": "C",
        "name": "Array Beauty",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1188,
        "index": "B",
        "name": "Count Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices",
          "number theory",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1188,
        "index": "A2",
        "name": "Add on a Tree: Revolution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "implementation",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1188,
        "index": "A1",
        "name": "Add on a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1187,
        "index": "G",
        "name": "Gang Up",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1187,
        "index": "F",
        "name": "Expected Square Beauty",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 1187,
        "index": "E",
        "name": "Tree Painting",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1187,
        "index": "D",
        "name": "Subarray Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1187,
        "index": "C",
        "name": "Vasya And Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1187,
        "index": "B",
        "name": "Letters Shop",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1187,
        "index": "A",
        "name": "Stickers and Toys",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1186,
        "index": "F",
        "name": "Vus the Cossack and a Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1186,
        "index": "E",
        "name": "Vus the Cossack and a Field",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1186,
        "index": "D",
        "name": "Vus the Cossack and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1186,
        "index": "C",
        "name": "Vus the Cossack and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1186,
        "index": "A",
        "name": "Vus the Cossack and a Contest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1185,
        "index": "G2",
        "name": "Playlist for Polycarp (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1185,
        "index": "G1",
        "name": "Playlist for Polycarp (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1185,
        "index": "F",
        "name": "Two Pizzas",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ],
        "points": 2100
      },
      {
        "contestId": 1185,
        "index": "E",
        "name": "Polycarp and Snakes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1185,
        "index": "D",
        "name": "Extra Element",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1185,
        "index": "C2",
        "name": "Exam in BerSU (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1185,
        "index": "C1",
        "name": "Exam in BerSU (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1185,
        "index": "B",
        "name": "Email from Polycarp",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1185,
        "index": "A",
        "name": "Ropewalkers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1184,
        "index": "E3",
        "name": "Daleks' Invasion (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1184,
        "index": "E2",
        "name": "Daleks' Invasion (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1184,
        "index": "E1",
        "name": "Daleks' Invasion (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1184,
        "index": "D2",
        "name": "Parallel Universes (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 3100
      },
      {
        "contestId": 1184,
        "index": "D1",
        "name": "Parallel Universes (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1184,
        "index": "C3",
        "name": "Heidi and the Turing Test (Hard)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 1184,
        "index": "C2",
        "name": "Heidi and the Turing Test (Medium)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 1184,
        "index": "C1",
        "name": "Heidi and the Turing Test (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1184,
        "index": "B3",
        "name": "The Doctor Meets Vader (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 1184,
        "index": "B2",
        "name": "The Doctor Meets Vader (Medium)",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs",
          "shortest paths",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1184,
        "index": "B1",
        "name": "The Doctor Meets Vader (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1184,
        "index": "A3",
        "name": "Heidi Learns Hashing (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math",
          "number theory"
        ],
        "points": 3100
      },
      {
        "contestId": 1184,
        "index": "A2",
        "name": "Heidi Learns Hashing (Medium)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1184,
        "index": "A1",
        "name": "Heidi Learns Hashing (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1183,
        "index": "G",
        "name": "Candy Box (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1183,
        "index": "F",
        "name": "Topforces Strikes Back",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1183,
        "index": "E",
        "name": "Subsequences (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 1183,
        "index": "D",
        "name": "Candy Box (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1183,
        "index": "C",
        "name": "Computer Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1183,
        "index": "B",
        "name": "Equalize Prices",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1183,
        "index": "A",
        "name": "Nearest Interesting Number",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1182,
        "index": "F",
        "name": "Maximum Sine",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1182,
        "index": "E",
        "name": "Product Oriented Recurrence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "hashing",
          "implementation",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1182,
        "index": "C",
        "name": "Beautiful Lyrics",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1182,
        "index": "B",
        "name": "Plus from Picture",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1182,
        "index": "A",
        "name": "Filling Shapes",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1181,
        "index": "E2",
        "name": "A Story of One Country (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 1181,
        "index": "E1",
        "name": "A Story of One Country (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1181,
        "index": "D",
        "name": "Irrigation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "sortings",
          "trees",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1181,
        "index": "C",
        "name": "Flag",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1181,
        "index": "B",
        "name": "Split a Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1181,
        "index": "A",
        "name": "Chunga-Changa",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1180,
        "index": "B",
        "name": "Nick and Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1180,
        "index": "A",
        "name": "Alex and a Rhombus",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1179,
        "index": "E",
        "name": "Alesya and Discrete Math",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "interactive"
        ],
        "points": 3200
      },
      {
        "contestId": 1179,
        "index": "D",
        "name": "Fedor Runs for President",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1179,
        "index": "C",
        "name": "Serge and Dining Room",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "graph matchings",
          "greedy",
          "implementation",
          "math",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1179,
        "index": "B",
        "name": "Tolik and His Uncle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 1179,
        "index": "A",
        "name": "Valeriy and Deque",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1178,
        "index": "H",
        "name": "Stock Exchange",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graphs"
        ],
        "points": 3500
      },
      {
        "contestId": 1178,
        "index": "G",
        "name": "The Awesomest Vertex",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar"
        ],
        "points": 3000
      },
      {
        "contestId": 1178,
        "index": "F2",
        "name": "Long Colorful Strip",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1178,
        "index": "F1",
        "name": "Short Colorful Strip",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1178,
        "index": "E",
        "name": "Archaeology",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1178,
        "index": "C",
        "name": "Tiles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1178,
        "index": "B",
        "name": "WOW Factor",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1178,
        "index": "A",
        "name": "Prime Minister",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1177,
        "index": "B",
        "name": "Digits Sequence (Hard Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "divide and conquer",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1177,
        "index": "A",
        "name": "Digits Sequence (Easy Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1176,
        "index": "F",
        "name": "Destroy it!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1176,
        "index": "E",
        "name": "Cover it!",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1176,
        "index": "D",
        "name": "Recover it!",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "number theory",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1176,
        "index": "C",
        "name": "Lose it!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1176,
        "index": "B",
        "name": "Merge it!",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1176,
        "index": "A",
        "name": "Divide it!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1175,
        "index": "G",
        "name": "Yet Another Partiton Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "geometry",
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 1175,
        "index": "F",
        "name": "The Number of Subpermutations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "divide and conquer",
          "hashing",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1175,
        "index": "E",
        "name": "Minimal Segment Cover",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dp",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1175,
        "index": "D",
        "name": "Array Splitting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1175,
        "index": "C",
        "name": "Electrification",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1175,
        "index": "B",
        "name": "Catch Overflow!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "expression parsing",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1175,
        "index": "A",
        "name": "From Hero to Zero",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1174,
        "index": "F",
        "name": "Ehab and the Big Finale",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "graphs",
          "implementation",
          "interactive",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1174,
        "index": "E",
        "name": "Ehab and the Expected GCD Problem",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1174,
        "index": "D",
        "name": "Ehab and the Expected XOR Problem",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 1174,
        "index": "C",
        "name": "Ehab and a Special Coloring Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1174,
        "index": "B",
        "name": "Ehab Is an Odd Person",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1174,
        "index": "A",
        "name": "Ehab Fails to Be Thanos",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1173,
        "index": "B",
        "name": "Nauuo and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1173,
        "index": "A",
        "name": "Nauuo and Votes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1172,
        "index": "F",
        "name": "Nauuo and Bug",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1172,
        "index": "E",
        "name": "Nauuo and ODT",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1172,
        "index": "D",
        "name": "Nauuo and Portals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2900
      },
      {
        "contestId": 1172,
        "index": "C2",
        "name": "Nauuo and Pictures (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1172,
        "index": "C1",
        "name": "Nauuo and Pictures (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1172,
        "index": "B",
        "name": "Nauuo and Circle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1172,
        "index": "A",
        "name": "Nauuo and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1170,
        "index": "I",
        "name": "Good Subsets",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ]
      },
      {
        "contestId": 1170,
        "index": "H",
        "name": "Longest Saw",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ]
      },
      {
        "contestId": 1170,
        "index": "G",
        "name": "Graph Decomposition",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs"
        ]
      },
      {
        "contestId": 1170,
        "index": "F",
        "name": "Wheels",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy"
        ]
      },
      {
        "contestId": 1170,
        "index": "E",
        "name": "Sliding Doors",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search"
        ]
      },
      {
        "contestId": 1170,
        "index": "D",
        "name": "Decoding of Integer Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "implementation"
        ]
      },
      {
        "contestId": 1170,
        "index": "C",
        "name": "Minus and Minus Give Plus",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "strings"
        ]
      },
      {
        "contestId": 1170,
        "index": "B",
        "name": "Bad Days",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1170,
        "index": "A",
        "name": "Three Integers Again",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1169,
        "index": "B",
        "name": "Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1169,
        "index": "A",
        "name": "Circle Metro",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1168,
        "index": "E",
        "name": "Xor Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1168,
        "index": "D",
        "name": "Anagram Paths",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1168,
        "index": "C",
        "name": "And Reachability",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1168,
        "index": "B",
        "name": "Good Triple",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1168,
        "index": "A",
        "name": "Increasing by Modulo",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1167,
        "index": "G",
        "name": "Low Budget Inception",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 3100
      },
      {
        "contestId": 1167,
        "index": "F",
        "name": "Scalar Queries",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "math",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1167,
        "index": "E",
        "name": "Range Deleting",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "data structures",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 1167,
        "index": "D",
        "name": "Bicolored RBS",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1167,
        "index": "C",
        "name": "News Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1400
      },
      {
        "contestId": 1167,
        "index": "B",
        "name": "Lost Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "interactive",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1167,
        "index": "A",
        "name": "Telephone Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1166,
        "index": "F",
        "name": "Vicky's Delivery Service",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "hashing"
        ],
        "points": 2400
      },
      {
        "contestId": 1166,
        "index": "E",
        "name": "The LCMs Must be Large",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1166,
        "index": "D",
        "name": "Cute Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1166,
        "index": "C",
        "name": "A Tale of Two Lands",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1166,
        "index": "B",
        "name": "All the Vowels Please",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1166,
        "index": "A",
        "name": "Silent Classroom",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1165,
        "index": "F2",
        "name": "Microtransactions (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 1165,
        "index": "F1",
        "name": "Microtransactions (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1165,
        "index": "E",
        "name": "Two Arrays and Sum of Functions",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1165,
        "index": "D",
        "name": "Almost All Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1165,
        "index": "C",
        "name": "Good String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1165,
        "index": "B",
        "name": "Polycarp Training",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1165,
        "index": "A",
        "name": "Remainder",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1163,
        "index": "F",
        "name": "Indecisive Taxi Fee",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 1163,
        "index": "E",
        "name": "Magical Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "data structures",
          "graphs",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1163,
        "index": "D",
        "name": "Mysterious Code",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1163,
        "index": "C2",
        "name": "Power Transmission (Hard Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1163,
        "index": "C1",
        "name": "Power Transmission (Easy Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 1900
      },
      {
        "contestId": 1163,
        "index": "B2",
        "name": "Cat Party (Hard Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1163,
        "index": "B1",
        "name": "Cat Party (Easy Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1163,
        "index": "A",
        "name": "Eating Soup",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1162,
        "index": "B",
        "name": "Double Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1162,
        "index": "A",
        "name": "Zoning Restrictions Again",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1160,
        "index": "A2",
        "name": "Collaboration",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1159,
        "index": "B",
        "name": "Expansion coefficient of the array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1159,
        "index": "A",
        "name": "A pile of stones",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1158,
        "index": "F",
        "name": "Density of subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1158,
        "index": "E",
        "name": "Strange device",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "math",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "greedy",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1158,
        "index": "C",
        "name": "Permutation recovery",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1158,
        "index": "B",
        "name": "The minimal unique substring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1158,
        "index": "A",
        "name": "The Party and Sweets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1157,
        "index": "G",
        "name": "Inverse of Rows and Columns",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 2200
      },
      {
        "contestId": 1157,
        "index": "F",
        "name": "Maximum Balanced Circle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1157,
        "index": "E",
        "name": "Minimum Array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1157,
        "index": "C2",
        "name": "Increasing Subsequence (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1157,
        "index": "C1",
        "name": "Increasing Subsequence (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1157,
        "index": "B",
        "name": "Long Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1157,
        "index": "A",
        "name": "Reachable Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1156,
        "index": "G",
        "name": "Optimizer",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "hashing",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 1156,
        "index": "F",
        "name": "Card Bag",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1156,
        "index": "E",
        "name": "Special Segments of Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1156,
        "index": "D",
        "name": "0-1-Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dp",
          "dsu",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1156,
        "index": "C",
        "name": "Match Points",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings",
          "ternary search",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1156,
        "index": "B",
        "name": "Ugly Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1156,
        "index": "A",
        "name": "Inscribed Figures",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1400
      },
      {
        "contestId": 1155,
        "index": "F",
        "name": "Delivery Oligopoly",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 1155,
        "index": "E",
        "name": "Guess the Root",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "interactive",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1155,
        "index": "D",
        "name": "Beautiful Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "divide and conquer",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1155,
        "index": "C",
        "name": "Alarm Clocks Everywhere",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1155,
        "index": "B",
        "name": "Game with Telephone Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1155,
        "index": "A",
        "name": "Reverse a Substring",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1154,
        "index": "G",
        "name": "Minimum Possible LCM",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 1154,
        "index": "F",
        "name": "Shovels Shop",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1154,
        "index": "E",
        "name": "Two Teams",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1154,
        "index": "D",
        "name": "Walking Robot",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1154,
        "index": "C",
        "name": "Gourmet Cat",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1154,
        "index": "B",
        "name": "Make Them Equal",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1154,
        "index": "A",
        "name": "Restoring Three Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1153,
        "index": "F",
        "name": "Serval and Bonus Problem",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1153,
        "index": "E",
        "name": "Serval and Snake",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "interactive"
        ],
        "points": 2200
      },
      {
        "contestId": 1153,
        "index": "D",
        "name": "Serval and Rooted Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1153,
        "index": "C",
        "name": "Serval and Parenthesis Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1153,
        "index": "B",
        "name": "Serval and Toy Bricks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1153,
        "index": "A",
        "name": "Serval and Bus",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1152,
        "index": "F2",
        "name": "Neko Rules the Catniverse (Large Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "matrices"
        ],
        "points": 3000
      },
      {
        "contestId": 1152,
        "index": "F1",
        "name": "Neko Rules the Catniverse (Small Version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "matrices"
        ],
        "points": 2800
      },
      {
        "contestId": 1152,
        "index": "E",
        "name": "Neko and Flashback",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1152,
        "index": "D",
        "name": "Neko and Aki's Prank",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1152,
        "index": "C",
        "name": "Neko does Maths",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1152,
        "index": "B",
        "name": "Neko Performs Cat Furrier Transform",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1152,
        "index": "A",
        "name": "Neko Finds Grapes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1151,
        "index": "F",
        "name": "Sonya and Informatics",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "matrices",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1151,
        "index": "E",
        "name": "Number of Components",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1151,
        "index": "D",
        "name": "Stas and the Queue at the Buffet",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1151,
        "index": "C",
        "name": "Problem for Nazar",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1151,
        "index": "B",
        "name": "Dima and a Bad XOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 1151,
        "index": "A",
        "name": "Maxim and Biology",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1150,
        "index": "B",
        "name": "Tiling Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1150,
        "index": "A",
        "name": "Stock Arbitraging",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1149,
        "index": "E",
        "name": "Election Promises",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "graphs"
        ],
        "points": 3200
      },
      {
        "contestId": 1149,
        "index": "D",
        "name": "Abandoning Roads",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "graphs",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 1149,
        "index": "C",
        "name": "Tree Generator\u2122",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1149,
        "index": "B",
        "name": "Three Religions",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1149,
        "index": "A",
        "name": "Prefix Sum Primes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1148,
        "index": "H",
        "name": "Holy Diver",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3500
      },
      {
        "contestId": 1148,
        "index": "G",
        "name": "Gold Experience",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 3300
      },
      {
        "contestId": 1148,
        "index": "F",
        "name": "Foo Fighters",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 2700
      },
      {
        "contestId": 1148,
        "index": "E",
        "name": "Earth Wind and Fire",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 1148,
        "index": "D",
        "name": "Dirty Deeds Done Dirt Cheap",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1148,
        "index": "C",
        "name": "Crazy Diamond",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1148,
        "index": "B",
        "name": "Born This Way",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1148,
        "index": "A",
        "name": "Another One Bites The Dust",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 1147,
        "index": "F",
        "name": "Zigzag Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "interactive"
        ],
        "points": 3500
      },
      {
        "contestId": 1147,
        "index": "E",
        "name": "Rainbow Coins",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 1147,
        "index": "D",
        "name": "Palindrome XOR",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1147,
        "index": "C",
        "name": "Thanos Nim",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 1147,
        "index": "B",
        "name": "Chladni Figure",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1147,
        "index": "A",
        "name": "Hide and Seek",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 1146,
        "index": "H",
        "name": "Satanic Panic",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 1146,
        "index": "G",
        "name": "Zoning Restrictions",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 1146,
        "index": "F",
        "name": "Leaf Partition",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1146,
        "index": "E",
        "name": "Hot is Cold",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1146,
        "index": "D",
        "name": "Frog Jumping",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1146,
        "index": "C",
        "name": "Tree Diameter",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "graphs",
          "interactive"
        ],
        "points": 1700
      },
      {
        "contestId": 1146,
        "index": "B",
        "name": "Hate \"A\"",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1146,
        "index": "A",
        "name": "Love \"A\"",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1145,
        "index": "G",
        "name": "AI Takeover",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ]
      },
      {
        "contestId": 1145,
        "index": "F",
        "name": "Neat Words",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1145,
        "index": "E",
        "name": "Fourier Doodles",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1145,
        "index": "D",
        "name": "Pigeon d'Or",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ]
      },
      {
        "contestId": 1145,
        "index": "C",
        "name": "Mystery Circuit",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ]
      },
      {
        "contestId": 1145,
        "index": "B",
        "name": "Kanban Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ]
      },
      {
        "contestId": 1145,
        "index": "A",
        "name": "Thanos Sort",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ]
      },
      {
        "contestId": 1144,
        "index": "G",
        "name": "Two Merged Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1144,
        "index": "F",
        "name": "Graph Without Long Directed Paths",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1144,
        "index": "E",
        "name": "Median String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math",
          "number theory",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1144,
        "index": "D",
        "name": "Equalize Them All",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1144,
        "index": "C",
        "name": "Two Shuffled Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1144,
        "index": "B",
        "name": "Parity Alternated Deletions",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1144,
        "index": "A",
        "name": "Diverse Strings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1143,
        "index": "C",
        "name": "Queen",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 1143,
        "index": "B",
        "name": "Nirvana",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1143,
        "index": "A",
        "name": "The Doors",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1142,
        "index": "E",
        "name": "Pink Floyd",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "interactive"
        ],
        "points": 3200
      },
      {
        "contestId": 1142,
        "index": "D",
        "name": "Foreigner",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 1142,
        "index": "C",
        "name": "U2",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 1142,
        "index": "B",
        "name": "Lynyrd Skynyrd",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1142,
        "index": "A",
        "name": "The Beatles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1141,
        "index": "G",
        "name": "Privatization of Roads in Treeland",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1141,
        "index": "F2",
        "name": "Same Sum Blocks (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1141,
        "index": "F1",
        "name": "Same Sum Blocks (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1141,
        "index": "E",
        "name": "Superhero Battle",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1141,
        "index": "D",
        "name": "Colored Boots",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1141,
        "index": "C",
        "name": "Polycarp Restores Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1141,
        "index": "B",
        "name": "Maximal Continuous Rest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1141,
        "index": "A",
        "name": "Game 23",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1140,
        "index": "G",
        "name": "Double Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "shortest paths",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1140,
        "index": "F",
        "name": "Extending Set of Points",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu"
        ],
        "points": 2600
      },
      {
        "contestId": 1140,
        "index": "E",
        "name": "Palindrome-less Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1140,
        "index": "D",
        "name": "Minimum Triangulation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1140,
        "index": "C",
        "name": "Playlist",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1140,
        "index": "B",
        "name": "Good String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1140,
        "index": "A",
        "name": "Detective Book",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1139,
        "index": "F",
        "name": "Dish Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2500
      },
      {
        "contestId": 1139,
        "index": "E",
        "name": "Maximize Mex",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1139,
        "index": "D",
        "name": "Steps to One",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1139,
        "index": "C",
        "name": "Edgy Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "math",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 1139,
        "index": "B",
        "name": "Chocolates",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1139,
        "index": "A",
        "name": "Even Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1138,
        "index": "B",
        "name": "Circus",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1138,
        "index": "A",
        "name": "Sushi for Two",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1137,
        "index": "F",
        "name": "Matches Are Not a Child's Play",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1137,
        "index": "E",
        "name": "Train Car Selection",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 1137,
        "index": "D",
        "name": "Cooperative Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1137,
        "index": "C",
        "name": "Museums Tour",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1137,
        "index": "B",
        "name": "Camp Schedule",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1137,
        "index": "A",
        "name": "Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1136,
        "index": "E",
        "name": "Nastya Hasn't Written a Legend",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 1136,
        "index": "D",
        "name": "Nastya Is Buying Lunch",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1136,
        "index": "C",
        "name": "Nastya Is Transposing Matrices",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1136,
        "index": "B",
        "name": "Nastya Is Playing Computer Games",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1136,
        "index": "A",
        "name": "Nastya Is Reading a Book",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1133,
        "index": "F2",
        "name": "Spanning Tree with One Fixed Degree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1133,
        "index": "F1",
        "name": "Spanning Tree with Maximum Degree",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 1133,
        "index": "E",
        "name": "K Balanced Teams",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1133,
        "index": "D",
        "name": "Zero Quantity Maximization",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1133,
        "index": "C",
        "name": "Balanced Team",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1133,
        "index": "B",
        "name": "Preparation for International Women's Day",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1133,
        "index": "A",
        "name": "Middle of the Contest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1132,
        "index": "G",
        "name": "Greedy Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1132,
        "index": "F",
        "name": "Clear the String",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1132,
        "index": "E",
        "name": "Knapsack",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1132,
        "index": "D",
        "name": "Stressful Training",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1132,
        "index": "C",
        "name": "Painting the Fence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1700
      },
      {
        "contestId": 1132,
        "index": "B",
        "name": "Discounts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1132,
        "index": "A",
        "name": "Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1131,
        "index": "G",
        "name": "Most Dangerous Shark",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1131,
        "index": "F",
        "name": "Asya And Kittens",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu"
        ],
        "points": 1700
      },
      {
        "contestId": 1131,
        "index": "E",
        "name": "String Multiplication",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1131,
        "index": "D",
        "name": "Gourmet choice",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1131,
        "index": "C",
        "name": "Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1131,
        "index": "B",
        "name": "Draw!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1131,
        "index": "A",
        "name": "Sea Battle",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1130,
        "index": "C",
        "name": "Connect",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dsu"
        ],
        "points": 1400
      },
      {
        "contestId": 1130,
        "index": "B",
        "name": "Two Cakes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1130,
        "index": "A",
        "name": "Be Positive",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1129,
        "index": "E",
        "name": "Legendary Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1129,
        "index": "D",
        "name": "Isolation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1129,
        "index": "C",
        "name": "Morse Code",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "hashing",
          "sortings",
          "string suffix structures",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1129,
        "index": "B",
        "name": "Wrong Answer",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2000
      },
      {
        "contestId": 1129,
        "index": "A2",
        "name": "Toy Train",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1129,
        "index": "A1",
        "name": "Toy Train (Simplified)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1121,
        "index": "C",
        "name": "System Testing",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1121,
        "index": "B",
        "name": "Mike and Children",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1121,
        "index": "A",
        "name": "Technogoblet of Fire",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1120,
        "index": "F",
        "name": "Secret Letters",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 1120,
        "index": "E",
        "name": "The very same Munchhausen",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2600
      },
      {
        "contestId": 1120,
        "index": "D",
        "name": "Power Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1120,
        "index": "C",
        "name": "Compress String",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1120,
        "index": "B",
        "name": "Once in a casino",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1120,
        "index": "A",
        "name": "Diana and Liana",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1119,
        "index": "H",
        "name": "Triple",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1119,
        "index": "G",
        "name": "Get Ready for the Battle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 3100
      },
      {
        "contestId": 1119,
        "index": "F",
        "name": "Niyaz and Small Degrees",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1119,
        "index": "E",
        "name": "Pavel and Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "fft",
          "greedy",
          "ternary search"
        ],
        "points": 1900
      },
      {
        "contestId": 1119,
        "index": "D",
        "name": "Frets On Fire",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1119,
        "index": "C",
        "name": "Ramesses and Corner Inversion",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1119,
        "index": "B",
        "name": "Alyona and a Narrow Fridge",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1119,
        "index": "A",
        "name": "Ilya and a Colorful Walk",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1118,
        "index": "F2",
        "name": "Tree Cutting (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1118,
        "index": "F1",
        "name": "Tree Cutting (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1118,
        "index": "E",
        "name": "Yet Another Ball Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1118,
        "index": "D2",
        "name": "Coffee and Coursework (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1118,
        "index": "D1",
        "name": "Coffee and Coursework (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1118,
        "index": "C",
        "name": "Palindromic Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1118,
        "index": "B",
        "name": "Tanya and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1118,
        "index": "A",
        "name": "Water Buying",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1117,
        "index": "G",
        "name": "Recursive Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 1117,
        "index": "F",
        "name": "Crisp String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1117,
        "index": "E",
        "name": "Decypher the String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "chinese remainder theorem",
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1117,
        "index": "D",
        "name": "Magic Gems",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices"
        ],
        "points": 2100
      },
      {
        "contestId": 1117,
        "index": "C",
        "name": "Magic Ship",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1900
      },
      {
        "contestId": 1117,
        "index": "B",
        "name": "Emotes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1117,
        "index": "A",
        "name": "Best Subsegment",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1116,
        "index": "D6",
        "name": "Hessenberg matrix",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "D5",
        "name": "Creeper",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "D4",
        "name": "TIE fighter",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "D3",
        "name": "X-wing fighter",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "D2",
        "name": "Pattern of increasing blocks",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "D1",
        "name": "Block diagonal matrix",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "C3",
        "name": "``Is the number of ones divisible by 3?'' oracle",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "C2",
        "name": "``Is the bit string periodic?'' oracle",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "C1",
        "name": "Alternating bits oracle",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "B2",
        "name": "Not A, not B or not C?",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "B1",
        "name": "Distinguish three-qubit states",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "A2",
        "name": "Generate equal superposition of four basis states",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1116,
        "index": "A1",
        "name": "Generate state |00\u27e9 + |01\u27e9 + |10\u27e9",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1115,
        "index": "U3",
        "name": "Block unitary",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 1115,
        "index": "U2",
        "name": "Chessboard unitary",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 1115,
        "index": "U1",
        "name": "Anti-diagonal unitary",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1500
      },
      {
        "contestId": 1115,
        "index": "G3",
        "name": "Palindrome checker oracle",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 1115,
        "index": "G2",
        "name": "OR oracle",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 1115,
        "index": "G1",
        "name": "AND oracle",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1100
      },
      {
        "contestId": 1114,
        "index": "F",
        "name": "Please, another Queries on Array?",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1114,
        "index": "E",
        "name": "Arithmetic Progression",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "number theory",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 1114,
        "index": "D",
        "name": "Flood Fill",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1114,
        "index": "C",
        "name": "Trailing Loves (or L'oeufs?)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1114,
        "index": "B",
        "name": "Yet Another Array Partitioning Task",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1114,
        "index": "A",
        "name": "Got Any Grapes?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1113,
        "index": "B",
        "name": "Sasha and Magnetic Machines",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1113,
        "index": "A",
        "name": "Sasha and His Trip",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1111,
        "index": "E",
        "name": "Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1111,
        "index": "D",
        "name": "Destroy the Colony",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1111,
        "index": "C",
        "name": "Creative Snap",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "divide and conquer",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1111,
        "index": "B",
        "name": "Average Superhero Gang Power",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1111,
        "index": "A",
        "name": "Superhero Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 3500
      },
      {
        "contestId": 1110,
        "index": "G",
        "name": "Tree-Tac-Toe",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1110,
        "index": "F",
        "name": "Nearest Leaf",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1110,
        "index": "E",
        "name": "Magic Stones",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1110,
        "index": "D",
        "name": "Jongmah",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1110,
        "index": "C",
        "name": "Meaningless Operations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1110,
        "index": "B",
        "name": "Tape",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1110,
        "index": "A",
        "name": "Parity",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1109,
        "index": "F",
        "name": "Sasha and Algorithm of Silence's Sounds",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1109,
        "index": "E",
        "name": "Sasha and a Very Easy Test",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1109,
        "index": "D",
        "name": "Sasha and Interesting Fact from Graph Theory",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "math",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1109,
        "index": "C",
        "name": "Sasha and a Patient Friend",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 1109,
        "index": "B",
        "name": "Sasha and One More Name",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "hashing",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1109,
        "index": "A",
        "name": "Sasha and a Bit of Relax",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1108,
        "index": "F",
        "name": "MST Unification",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1108,
        "index": "E2",
        "name": "Array and Segments (Hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 1108,
        "index": "E1",
        "name": "Array and Segments (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1108,
        "index": "D",
        "name": "Diverse Garland",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1108,
        "index": "C",
        "name": "Nice Garland",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1108,
        "index": "B",
        "name": "Divisors of Two Integers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1108,
        "index": "A",
        "name": "Two distinct points",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1107,
        "index": "G",
        "name": "Vasya and Maximum Profit",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "dp",
          "dsu"
        ],
        "points": 2400
      },
      {
        "contestId": 1107,
        "index": "F",
        "name": "Vasya and Endless Credits",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "graph matchings",
          "graphs",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 1107,
        "index": "E",
        "name": "Vasya and Binary String",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1107,
        "index": "D",
        "name": "Compression",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1107,
        "index": "C",
        "name": "Brutality",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1107,
        "index": "B",
        "name": "Digital root",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1107,
        "index": "A",
        "name": "Digits Sequence Dividing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1106,
        "index": "F",
        "name": "Lunar New Year and a Recursive Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1106,
        "index": "E",
        "name": "Lunar New Year and Red Envelopes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1106,
        "index": "D",
        "name": "Lunar New Year and a Wander",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1500
      },
      {
        "contestId": 1106,
        "index": "C",
        "name": "Lunar New Year and Number Division",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1106,
        "index": "B",
        "name": "Lunar New Year and Food Ordering",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1106,
        "index": "A",
        "name": "Lunar New Year and Cross Counting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1105,
        "index": "E",
        "name": "Helping Hiasat",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 2200
      },
      {
        "contestId": 1105,
        "index": "D",
        "name": "Kilani and the Game",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1105,
        "index": "C",
        "name": "Ayoub and Lost Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1105,
        "index": "B",
        "name": "Zuhair and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 1105,
        "index": "A",
        "name": "Salem and Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1104,
        "index": "B",
        "name": "Game with string",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1104,
        "index": "A",
        "name": "Splitting into digits",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1103,
        "index": "E",
        "name": "Radix sum",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 1103,
        "index": "D",
        "name": "Professional layer",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 3100
      },
      {
        "contestId": 1103,
        "index": "C",
        "name": "Johnny Solving",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1103,
        "index": "B",
        "name": "Game with modulo",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 1103,
        "index": "A",
        "name": "Grid game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1102,
        "index": "F",
        "name": "Elongated Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "dp",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 1102,
        "index": "E",
        "name": "Monotonic Renumeration",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1102,
        "index": "D",
        "name": "Balanced Ternary String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1102,
        "index": "C",
        "name": "Doors Breaking and Repairing",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 1200
      },
      {
        "contestId": 1102,
        "index": "B",
        "name": "Array K-Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1102,
        "index": "A",
        "name": "Integer Sequence Dividing",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1101,
        "index": "G",
        "name": "(Zero XOR Subset)-less",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 2300
      },
      {
        "contestId": 1101,
        "index": "F",
        "name": "Trucks and Cities",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1101,
        "index": "E",
        "name": "Polycarp's New Job",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1101,
        "index": "D",
        "name": "GCD Counting",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "number theory",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1101,
        "index": "C",
        "name": "Division and Union",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1101,
        "index": "B",
        "name": "Accordion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1101,
        "index": "A",
        "name": "Minimum Integer",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1100,
        "index": "F",
        "name": "Ivan and Burgers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "greedy",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1100,
        "index": "E",
        "name": "Andrew and Taxi",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 1100,
        "index": "D",
        "name": "Dasha and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "interactive"
        ],
        "points": 2500
      },
      {
        "contestId": 1100,
        "index": "C",
        "name": "NN and the Optical Illusion",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1100,
        "index": "B",
        "name": "Build a Contest",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1100,
        "index": "A",
        "name": "Roman and Browser",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1099,
        "index": "F",
        "name": "Cookies",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dp",
          "games",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1099,
        "index": "C",
        "name": "Postcard",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1099,
        "index": "B",
        "name": "Squares and Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1099,
        "index": "A",
        "name": "Snowball",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1098,
        "index": "F",
        "name": "\u0416-function",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures",
          "strings"
        ],
        "points": 3500
      },
      {
        "contestId": 1098,
        "index": "E",
        "name": "Fedya the Potter",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 1098,
        "index": "D",
        "name": "Eels",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 1098,
        "index": "C",
        "name": "Construct a tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1098,
        "index": "B",
        "name": "Nice table",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1098,
        "index": "A",
        "name": "Sum in the tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1097,
        "index": "H",
        "name": "Mateusz and an Infinite Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "strings"
        ],
        "points": 3400
      },
      {
        "contestId": 1097,
        "index": "G",
        "name": "Vladislav and a Great Legend",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1097,
        "index": "F",
        "name": "Alex and a TV Show",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 1097,
        "index": "E",
        "name": "Egor and an RPG game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 3400
      },
      {
        "contestId": 1097,
        "index": "D",
        "name": "Makoto and a Blackboard",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 1097,
        "index": "C",
        "name": "Yuhao and a Parenthesis",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1097,
        "index": "B",
        "name": "Petr and a Combination Lock",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 1200
      },
      {
        "contestId": 1097,
        "index": "A",
        "name": "Gennady and a Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1096,
        "index": "G",
        "name": "Lucky Tickets",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "fft"
        ],
        "points": 2400
      },
      {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1096,
        "index": "E",
        "name": "The Top Scorer",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 1096,
        "index": "D",
        "name": "Easy Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 1096,
        "index": "C",
        "name": "Polygon for the Angle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 1600
      },
      {
        "contestId": 1096,
        "index": "B",
        "name": "Substring Removal",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1096,
        "index": "A",
        "name": "Find Divisible",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1095,
        "index": "F",
        "name": "Make It Connected",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1095,
        "index": "E",
        "name": "Almost Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1095,
        "index": "D",
        "name": "Circular Dance",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1095,
        "index": "C",
        "name": "Powers Of Two",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1095,
        "index": "B",
        "name": "Array Stabilization",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1095,
        "index": "A",
        "name": "Repeating Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1093,
        "index": "G",
        "name": "Multidimensional Queries",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 1093,
        "index": "F",
        "name": "Vasya and Array",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 1093,
        "index": "E",
        "name": "Intersection of Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 1093,
        "index": "D",
        "name": "Beautiful Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1093,
        "index": "C",
        "name": "Mishka and the Last Exam",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1093,
        "index": "B",
        "name": "Letters Rearranging",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1093,
        "index": "A",
        "name": "Dice Rolling",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1092,
        "index": "F",
        "name": "Tree with Maximum Cost",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1092,
        "index": "E",
        "name": "Minimal Diameter Forest",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1092,
        "index": "D2",
        "name": "Great Vova Wall (Version 2)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1092,
        "index": "D1",
        "name": "Great Vova Wall (Version 1)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1092,
        "index": "C",
        "name": "Prefixes and Suffixes",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1092,
        "index": "B",
        "name": "Teams Forming",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1092,
        "index": "A",
        "name": "Uniform String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1091,
        "index": "H",
        "name": "New Year and the Tricolore Recreation",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 3200
      },
      {
        "contestId": 1091,
        "index": "G",
        "name": "New Year and the Factorisation Collaboration",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 1091,
        "index": "F",
        "name": "New Year and the Mallard Expedition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1091,
        "index": "E",
        "name": "New Year and the Acquaintance Estimation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "graphs",
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1091,
        "index": "D",
        "name": "New Year and the Permutation Concatenation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1091,
        "index": "C",
        "name": "New Year and the Sphere Transmission",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 1091,
        "index": "B",
        "name": "New Year and the Treasure Geolocation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1091,
        "index": "A",
        "name": "New Year and the Christmas Ornament",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1090,
        "index": "M",
        "name": "The Pleasant Walk",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1090,
        "index": "L",
        "name": "Berland University",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "K",
        "name": "Right Expansion Of The Mind",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "J",
        "name": "Two Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1090,
        "index": "I",
        "name": "Minimal Product",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "H",
        "name": "Linearization",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "G",
        "name": "Combostone",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "F",
        "name": "How to Learn You Score",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "E",
        "name": "Horseback Riding",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "D",
        "name": "Similar Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 1090,
        "index": "C",
        "name": "New Year Presents",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 1090,
        "index": "B",
        "name": "LaTeX Expert",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1090,
        "index": "A",
        "name": "Company Merging",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1089,
        "index": "M",
        "name": "Minegraphed",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1089,
        "index": "L",
        "name": "Lazyland",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 900
      },
      {
        "contestId": 1089,
        "index": "K",
        "name": "King Kog's Reception",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 1089,
        "index": "J",
        "name": "JS Minification",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 3200
      },
      {
        "contestId": 1089,
        "index": "I",
        "name": "Interval-Free Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 2600
      },
      {
        "contestId": 1089,
        "index": "H",
        "name": "Harder Satisfiability",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1089,
        "index": "G",
        "name": "Guest Student",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1089,
        "index": "F",
        "name": "Fractions",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1089,
        "index": "E",
        "name": "Easy Chess",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1089,
        "index": "D",
        "name": "Distance Sum",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1089,
        "index": "C",
        "name": "Cactus Search",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1089,
        "index": "B",
        "name": "Bimatching",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1089,
        "index": "A",
        "name": "Alice the Fan",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1088,
        "index": "F",
        "name": "Ehab and a weird weight formula",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1088,
        "index": "E",
        "name": "Ehab and a component choosing problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1088,
        "index": "D",
        "name": "Ehab and another another xor problem",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "implementation",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 1088,
        "index": "C",
        "name": "Ehab and a 2-operation task",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1088,
        "index": "B",
        "name": "Ehab and subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1088,
        "index": "A",
        "name": "Ehab and another construction problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1086,
        "index": "F",
        "name": "Forest Fires",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3500
      },
      {
        "contestId": 1085,
        "index": "G",
        "name": "Beautiful Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1085,
        "index": "F",
        "name": "Rock-Paper-Scissors Champion",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 1085,
        "index": "E",
        "name": "Vasya and Templates",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1085,
        "index": "D",
        "name": "Minimum Diameter Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1085,
        "index": "C",
        "name": "Connect Three",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1085,
        "index": "B",
        "name": "Div Times Mod",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1085,
        "index": "A",
        "name": "Right-Left Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1084,
        "index": "C",
        "name": "The Fair Nut and String",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1084,
        "index": "B",
        "name": "Kvass and the Fair Nut",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1084,
        "index": "A",
        "name": "The Fair Nut and Elevator",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1083,
        "index": "F",
        "name": "The Fair Nut and Amusing Xor",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1083,
        "index": "E",
        "name": "The Fair Nut and Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 1083,
        "index": "D",
        "name": "The Fair Nut's getting crazy",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 3500
      },
      {
        "contestId": 1083,
        "index": "C",
        "name": "Max Mex",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1083,
        "index": "B",
        "name": "The Fair Nut and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1083,
        "index": "A",
        "name": "The Fair Nut and the Best Path",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1082,
        "index": "G",
        "name": "Petya and Graph",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1082,
        "index": "F",
        "name": "Speed Dial",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1082,
        "index": "E",
        "name": "Increasing Frequency",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1082,
        "index": "D",
        "name": "Maximum Diameter Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1082,
        "index": "C",
        "name": "Multi-Subject Competition",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1082,
        "index": "B",
        "name": "Vova and Trophies",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1082,
        "index": "A",
        "name": "Vasya and Book",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1081,
        "index": "H",
        "name": "Palindromic Magic",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "strings"
        ],
        "points": 3500
      },
      {
        "contestId": 1081,
        "index": "G",
        "name": "Mergesort Strikes Back",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 3200
      },
      {
        "contestId": 1081,
        "index": "F",
        "name": "Tricky Interactor",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "interactive"
        ],
        "points": 2600
      },
      {
        "contestId": 1081,
        "index": "E",
        "name": "Missing Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1081,
        "index": "D",
        "name": "Maximum Distance",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "shortest paths",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1081,
        "index": "C",
        "name": "Colorful Bricks",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1081,
        "index": "B",
        "name": "Farewell Party",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1081,
        "index": "A",
        "name": "Definite Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1080,
        "index": "F",
        "name": "Katya and Segments Sets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "interactive",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1080,
        "index": "E",
        "name": "Sonya and Matrix Beauty",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1080,
        "index": "D",
        "name": "Olya and magical square",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1080,
        "index": "C",
        "name": "Masha and two friends",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1080,
        "index": "B",
        "name": "Margarite and the best present",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1080,
        "index": "A",
        "name": "Petya and Origami",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1078,
        "index": "E",
        "name": "Negative Time Summation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3400
      },
      {
        "contestId": 1077,
        "index": "F2",
        "name": "Pictures with Kittens (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1077,
        "index": "F1",
        "name": "Pictures with Kittens (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1077,
        "index": "E",
        "name": "Thematic Contests",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1077,
        "index": "D",
        "name": "Cutting Out",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1077,
        "index": "C",
        "name": "Good Array",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 1077,
        "index": "B",
        "name": "Disturbed People",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1077,
        "index": "A",
        "name": "Frog Jumping",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1076,
        "index": "G",
        "name": "Array Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "games"
        ],
        "points": 3000
      },
      {
        "contestId": 1076,
        "index": "F",
        "name": "Summer Practice Report",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1076,
        "index": "E",
        "name": "Vasya and a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1076,
        "index": "C",
        "name": "Meme Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1076,
        "index": "B",
        "name": "Divisor Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1076,
        "index": "A",
        "name": "Minimizing the String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1075,
        "index": "B",
        "name": "Taxi drivers and Lyft",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1075,
        "index": "A",
        "name": "The King's Race",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1073,
        "index": "G",
        "name": "Yet Another LCP Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures"
        ],
        "points": 2600
      },
      {
        "contestId": 1073,
        "index": "F",
        "name": "Choosing Two Paths",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1073,
        "index": "E",
        "name": "Segment Sum",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1073,
        "index": "D",
        "name": "Berland Fair",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1073,
        "index": "C",
        "name": "Vasya and Robot",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1073,
        "index": "B",
        "name": "Vasya and Books",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1073,
        "index": "A",
        "name": "Diverse Substring",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1071,
        "index": "E",
        "name": "Rain Protection",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 3500
      },
      {
        "contestId": 1070,
        "index": "M",
        "name": "Algoland and Berland",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 1070,
        "index": "L",
        "name": "Odd Federalization",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1070,
        "index": "K",
        "name": "Video Posts",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1070,
        "index": "J",
        "name": "Streets and Avenues in Berhattan",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1070,
        "index": "I",
        "name": "Privatization of Roads in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1070,
        "index": "H",
        "name": "BerOS File Suggestion",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1070,
        "index": "G",
        "name": "Monsters and Potions",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1070,
        "index": "F",
        "name": "Debate",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1070,
        "index": "E",
        "name": "Getting Deals Done",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 1070,
        "index": "D",
        "name": "Garbage Disposal",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1070,
        "index": "C",
        "name": "Cloud Computing",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1070,
        "index": "B",
        "name": "Berkomnadzor",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1070,
        "index": "A",
        "name": "Find a Number",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "number theory",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1068,
        "index": "C",
        "name": "Colored Rooks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1068,
        "index": "B",
        "name": "LCM",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1068,
        "index": "A",
        "name": "Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1067,
        "index": "E",
        "name": "Random Forest Rank",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graph matchings",
          "math",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1067,
        "index": "D",
        "name": "Computer Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "probabilities"
        ],
        "points": 3100
      },
      {
        "contestId": 1067,
        "index": "C",
        "name": "Knights",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1067,
        "index": "B",
        "name": "Multihedgehog",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1067,
        "index": "A",
        "name": "Array Without Local Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1066,
        "index": "F",
        "name": "Yet another 2D Walking",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1066,
        "index": "E",
        "name": "Binary Numbers AND Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1066,
        "index": "D",
        "name": "Boxes Packing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1066,
        "index": "C",
        "name": "Books Queries",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1066,
        "index": "B",
        "name": "Heaters",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 1066,
        "index": "A",
        "name": "Vova and Train",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1065,
        "index": "G",
        "name": "Fibonacci Suffix",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 1065,
        "index": "F",
        "name": "Up and Down the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1065,
        "index": "E",
        "name": "Side Transmutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1065,
        "index": "D",
        "name": "Three Pieces",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1065,
        "index": "C",
        "name": "Make It Equal",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1065,
        "index": "B",
        "name": "Vasya and Isolated Vertices",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1300
      },
      {
        "contestId": 1065,
        "index": "A",
        "name": "Vasya and Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1064,
        "index": "B",
        "name": "Equations of Mathematical Magic",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1064,
        "index": "A",
        "name": "Make a triangle!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1063,
        "index": "F",
        "name": "String Journey",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "string suffix structures"
        ],
        "points": 3300
      },
      {
        "contestId": 1063,
        "index": "E",
        "name": "Lasers and Mirrors",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1063,
        "index": "D",
        "name": "Candies for Children",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1063,
        "index": "C",
        "name": "Dwarves, Hats and Extrasensory Abilities",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "geometry",
          "interactive"
        ],
        "points": 1900
      },
      {
        "contestId": 1063,
        "index": "B",
        "name": "Labyrinth",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1063,
        "index": "A",
        "name": "Oh Those Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1062,
        "index": "F",
        "name": "Upgrading Cities",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 1062,
        "index": "E",
        "name": "Company",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1062,
        "index": "D",
        "name": "Fun with Integers",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1062,
        "index": "C",
        "name": "Banh-mi",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1062,
        "index": "B",
        "name": "Math",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1062,
        "index": "A",
        "name": "A Prank",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1061,
        "index": "F",
        "name": "Lost Root",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 1061,
        "index": "E",
        "name": "Politics",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 1061,
        "index": "D",
        "name": "TV Shows",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1061,
        "index": "C",
        "name": "Multiplicity",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1061,
        "index": "B",
        "name": "Views Matter",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1061,
        "index": "A",
        "name": "Coins",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1060,
        "index": "H",
        "name": "Sophisticated Device",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3300
      },
      {
        "contestId": 1060,
        "index": "G",
        "name": "Balls and Pockets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3400
      },
      {
        "contestId": 1060,
        "index": "F",
        "name": "Shrinking Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1060,
        "index": "E",
        "name": "Sergey and Subway",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1060,
        "index": "D",
        "name": "Social Circles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1060,
        "index": "C",
        "name": "Maximum Subrectangle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1060,
        "index": "B",
        "name": "Maximum Sum of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1060,
        "index": "A",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 1059,
        "index": "E",
        "name": "Split the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1059,
        "index": "D",
        "name": "Nature Reserve",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "ternary search"
        ],
        "points": 2200
      },
      {
        "contestId": 1059,
        "index": "C",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1059,
        "index": "B",
        "name": "Forgery",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1059,
        "index": "A",
        "name": "Cashier",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1057,
        "index": "C",
        "name": "Tanya and Colored Candies",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1057,
        "index": "B",
        "name": "DDoS",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 1057,
        "index": "A",
        "name": "Bmail Computer Network",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "trees"
        ],
        "points": 900
      },
      {
        "contestId": 1056,
        "index": "H",
        "name": "Detect Robots",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 3200
      },
      {
        "contestId": 1056,
        "index": "G",
        "name": "Take Metro",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 1056,
        "index": "F",
        "name": "Write The Contest",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1056,
        "index": "E",
        "name": "Check Transcription",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "hashing",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1056,
        "index": "D",
        "name": "Decorate Apple Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1056,
        "index": "C",
        "name": "Pick Heroes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "interactive",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1056,
        "index": "B",
        "name": "Divide Candies",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1056,
        "index": "A",
        "name": "Determine Line",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1055,
        "index": "G",
        "name": "Jellyfish Nightmare",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1055,
        "index": "F",
        "name": "Tree and XOR",
        "type": "PROGRAMMING",
        "tags": [
          "strings",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1055,
        "index": "E",
        "name": "Segments on the Line",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1055,
        "index": "D",
        "name": "Refactoring",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1055,
        "index": "C",
        "name": "Lucky Days",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1055,
        "index": "B",
        "name": "Alice and Hairdresser",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1055,
        "index": "A",
        "name": "Metro",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 900
      },
      {
        "contestId": 1054,
        "index": "H",
        "name": "Epic Convolution",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "fft",
          "math",
          "number theory"
        ],
        "points": 3500
      },
      {
        "contestId": 1054,
        "index": "G",
        "name": "New Road Network",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 1054,
        "index": "F",
        "name": "Electric Scheme",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings"
        ],
        "points": 2700
      },
      {
        "contestId": 1054,
        "index": "E",
        "name": "Chips Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1054,
        "index": "D",
        "name": "Changing Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1054,
        "index": "C",
        "name": "Candies Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1054,
        "index": "B",
        "name": "Appending Mex",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1054,
        "index": "A",
        "name": "Elevator or Stairs?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1053,
        "index": "E",
        "name": "Euler tour",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1051,
        "index": "G",
        "name": "Distinctification",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 1051,
        "index": "F",
        "name": "The Shortest Statement",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1051,
        "index": "E",
        "name": "Vasya and Big Integers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "hashing",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1051,
        "index": "D",
        "name": "Bicolorings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 1051,
        "index": "C",
        "name": "Vasya and Multisets",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1051,
        "index": "B",
        "name": "Relatively Prime Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1051,
        "index": "A",
        "name": "Vasya And Password",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1047,
        "index": "B",
        "name": "Cover Points",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1047,
        "index": "A",
        "name": "Little C Loves 3 I",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1046,
        "index": "I",
        "name": "Say Hello",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2300
      },
      {
        "contestId": 1046,
        "index": "F",
        "name": "Splitting money",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1046,
        "index": "C",
        "name": "Space Formula",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1045,
        "index": "J",
        "name": "Moonwalk challenge",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1045,
        "index": "I",
        "name": "Palindrome Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1045,
        "index": "H",
        "name": "Self-exploration",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1045,
        "index": "G",
        "name": "AI robots",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 1045,
        "index": "F",
        "name": "Shady Lady",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 1045,
        "index": "E",
        "name": "Ancient civilizations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry"
        ],
        "points": 3200
      },
      {
        "contestId": 1045,
        "index": "D",
        "name": "Interstellar battle",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1045,
        "index": "C",
        "name": "Hyperspace Highways",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1045,
        "index": "B",
        "name": "Space Isaac",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1045,
        "index": "A",
        "name": "Last chance",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "flows",
          "graph matchings",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1044,
        "index": "F",
        "name": "DFS",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 1044,
        "index": "E",
        "name": "Grid Sort",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 3100
      },
      {
        "contestId": 1044,
        "index": "D",
        "name": "Deduction Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 2400
      },
      {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 1044,
        "index": "B",
        "name": "Intersecting Subtrees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "interactive",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1044,
        "index": "A",
        "name": "The Tower is Going Home",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1043,
        "index": "G",
        "name": "Speckled Band",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 3500
      },
      {
        "contestId": 1043,
        "index": "F",
        "name": "Make It One",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math",
          "number theory",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 1043,
        "index": "E",
        "name": "Train Hard, Win Easy",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1043,
        "index": "D",
        "name": "Mysterious Crime",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math",
          "meet-in-the-middle",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1043,
        "index": "C",
        "name": "Smallest Word",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1043,
        "index": "B",
        "name": "Lost Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1043,
        "index": "A",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1042,
        "index": "F",
        "name": "Leaf Sets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1042,
        "index": "E",
        "name": "Vasya and Magic Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1042,
        "index": "D",
        "name": "Petya and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1042,
        "index": "C",
        "name": "Array Product",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1042,
        "index": "B",
        "name": "Vitamins",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1042,
        "index": "A",
        "name": "Benches",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1041,
        "index": "F",
        "name": "Ray in the tube",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1041,
        "index": "E",
        "name": "Tree Reconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1041,
        "index": "D",
        "name": "Glider",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1041,
        "index": "C",
        "name": "Coffee Break",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1041,
        "index": "B",
        "name": "Buying a TV Set",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1041,
        "index": "A",
        "name": "Heist",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1040,
        "index": "B",
        "name": "Shashlik Cooking",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1040,
        "index": "A",
        "name": "Palindrome Dance",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1039,
        "index": "E",
        "name": "Summer Oenothera Exhibition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3400
      },
      {
        "contestId": 1039,
        "index": "D",
        "name": "You Are Given a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1039,
        "index": "C",
        "name": "Network Safety",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "math",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1039,
        "index": "B",
        "name": "Subway Pursuit",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "probabilities"
        ],
        "points": 2100
      },
      {
        "contestId": 1039,
        "index": "A",
        "name": "Timetable",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1038,
        "index": "F",
        "name": "Wrap Around",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2900
      },
      {
        "contestId": 1038,
        "index": "E",
        "name": "Maximum Matching",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1038,
        "index": "D",
        "name": "Slime",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1038,
        "index": "C",
        "name": "Gambling",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1038,
        "index": "B",
        "name": "Non-Coprime Partition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1038,
        "index": "A",
        "name": "Equality",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1037,
        "index": "H",
        "name": "Security",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures"
        ],
        "points": 3200
      },
      {
        "contestId": 1037,
        "index": "G",
        "name": "A Game on Strings",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 3200
      },
      {
        "contestId": 1037,
        "index": "F",
        "name": "Maximum Reduction",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1037,
        "index": "E",
        "name": "Trips",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 1037,
        "index": "D",
        "name": "Valid BFS?",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1037,
        "index": "C",
        "name": "Equalize",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1037,
        "index": "B",
        "name": "Reach Median",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1037,
        "index": "A",
        "name": "Packets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1036,
        "index": "G",
        "name": "Sources and Sinks",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar"
        ],
        "points": 2700
      },
      {
        "contestId": 1036,
        "index": "F",
        "name": "Relatively Prime Powers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1036,
        "index": "E",
        "name": "Covered Points",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "geometry",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1036,
        "index": "D",
        "name": "Vasya and Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1036,
        "index": "C",
        "name": "Classy Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1036,
        "index": "B",
        "name": "Diagonal Walking v.2",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1036,
        "index": "A",
        "name": "Function Height",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1034,
        "index": "E",
        "name": "Little C Loves 3 III",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1034,
        "index": "D",
        "name": "Intervals of Intervals",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 3500
      },
      {
        "contestId": 1034,
        "index": "C",
        "name": "Region Separation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "number theory",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1034,
        "index": "B",
        "name": "Little C Loves 3 II",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "flows",
          "graph matchings"
        ],
        "points": 2200
      },
      {
        "contestId": 1034,
        "index": "A",
        "name": "Enlarge GCD",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1033,
        "index": "G",
        "name": "Chip Game",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 3500
      },
      {
        "contestId": 1033,
        "index": "F",
        "name": "Boolean Computer",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "fft",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1033,
        "index": "E",
        "name": "Hidden Bipartite Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "interactive"
        ],
        "points": 2800
      },
      {
        "contestId": 1033,
        "index": "D",
        "name": "Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1033,
        "index": "C",
        "name": "Permutation Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "games"
        ],
        "points": 1600
      },
      {
        "contestId": 1033,
        "index": "B",
        "name": "Square Difference",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 1033,
        "index": "A",
        "name": "King Escape",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1032,
        "index": "G",
        "name": "Chattering",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 1032,
        "index": "F",
        "name": "Vasya and Maximum Matching",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1032,
        "index": "E",
        "name": "The Unbearable Lightness of Weights",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1032,
        "index": "D",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1032,
        "index": "C",
        "name": "Playing Piano",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 1032,
        "index": "B",
        "name": "Personalized Cup",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1200
      },
      {
        "contestId": 1032,
        "index": "A",
        "name": "Kitchen Utensils",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 900
      },
      {
        "contestId": 1031,
        "index": "F",
        "name": "Familiar Operations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1031,
        "index": "E",
        "name": "Triple Flips",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1031,
        "index": "D",
        "name": "Minimum path",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1031,
        "index": "C",
        "name": "Cram Time",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1031,
        "index": "B",
        "name": "Curiosity Has No Limits",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 1031,
        "index": "A",
        "name": "Golden Plate",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1030,
        "index": "G",
        "name": "Linear Congruential Generator",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1030,
        "index": "F",
        "name": "Putting Boxes Together",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 1030,
        "index": "E",
        "name": "Vasya and Good Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1030,
        "index": "D",
        "name": "Vasya and Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1030,
        "index": "C",
        "name": "Vasya and Golden Ticket",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1030,
        "index": "B",
        "name": "Vasya and Cornfield",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1100
      },
      {
        "contestId": 1030,
        "index": "A",
        "name": "In Search of an Easy Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1029,
        "index": "F",
        "name": "Multicolored Markers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1029,
        "index": "E",
        "name": "Tree with Small Distances",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1029,
        "index": "D",
        "name": "Concatenated Multiples",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1029,
        "index": "C",
        "name": "Maximal Intersection",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1029,
        "index": "B",
        "name": "Creating the Contest",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1029,
        "index": "A",
        "name": "Many Equal Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1028,
        "index": "H",
        "name": "Make Square",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1028,
        "index": "G",
        "name": "Guess the number",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 1028,
        "index": "F",
        "name": "Make Symmetrical",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2900
      },
      {
        "contestId": 1028,
        "index": "E",
        "name": "Restore Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2400
      },
      {
        "contestId": 1028,
        "index": "D",
        "name": "Order book",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1028,
        "index": "C",
        "name": "Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1028,
        "index": "B",
        "name": "Unnatural Conditions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1028,
        "index": "A",
        "name": "Find Square",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1027,
        "index": "G",
        "name": "X-mouse in the Campus",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 1027,
        "index": "F",
        "name": "Session in BSU",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "dsu",
          "graph matchings",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1027,
        "index": "E",
        "name": "Inverse Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1027,
        "index": "D",
        "name": "Mouse Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1027,
        "index": "C",
        "name": "Minimum Value Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1027,
        "index": "B",
        "name": "Numbers on the Chessboard",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1027,
        "index": "A",
        "name": "Palindromic Twist",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1025,
        "index": "G",
        "name": "Company Acquisitions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1025,
        "index": "F",
        "name": "Disjoint Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 1025,
        "index": "E",
        "name": "Colored Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 1025,
        "index": "D",
        "name": "Recovering BST",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1025,
        "index": "C",
        "name": "Plasticine zebra",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1025,
        "index": "B",
        "name": "Weakened Common Divisor",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1025,
        "index": "A",
        "name": "Doggo Recoloring",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1023,
        "index": "G",
        "name": "Pisces",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "flows",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1023,
        "index": "F",
        "name": "Mobile Phone Network",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1023,
        "index": "E",
        "name": "Down or Right",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "matrices"
        ],
        "points": 2100
      },
      {
        "contestId": 1023,
        "index": "D",
        "name": "Array Restoration",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 1700
      },
      {
        "contestId": 1023,
        "index": "C",
        "name": "Bracket Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1023,
        "index": "B",
        "name": "Pair of Toys",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1023,
        "index": "A",
        "name": "Single Wildcard Pattern Matching",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 1020,
        "index": "B",
        "name": "Badge",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs"
        ],
        "points": 1000
      },
      {
        "contestId": 1020,
        "index": "A",
        "name": "New Building for SIS",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1019,
        "index": "E",
        "name": "Raining season",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1019,
        "index": "D",
        "name": "Large Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 1019,
        "index": "C",
        "name": "Sergey's problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 1019,
        "index": "B",
        "name": "The hat",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 1019,
        "index": "A",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1017,
        "index": "H",
        "name": "The Films",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 3300
      },
      {
        "contestId": 1017,
        "index": "G",
        "name": "The Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 1017,
        "index": "F",
        "name": "The Neutral Zone",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1017,
        "index": "E",
        "name": "The Supersonic Rocket",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "hashing",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 1017,
        "index": "D",
        "name": "The Wu",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 1017,
        "index": "C",
        "name": "The Phone Number",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1017,
        "index": "B",
        "name": "The Bits",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1017,
        "index": "A",
        "name": "The Rank",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1016,
        "index": "G",
        "name": "Appropriate Team",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 1016,
        "index": "F",
        "name": "Road Projects",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1016,
        "index": "E",
        "name": "Rest In The Shades",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 1016,
        "index": "D",
        "name": "Vasya And The Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1016,
        "index": "C",
        "name": "Vasya And The Mushrooms",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1016,
        "index": "B",
        "name": "Segment Occurrences",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1016,
        "index": "A",
        "name": "Death Note",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1015,
        "index": "F",
        "name": "Bracket Substring",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1015,
        "index": "E2",
        "name": "Stars Drawing (Hard Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1015,
        "index": "E1",
        "name": "Stars Drawing (Easy Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1015,
        "index": "D",
        "name": "Walking Between Houses",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1015,
        "index": "C",
        "name": "Songs Compression",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1015,
        "index": "B",
        "name": "Obtaining the String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1015,
        "index": "A",
        "name": "Points in Segments",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1013,
        "index": "B",
        "name": "And",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 1013,
        "index": "A",
        "name": "Piles With Stones",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1012,
        "index": "F",
        "name": "Passports",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 3400
      },
      {
        "contestId": 1012,
        "index": "E",
        "name": "Cycle sort",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1012,
        "index": "D",
        "name": "AB-Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1012,
        "index": "C",
        "name": "Hills",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1012,
        "index": "B",
        "name": "Chemical table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "matrices"
        ],
        "points": 1900
      },
      {
        "contestId": 1012,
        "index": "A",
        "name": "Photo of The Sky",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1011,
        "index": "B",
        "name": "Planning The Expedition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 1011,
        "index": "A",
        "name": "Stages",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1010,
        "index": "F",
        "name": "Tree",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "graphs",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1010,
        "index": "E",
        "name": "Store",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 1010,
        "index": "D",
        "name": "Mars rover",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1010,
        "index": "C",
        "name": "Border",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1010,
        "index": "B",
        "name": "Rocket",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 1800
      },
      {
        "contestId": 1010,
        "index": "A",
        "name": "Fly",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1009,
        "index": "G",
        "name": "Allowed Letters",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "flows",
          "graph matchings",
          "graphs",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1009,
        "index": "F",
        "name": "Dominant Indices",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1009,
        "index": "E",
        "name": "Intercity Travelling",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 1009,
        "index": "D",
        "name": "Relatively Prime Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1009,
        "index": "C",
        "name": "Annoying Present",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1009,
        "index": "B",
        "name": "Minimum Ternary String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1009,
        "index": "A",
        "name": "Game Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1008,
        "index": "B",
        "name": "Turn the Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1008,
        "index": "A",
        "name": "Romaji",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1007,
        "index": "E",
        "name": "Mini Metro",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3400
      },
      {
        "contestId": 1007,
        "index": "D",
        "name": "Ants",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "data structures",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1007,
        "index": "C",
        "name": "Guess two numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 1007,
        "index": "B",
        "name": "Pave the Parallelepiped",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1007,
        "index": "A",
        "name": "Reorder the Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1006,
        "index": "F",
        "name": "Xor-Paths",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 2100
      },
      {
        "contestId": 1006,
        "index": "E",
        "name": "Military Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1006,
        "index": "D",
        "name": "Two Strings Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1006,
        "index": "C",
        "name": "Three Parts of the Array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 1006,
        "index": "B",
        "name": "Polycarp's Practice",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1006,
        "index": "A",
        "name": "Adjacent Replacements",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1005,
        "index": "F",
        "name": "Berland and the Shortest Paths",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 1005,
        "index": "E2",
        "name": "Median on Segments (General Case Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 1005,
        "index": "E1",
        "name": "Median on Segments (Permutations Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1005,
        "index": "C",
        "name": "Summarize to the Power of Two",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1005,
        "index": "B",
        "name": "Delete from the Left",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1005,
        "index": "A",
        "name": "Tanya and Stairways",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1004,
        "index": "F",
        "name": "Sonya and Bitwise OR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer"
        ],
        "points": 2600
      },
      {
        "contestId": 1004,
        "index": "E",
        "name": "Sonya and Ice Cream",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "shortest paths",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1004,
        "index": "D",
        "name": "Sonya and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 1004,
        "index": "C",
        "name": "Sonya and Robots",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1004,
        "index": "B",
        "name": "Sonya and Exhibition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1004,
        "index": "A",
        "name": "Sonya and Hotels",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1003,
        "index": "F",
        "name": "Abbreviation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1003,
        "index": "E",
        "name": "Tree Constructing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 1003,
        "index": "D",
        "name": "Coins and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1003,
        "index": "C",
        "name": "Intense Heat",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1003,
        "index": "B",
        "name": "Binary String Constructing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 1003,
        "index": "A",
        "name": "Polycarp's Pockets",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1002,
        "index": "E2",
        "name": "Another array reconstruction algorithm",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 1002,
        "index": "E1",
        "name": "Bernstein-Vazirani algorithm",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 1002,
        "index": "D3",
        "name": "Oracle for majority function",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 1002,
        "index": "D2",
        "name": "Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 1002,
        "index": "D1",
        "name": "Oracle for f(x) = b * x mod 2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1200
      },
      {
        "contestId": 1002,
        "index": "C2",
        "name": "Distinguish zero state and plus state without errors",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 1002,
        "index": "C1",
        "name": "Distinguish zero state and plus state with minimum error",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 1002,
        "index": "B4",
        "name": "Distinguish four 2-qubit states - 2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 1002,
        "index": "B3",
        "name": "Distinguish four 2-qubit states",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 1002,
        "index": "B2",
        "name": "Distinguish GHZ state and W state",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 1002,
        "index": "B1",
        "name": "Distinguish zero state and W state",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 1002,
        "index": "A4",
        "name": "Generate W state",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 1002,
        "index": "A3",
        "name": "Generate superposition of two basis states",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 1002,
        "index": "A2",
        "name": "Generate superposition of zero state and a basis state",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 1002,
        "index": "A1",
        "name": "Generate superposition of all basis states",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 800
      },
      {
        "contestId": 1001,
        "index": "I",
        "name": "Deutsch-Jozsa algorithm",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 1001,
        "index": "H",
        "name": "Oracle for f(x) = parity of the number of 1s in x",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1200
      },
      {
        "contestId": 1001,
        "index": "G",
        "name": "Oracle for f(x) = k-th element of x",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1400
      },
      {
        "contestId": 1001,
        "index": "F",
        "name": "Distinguish multi-qubit basis states",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1300
      },
      {
        "contestId": 1001,
        "index": "E",
        "name": "Distinguish Bell states",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 1001,
        "index": "D",
        "name": "Distinguish plus state and minus state",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1400
      },
      {
        "contestId": 1001,
        "index": "C",
        "name": "Generate GHZ state",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1400
      },
      {
        "contestId": 1001,
        "index": "B",
        "name": "Generate Bell state",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1400
      },
      {
        "contestId": 1001,
        "index": "A",
        "name": "Generate plus state or minus state",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1100
      },
      {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1000,
        "index": "F",
        "name": "One Occurrence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2400
      },
      {
        "contestId": 1000,
        "index": "E",
        "name": "We Need More Bosses",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1000,
        "index": "D",
        "name": "Yet Another Problem On a Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1000,
        "index": "C",
        "name": "Covered Points Count",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1000,
        "index": "B",
        "name": "Light It Up",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1000,
        "index": "A",
        "name": "Codehorses T-shirts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 999,
        "index": "F",
        "name": "Cards and Joy",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 999,
        "index": "E",
        "name": "Reachability from the Capital",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 999,
        "index": "D",
        "name": "Equalize the Remainders",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 999,
        "index": "C",
        "name": "Alphabetic Removals",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 999,
        "index": "B",
        "name": "Reversing Encryption",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 999,
        "index": "A",
        "name": "Mishka and Contest",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 998,
        "index": "B",
        "name": "Cutting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 998,
        "index": "A",
        "name": "Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 997,
        "index": "E",
        "name": "Good Subsegments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 997,
        "index": "D",
        "name": "Cycles in product",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 997,
        "index": "C",
        "name": "Sky Full of Stars",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 997,
        "index": "B",
        "name": "Roman Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 997,
        "index": "A",
        "name": "Convert to Ones",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 996,
        "index": "B",
        "name": "World Cup",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 996,
        "index": "A",
        "name": "Hit the Lottery",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 995,
        "index": "F",
        "name": "Cowmpany Cowmpensation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 995,
        "index": "E",
        "name": "Number Clicker",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "graphs",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 995,
        "index": "D",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 995,
        "index": "C",
        "name": "Leaving the Bar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "geometry",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 995,
        "index": "B",
        "name": "Suit and Tie",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 995,
        "index": "A",
        "name": "Tesla",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 994,
        "index": "B",
        "name": "Knights of a Polygonal Table",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 994,
        "index": "A",
        "name": "Fingerprints",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 993,
        "index": "F",
        "name": "The Moral Dilemma",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 993,
        "index": "E",
        "name": "Nikita and Order Statistics",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "fft",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 993,
        "index": "D",
        "name": "Compute Power",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 993,
        "index": "C",
        "name": "Careful Maneuvering",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 993,
        "index": "B",
        "name": "Open Communication",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ],
        "points": 1900
      },
      {
        "contestId": 993,
        "index": "A",
        "name": "Two Squares",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 992,
        "index": "E",
        "name": "Nastya and King-Shamans",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 992,
        "index": "D",
        "name": "Nastya and a Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 992,
        "index": "C",
        "name": "Nastya and a Wardrobe",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 992,
        "index": "B",
        "name": "Nastya Studies Informatics",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 992,
        "index": "A",
        "name": "Nastya and an Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 991,
        "index": "F",
        "name": "Concise and clear",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 991,
        "index": "E",
        "name": "Bus Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 991,
        "index": "D",
        "name": "Bishwock",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 991,
        "index": "C",
        "name": "Candies",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 991,
        "index": "B",
        "name": "Getting an A",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 991,
        "index": "A",
        "name": "If at first you don't succeed...",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 990,
        "index": "G",
        "name": "GCD Counting",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "dsu",
          "number theory",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 990,
        "index": "F",
        "name": "Flow Control",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 990,
        "index": "E",
        "name": "Post Lamps",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 990,
        "index": "D",
        "name": "Graph And Its Complement",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 990,
        "index": "C",
        "name": "Bracket Sequences Concatenation Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 990,
        "index": "B",
        "name": "Micro-World",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 990,
        "index": "A",
        "name": "Commentary Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 989,
        "index": "E",
        "name": "A Trance of Nightfall",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry",
          "matrices",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 989,
        "index": "D",
        "name": "A Shade of Moonlight",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 989,
        "index": "C",
        "name": "A Mist of Florescence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 989,
        "index": "B",
        "name": "A Tide of Riverscape",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 989,
        "index": "A",
        "name": "A Blend of Springtime",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 988,
        "index": "F",
        "name": "Rain and Umbrellas",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 988,
        "index": "E",
        "name": "Divisibility by 25",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 988,
        "index": "D",
        "name": "Points and Powers of Two",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 988,
        "index": "C",
        "name": "Equal Sums",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 988,
        "index": "B",
        "name": "Substrings Sort",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 988,
        "index": "A",
        "name": "Diverse Team",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 987,
        "index": "C",
        "name": "Three displays",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 987,
        "index": "B",
        "name": "High School: Become Human",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 987,
        "index": "A",
        "name": "Infinity Gauntlet",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 986,
        "index": "F",
        "name": "Oppa Funcan Style Remastered",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math",
          "number theory",
          "shortest paths"
        ],
        "points": 3300
      },
      {
        "contestId": 986,
        "index": "E",
        "name": "Prince's Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 986,
        "index": "D",
        "name": "Perfect Encoding",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 986,
        "index": "C",
        "name": "AND Graph",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 986,
        "index": "B",
        "name": "Petr and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 986,
        "index": "A",
        "name": "Fair",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "number theory",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 985,
        "index": "G",
        "name": "Team Players",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 2700
      },
      {
        "contestId": 985,
        "index": "F",
        "name": "Isomorphic Strings",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 985,
        "index": "E",
        "name": "Pencils and Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 985,
        "index": "D",
        "name": "Sand Fortress",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 985,
        "index": "C",
        "name": "Liebig's Barrels",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 985,
        "index": "B",
        "name": "Switches and Lamps",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 985,
        "index": "A",
        "name": "Chess Placing",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 984,
        "index": "B",
        "name": "Minesweeper",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 984,
        "index": "A",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 983,
        "index": "E",
        "name": "NN country",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 983,
        "index": "D",
        "name": "Arkady and Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 983,
        "index": "C",
        "name": "Elevator",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 983,
        "index": "B",
        "name": "XOR-pyramid",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 983,
        "index": "A",
        "name": "Finite or not?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 982,
        "index": "F",
        "name": "The Meeting Place Cannot Be Changed",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 982,
        "index": "E",
        "name": "Billiard",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 982,
        "index": "D",
        "name": "Shark",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 982,
        "index": "C",
        "name": "Cut 'em all!",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 982,
        "index": "B",
        "name": "Bus of Characters",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 982,
        "index": "A",
        "name": "Row",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1200
      },
      {
        "contestId": 981,
        "index": "H",
        "name": "K Paths",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "fft",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 981,
        "index": "G",
        "name": "Magic multisets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 981,
        "index": "F",
        "name": "Round Marriage",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graph matchings",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 981,
        "index": "E",
        "name": "Addition on Segments",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 981,
        "index": "D",
        "name": "Bookshelves",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 981,
        "index": "C",
        "name": "Useful Decomposition",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 981,
        "index": "A",
        "name": "Antipalindrome",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 980,
        "index": "F",
        "name": "Cactus to Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 980,
        "index": "E",
        "name": "The Number Games",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 980,
        "index": "D",
        "name": "Perfect Groups",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 980,
        "index": "C",
        "name": "Posterized",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 980,
        "index": "B",
        "name": "Marlin",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 980,
        "index": "A",
        "name": "Links and Pearls",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 979,
        "index": "E",
        "name": "Kuro and Topological Parity",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 979,
        "index": "D",
        "name": "Kuro and GCD and XOR and SUM",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "data structures",
          "dp",
          "dsu",
          "greedy",
          "math",
          "number theory",
          "strings",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 979,
        "index": "B",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 979,
        "index": "A",
        "name": "Pizza, Pizza, Pizza!!!",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 978,
        "index": "G",
        "name": "Petya's Exams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 978,
        "index": "F",
        "name": "Mentors",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 978,
        "index": "E",
        "name": "Bus Video System",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 978,
        "index": "D",
        "name": "Almost Arithmetic Progression",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 978,
        "index": "C",
        "name": "Letters",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1000
      },
      {
        "contestId": 978,
        "index": "B",
        "name": "File Name",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 978,
        "index": "A",
        "name": "Remove Duplicates",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 977,
        "index": "F",
        "name": "Consecutive Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 977,
        "index": "E",
        "name": "Cyclic Components",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 977,
        "index": "D",
        "name": "Divide by three, multiply by two",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 977,
        "index": "C",
        "name": "Less or Equal",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 977,
        "index": "B",
        "name": "Two-gram",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 977,
        "index": "A",
        "name": "Wrong Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 976,
        "index": "F",
        "name": "Minimal k-covering",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 976,
        "index": "E",
        "name": "Well played!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 976,
        "index": "D",
        "name": "Degree Set",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 976,
        "index": "B",
        "name": "Lara Croft and the New Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 976,
        "index": "A",
        "name": "Minimum Binary Number",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 975,
        "index": "E",
        "name": "Hag's Khashba",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 975,
        "index": "D",
        "name": "Ghosts",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 975,
        "index": "C",
        "name": "Valhalla Siege",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1400
      },
      {
        "contestId": 975,
        "index": "B",
        "name": "Mancala",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 975,
        "index": "A",
        "name": "Aramic script",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 967,
        "index": "B",
        "name": "Watering System",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 967,
        "index": "A",
        "name": "Mind the Gap",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 965,
        "index": "E",
        "name": "Short Code",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 965,
        "index": "D",
        "name": "Single-use Stones",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "greedy",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 965,
        "index": "C",
        "name": "Greedy Arkady",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 965,
        "index": "B",
        "name": "Battleship",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 965,
        "index": "A",
        "name": "Paper Airplanes",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 964,
        "index": "B",
        "name": "Messages",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 964,
        "index": "A",
        "name": "Splits",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 963,
        "index": "E",
        "name": "Circles of Waiting",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 963,
        "index": "D",
        "name": "Frequency of String",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 963,
        "index": "C",
        "name": "Cutting Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 963,
        "index": "B",
        "name": "Destruction of a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 963,
        "index": "A",
        "name": "Alternating Sum",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 962,
        "index": "G",
        "name": "Visible Black Areas",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "geometry",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 962,
        "index": "F",
        "name": "Simple Cycles Edges",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 962,
        "index": "E",
        "name": "Byteland, Berland and Disputed Cities",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 962,
        "index": "D",
        "name": "Merge Equals",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 962,
        "index": "C",
        "name": "Make a Square",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 962,
        "index": "B",
        "name": "Students in Railway Carriage",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 962,
        "index": "A",
        "name": "Equator",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 961,
        "index": "G",
        "name": "Partitions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 961,
        "index": "F",
        "name": "k-substrings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "hashing",
          "string suffix structures"
        ],
        "points": 2700
      },
      {
        "contestId": 961,
        "index": "E",
        "name": "Tufurama",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 961,
        "index": "D",
        "name": "Pair Of Lines",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 961,
        "index": "C",
        "name": "Chessboard",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 961,
        "index": "B",
        "name": "Lecture Sleep",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 961,
        "index": "A",
        "name": "Tetris",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 960,
        "index": "H",
        "name": "Santa's Gift",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 960,
        "index": "G",
        "name": "Bandit Blues",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 960,
        "index": "F",
        "name": "Pathwalks",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 960,
        "index": "E",
        "name": "Alternating Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "divide and conquer",
          "dp",
          "probabilities",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 960,
        "index": "D",
        "name": "Full Binary Tree Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 960,
        "index": "C",
        "name": "Subsequence Counting",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 960,
        "index": "B",
        "name": "Minimize the error",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 960,
        "index": "A",
        "name": "Check the string",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 959,
        "index": "F",
        "name": "Mahmoud and Ehab and yet another xor task",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 959,
        "index": "E",
        "name": "Mahmoud and Ehab and the xor-MST",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 959,
        "index": "C",
        "name": "Mahmoud and Ehab and the wrong algorithm",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 959,
        "index": "B",
        "name": "Mahmoud and Ehab and the message",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 959,
        "index": "A",
        "name": "Mahmoud and Ehab and the even-odd game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 958,
        "index": "F3",
        "name": "Lightsabers (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "fft"
        ],
        "points": 2600
      },
      {
        "contestId": 958,
        "index": "F2",
        "name": "Lightsabers (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 958,
        "index": "F1",
        "name": "Lightsabers (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 958,
        "index": "E3",
        "name": "Guard Duty (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 958,
        "index": "E2",
        "name": "Guard Duty (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 958,
        "index": "E1",
        "name": "Guard Duty (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 958,
        "index": "D2",
        "name": "Hyperspace Jump (hard)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 958,
        "index": "D1",
        "name": "Hyperspace Jump (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 958,
        "index": "C3",
        "name": "Encryption (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 958,
        "index": "C2",
        "name": "Encryption (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 958,
        "index": "C1",
        "name": "Encryption (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1200
      },
      {
        "contestId": 958,
        "index": "B2",
        "name": "Maximum Control (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 958,
        "index": "B1",
        "name": "Maximum Control (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 958,
        "index": "A3",
        "name": "Death Stars (hard)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 958,
        "index": "A2",
        "name": "Death Stars (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 958,
        "index": "A1",
        "name": "Death Stars (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 957,
        "index": "A",
        "name": "Tritonic Iridescence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 955,
        "index": "F",
        "name": "Heaps",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 955,
        "index": "E",
        "name": "Icicles",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 955,
        "index": "D",
        "name": "Scissors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 955,
        "index": "C",
        "name": "Sad powers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 955,
        "index": "B",
        "name": "Not simply beatiful strings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 955,
        "index": "A",
        "name": "Feed the cat",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 954,
        "index": "I",
        "name": "Yet Another String Matching Problem",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 954,
        "index": "H",
        "name": "Path Counting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 954,
        "index": "G",
        "name": "Castle Defense",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 954,
        "index": "F",
        "name": "Runner's Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 954,
        "index": "E",
        "name": "Water Taps",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 954,
        "index": "D",
        "name": "Fight Against Traffic",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 954,
        "index": "C",
        "name": "Matrix Walk",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 954,
        "index": "B",
        "name": "String Typing",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 954,
        "index": "A",
        "name": "Diagonal Walking",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 952,
        "index": "G",
        "name": "Puzzling Language",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2200
      },
      {
        "contestId": 952,
        "index": "F",
        "name": "2 + 2 != 4",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 952,
        "index": "E",
        "name": "Cheese Board",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 952,
        "index": "D",
        "name": "I'm Feeling Lucky!",
        "type": "PROGRAMMING",
        "tags": [
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 952,
        "index": "C",
        "name": "Ravioli Sort",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 952,
        "index": "B",
        "name": "A Map of the Cat",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "interactive"
        ],
        "points": 1900
      },
      {
        "contestId": 952,
        "index": "A",
        "name": "Quirky Quantifiers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 950,
        "index": "B",
        "name": "Intercepted Message",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 950,
        "index": "A",
        "name": "Left-handers, Right-handers and Ambidexters",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 949,
        "index": "F",
        "name": "Astronomy",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 949,
        "index": "E",
        "name": "Binary Cards",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2700
      },
      {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 949,
        "index": "C",
        "name": "Data Center Maintenance",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 949,
        "index": "B",
        "name": "A Leapfrog in the Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 949,
        "index": "A",
        "name": "Zebras",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 948,
        "index": "A",
        "name": "Protect Sheep",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 946,
        "index": "G",
        "name": "Almost Increasing Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 946,
        "index": "F",
        "name": "Fibonacci String Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 946,
        "index": "E",
        "name": "Largest Beautiful Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 946,
        "index": "D",
        "name": "Timetable",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 946,
        "index": "C",
        "name": "String Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 946,
        "index": "B",
        "name": "Weird Subtraction Process",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 946,
        "index": "A",
        "name": "Partition",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 940,
        "index": "F",
        "name": "Machine Learning",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 940,
        "index": "E",
        "name": "Cashback",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 940,
        "index": "D",
        "name": "Alena And The Heater",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 940,
        "index": "C",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 940,
        "index": "B",
        "name": "Our Tanya is Crying Out Loud",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 940,
        "index": "A",
        "name": "Points on the line",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 939,
        "index": "F",
        "name": "Cutlet",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 939,
        "index": "E",
        "name": "Maximize!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "ternary search",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 939,
        "index": "D",
        "name": "Love Rescue",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 939,
        "index": "C",
        "name": "Convenient For Everybody",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 939,
        "index": "B",
        "name": "Hamster Farm",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 939,
        "index": "A",
        "name": "Love Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 800
      },
      {
        "contestId": 938,
        "index": "G",
        "name": "Shortest Path Queries",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dsu",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 938,
        "index": "F",
        "name": "Erasing Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 938,
        "index": "E",
        "name": "Max History",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 938,
        "index": "D",
        "name": "Buy a Ticket",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 938,
        "index": "C",
        "name": "Constructing Tests",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms"
        ],
        "points": 1700
      },
      {
        "contestId": 938,
        "index": "B",
        "name": "Run For Your Prize",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 938,
        "index": "A",
        "name": "Word Correction",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 937,
        "index": "B",
        "name": "Vile Grasshoppers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 937,
        "index": "A",
        "name": "Olympiad",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 936,
        "index": "E",
        "name": "Iqea",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "divide and conquer",
          "dsu",
          "shortest paths",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 936,
        "index": "D",
        "name": "World of Tank",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 936,
        "index": "C",
        "name": "Lock Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 936,
        "index": "B",
        "name": "Sleepy Game",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 936,
        "index": "A",
        "name": "Save Energy!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 935,
        "index": "F",
        "name": "Fafa and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 935,
        "index": "E",
        "name": "Fafa and Ancient Mathematics",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 935,
        "index": "D",
        "name": "Fafa and Ancient Alphabet",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 935,
        "index": "C",
        "name": "Fifa and Fafa",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1600
      },
      {
        "contestId": 935,
        "index": "B",
        "name": "Fafa and the Gates",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 935,
        "index": "A",
        "name": "Fafa and his Company",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 934,
        "index": "B",
        "name": "A Prosperous Lot",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 934,
        "index": "A",
        "name": "A Compatible Pair",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "games"
        ],
        "points": 1400
      },
      {
        "contestId": 933,
        "index": "E",
        "name": "A Preponderant Reunion",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 933,
        "index": "D",
        "name": "A Creative Cutout",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 933,
        "index": "C",
        "name": "A Colourful Prospect",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 933,
        "index": "B",
        "name": "A Determined Cleanup",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 933,
        "index": "A",
        "name": "A Twisty Movement",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 932,
        "index": "G",
        "name": "Palindrome Partition",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "string suffix structures",
          "strings"
        ],
        "points": 2900
      },
      {
        "contestId": 932,
        "index": "F",
        "name": "Escape Through Leaf",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 932,
        "index": "E",
        "name": "Team Work",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 932,
        "index": "D",
        "name": "Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 932,
        "index": "C",
        "name": "Permutation Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 932,
        "index": "B",
        "name": "Recursive Queries",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar"
        ],
        "points": 1300
      },
      {
        "contestId": 932,
        "index": "A",
        "name": "Palindromic Supersequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 931,
        "index": "C",
        "name": "Laboratory Work",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 931,
        "index": "B",
        "name": "World Cup",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 931,
        "index": "A",
        "name": "Friends Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 930,
        "index": "E",
        "name": "Coins Exhibition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 930,
        "index": "D",
        "name": "Game with Tokens",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "games",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 930,
        "index": "C",
        "name": "Teodor is not a liar!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 930,
        "index": "B",
        "name": "Game with String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "probabilities",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 930,
        "index": "A",
        "name": "Peculiar apple-tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 929,
        "index": "D",
        "name": "\u041f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0435 \u0432\u0440\u0430\u0442\u0430",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 929,
        "index": "C",
        "name": "\u041a\u0440\u0430\u0441\u0438\u0432\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 929,
        "index": "B",
        "name": "\u041c\u0435\u0441\u0442\u0430 \u0432 \u0441\u0430\u043c\u043e\u043b\u0451\u0442\u0435",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 929,
        "index": "A",
        "name": "\u041f\u0440\u043e\u043a\u0430\u0442 \u0432\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434\u043e\u0432",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 928,
        "index": "D",
        "name": "Autocompletion",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 928,
        "index": "C",
        "name": "Dependency management",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 928,
        "index": "B",
        "name": "Chat",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 1400
      },
      {
        "contestId": 928,
        "index": "A",
        "name": "Login Verification",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 927,
        "index": "A",
        "name": "BuberPool Taxi Optimization",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive"
        ],
        "points": 2900
      },
      {
        "contestId": 926,
        "index": "J",
        "name": "Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 926,
        "index": "I",
        "name": "A Vital Problem",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 926,
        "index": "H",
        "name": "Endless Roses Most Beautiful",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 926,
        "index": "G",
        "name": "Large Bouquets",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 926,
        "index": "F",
        "name": "Mobile Communications",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 926,
        "index": "E",
        "name": "Merge Equal Elements",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 926,
        "index": "D",
        "name": "Choose Place",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 926,
        "index": "C",
        "name": "Is This a Zebra?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 926,
        "index": "B",
        "name": "Add Points",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 926,
        "index": "A",
        "name": "2-3-numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 925,
        "index": "F",
        "name": "Parametric Circulation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows"
        ],
        "points": 3100
      },
      {
        "contestId": 925,
        "index": "E",
        "name": "May Holidays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 925,
        "index": "D",
        "name": "Aztec Catacombs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 925,
        "index": "C",
        "name": "Big Secret",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 925,
        "index": "B",
        "name": "Resource Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 925,
        "index": "A",
        "name": "Stairs and Elevators",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1600
      },
      {
        "contestId": 924,
        "index": "F",
        "name": "Minimal Subset Difference",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 924,
        "index": "E",
        "name": "Wardrobe",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 924,
        "index": "D",
        "name": "Contact ATC",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 924,
        "index": "C",
        "name": "Riverside Curio",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 924,
        "index": "B",
        "name": "Three-level Laser",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 924,
        "index": "A",
        "name": "Mystical Mosaic",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 923,
        "index": "F",
        "name": "Public Service",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 923,
        "index": "E",
        "name": "Perpetual Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math",
          "matrices"
        ],
        "points": 3100
      },
      {
        "contestId": 923,
        "index": "D",
        "name": "Picking Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 923,
        "index": "C",
        "name": "Perfect Security",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 923,
        "index": "B",
        "name": "Producing Snow",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1600
      },
      {
        "contestId": 923,
        "index": "A",
        "name": "Primal Sport",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 922,
        "index": "F",
        "name": "Divisibility",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 922,
        "index": "E",
        "name": "Birds",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 922,
        "index": "D",
        "name": "Robot Vacuum Cleaner",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 922,
        "index": "C",
        "name": "Cave Painting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 922,
        "index": "B",
        "name": "Magic Forest",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 922,
        "index": "A",
        "name": "Cloning Toys",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 921,
        "index": "14",
        "name": "Labyrinth-14",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "13",
        "name": "Labyrinth-13",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "12",
        "name": "Labyrinth-12",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "11",
        "name": "Labyrinth-11",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "10",
        "name": "Labyrinth-10",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "09",
        "name": "Labyrinth-9",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "08",
        "name": "Labyrinth-8",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "07",
        "name": "Labyrinth-7",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "06",
        "name": "Labyrinth-6",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "05",
        "name": "Labyrinth-5",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "04",
        "name": "Labyrinth-4",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "03",
        "name": "Labyrinth-3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "02",
        "name": "Labyrinth-2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 921,
        "index": "01",
        "name": "Labyrinth-1",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 920,
        "index": "G",
        "name": "List Of Integers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 920,
        "index": "F",
        "name": "SUM and REPLACE",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dsu",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 920,
        "index": "E",
        "name": "Connected Components?",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 920,
        "index": "D",
        "name": "Tanks",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 920,
        "index": "C",
        "name": "Swap Adjacent Elements",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 920,
        "index": "B",
        "name": "Tea Queue",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 920,
        "index": "A",
        "name": "Water The Garden",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 919,
        "index": "F",
        "name": "A Game With Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 919,
        "index": "E",
        "name": "Congruence Equation",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 919,
        "index": "D",
        "name": "Substring",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 919,
        "index": "C",
        "name": "Seat Arrangements",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 919,
        "index": "B",
        "name": "Perfect Number",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "implementation",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 919,
        "index": "A",
        "name": "Supermarket",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 918,
        "index": "B",
        "name": "Radio Station",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 918,
        "index": "A",
        "name": "Eleven",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 917,
        "index": "E",
        "name": "Upside Down",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures",
          "strings",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 917,
        "index": "D",
        "name": "Stranger Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 917,
        "index": "C",
        "name": "Pollywog",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "matrices"
        ],
        "points": 2900
      },
      {
        "contestId": 917,
        "index": "B",
        "name": "MADMAX",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 917,
        "index": "A",
        "name": "The Monster",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 916,
        "index": "E",
        "name": "Jamie and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 916,
        "index": "D",
        "name": "Jamie and To-do List",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "interactive",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 916,
        "index": "C",
        "name": "Jamie and Interesting Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 916,
        "index": "B",
        "name": "Jamie and Binary Sequence (changed after round)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 916,
        "index": "A",
        "name": "Jamie and Alarm Snooze",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 915,
        "index": "G",
        "name": "Coprime Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 915,
        "index": "F",
        "name": "Imbalance Value of a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 915,
        "index": "E",
        "name": "Physical Education Lessons",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 915,
        "index": "D",
        "name": "Almost Acyclic Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 915,
        "index": "C",
        "name": "Permute Digits",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 915,
        "index": "B",
        "name": "Browser",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 915,
        "index": "A",
        "name": "Garden",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 914,
        "index": "H",
        "name": "Ember and Storm's Tree Game",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "games",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 914,
        "index": "G",
        "name": "Sum the Fibonacci",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "dp",
          "fft",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 914,
        "index": "F",
        "name": "Substrings in a String",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures",
          "string suffix structures",
          "strings"
        ],
        "points": 3000
      },
      {
        "contestId": 914,
        "index": "E",
        "name": "Palindromes in a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "divide and conquer",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 914,
        "index": "D",
        "name": "Bash and a Tough Math Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 914,
        "index": "C",
        "name": "Travelling Salesman and Special Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 914,
        "index": "B",
        "name": "Conan and Agasa play a Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 914,
        "index": "A",
        "name": "Perfect Squares",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 913,
        "index": "H",
        "name": "Don't Exceed",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 3400
      },
      {
        "contestId": 913,
        "index": "G",
        "name": "Power Substring",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 913,
        "index": "F",
        "name": "Strongly Connected Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "math",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 913,
        "index": "E",
        "name": "Logical Expression",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 913,
        "index": "D",
        "name": "Too Easy Problems",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 913,
        "index": "C",
        "name": "Party Lemonade",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 913,
        "index": "B",
        "name": "Christmas Spruce",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "trees"
        ],
        "points": 1200
      },
      {
        "contestId": 913,
        "index": "A",
        "name": "Modular Exponentiation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 912,
        "index": "E",
        "name": "Prime Gift",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "math",
          "meet-in-the-middle",
          "number theory",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 912,
        "index": "D",
        "name": "Fishes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "greedy",
          "probabilities",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 912,
        "index": "C",
        "name": "Perun, Ult!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 912,
        "index": "B",
        "name": "New Year's Eve",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 912,
        "index": "A",
        "name": "Tricky Alchemy",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 911,
        "index": "G",
        "name": "Mass Change Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 911,
        "index": "F",
        "name": "Tree Destruction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 911,
        "index": "E",
        "name": "Stack Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 911,
        "index": "D",
        "name": "Inversion Counting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 911,
        "index": "C",
        "name": "Three Garlands",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1400
      },
      {
        "contestId": 911,
        "index": "B",
        "name": "Two Cakes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 911,
        "index": "A",
        "name": "Nearest Minimums",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 910,
        "index": "B",
        "name": "Door Frames",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 910,
        "index": "A",
        "name": "The Way to Home",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 909,
        "index": "F",
        "name": "AND-permutations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 909,
        "index": "E",
        "name": "Coprocessor",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 909,
        "index": "D",
        "name": "Colorful Points",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 909,
        "index": "C",
        "name": "Python Indentation",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 909,
        "index": "B",
        "name": "Segments",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 909,
        "index": "A",
        "name": "Generate Login",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 908,
        "index": "H",
        "name": "New Year and Boolean Bridges",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 908,
        "index": "G",
        "name": "New Year and Original Order",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 908,
        "index": "F",
        "name": "New Year and Rainbow Roads",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 908,
        "index": "E",
        "name": "New Year and Entity Enumeration",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 908,
        "index": "D",
        "name": "New Year and Arbitrary Arrangement",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 908,
        "index": "C",
        "name": "New Year and Curling",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 908,
        "index": "B",
        "name": "New Year and Buggy Bot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 908,
        "index": "A",
        "name": "New Year and Counting Cards",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 907,
        "index": "B",
        "name": "Tic-Tac-Toe",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 907,
        "index": "A",
        "name": "Masha and Bears",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 906,
        "index": "E",
        "name": "Reverses",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "string suffix structures",
          "strings"
        ],
        "points": 3300
      },
      {
        "contestId": 906,
        "index": "D",
        "name": "Power Tower",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 906,
        "index": "C",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 906,
        "index": "B",
        "name": "Seating of Students",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 906,
        "index": "A",
        "name": "Shockers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 903,
        "index": "G",
        "name": "Yet Another Maxflow Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "flows",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 903,
        "index": "F",
        "name": "Clear The Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 903,
        "index": "E",
        "name": "Swapping Characters",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 903,
        "index": "D",
        "name": "Almost Difference",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 903,
        "index": "C",
        "name": "Boxes Packing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 903,
        "index": "B",
        "name": "The Modcrab",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 903,
        "index": "A",
        "name": "Hungry Student Problem",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 902,
        "index": "B",
        "name": "Coloring a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 902,
        "index": "A",
        "name": "Visiting a Friend",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 901,
        "index": "E",
        "name": "Cyclic Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 901,
        "index": "D",
        "name": "Weighting a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 901,
        "index": "C",
        "name": "Bipartite Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 901,
        "index": "B",
        "name": "GCD of Polynomials",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 901,
        "index": "A",
        "name": "Hashing Trees",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 900,
        "index": "E",
        "name": "Maximum Questions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 900,
        "index": "D",
        "name": "Unusual Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 900,
        "index": "C",
        "name": "Remove Extra One",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 900,
        "index": "B",
        "name": "Position in Fraction",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 900,
        "index": "A",
        "name": "Find Extra One",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 899,
        "index": "F",
        "name": "Letters Removing",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 899,
        "index": "E",
        "name": "Segments Removal",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "flows",
          "implementation",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 899,
        "index": "D",
        "name": "Shovel Sale",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 899,
        "index": "C",
        "name": "Dividing the numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 899,
        "index": "B",
        "name": "Months and Years",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 899,
        "index": "A",
        "name": "Splitting in Teams",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 898,
        "index": "F",
        "name": "Restoring the Expression",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "hashing",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 898,
        "index": "E",
        "name": "Squares and not squares",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 898,
        "index": "D",
        "name": "Alarm Clock",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 898,
        "index": "C",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 898,
        "index": "B",
        "name": "Proper Nutrition",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 898,
        "index": "A",
        "name": "Rounding",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 897,
        "index": "B",
        "name": "Chtholly's request",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 897,
        "index": "A",
        "name": "Scarborough Fair",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 896,
        "index": "E",
        "name": "Welcome home, Chtholly",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 3100
      },
      {
        "contestId": 896,
        "index": "D",
        "name": "Nephren Runs a Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 896,
        "index": "C",
        "name": "Willem, Chtholly and Seniorious",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 896,
        "index": "B",
        "name": "Ithea Plays With Chtholly",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "games",
          "greedy",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 896,
        "index": "A",
        "name": "Nephren gives a riddle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar"
        ],
        "points": 1700
      },
      {
        "contestId": 895,
        "index": "E",
        "name": "Eyes Closed",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 895,
        "index": "D",
        "name": "String Mark",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 895,
        "index": "C",
        "name": "Square Subsets",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 895,
        "index": "B",
        "name": "XK Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 895,
        "index": "A",
        "name": "Pizza Separation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 894,
        "index": "E",
        "name": "Ralph and Mushrooms",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 894,
        "index": "D",
        "name": "Ralph And His Tour in Binary Country",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 894,
        "index": "C",
        "name": "Marco and GCD Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 894,
        "index": "B",
        "name": "Ralph And His Magic Field",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 894,
        "index": "A",
        "name": "QAQ",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 800
      },
      {
        "contestId": 893,
        "index": "F",
        "name": "Subtree Minimum Query",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 893,
        "index": "E",
        "name": "Counting Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 893,
        "index": "C",
        "name": "Rumor",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 893,
        "index": "B",
        "name": "Beautiful Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 893,
        "index": "A",
        "name": "Chess For Three",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 892,
        "index": "B",
        "name": "Wrath",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 892,
        "index": "A",
        "name": "Greed",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 891,
        "index": "E",
        "name": "Lust",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "matrices"
        ],
        "points": 3000
      },
      {
        "contestId": 891,
        "index": "D",
        "name": "Sloth",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graph matchings",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 891,
        "index": "C",
        "name": "Envy",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 891,
        "index": "B",
        "name": "Gluttony",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 891,
        "index": "A",
        "name": "Pride",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 889,
        "index": "E",
        "name": "Mod Mod Mod",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 888,
        "index": "G",
        "name": "Xor-MST",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 888,
        "index": "F",
        "name": "Connecting Vertices",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 888,
        "index": "E",
        "name": "Maximum Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "meet-in-the-middle"
        ],
        "points": 1800
      },
      {
        "contestId": 888,
        "index": "D",
        "name": "Almost Identity Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 888,
        "index": "C",
        "name": "K-Dominant Character",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 888,
        "index": "B",
        "name": "Buggy Robot",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 888,
        "index": "A",
        "name": "Local Extrema",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 887,
        "index": "E",
        "name": "Little Brother",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "sortings"
        ],
        "points": 2800
      },
      {
        "contestId": 887,
        "index": "D",
        "name": "Ratings and Reality Shows",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 887,
        "index": "C",
        "name": "Solution for Cube",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 887,
        "index": "B",
        "name": "Cubes for Masha",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 887,
        "index": "A",
        "name": "Div. 64",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 886,
        "index": "F",
        "name": "Symmetric Projections",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 886,
        "index": "E",
        "name": "Maximum Element",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 886,
        "index": "D",
        "name": "Restoration of string",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 886,
        "index": "C",
        "name": "Petya and Catacombs",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 886,
        "index": "B",
        "name": "Vlad and Cafes",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1000
      },
      {
        "contestId": 886,
        "index": "A",
        "name": "ACM ICPC",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1000
      },
      {
        "contestId": 884,
        "index": "F",
        "name": "Anti-Palindromize",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 884,
        "index": "E",
        "name": "Binary Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "dsu"
        ],
        "points": 2500
      },
      {
        "contestId": 884,
        "index": "D",
        "name": "Boxes And Balls",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 884,
        "index": "C",
        "name": "Bertown Subway",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 884,
        "index": "B",
        "name": "Japanese Crosswords Strike Back",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 884,
        "index": "A",
        "name": "Book Reading",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 883,
        "index": "M",
        "name": "Quadcopter Competition",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 883,
        "index": "L",
        "name": "Berland.Taxi",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 883,
        "index": "K",
        "name": "Road Widening",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 883,
        "index": "J",
        "name": "Renovation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 883,
        "index": "I",
        "name": "Photo Processing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 883,
        "index": "H",
        "name": "Palindromic Cut",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 883,
        "index": "G",
        "name": "Orientation of Edges",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 883,
        "index": "F",
        "name": "Lost in Transliteration",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 883,
        "index": "E",
        "name": "Field of Wonders",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 883,
        "index": "D",
        "name": "Packmen Strike Back",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 883,
        "index": "C",
        "name": "Downloading B++",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 883,
        "index": "B",
        "name": "Berland Army",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 883,
        "index": "A",
        "name": "Automatic Door",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 879,
        "index": "B",
        "name": "Table Tennis",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 879,
        "index": "A",
        "name": "Borya's Diagnosis",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 3300
      },
      {
        "contestId": 878,
        "index": "D",
        "name": "Magic Breeding",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 2900
      },
      {
        "contestId": 878,
        "index": "C",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 878,
        "index": "B",
        "name": "Teams Formation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 878,
        "index": "A",
        "name": "Short Program",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 877,
        "index": "F",
        "name": "Ann and Books",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "flows",
          "hashing"
        ],
        "points": 2300
      },
      {
        "contestId": 877,
        "index": "E",
        "name": "Danil and a Part-time Job",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 877,
        "index": "D",
        "name": "Olya and Energy Drinks",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 877,
        "index": "C",
        "name": "Slava and tanks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 877,
        "index": "B",
        "name": "Nikita and string",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 877,
        "index": "A",
        "name": "Alex and broken contest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 876,
        "index": "B",
        "name": "Divisiblity of Differences",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 876,
        "index": "A",
        "name": "Trip For Meal",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 875,
        "index": "F",
        "name": "Royal Questions",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 875,
        "index": "E",
        "name": "Delivery Club",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 875,
        "index": "D",
        "name": "High Cry",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "combinatorics",
          "data structures",
          "divide and conquer"
        ],
        "points": 2200
      },
      {
        "contestId": 875,
        "index": "C",
        "name": "National Property",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 875,
        "index": "B",
        "name": "Sorting the Coins",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 875,
        "index": "A",
        "name": "Classroom Watch",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 873,
        "index": "F",
        "name": "Forbidden Indices",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "string suffix structures",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 873,
        "index": "E",
        "name": "Awards For Contestants",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 873,
        "index": "D",
        "name": "Merge Sort",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer"
        ],
        "points": 1800
      },
      {
        "contestId": 873,
        "index": "C",
        "name": "Strange Game On Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 873,
        "index": "B",
        "name": "Balanced Substring",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 873,
        "index": "A",
        "name": "Chores",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 871,
        "index": "E",
        "name": "Restore the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 870,
        "index": "F",
        "name": "Paths",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 870,
        "index": "E",
        "name": "Points, Lines and Ready-made Titles",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 870,
        "index": "D",
        "name": "Something with XOR Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "interactive",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 870,
        "index": "C",
        "name": "Maximum splitting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 870,
        "index": "B",
        "name": "Maximum of Maximums of Minimums",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 870,
        "index": "A",
        "name": "Search for Pretty Integers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 869,
        "index": "E",
        "name": "The Untended Antiquity",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing"
        ],
        "points": 2400
      },
      {
        "contestId": 869,
        "index": "D",
        "name": "The Overdosing Ubiquity",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 869,
        "index": "C",
        "name": "The Intriguing Obsession",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 869,
        "index": "B",
        "name": "The Eternal Immortality",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 869,
        "index": "A",
        "name": "The Artful Expedient",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 868,
        "index": "G",
        "name": "El Toll Caves",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 868,
        "index": "F",
        "name": "Yet Another Minimization Problem",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 868,
        "index": "E",
        "name": "Policeman and a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 868,
        "index": "D",
        "name": "Huge Strings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "implementation",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 868,
        "index": "C",
        "name": "Qualification Rounds",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 868,
        "index": "B",
        "name": "Race Against Time",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 868,
        "index": "A",
        "name": "Bark to Unlock",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 867,
        "index": "A",
        "name": "Between the Offices",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 865,
        "index": "G",
        "name": "Flowers and Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "matrices"
        ],
        "points": 3300
      },
      {
        "contestId": 865,
        "index": "F",
        "name": "Egg Roulette",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "divide and conquer",
          "math",
          "meet-in-the-middle"
        ],
        "points": 3300
      },
      {
        "contestId": 865,
        "index": "E",
        "name": "Hex Dyslexia",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "graphs"
        ],
        "points": 3300
      },
      {
        "contestId": 865,
        "index": "D",
        "name": "Buy Low Sell High",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 865,
        "index": "C",
        "name": "Gotta Go Fast",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 865,
        "index": "B",
        "name": "Ordering Pizza",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings",
          "ternary search"
        ],
        "points": 1900
      },
      {
        "contestId": 865,
        "index": "A",
        "name": "Save the problem!",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1400
      },
      {
        "contestId": 864,
        "index": "F",
        "name": "Cities Excursions",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 864,
        "index": "E",
        "name": "Fire",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 864,
        "index": "D",
        "name": "Make a Permutation!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 864,
        "index": "C",
        "name": "Bus",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 864,
        "index": "B",
        "name": "Polycarp and Letters",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 864,
        "index": "A",
        "name": "Fair Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 863,
        "index": "G",
        "name": "Graphic Settings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 863,
        "index": "F",
        "name": "Almost Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2200
      },
      {
        "contestId": 863,
        "index": "E",
        "name": "Turn Off The TV",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 863,
        "index": "D",
        "name": "Yet Another Array Queries Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 863,
        "index": "C",
        "name": "1-2-3",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 863,
        "index": "B",
        "name": "Kayaking",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 863,
        "index": "A",
        "name": "Quasi-palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 862,
        "index": "F",
        "name": "Mahmoud and Ehab and the final stage",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 2900
      },
      {
        "contestId": 862,
        "index": "E",
        "name": "Mahmoud and Ehab and the function",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 862,
        "index": "D",
        "name": "Mahmoud and Ehab and the binary string",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "divide and conquer",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 862,
        "index": "C",
        "name": "Mahmoud and Ehab and the xor",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 862,
        "index": "B",
        "name": "Mahmoud and Ehab and the bipartiteness",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 862,
        "index": "A",
        "name": "Mahmoud and Ehab and the MEX",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 860,
        "index": "E",
        "name": "Arkady and a Nobody-men",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 859,
        "index": "G",
        "name": "Circle of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 859,
        "index": "F",
        "name": "Ordering T-Shirts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 859,
        "index": "E",
        "name": "Desk Disorder",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 859,
        "index": "D",
        "name": "Third Month Insanity",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 859,
        "index": "C",
        "name": "Pie Rules",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 1500
      },
      {
        "contestId": 859,
        "index": "B",
        "name": "Lazy Security Guard",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 859,
        "index": "A",
        "name": "Declined Finalists",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 858,
        "index": "F",
        "name": "Wizard's Tour",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 858,
        "index": "E",
        "name": "Tests Renumeration",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 858,
        "index": "D",
        "name": "Polycarp's phone book",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 858,
        "index": "C",
        "name": "Did you mean...",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 858,
        "index": "B",
        "name": "Which floor?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 858,
        "index": "A",
        "name": "k-rounding",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 856,
        "index": "F",
        "name": "To Play or not to Play",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 856,
        "index": "E",
        "name": "Satellites",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 856,
        "index": "D",
        "name": "Masha and Cactus",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 856,
        "index": "C",
        "name": "Eleventh Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 856,
        "index": "B",
        "name": "Similar Words",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "strings",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 856,
        "index": "A",
        "name": "Set Theory",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 855,
        "index": "G",
        "name": "Harry Vs Voldemort",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 855,
        "index": "F",
        "name": "Nagini",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 855,
        "index": "E",
        "name": "Salazar Slytherin's Locket",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 855,
        "index": "D",
        "name": "Rowena Ravenclaw's Diadem",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 855,
        "index": "C",
        "name": "Helga Hufflepuff's Cup",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 855,
        "index": "B",
        "name": "Marvolo Gaunt's Ring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 855,
        "index": "A",
        "name": "Tom Riddle's Diary",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 854,
        "index": "B",
        "name": "Maxim Buys an Apartment",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 854,
        "index": "A",
        "name": "Fraction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 853,
        "index": "E",
        "name": "Lada Malina",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 3400
      },
      {
        "contestId": 853,
        "index": "D",
        "name": "Michael and Charging Stations",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 853,
        "index": "C",
        "name": "Boredom",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 853,
        "index": "B",
        "name": "Jury Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 853,
        "index": "A",
        "name": "Planning",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 852,
        "index": "I",
        "name": "Dating",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 852,
        "index": "H",
        "name": "Bob and stages",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 852,
        "index": "G",
        "name": "Bathroom terminal",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 852,
        "index": "F",
        "name": "Product transformation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 852,
        "index": "E",
        "name": "Casinos and travel",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 852,
        "index": "D",
        "name": "Exploration plan",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graph matchings",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 852,
        "index": "C",
        "name": "Property",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 852,
        "index": "B",
        "name": "Neural Network country",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2000
      },
      {
        "contestId": 852,
        "index": "A",
        "name": "Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 851,
        "index": "B",
        "name": "Arpa and an exam about geometry",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 851,
        "index": "A",
        "name": "Arpa and a research in Mexican wave",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 850,
        "index": "F",
        "name": "Rainbow Balls",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 850,
        "index": "E",
        "name": "Random Elections",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "divide and conquer",
          "fft",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 850,
        "index": "D",
        "name": "Tournament Construction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 850,
        "index": "C",
        "name": "Arpa and a game with Mojtaba",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "games"
        ],
        "points": 2200
      },
      {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 850,
        "index": "A",
        "name": "Five Dimensional Points",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 849,
        "index": "B",
        "name": "Tell Your World",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 1600
      },
      {
        "contestId": 849,
        "index": "A",
        "name": "Odds and Ends",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 848,
        "index": "E",
        "name": "Days of Floral Colours",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp",
          "fft",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 848,
        "index": "D",
        "name": "Shake It!",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "flows",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 848,
        "index": "C",
        "name": "Goodbye Souvenir",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2600
      },
      {
        "contestId": 848,
        "index": "B",
        "name": "Rooter's Song",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "geometry",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 848,
        "index": "A",
        "name": "From Y to Y",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 847,
        "index": "M",
        "name": "Weather Tomorrow",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 847,
        "index": "L",
        "name": "Berland SU Computer Network",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "hashing",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 847,
        "index": "K",
        "name": "Travel Cards",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 847,
        "index": "J",
        "name": "Students Initiation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 847,
        "index": "I",
        "name": "Noise Level",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 847,
        "index": "H",
        "name": "Load Testing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 847,
        "index": "G",
        "name": "University Classes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 847,
        "index": "F",
        "name": "Berland Elections",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 847,
        "index": "E",
        "name": "Packmen",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 847,
        "index": "D",
        "name": "Dog Show",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 847,
        "index": "C",
        "name": "Sum of Nestings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 847,
        "index": "B",
        "name": "Preparing for Merge Sort",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1600
      },
      {
        "contestId": 847,
        "index": "A",
        "name": "Union of Doubly Linked Lists",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 846,
        "index": "F",
        "name": "Random Query",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "probabilities",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 846,
        "index": "E",
        "name": "Chemistry in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 846,
        "index": "D",
        "name": "Monitor",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 846,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 846,
        "index": "B",
        "name": "Math Show",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 846,
        "index": "A",
        "name": "Curriculum Vitae",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 845,
        "index": "G",
        "name": "Shortest Path Problem?",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 845,
        "index": "F",
        "name": "Guards In The Storehouse",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 845,
        "index": "E",
        "name": "Fire in the City",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 845,
        "index": "D",
        "name": "Driving Test",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 845,
        "index": "C",
        "name": "Two TVs",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 845,
        "index": "B",
        "name": "Luba And The Ticket",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 845,
        "index": "A",
        "name": "Chess Tourney",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 844,
        "index": "B",
        "name": "Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 844,
        "index": "A",
        "name": "Diversity",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 843,
        "index": "E",
        "name": "Maximum Flow",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 843,
        "index": "D",
        "name": "Dynamic Shortest Path",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 3400
      },
      {
        "contestId": 843,
        "index": "C",
        "name": "Upgrading Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "math",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 843,
        "index": "B",
        "name": "Interactive LowerBound",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "interactive",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 843,
        "index": "A",
        "name": "Sorting by Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 842,
        "index": "E",
        "name": "Nikita and game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "divide and conquer",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 842,
        "index": "C",
        "name": "Ilya And The Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 842,
        "index": "B",
        "name": "Gleb And Pizza",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1100
      },
      {
        "contestId": 842,
        "index": "A",
        "name": "Kirill And The Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 841,
        "index": "B",
        "name": "Godsend",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 841,
        "index": "A",
        "name": "Generous Kefa",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 840,
        "index": "E",
        "name": "In a Trap",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 840,
        "index": "D",
        "name": "Destiny",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 840,
        "index": "C",
        "name": "On the Bench",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 840,
        "index": "B",
        "name": "Leha and another game about graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 840,
        "index": "A",
        "name": "Leha and Function",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 839,
        "index": "E",
        "name": "Mother of Dragons",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math",
          "meet-in-the-middle"
        ],
        "points": 2700
      },
      {
        "contestId": 839,
        "index": "D",
        "name": "Winter is here",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 839,
        "index": "C",
        "name": "Journey",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "probabilities",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 839,
        "index": "B",
        "name": "Game of the Rows",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 839,
        "index": "A",
        "name": "Arya and Bran",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 838,
        "index": "F",
        "name": "Expected Earnings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2800
      },
      {
        "contestId": 838,
        "index": "E",
        "name": "Convex Countour",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 838,
        "index": "D",
        "name": "Airplane Arrangements",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 838,
        "index": "C",
        "name": "Future Failure",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2800
      },
      {
        "contestId": 838,
        "index": "B",
        "name": "Diverging Directions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 838,
        "index": "A",
        "name": "Binary Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 837,
        "index": "G",
        "name": "Functions On The Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 837,
        "index": "F",
        "name": "Prefix Sums",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "math",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 837,
        "index": "E",
        "name": "Vasya's Function",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 837,
        "index": "D",
        "name": "Round Subset",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 837,
        "index": "C",
        "name": "Two Seals",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 837,
        "index": "B",
        "name": "Flag of Berland",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 837,
        "index": "A",
        "name": "Text Volume",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 835,
        "index": "F",
        "name": "Roads in the Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 835,
        "index": "E",
        "name": "The penguin's game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2400
      },
      {
        "contestId": 835,
        "index": "D",
        "name": "Palindromic characteristics",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "hashing",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 835,
        "index": "C",
        "name": "Star sky",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 835,
        "index": "B",
        "name": "The number on the board",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 835,
        "index": "A",
        "name": "Key races",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 834,
        "index": "B",
        "name": "The Festive Evening",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 834,
        "index": "A",
        "name": "The Useless Toy",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 833,
        "index": "E",
        "name": "Caramel Clouds",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "sortings"
        ],
        "points": 3400
      },
      {
        "contestId": 833,
        "index": "D",
        "name": "Red-Black Cobweb",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "implementation",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 833,
        "index": "C",
        "name": "Ever-Hungry Krakozyabra",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "greedy",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 833,
        "index": "B",
        "name": "The Bakery",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "dp",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 833,
        "index": "A",
        "name": "The Meaningless Game",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 832,
        "index": "E",
        "name": "Vasya and Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "matrices"
        ],
        "points": 2600
      },
      {
        "contestId": 832,
        "index": "D",
        "name": "Misha, Grisha and Underground",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 832,
        "index": "C",
        "name": "Strange Radiation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 832,
        "index": "B",
        "name": "Petya and Exam",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 832,
        "index": "A",
        "name": "Sasha and Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 831,
        "index": "C",
        "name": "Jury Marks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1700
      },
      {
        "contestId": 831,
        "index": "B",
        "name": "Keyboard Layouts",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 831,
        "index": "A",
        "name": "Unimodal Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 830,
        "index": "E",
        "name": "Perpetual Motion Machine",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "graphs",
          "implementation",
          "math",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 830,
        "index": "D",
        "name": "Singer House",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 830,
        "index": "C",
        "name": "Bamboo Partition",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 830,
        "index": "B",
        "name": "Cards Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 830,
        "index": "A",
        "name": "Office Keys",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 828,
        "index": "B",
        "name": "Black Square",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 828,
        "index": "A",
        "name": "Restaurant Tables",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 827,
        "index": "F",
        "name": "Dirty Arkady's Kitchen",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 3200
      },
      {
        "contestId": 827,
        "index": "E",
        "name": "Rusty String",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 827,
        "index": "D",
        "name": "Best Edge Weight",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 827,
        "index": "C",
        "name": "DNA Evolution",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 827,
        "index": "A",
        "name": "String Reconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 825,
        "index": "G",
        "name": "Tree Queries",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 825,
        "index": "F",
        "name": "String Compression",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 825,
        "index": "E",
        "name": "Minimal Labels",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 825,
        "index": "D",
        "name": "Suitable Replacement",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 825,
        "index": "C",
        "name": "Multi-judge Solving",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 825,
        "index": "B",
        "name": "Five-In-a-Row",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 825,
        "index": "A",
        "name": "Binary Protocol",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 822,
        "index": "F",
        "name": "Madness",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 822,
        "index": "E",
        "name": "Liar",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "hashing",
          "string suffix structures"
        ],
        "points": 2400
      },
      {
        "contestId": 822,
        "index": "D",
        "name": "My pretty girl Noora",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 822,
        "index": "C",
        "name": "Hacker, pack your bags!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 822,
        "index": "B",
        "name": "Crossword solving",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 822,
        "index": "A",
        "name": "I'm bored with life",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 821,
        "index": "E",
        "name": "Okabe and El Psy Kongroo",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2100
      },
      {
        "contestId": 821,
        "index": "D",
        "name": "Okabe and City",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 821,
        "index": "C",
        "name": "Okabe and Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 821,
        "index": "B",
        "name": "Okabe and Banana Trees",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 821,
        "index": "A",
        "name": "Okabe and Future Gadget Laboratory",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 820,
        "index": "B",
        "name": "Mister B and Angle in Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 820,
        "index": "A",
        "name": "Mister B and Book Reading",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 819,
        "index": "E",
        "name": "Mister B and Flight to the Moon",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 819,
        "index": "D",
        "name": "Mister B and Astronomers",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 819,
        "index": "C",
        "name": "Mister B and Beacons on Field",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 819,
        "index": "B",
        "name": "Mister B and PR Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 819,
        "index": "A",
        "name": "Mister B and Boring Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 818,
        "index": "G",
        "name": "Four Melodies",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 818,
        "index": "F",
        "name": "Level Generation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "number theory",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 818,
        "index": "D",
        "name": "Multicolored Cars",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 818,
        "index": "C",
        "name": "Sofa Thief",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 818,
        "index": "B",
        "name": "Permutation Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 818,
        "index": "A",
        "name": "Diplomas and Certificates",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 817,
        "index": "F",
        "name": "MEX Queries",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 817,
        "index": "E",
        "name": "Choosing The Commander",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 817,
        "index": "D",
        "name": "Imbalanced Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 817,
        "index": "C",
        "name": "Really Big Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 817,
        "index": "B",
        "name": "Makes And The Product",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 817,
        "index": "A",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 816,
        "index": "B",
        "name": "Karen and Coffee",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 816,
        "index": "A",
        "name": "Karen and Morning",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 815,
        "index": "E",
        "name": "Karen and Neighborhood",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "implementation"
        ],
        "points": 2900
      },
      {
        "contestId": 815,
        "index": "D",
        "name": "Karen and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "data structures",
          "geometry"
        ],
        "points": 2800
      },
      {
        "contestId": 815,
        "index": "C",
        "name": "Karen and Supermarket",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 815,
        "index": "B",
        "name": "Karen and Test",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 815,
        "index": "A",
        "name": "Karen and Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 814,
        "index": "E",
        "name": "An unavoidable detour for home",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 814,
        "index": "D",
        "name": "An overnight dance in discotheque",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "geometry",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 814,
        "index": "C",
        "name": "An impassioned circulation of affection",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "strings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 814,
        "index": "B",
        "name": "An express train to reveries",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 814,
        "index": "A",
        "name": "An abandoned sentiment from past",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 813,
        "index": "F",
        "name": "Bipartite Checking",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 813,
        "index": "E",
        "name": "Army Creation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 813,
        "index": "D",
        "name": "Two Melodies",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows"
        ],
        "points": 2600
      },
      {
        "contestId": 813,
        "index": "C",
        "name": "The Tag Game",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 813,
        "index": "B",
        "name": "The Golden Age",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 813,
        "index": "A",
        "name": "The Contest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 812,
        "index": "E",
        "name": "Sagheer and Apple Tree",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 812,
        "index": "D",
        "name": "Sagheer and Kindergarten",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 812,
        "index": "C",
        "name": "Sagheer and Nubian Market",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 812,
        "index": "B",
        "name": "Sagheer, the Hausmeister",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 812,
        "index": "A",
        "name": "Sagheer and Crossroads",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 811,
        "index": "E",
        "name": "Vladik and Entertaining Flags",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 811,
        "index": "D",
        "name": "Vladik and Favorite Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "interactive"
        ],
        "points": 2100
      },
      {
        "contestId": 811,
        "index": "C",
        "name": "Vladik and Memorable Trip",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 811,
        "index": "B",
        "name": "Vladik and Complicated Book",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 811,
        "index": "A",
        "name": "Vladik and Courtesy",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 810,
        "index": "B",
        "name": "Summer sell-off",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 810,
        "index": "A",
        "name": "Straight <<A>>",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 809,
        "index": "E",
        "name": "Surprise me!",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "math",
          "number theory",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 809,
        "index": "D",
        "name": "Hitchhiking in the Baltic States",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 809,
        "index": "C",
        "name": "Find a car",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 809,
        "index": "B",
        "name": "Glad to see you!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 2200
      },
      {
        "contestId": 809,
        "index": "A",
        "name": "Do you want a date?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 808,
        "index": "G",
        "name": "Anthem of Berland",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 808,
        "index": "F",
        "name": "Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 808,
        "index": "E",
        "name": "Selling Souvenirs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "ternary search"
        ],
        "points": 2300
      },
      {
        "contestId": 808,
        "index": "D",
        "name": "Array Division",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 808,
        "index": "C",
        "name": "Tea Party",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 808,
        "index": "B",
        "name": "Average Sleep Time",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 808,
        "index": "A",
        "name": "Lucky Year",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 807,
        "index": "B",
        "name": "T-Shirt Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 807,
        "index": "A",
        "name": "Is it rated?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 805,
        "index": "B",
        "name": "3-palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 805,
        "index": "A",
        "name": "Fake NP",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 804,
        "index": "F",
        "name": "Fake bullions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "graphs",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 804,
        "index": "E",
        "name": "The same permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3100
      },
      {
        "contestId": 804,
        "index": "D",
        "name": "Expected diameter of a tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dfs and similar",
          "dp",
          "sortings",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 804,
        "index": "C",
        "name": "Ice cream coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 804,
        "index": "B",
        "name": "Minimum number of steps",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 804,
        "index": "A",
        "name": "Find Amir",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 803,
        "index": "G",
        "name": "Periodic RMQ Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 803,
        "index": "F",
        "name": "Coprime Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 803,
        "index": "E",
        "name": "Roma and Poker",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 803,
        "index": "D",
        "name": "Magazine Ad",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 803,
        "index": "C",
        "name": "Maximal GCD",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 803,
        "index": "B",
        "name": "Distances to Zero",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1200
      },
      {
        "contestId": 803,
        "index": "A",
        "name": "Maximal Binary Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1400
      },
      {
        "contestId": 802,
        "index": "O",
        "name": "April Fools' Problem (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "flows"
        ],
        "points": 2900
      },
      {
        "contestId": 802,
        "index": "N",
        "name": "April Fools' Problem (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 802,
        "index": "M",
        "name": "April Fools' Problem (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 802,
        "index": "L",
        "name": "Send the Fool Further! (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 802,
        "index": "K",
        "name": "Send the Fool Further! (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 802,
        "index": "J",
        "name": "Send the Fool Further! (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 802,
        "index": "I",
        "name": "Fake News (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures"
        ],
        "points": 2300
      },
      {
        "contestId": 802,
        "index": "H",
        "name": "Fake News (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 802,
        "index": "G",
        "name": "Fake News (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 802,
        "index": "F",
        "name": "Marmots (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 802,
        "index": "E",
        "name": "Marmots (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 802,
        "index": "D",
        "name": "Marmots (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 802,
        "index": "C",
        "name": "Heidi and Library (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2600
      },
      {
        "contestId": 802,
        "index": "B",
        "name": "Heidi and Library (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 802,
        "index": "A",
        "name": "Heidi and Library (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 801,
        "index": "B",
        "name": "Valued Keys",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 801,
        "index": "A",
        "name": "Vicious Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1100
      },
      {
        "contestId": 799,
        "index": "G",
        "name": "Cut the pie",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "geometry"
        ],
        "points": 3500
      },
      {
        "contestId": 799,
        "index": "F",
        "name": "Beautiful fountains rows",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3500
      },
      {
        "contestId": 799,
        "index": "E",
        "name": "Aquarium decoration",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 799,
        "index": "D",
        "name": "Field expansion",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 2100
      },
      {
        "contestId": 799,
        "index": "C",
        "name": "Fountains",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 799,
        "index": "B",
        "name": "T-shirt buying",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 799,
        "index": "A",
        "name": "Carrot Cakes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 798,
        "index": "E",
        "name": "Mike and code of a permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 798,
        "index": "D",
        "name": "Mike and distribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 798,
        "index": "C",
        "name": "Mike and gcd problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 798,
        "index": "B",
        "name": "Mike and strings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 798,
        "index": "A",
        "name": "Mike and palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 797,
        "index": "F",
        "name": "Mice and Holes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 797,
        "index": "E",
        "name": "Array Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 797,
        "index": "D",
        "name": "Broken BST",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar"
        ],
        "points": 2100
      },
      {
        "contestId": 797,
        "index": "C",
        "name": "Minimal string",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 797,
        "index": "B",
        "name": "Odd sum",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 797,
        "index": "A",
        "name": "k-Factorization",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 796,
        "index": "F",
        "name": "Sequence Recovery",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 796,
        "index": "E",
        "name": "Exam Cheating",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 796,
        "index": "D",
        "name": "Police Stations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 796,
        "index": "C",
        "name": "Bank Hacking",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 796,
        "index": "B",
        "name": "Find The Bone",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 796,
        "index": "A",
        "name": "Buying A House",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 794,
        "index": "G",
        "name": "Replace All",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 794,
        "index": "F",
        "name": "Leha and security system",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 794,
        "index": "E",
        "name": "Choosing Carrot",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 794,
        "index": "D",
        "name": "Labelling Cities",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "hashing"
        ],
        "points": 2400
      },
      {
        "contestId": 794,
        "index": "C",
        "name": "Naming Company",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 794,
        "index": "B",
        "name": "Cutting Carrot",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 794,
        "index": "A",
        "name": "Bank Robbery",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 793,
        "index": "G",
        "name": "Oleg and chess",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "flows",
          "graph matchings"
        ],
        "points": 3400
      },
      {
        "contestId": 793,
        "index": "F",
        "name": "Julia the snail",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 793,
        "index": "E",
        "name": "Problem of offices",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 793,
        "index": "D",
        "name": "Presents in Bankopolis",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 793,
        "index": "C",
        "name": "Mice problem",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 793,
        "index": "B",
        "name": "Igor and his way to work",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 793,
        "index": "A",
        "name": "Oleg and shares",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 792,
        "index": "F",
        "name": "Mages and Monsters",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 3100
      },
      {
        "contestId": 792,
        "index": "E",
        "name": "Colored Balls",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 792,
        "index": "D",
        "name": "Paths in a Complete Binary Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 792,
        "index": "C",
        "name": "Divide by Three",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 792,
        "index": "B",
        "name": "Counting-out Rhyme",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 792,
        "index": "A",
        "name": "New Bus Route",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 791,
        "index": "A",
        "name": "Bear and Big Brother",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 789,
        "index": "B",
        "name": "Masha and geometric depression",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 789,
        "index": "A",
        "name": "Anastasia and pebbles",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 788,
        "index": "E",
        "name": "New task",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2900
      },
      {
        "contestId": 788,
        "index": "D",
        "name": "Finding lines",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 788,
        "index": "C",
        "name": "The Great Mixing",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 788,
        "index": "B",
        "name": "Weird journey",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 788,
        "index": "A",
        "name": "Functions again",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 787,
        "index": "B",
        "name": "Not Afraid",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 787,
        "index": "A",
        "name": "The Monster",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 786,
        "index": "E",
        "name": "ALT",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "flows",
          "graphs",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 786,
        "index": "D",
        "name": "Rap God",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "hashing",
          "strings",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 786,
        "index": "C",
        "name": "Till I Collapse",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2400
      },
      {
        "contestId": 786,
        "index": "B",
        "name": "Legacy",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 786,
        "index": "A",
        "name": "Berzerk",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 785,
        "index": "E",
        "name": "Anton and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 785,
        "index": "D",
        "name": "Anton and School - 2",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 785,
        "index": "C",
        "name": "Anton and Fairy Tale",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 785,
        "index": "B",
        "name": "Anton and Classes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 785,
        "index": "A",
        "name": "Anton and Polyhedrons",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 784,
        "index": "G",
        "name": "BF Calculator",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 784,
        "index": "F",
        "name": "Crunching Numbers Just for You",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 784,
        "index": "E",
        "name": "Twisted Circuit",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 784,
        "index": "D",
        "name": "Touchy-Feely Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 784,
        "index": "C",
        "name": "INTERCALC",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 784,
        "index": "B",
        "name": "Kids' Riddle",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 784,
        "index": "A",
        "name": "Numbers Joke",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 780,
        "index": "H",
        "name": "Intranet of Buses",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "implementation",
          "two pointers"
        ],
        "points": 3100
      },
      {
        "contestId": 780,
        "index": "G",
        "name": "Andryusha and Nervous Barriers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 780,
        "index": "F",
        "name": "Axel and Marston in Bitland",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 780,
        "index": "E",
        "name": "Underground Lab",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 780,
        "index": "D",
        "name": "Innokenty and a Football League",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "graphs",
          "greedy",
          "implementation",
          "shortest paths",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 780,
        "index": "C",
        "name": "Andryusha and Colored Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 780,
        "index": "B",
        "name": "The Meeting Place Cannot Be Changed",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1600
      },
      {
        "contestId": 780,
        "index": "A",
        "name": "Andryusha and Socks",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 779,
        "index": "C",
        "name": "Dishonest Sellers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 779,
        "index": "B",
        "name": "Weird Rounding",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 779,
        "index": "A",
        "name": "Pupils Redistribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 778,
        "index": "E",
        "name": "Selling Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 778,
        "index": "D",
        "name": "Parquet Re-laying",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2700
      },
      {
        "contestId": 778,
        "index": "C",
        "name": "Peterson Polyglot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dsu",
          "hashing",
          "strings",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 778,
        "index": "B",
        "name": "Bitwise Formula",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "expression parsing",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 778,
        "index": "A",
        "name": "String Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 777,
        "index": "E",
        "name": "Hanoi Factory",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 777,
        "index": "D",
        "name": "Cloud of Hashtags",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 777,
        "index": "C",
        "name": "Alyona and Spreadsheet",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 777,
        "index": "B",
        "name": "Game of Credit Cards",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 777,
        "index": "A",
        "name": "Shell Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 776,
        "index": "G",
        "name": "Sherlock and the Encrypted Data",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 776,
        "index": "F",
        "name": "Sherlock's bet to Moriarty",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "divide and conquer",
          "geometry",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 776,
        "index": "E",
        "name": "The Holmes Children",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 776,
        "index": "D",
        "name": "The Door Problem",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 776,
        "index": "C",
        "name": "Molly's Chemicals",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 776,
        "index": "B",
        "name": "Sherlock and his girlfriend",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 776,
        "index": "A",
        "name": "A Serial Killer",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 775,
        "index": "A",
        "name": "University Schedule",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2900
      },
      {
        "contestId": 774,
        "index": "L",
        "name": "Bars",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search"
        ],
        "points": 2000
      },
      {
        "contestId": 774,
        "index": "K",
        "name": "Stepan and Vowels",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 774,
        "index": "J",
        "name": "Stepan's Series",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 774,
        "index": "I",
        "name": "Composing Of String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 774,
        "index": "H",
        "name": "Repairing Of String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ],
        "points": 2200
      },
      {
        "contestId": 774,
        "index": "G",
        "name": "Perfectionist Arkadiy",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 774,
        "index": "F",
        "name": "Pens And Days Of Week",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 774,
        "index": "E",
        "name": "Big Number and Remainder",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 774,
        "index": "D",
        "name": "Lie or Truth",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 774,
        "index": "C",
        "name": "Maximum Number",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 774,
        "index": "B",
        "name": "Significant Cups",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 774,
        "index": "A",
        "name": "Amusement Park",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 773,
        "index": "F",
        "name": "Test Data Generation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp",
          "fft",
          "math",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 773,
        "index": "E",
        "name": "Blog Post Rating",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 773,
        "index": "D",
        "name": "Perishable Roads",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 773,
        "index": "C",
        "name": "Prairie Partition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 773,
        "index": "B",
        "name": "Dynamic Problem Scoring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 773,
        "index": "A",
        "name": "Success Rate",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 772,
        "index": "E",
        "name": "Verifying Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "divide and conquer",
          "interactive",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 772,
        "index": "D",
        "name": "Varying Kibibits",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 772,
        "index": "C",
        "name": "Vulnerable Kerbals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 772,
        "index": "B",
        "name": "Volatile Kite",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 772,
        "index": "A",
        "name": "Voltage Keepsake",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 771,
        "index": "F",
        "name": "Bear and Isomorphic Points",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "two pointers"
        ],
        "points": 3300
      },
      {
        "contestId": 771,
        "index": "E",
        "name": "Bear and Rectangle Strips",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 771,
        "index": "D",
        "name": "Bear and Company",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 771,
        "index": "C",
        "name": "Bear and Tree Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 771,
        "index": "A",
        "name": "Bear and Friendship Condition",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 770,
        "index": "D",
        "name": "Draw Brackets!",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 770,
        "index": "C",
        "name": "Online Courses In BSU",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 770,
        "index": "B",
        "name": "Maximize Sum of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 770,
        "index": "A",
        "name": "New Password",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 769,
        "index": "D",
        "name": "k-Interesting Pairs Of Integers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "bitmasks",
          "brute force",
          "meet-in-the-middle"
        ],
        "points": 1700
      },
      {
        "contestId": 769,
        "index": "C",
        "name": "Cycle In Maze",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 769,
        "index": "B",
        "name": "News About Credit",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 769,
        "index": "A",
        "name": "Year of University Entrance",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 768,
        "index": "G",
        "name": "The Winds of Winter",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 768,
        "index": "F",
        "name": "Barrels and boxes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 768,
        "index": "E",
        "name": "Game of Stones",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "games"
        ],
        "points": 2100
      },
      {
        "contestId": 768,
        "index": "D",
        "name": "Jon and Orbs",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 768,
        "index": "C",
        "name": "Jon Snow and his Favourite Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 768,
        "index": "B",
        "name": "Code For 1",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "divide and conquer"
        ],
        "points": 1600
      },
      {
        "contestId": 768,
        "index": "A",
        "name": "Oath of the Night's Watch",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 767,
        "index": "E",
        "name": "Change-free",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 767,
        "index": "D",
        "name": "Cartons of milk",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 767,
        "index": "C",
        "name": "Garland",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 767,
        "index": "B",
        "name": "The Queue",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 767,
        "index": "A",
        "name": "Snacktower",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 766,
        "index": "E",
        "name": "Mahmoud and a xor trip",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 766,
        "index": "D",
        "name": "Mahmoud and a Dictionary",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "dsu",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 766,
        "index": "C",
        "name": "Mahmoud and a Message",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 766,
        "index": "B",
        "name": "Mahmoud and a Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "greedy",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 766,
        "index": "A",
        "name": "Mahmoud and Longest Uncommon Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 765,
        "index": "G",
        "name": "Math, math everywhere",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 765,
        "index": "F",
        "name": "Souvenirs",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 765,
        "index": "E",
        "name": "Tree Folding",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 765,
        "index": "D",
        "name": "Artsem and Saunders",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 765,
        "index": "C",
        "name": "Table Tennis Game 2",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 765,
        "index": "B",
        "name": "Code obfuscation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 765,
        "index": "A",
        "name": "Neverending competitions",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 764,
        "index": "B",
        "name": "Timofey and cubes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 764,
        "index": "A",
        "name": "Taymyr is calling you",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 763,
        "index": "E",
        "name": "Timofey and our friends animals",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu"
        ],
        "points": 2900
      },
      {
        "contestId": 763,
        "index": "D",
        "name": "Timofey and a flat tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "hashing",
          "shortest paths",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 763,
        "index": "C",
        "name": "Timofey and remoduling",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 763,
        "index": "B",
        "name": "Timofey and rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 763,
        "index": "A",
        "name": "Timofey and a tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 762,
        "index": "F",
        "name": "Tree nesting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 762,
        "index": "E",
        "name": "Radio stations",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 762,
        "index": "D",
        "name": "Maximum path",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 762,
        "index": "C",
        "name": "Two strings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "hashing",
          "strings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 762,
        "index": "B",
        "name": "USB vs. PS/2",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 762,
        "index": "A",
        "name": "k-th divisor",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 761,
        "index": "F",
        "name": "Dasha and Photos",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 2600
      },
      {
        "contestId": 761,
        "index": "E",
        "name": "Dasha and Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 761,
        "index": "D",
        "name": "Dasha and Very Difficult Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 761,
        "index": "C",
        "name": "Dasha and Password",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 761,
        "index": "B",
        "name": "Dasha and friends",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 761,
        "index": "A",
        "name": "Dasha and Stairs",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 760,
        "index": "B",
        "name": "Frodo and pillows",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 760,
        "index": "A",
        "name": "Petr and a calendar",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 758,
        "index": "F",
        "name": "Geometrical Progression",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 758,
        "index": "E",
        "name": "Broken Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 758,
        "index": "D",
        "name": "Ability To Convert",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "math",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 758,
        "index": "B",
        "name": "Blown Garland",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 758,
        "index": "A",
        "name": "Holiday Of Equality",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 757,
        "index": "G",
        "name": "Can Bash Save the Day?",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "graphs",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 757,
        "index": "F",
        "name": "Team Rocket Rises Again",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 2800
      },
      {
        "contestId": 757,
        "index": "E",
        "name": "Bash Plays with Functions",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 757,
        "index": "D",
        "name": "Felicity's Big Secret Revealed",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 757,
        "index": "C",
        "name": "Felicity is Coming!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "sortings",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 757,
        "index": "B",
        "name": "Bash's Big Day",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 757,
        "index": "A",
        "name": "Gotta Catch Em' All!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 756,
        "index": "F",
        "name": "Long number",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "math",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 756,
        "index": "E",
        "name": "Byteland coins",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 756,
        "index": "D",
        "name": "Bacterial Melee",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "string suffix structures"
        ],
        "points": 2400
      },
      {
        "contestId": 756,
        "index": "C",
        "name": "Nikita and stack",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 756,
        "index": "B",
        "name": "Travel Card",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 756,
        "index": "A",
        "name": "Pavel and barbecue",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar"
        ],
        "points": 1700
      },
      {
        "contestId": 755,
        "index": "G",
        "name": "PolandBall and Many Other Balls",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp",
          "fft",
          "math",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 755,
        "index": "F",
        "name": "PolandBall and Gifts",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 755,
        "index": "E",
        "name": "PolandBall and White-Red graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 755,
        "index": "D",
        "name": "PolandBall and Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 755,
        "index": "C",
        "name": "PolandBall and Forest",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "interactive",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 755,
        "index": "B",
        "name": "PolandBall and Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "games",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 755,
        "index": "A",
        "name": "PolandBall and Hypothesis",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 754,
        "index": "E",
        "name": "Dasha and cyclic table",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "fft",
          "strings",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 754,
        "index": "D",
        "name": "Fedor and coupons",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 754,
        "index": "C",
        "name": "Vladik and chat",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp",
          "implementation",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 754,
        "index": "B",
        "name": "Ilya and tic-tac-toe game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 754,
        "index": "A",
        "name": "Lesha and array splitting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 753,
        "index": "C",
        "name": "Interactive Bulls and Cows (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2500
      },
      {
        "contestId": 753,
        "index": "B",
        "name": "Interactive Bulls and Cows (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 753,
        "index": "A",
        "name": "Santa Claus and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 750,
        "index": "H",
        "name": "New Year and Snowy Grid",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "interactive"
        ],
        "points": 3500
      },
      {
        "contestId": 750,
        "index": "G",
        "name": "New Year and Binary Tree Paths",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 750,
        "index": "F",
        "name": "New Year and Finding Roots",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "interactive",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 750,
        "index": "E",
        "name": "New Year and Old Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "matrices"
        ],
        "points": 2600
      },
      {
        "contestId": 750,
        "index": "D",
        "name": "New Year and Fireworks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "dp",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 750,
        "index": "C",
        "name": "New Year and Rating",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 750,
        "index": "B",
        "name": "New Year and North Pole",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 750,
        "index": "A",
        "name": "New Year and Hurry",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 749,
        "index": "E",
        "name": "Inversions After Shuffle",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 749,
        "index": "D",
        "name": "Leaving Auction",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 749,
        "index": "C",
        "name": "Voting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 749,
        "index": "B",
        "name": "Parallelogram is Back",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "geometry"
        ],
        "points": 1200
      },
      {
        "contestId": 749,
        "index": "A",
        "name": "Bachgold Problem",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 748,
        "index": "F",
        "name": "Santa Clauses and a Soccer Championship",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 748,
        "index": "E",
        "name": "Santa Claus and Tangerines",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 748,
        "index": "D",
        "name": "Santa Claus and a Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 748,
        "index": "C",
        "name": "Santa Claus and Robot",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 748,
        "index": "B",
        "name": "Santa Claus and Keyboard Check",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 748,
        "index": "A",
        "name": "Santa Claus and a Place in a Class",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 747,
        "index": "F",
        "name": "Igor and Interesting Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 747,
        "index": "E",
        "name": "Comments",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "expression parsing",
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 747,
        "index": "D",
        "name": "Winter Is Coming",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 747,
        "index": "C",
        "name": "Servers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 747,
        "index": "B",
        "name": "Mammoth's Genome Decoding",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 747,
        "index": "A",
        "name": "Display Size",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 746,
        "index": "G",
        "name": "New Roads",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 746,
        "index": "F",
        "name": "Music in Car",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 746,
        "index": "E",
        "name": "Numbers Exchange",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 746,
        "index": "D",
        "name": "Green and Black Tea",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 746,
        "index": "C",
        "name": "Tram",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 746,
        "index": "B",
        "name": "Decoding",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 746,
        "index": "A",
        "name": "Compote",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 745,
        "index": "B",
        "name": "Hongcow Solves A Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 745,
        "index": "A",
        "name": "Hongcow Learns the Cyclic Shift",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 744,
        "index": "E",
        "name": "Hongcow Masters the Cyclic Shift",
        "type": "PROGRAMMING",
        "tags": [
          "strings",
          "two pointers"
        ],
        "points": 3200
      },
      {
        "contestId": 744,
        "index": "D",
        "name": "Hongcow Draws a Circle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3200
      },
      {
        "contestId": 744,
        "index": "C",
        "name": "Hongcow Buys a Deck of Cards",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 744,
        "index": "B",
        "name": "Hongcow's Game",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "interactive"
        ],
        "points": 1900
      },
      {
        "contestId": 744,
        "index": "A",
        "name": "Hongcow Builds A Nation",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 743,
        "index": "E",
        "name": "Vladik and cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 743,
        "index": "D",
        "name": "Chloe and pleasant prizes",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 743,
        "index": "C",
        "name": "Vladik and fractions",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 743,
        "index": "B",
        "name": "Chloe and the sequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 743,
        "index": "A",
        "name": "Vladik and flights",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 742,
        "index": "B",
        "name": "Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 742,
        "index": "A",
        "name": "Arpa\u2019s hard exam and Mehrdad\u2019s naive cheat",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 741,
        "index": "E",
        "name": "Arpa\u2019s abnormal DNA and Mehrdad\u2019s deep interest",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures"
        ],
        "points": 3400
      },
      {
        "contestId": 741,
        "index": "D",
        "name": "Arpa\u2019s letter-marked tree and Mehrdad\u2019s Dokhtar-kosh paths",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 741,
        "index": "C",
        "name": "Arpa\u2019s overnight party and Mehrdad\u2019s silent entering",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 741,
        "index": "B",
        "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu"
        ],
        "points": 1600
      },
      {
        "contestId": 741,
        "index": "A",
        "name": "Arpa's loud Owf and Mehrdad's evil plan",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 740,
        "index": "B",
        "name": "Alyona and flowers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1200
      },
      {
        "contestId": 740,
        "index": "A",
        "name": "Alyona and copybooks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 739,
        "index": "E",
        "name": "Gosha is hunting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "flows",
          "math",
          "probabilities",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 739,
        "index": "D",
        "name": "Recover a functional graph",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings"
        ],
        "points": 3400
      },
      {
        "contestId": 739,
        "index": "C",
        "name": "Alyona and towers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 739,
        "index": "B",
        "name": "Alyona and a tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 739,
        "index": "A",
        "name": "Alyona and mex",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 737,
        "index": "F",
        "name": "Dirty plates",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 737,
        "index": "E",
        "name": "Tanya is 5!",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings",
          "graphs",
          "greedy",
          "schedules"
        ],
        "points": 3300
      },
      {
        "contestId": 736,
        "index": "E",
        "name": "Chess Championship",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "greedy",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 736,
        "index": "D",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 2800
      },
      {
        "contestId": 735,
        "index": "E",
        "name": "Ostap and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 735,
        "index": "D",
        "name": "Taxes",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 735,
        "index": "C",
        "name": "Tennis Championship",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 735,
        "index": "B",
        "name": "Urbanization",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 735,
        "index": "A",
        "name": "Ostap and Grasshopper",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 734,
        "index": "F",
        "name": "Anton and School",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 734,
        "index": "E",
        "name": "Anton and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 734,
        "index": "D",
        "name": "Anton and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 734,
        "index": "C",
        "name": "Anton and Making Potions",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 734,
        "index": "B",
        "name": "Anton and Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 734,
        "index": "A",
        "name": "Anton and Danik",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 733,
        "index": "F",
        "name": "Drivers Dissatisfaction",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 733,
        "index": "E",
        "name": "Sleep in Class",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "math",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 733,
        "index": "D",
        "name": "Kostya the Sculptor",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing"
        ],
        "points": 1600
      },
      {
        "contestId": 733,
        "index": "C",
        "name": "Epidemic in Monstropolis",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 733,
        "index": "B",
        "name": "Parade",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 733,
        "index": "A",
        "name": "Grasshopper And the String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 732,
        "index": "F",
        "name": "Tourist Reform",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 732,
        "index": "E",
        "name": "Sockets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 732,
        "index": "D",
        "name": "Exams",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 732,
        "index": "C",
        "name": "Sanatorium",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 732,
        "index": "B",
        "name": "Cormen --- The Best Friend Of a Man",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 732,
        "index": "A",
        "name": "Buy a Shovel",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 731,
        "index": "F",
        "name": "Video Cards",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 731,
        "index": "E",
        "name": "Funny Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2200
      },
      {
        "contestId": 731,
        "index": "D",
        "name": "80-th Level Archeology",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 731,
        "index": "C",
        "name": "Socks",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 731,
        "index": "B",
        "name": "Coupons and Discounts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 731,
        "index": "A",
        "name": "Night at the Museum",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 730,
        "index": "L",
        "name": "Expression Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 730,
        "index": "K",
        "name": "Roads Orientation Problem",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3200
      },
      {
        "contestId": 730,
        "index": "J",
        "name": "Bottles",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 730,
        "index": "I",
        "name": "Olympiad in Programming and Sports",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "graphs",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 730,
        "index": "H",
        "name": "Delete Them",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 730,
        "index": "G",
        "name": "Car Repair Shop",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 730,
        "index": "F",
        "name": "Ber Patio",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 730,
        "index": "E",
        "name": "Award Ceremony",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 730,
        "index": "D",
        "name": "Running Over The Bridges",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 730,
        "index": "C",
        "name": "Bulmart",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar"
        ],
        "points": 2100
      },
      {
        "contestId": 730,
        "index": "B",
        "name": "Minimum and Maximum",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive"
        ],
        "points": 1800
      },
      {
        "contestId": 730,
        "index": "A",
        "name": "Toda 2",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 729,
        "index": "F",
        "name": "Financiers Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 729,
        "index": "E",
        "name": "Subordinates",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 729,
        "index": "D",
        "name": "Sea Battle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 729,
        "index": "C",
        "name": "Road to Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 729,
        "index": "B",
        "name": "Spotlights",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 729,
        "index": "A",
        "name": "Interview with Oleg",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 727,
        "index": "F",
        "name": "Polycarp's problems",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 727,
        "index": "E",
        "name": "Games on a CD",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 727,
        "index": "D",
        "name": "T-shirts Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 727,
        "index": "C",
        "name": "Guess the Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 727,
        "index": "B",
        "name": "Bill Total Value",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 727,
        "index": "A",
        "name": "Transformation: from A to B",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 725,
        "index": "G",
        "name": "Messages on a Tree",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3300
      },
      {
        "contestId": 725,
        "index": "F",
        "name": "Family Photos",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 725,
        "index": "E",
        "name": "Too Much Money",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 725,
        "index": "D",
        "name": "Contest Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 725,
        "index": "C",
        "name": "Hidden Word",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 725,
        "index": "B",
        "name": "Food on the Plane",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 725,
        "index": "A",
        "name": "Jumping Ball",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 724,
        "index": "G",
        "name": "Xor-matic Number of the Graph",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "graphs",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 724,
        "index": "F",
        "name": "Uniformly Branched Trees",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 724,
        "index": "E",
        "name": "Goods transportation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 724,
        "index": "D",
        "name": "Dense Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 724,
        "index": "C",
        "name": "Ray Tracing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "implementation",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 724,
        "index": "B",
        "name": "Batch Sort",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 724,
        "index": "A",
        "name": "Checking the Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 723,
        "index": "F",
        "name": "st-Spanning Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 723,
        "index": "E",
        "name": "One-Way Reform",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "flows",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 723,
        "index": "D",
        "name": "Lakes in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 723,
        "index": "C",
        "name": "Polycarp at the Radio",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 723,
        "index": "B",
        "name": "Text Document Analysis",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 723,
        "index": "A",
        "name": "The New Year: Meeting Friends",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 722,
        "index": "F",
        "name": "Cyclic Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "data structures",
          "implementation",
          "number theory",
          "two pointers"
        ],
        "points": 2800
      },
      {
        "contestId": 722,
        "index": "E",
        "name": "Research Rover",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 722,
        "index": "D",
        "name": "Generating Sets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 722,
        "index": "C",
        "name": "Destroying Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 1600
      },
      {
        "contestId": 722,
        "index": "B",
        "name": "Verse Pattern",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 722,
        "index": "A",
        "name": "Broken Clock",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 721,
        "index": "E",
        "name": "Road to Home",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 721,
        "index": "C",
        "name": "Journey",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 721,
        "index": "B",
        "name": "Passwords",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 721,
        "index": "A",
        "name": "One-dimensional Japanese Crossword",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 720,
        "index": "F",
        "name": "Array Covering",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 720,
        "index": "E",
        "name": "Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 3100
      },
      {
        "contestId": 720,
        "index": "D",
        "name": "Slalom",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "sortings"
        ],
        "points": 3100
      },
      {
        "contestId": 720,
        "index": "C",
        "name": "Homework",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3100
      },
      {
        "contestId": 720,
        "index": "B",
        "name": "Cactusophobia",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "flows"
        ],
        "points": 2400
      },
      {
        "contestId": 720,
        "index": "A",
        "name": "Closing ceremony",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 719,
        "index": "B",
        "name": "Anatoly and Cockroaches",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 719,
        "index": "A",
        "name": "Vitya in the Countryside",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 718,
        "index": "E",
        "name": "Matvey's Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "graphs"
        ],
        "points": 3300
      },
      {
        "contestId": 718,
        "index": "D",
        "name": "Andrew and Chemistry",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 718,
        "index": "C",
        "name": "Sasha and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "matrices"
        ],
        "points": 2300
      },
      {
        "contestId": 718,
        "index": "A",
        "name": "Efim and Strange Grade",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 717,
        "index": "I",
        "name": "Cowboy Beblop at his computer",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2800
      },
      {
        "contestId": 717,
        "index": "H",
        "name": "Pokermon League challenge",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 717,
        "index": "G",
        "name": "Underfail",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2400
      },
      {
        "contestId": 717,
        "index": "F",
        "name": "Heroes of Making Magic III",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 717,
        "index": "E",
        "name": "Paint it really, really dark gray",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 1900
      },
      {
        "contestId": 717,
        "index": "D",
        "name": "Dexterina\u2019s Lab",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "matrices",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 717,
        "index": "C",
        "name": "Potions Homework",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 717,
        "index": "B",
        "name": "R3D3\u2019s Summer Adventure",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 717,
        "index": "A",
        "name": "Festival Organization",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 716,
        "index": "B",
        "name": "Complete the Word",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 716,
        "index": "A",
        "name": "Crazy Computer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 715,
        "index": "E",
        "name": "Complete the Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "graphs",
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 715,
        "index": "D",
        "name": "Create a Maze",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3100
      },
      {
        "contestId": 715,
        "index": "C",
        "name": "Digit Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dsu",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 715,
        "index": "B",
        "name": "Complete The Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 715,
        "index": "A",
        "name": "Plus and Square Root",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 714,
        "index": "B",
        "name": "Filya and Homework",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 714,
        "index": "A",
        "name": "Meeting of Old Friends",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 713,
        "index": "E",
        "name": "Sonya Partymaker",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 3300
      },
      {
        "contestId": 713,
        "index": "D",
        "name": "Animals and Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 713,
        "index": "C",
        "name": "Sonya and Problem Wihtout a Legend",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 713,
        "index": "B",
        "name": "Searching Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2200
      },
      {
        "contestId": 713,
        "index": "A",
        "name": "Sonya and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 712,
        "index": "E",
        "name": "Memory and Casinos",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 712,
        "index": "D",
        "name": "Memory and Scores",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 712,
        "index": "C",
        "name": "Memory and De-Evolution",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 712,
        "index": "B",
        "name": "Memory and Trident",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 712,
        "index": "A",
        "name": "Memory and Crow",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 711,
        "index": "E",
        "name": "ZS and The Birthday Paradox",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 711,
        "index": "D",
        "name": "Directed Roads",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 711,
        "index": "C",
        "name": "Coloring Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 711,
        "index": "B",
        "name": "Chris and Magic Square",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 711,
        "index": "A",
        "name": "Bus to Udayland",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 710,
        "index": "F",
        "name": "String Set Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "hashing",
          "interactive",
          "string suffix structures",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 710,
        "index": "E",
        "name": "Generate a String",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 710,
        "index": "D",
        "name": "Two Arithmetic Progressions",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 710,
        "index": "C",
        "name": "Magic Odd Square",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 710,
        "index": "B",
        "name": "Optimal Point on a Line",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 710,
        "index": "A",
        "name": "King Moves",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 709,
        "index": "B",
        "name": "Checkpoints",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 709,
        "index": "A",
        "name": "Juicer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 708,
        "index": "E",
        "name": "Student's Camp",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 708,
        "index": "D",
        "name": "Incorrect Flow",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2900
      },
      {
        "contestId": 708,
        "index": "C",
        "name": "Centroids",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 708,
        "index": "B",
        "name": "Recover the String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 708,
        "index": "A",
        "name": "Letters Cyclic Shift",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 707,
        "index": "E",
        "name": "Garlands",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 707,
        "index": "D",
        "name": "Persistent Bookcase",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dfs and similar",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 707,
        "index": "C",
        "name": "Pythagorean Triples",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 707,
        "index": "B",
        "name": "Bakery",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1300
      },
      {
        "contestId": 707,
        "index": "A",
        "name": "Brain's Photos",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 706,
        "index": "E",
        "name": "Working routine",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 706,
        "index": "D",
        "name": "Vasiliy's Multiset",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 706,
        "index": "C",
        "name": "Hard problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 706,
        "index": "B",
        "name": "Interesting drink",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 706,
        "index": "A",
        "name": "Beru-taxi",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 705,
        "index": "B",
        "name": "Spider Man",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 705,
        "index": "A",
        "name": "Hulk",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 704,
        "index": "E",
        "name": "Iron Man",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 704,
        "index": "D",
        "name": "Captain America",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 704,
        "index": "C",
        "name": "Black Widow",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 704,
        "index": "B",
        "name": "Ant Man",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 704,
        "index": "A",
        "name": "Thor",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 703,
        "index": "E",
        "name": "Mishka and Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 703,
        "index": "D",
        "name": "Mishka and Interesting sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 703,
        "index": "C",
        "name": "Chris and Road",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 703,
        "index": "B",
        "name": "Mishka and trip",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 703,
        "index": "A",
        "name": "Mishka and Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 702,
        "index": "F",
        "name": "T-Shirts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 702,
        "index": "E",
        "name": "Analysis of Pathes in Functional Graph",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 702,
        "index": "D",
        "name": "Road to Post Office",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 702,
        "index": "C",
        "name": "Cellular Network",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 702,
        "index": "B",
        "name": "Powers of Two",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 702,
        "index": "A",
        "name": "Maximum Increase",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 701,
        "index": "C",
        "name": "They Are Everywhere",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "strings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 701,
        "index": "B",
        "name": "Cells Not Under Attack",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 701,
        "index": "A",
        "name": "Cards",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 700,
        "index": "E",
        "name": "Cool Slogans",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures",
          "strings"
        ],
        "points": 3300
      },
      {
        "contestId": 700,
        "index": "D",
        "name": "Huffman Coding on Segment",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 700,
        "index": "C",
        "name": "Break Up",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 700,
        "index": "B",
        "name": "Connecting Universities",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 700,
        "index": "A",
        "name": "As Fast As Possible",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 699,
        "index": "B",
        "name": "One Bomb",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 699,
        "index": "A",
        "name": "Launch of Collider",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 698,
        "index": "F",
        "name": "Coprime Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "number theory"
        ],
        "points": 3000
      },
      {
        "contestId": 698,
        "index": "E",
        "name": "Cron",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2800
      },
      {
        "contestId": 698,
        "index": "D",
        "name": "Limak and Shooting Points",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 698,
        "index": "C",
        "name": "LRU",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 698,
        "index": "B",
        "name": "Fix a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 698,
        "index": "A",
        "name": "Vacations",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1400
      },
      {
        "contestId": 697,
        "index": "B",
        "name": "Barnicle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 697,
        "index": "A",
        "name": "Pineapple Incident",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 696,
        "index": "F",
        "name": "...Dary!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "two pointers"
        ],
        "points": 3300
      },
      {
        "contestId": 696,
        "index": "E",
        "name": "...Wait for it...",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 696,
        "index": "D",
        "name": "Legen...",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "matrices",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 696,
        "index": "C",
        "name": "PLEASE",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation",
          "math",
          "matrices"
        ],
        "points": 2000
      },
      {
        "contestId": 696,
        "index": "B",
        "name": "Puzzles",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 696,
        "index": "A",
        "name": "Lorenzo Von Matterhorn",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 691,
        "index": "F",
        "name": "Couple Cover",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 691,
        "index": "E",
        "name": "Xor-sequences",
        "type": "PROGRAMMING",
        "tags": [
          "matrices"
        ],
        "points": 1900
      },
      {
        "contestId": 691,
        "index": "D",
        "name": "Swaps in Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 691,
        "index": "C",
        "name": "Exponential notation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 691,
        "index": "B",
        "name": "s-palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 691,
        "index": "A",
        "name": "Fashion in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 690,
        "index": "F3",
        "name": "Tree of Life (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 690,
        "index": "F2",
        "name": "Tree of Life (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "hashing",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 690,
        "index": "F1",
        "name": "Tree of Life (easy)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 690,
        "index": "E2",
        "name": "Photographs (II)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 690,
        "index": "E1",
        "name": "Photographs (I)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 690,
        "index": "D3",
        "name": "The Wall (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 690,
        "index": "D2",
        "name": "The Wall (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1800
      },
      {
        "contestId": 690,
        "index": "D1",
        "name": "The Wall (easy)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1200
      },
      {
        "contestId": 690,
        "index": "C3",
        "name": "Brain Network (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 690,
        "index": "C2",
        "name": "Brain Network (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 690,
        "index": "C1",
        "name": "Brain Network (easy)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 690,
        "index": "B3",
        "name": "Recover Polygon (hard)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 690,
        "index": "B2",
        "name": "Recover Polygon (medium)",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 690,
        "index": "B1",
        "name": "Recover Polygon (easy)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 690,
        "index": "A3",
        "name": "Collective Mindsets (hard)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 690,
        "index": "A2",
        "name": "Collective Mindsets (medium)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 690,
        "index": "A1",
        "name": "Collective Mindsets (easy)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1100
      },
      {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "geometry",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 689,
        "index": "D",
        "name": "Friends and Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 689,
        "index": "C",
        "name": "Mike and Chocolate Thieves",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 689,
        "index": "B",
        "name": "Mike and Shortcuts",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 689,
        "index": "A",
        "name": "Mike and Cellphone",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 688,
        "index": "B",
        "name": "Lovely Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 688,
        "index": "A",
        "name": "Opponents",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 687,
        "index": "E",
        "name": "TOF",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2900
      },
      {
        "contestId": 687,
        "index": "D",
        "name": "Dividing Kingdom II",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dsu",
          "graphs",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 687,
        "index": "C",
        "name": "The Values You Can Make",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 687,
        "index": "B",
        "name": "Remainders Game",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 687,
        "index": "A",
        "name": "NP-Hard Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 686,
        "index": "B",
        "name": "Little Robber Girl's Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 686,
        "index": "A",
        "name": "Free Ice Cream",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 685,
        "index": "E",
        "name": "Travelling Through the Snow Queen's Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "divide and conquer",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 685,
        "index": "D",
        "name": "Kay and Eternity",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 685,
        "index": "C",
        "name": "Optimal Point",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 685,
        "index": "B",
        "name": "Kay and Snowflake",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 685,
        "index": "A",
        "name": "Robbers' watch",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 683,
        "index": "J",
        "name": "The Hero with Bombs",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 3000
      },
      {
        "contestId": 683,
        "index": "I",
        "name": "Loader",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2500
      },
      {
        "contestId": 683,
        "index": "H",
        "name": "Exchange of Books",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 683,
        "index": "G",
        "name": "The Fraction",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 683,
        "index": "F",
        "name": "Reformat the String",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 683,
        "index": "E",
        "name": "Hammer throwing",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 683,
        "index": "D",
        "name": "Chocolate Bar",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 683,
        "index": "C",
        "name": "Symmetric Difference",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 683,
        "index": "B",
        "name": "The Teacher of Physical Education",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 683,
        "index": "A",
        "name": "The Check of the Point",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "geometry"
        ],
        "points": 1200
      },
      {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 682,
        "index": "D",
        "name": "Alyona and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 682,
        "index": "C",
        "name": "Alyona and the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 682,
        "index": "B",
        "name": "Alyona and Mex",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 682,
        "index": "A",
        "name": "Alyona and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 681,
        "index": "E",
        "name": "Runaway to a Shadow",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 681,
        "index": "D",
        "name": "Gifts by the List",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 681,
        "index": "C",
        "name": "Heap Operations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 681,
        "index": "B",
        "name": "Economy Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 681,
        "index": "A",
        "name": "A Good Contest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 680,
        "index": "B",
        "name": "Bear and Finding Criminals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 680,
        "index": "A",
        "name": "Bear and Five Cards",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 679,
        "index": "E",
        "name": "Bear and Bad Powers of 42",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 679,
        "index": "D",
        "name": "Bear and Chase",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation",
          "math",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 679,
        "index": "C",
        "name": "Bear and Square Grid",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 679,
        "index": "B",
        "name": "Bear and Tower of Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 679,
        "index": "A",
        "name": "Bear and Prime 100",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 678,
        "index": "F",
        "name": "Lena and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 678,
        "index": "E",
        "name": "Another Sith Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 678,
        "index": "D",
        "name": "Iterated Linear Function",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 678,
        "index": "C",
        "name": "Joty and Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 678,
        "index": "B",
        "name": "The Same Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 678,
        "index": "A",
        "name": "Johny Likes Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 677,
        "index": "E",
        "name": "Vanya and Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 677,
        "index": "D",
        "name": "Vanya and Treasure",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 677,
        "index": "C",
        "name": "Vanya and Label",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 677,
        "index": "B",
        "name": "Vanya and Food Processor",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 677,
        "index": "A",
        "name": "Vanya and Fence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 676,
        "index": "E",
        "name": "The Last Fight Between Human and AI",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 676,
        "index": "D",
        "name": "Theseus and labyrinth",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 676,
        "index": "C",
        "name": "Vasya and String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "strings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 676,
        "index": "B",
        "name": "Pyramid of Glasses",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 676,
        "index": "A",
        "name": "Nicholas and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 675,
        "index": "E",
        "name": "Trains and Statistic",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 675,
        "index": "D",
        "name": "Tree Construction",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 675,
        "index": "C",
        "name": "Money Transfers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 675,
        "index": "B",
        "name": "Restoring Painting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 675,
        "index": "A",
        "name": "Infinite Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 673,
        "index": "B",
        "name": "Problems for Round",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 673,
        "index": "A",
        "name": "Bear and Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 672,
        "index": "B",
        "name": "Different is Good",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 672,
        "index": "A",
        "name": "Summer Camp",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 671,
        "index": "E",
        "name": "Organizing a Race",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3300
      },
      {
        "contestId": 671,
        "index": "D",
        "name": "Roads in Yusland",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 671,
        "index": "C",
        "name": "Ultimate Weirdness of an Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 671,
        "index": "B",
        "name": "Robin Hood",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 671,
        "index": "A",
        "name": "Recycling Bottles",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 670,
        "index": "F",
        "name": "Restore a Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 670,
        "index": "E",
        "name": "Correct Bracket Sequence Editor",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 670,
        "index": "D2",
        "name": "Magic Powder - 2",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 670,
        "index": "D1",
        "name": "Magic Powder - 1",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 670,
        "index": "C",
        "name": "Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 670,
        "index": "B",
        "name": "Game of Robots",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 670,
        "index": "A",
        "name": "Holidays",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 669,
        "index": "A",
        "name": "Little Artem and Presents",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 667,
        "index": "B",
        "name": "Coat of Anticubism",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry"
        ],
        "points": 1100
      },
      {
        "contestId": 667,
        "index": "A",
        "name": "Pouring Rain",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 666,
        "index": "E",
        "name": "Forensic Examination",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures"
        ],
        "points": 3100
      },
      {
        "contestId": 666,
        "index": "D",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 666,
        "index": "C",
        "name": "Codeword",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 666,
        "index": "A",
        "name": "Reberland Linguistics",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 665,
        "index": "F",
        "name": "Four Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 665,
        "index": "E",
        "name": "Beautiful Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "strings",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 665,
        "index": "D",
        "name": "Simple Subset",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 665,
        "index": "C",
        "name": "Simple Strings",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 665,
        "index": "B",
        "name": "Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 665,
        "index": "A",
        "name": "Buses Between Cities",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 664,
        "index": "A",
        "name": "Complicated GCD",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 663,
        "index": "A",
        "name": "Rebus",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "expression parsing",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 662,
        "index": "E",
        "name": "To Hack or not to Hack",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 662,
        "index": "D",
        "name": "International Olympiad",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 662,
        "index": "C",
        "name": "Binary Table",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "divide and conquer",
          "dp",
          "fft",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 662,
        "index": "B",
        "name": "Graph Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 662,
        "index": "A",
        "name": "Gambling Nim",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math",
          "matrices",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 661,
        "index": "H",
        "name": "Rotate Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2400
      },
      {
        "contestId": 661,
        "index": "G",
        "name": "Hungarian Notation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2200
      },
      {
        "contestId": 661,
        "index": "F",
        "name": "Primes in Interval",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 661,
        "index": "E",
        "name": "Divisibility Check",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 661,
        "index": "D",
        "name": "Maximal Difference",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 661,
        "index": "C",
        "name": "Array Sum",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 661,
        "index": "B",
        "name": "Seasons",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 661,
        "index": "A",
        "name": "Lazy Caterer Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1300
      },
      {
        "contestId": 660,
        "index": "F",
        "name": "Bear and Bowling 4",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "geometry",
          "ternary search"
        ],
        "points": 2500
      },
      {
        "contestId": 660,
        "index": "E",
        "name": "Different Subsets For All Tuples",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 660,
        "index": "D",
        "name": "Number of Parallelograms",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1900
      },
      {
        "contestId": 660,
        "index": "C",
        "name": "Hard Process",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 660,
        "index": "B",
        "name": "Seating On Bus",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 660,
        "index": "A",
        "name": "Co-prime Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 659,
        "index": "G",
        "name": "Fence Divercity",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 659,
        "index": "F",
        "name": "Polycarp and Hay",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 659,
        "index": "E",
        "name": "New Reform",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 659,
        "index": "D",
        "name": "Bicycle Race",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 659,
        "index": "C",
        "name": "Tanya and Toys",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 659,
        "index": "B",
        "name": "Qualifying Contest",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 659,
        "index": "A",
        "name": "Round House",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 658,
        "index": "A",
        "name": "Bear and Reverse Radewoosh",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 656,
        "index": "G",
        "name": "You're a Professional",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 656,
        "index": "F",
        "name": "Ace It!",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 656,
        "index": "E",
        "name": "Out of Controls",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 656,
        "index": "D",
        "name": "Rosetta Problem",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 656,
        "index": "C",
        "name": "Without Text",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 656,
        "index": "B",
        "name": "Scrambled",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 656,
        "index": "A",
        "name": "Da Vinci Powers",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 653,
        "index": "G",
        "name": "Move by Prime",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 3100
      },
      {
        "contestId": 653,
        "index": "F",
        "name": "Paper task",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 653,
        "index": "E",
        "name": "Bear and Forgotten Tree 2",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 653,
        "index": "D",
        "name": "Delivery Bears",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 653,
        "index": "C",
        "name": "Bear and Up-Down",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 653,
        "index": "B",
        "name": "Bear and Compressing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 653,
        "index": "A",
        "name": "Bear and Three Balls",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 652,
        "index": "F",
        "name": "Ants on a Circle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 652,
        "index": "E",
        "name": "Pursuit For Artifacts",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 652,
        "index": "D",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 652,
        "index": "C",
        "name": "Foe Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "sortings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 652,
        "index": "B",
        "name": "z-sort",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 652,
        "index": "A",
        "name": "Gabriel and Caterpillar",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 651,
        "index": "B",
        "name": "Beautiful Paintings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 651,
        "index": "A",
        "name": "Joysticks",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 650,
        "index": "E",
        "name": "Clockwork Bomb",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "greedy",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 650,
        "index": "D",
        "name": "Zip-line",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "hashing"
        ],
        "points": 2600
      },
      {
        "contestId": 650,
        "index": "C",
        "name": "Table Compression",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 650,
        "index": "B",
        "name": "Image Preview",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 650,
        "index": "A",
        "name": "Watchmen",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 645,
        "index": "G",
        "name": "Armistice Area Apportionment",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 3200
      },
      {
        "contestId": 645,
        "index": "F",
        "name": "Cowslip Collections",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 645,
        "index": "E",
        "name": "Intellectual Inquiry",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 645,
        "index": "D",
        "name": "Robot Rapping Results Report",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 645,
        "index": "C",
        "name": "Enduring Exodus",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 645,
        "index": "B",
        "name": "Mischievous Mess Makers",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 645,
        "index": "A",
        "name": "Amity Assessment",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 644,
        "index": "C",
        "name": "Hostname Aliases",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "data structures",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 644,
        "index": "B",
        "name": "Processing Queries",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "data structures",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 644,
        "index": "A",
        "name": "Parliament of Berland",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 643,
        "index": "G",
        "name": "Choosing Ads",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 643,
        "index": "F",
        "name": "Bears and Juice",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "meet-in-the-middle"
        ],
        "points": 2900
      },
      {
        "contestId": 643,
        "index": "E",
        "name": "Bear and Destroying Subtrees",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 643,
        "index": "D",
        "name": "Bearish Fanpages",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 643,
        "index": "C",
        "name": "Levels and Regions",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 643,
        "index": "B",
        "name": "Bear and Two Paths",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 643,
        "index": "A",
        "name": "Bear and Colors",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 641,
        "index": "G",
        "name": "Little Artem and Graph",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 641,
        "index": "F",
        "name": "Little Artem and 2-SAT",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 641,
        "index": "E",
        "name": "Little Artem and Time Machine",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 641,
        "index": "D",
        "name": "Little Artem and Random Variable",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 641,
        "index": "C",
        "name": "Little Artem and Dance",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 641,
        "index": "B",
        "name": "Little Artem and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 641,
        "index": "A",
        "name": "Little Artem and Grasshopper",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 639,
        "index": "F",
        "name": "Bear and Chemistry",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 639,
        "index": "E",
        "name": "Bear and Paradox",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2800
      },
      {
        "contestId": 639,
        "index": "D",
        "name": "Bear and Contribution",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 639,
        "index": "C",
        "name": "Bear and Polynomials",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 639,
        "index": "B",
        "name": "Bear and Forgotten Tree 3",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 639,
        "index": "A",
        "name": "Bear and Displayed Friends",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 638,
        "index": "D",
        "name": "Three-dimensional Turtle Super Computer",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 638,
        "index": "C",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 638,
        "index": "B",
        "name": "Making Genome in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 638,
        "index": "A",
        "name": "Home Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 637,
        "index": "D",
        "name": "Running with Obstacles",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 637,
        "index": "C",
        "name": "Promocodes with Mistakes",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 637,
        "index": "B",
        "name": "Chat Order",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "constructive algorithms",
          "data structures",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 637,
        "index": "A",
        "name": "Voting for Photos",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 635,
        "index": "A",
        "name": "Orchestra",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 634,
        "index": "A",
        "name": "Island Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 633,
        "index": "H",
        "name": "Fibonacci-ish II",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 3100
      },
      {
        "contestId": 633,
        "index": "G",
        "name": "Yash And Trees",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "dfs and similar",
          "math",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 633,
        "index": "F",
        "name": "The Chocolate Spree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 633,
        "index": "E",
        "name": "Startup Funding",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "probabilities",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 633,
        "index": "D",
        "name": "Fibonacci-ish",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "hashing",
          "implementation",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 633,
        "index": "C",
        "name": "Spy Syndrome 2",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "hashing",
          "implementation",
          "sortings",
          "string suffix structures",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 633,
        "index": "B",
        "name": "A Trivial Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 633,
        "index": "A",
        "name": "Ebony and Ivory",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 632,
        "index": "F",
        "name": "Magic Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "graphs",
          "matrices",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 632,
        "index": "E",
        "name": "Thief in a Shop",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "fft",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 632,
        "index": "D",
        "name": "Longest Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 632,
        "index": "C",
        "name": "The Smallest String Concatenation",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 632,
        "index": "B",
        "name": "Alice, Bob, Two Teams",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1400
      },
      {
        "contestId": 632,
        "index": "A",
        "name": "Grandma Laura and Apples",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1200
      },
      {
        "contestId": 631,
        "index": "E",
        "name": "Product Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 631,
        "index": "D",
        "name": "Messenger",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "implementation",
          "string suffix structures",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 631,
        "index": "C",
        "name": "Report",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 631,
        "index": "B",
        "name": "Print Check",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 631,
        "index": "A",
        "name": "Interview",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 630,
        "index": "R",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 630,
        "index": "Q",
        "name": "Pyramids",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 630,
        "index": "P",
        "name": "Area of a Star",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 630,
        "index": "O",
        "name": "Arrow",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 630,
        "index": "N",
        "name": "Forecast",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 630,
        "index": "M",
        "name": "Turn",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 630,
        "index": "L",
        "name": "Cracking the Code",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 630,
        "index": "K",
        "name": "Indivisibility",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 630,
        "index": "J",
        "name": "Divisibility",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 630,
        "index": "I",
        "name": "Parking Lot",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 630,
        "index": "H",
        "name": "Benches",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 630,
        "index": "G",
        "name": "Challenge Pennants",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 630,
        "index": "F",
        "name": "Selection of Personnel",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 630,
        "index": "E",
        "name": "A rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 630,
        "index": "D",
        "name": "Hexagons!",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 630,
        "index": "C",
        "name": "Lucky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 630,
        "index": "B",
        "name": "Moore's Law",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 630,
        "index": "A",
        "name": "Again Twenty Five!",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 629,
        "index": "E",
        "name": "Famil Door and Roads",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dfs and similar",
          "dp",
          "probabilities",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 629,
        "index": "D",
        "name": "Babaei and Birthday Cake",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 629,
        "index": "C",
        "name": "Famil Door and Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 629,
        "index": "B",
        "name": "Far Relative\u2019s Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1100
      },
      {
        "contestId": 629,
        "index": "A",
        "name": "Far Relative\u2019s Birthday Cake",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 628,
        "index": "F",
        "name": "Bear and Fair Set",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 628,
        "index": "E",
        "name": "Zbazi in Zeydabad",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 628,
        "index": "D",
        "name": "Magic Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 628,
        "index": "C",
        "name": "Bear and String Distance",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 628,
        "index": "B",
        "name": "New Skateboard",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1300
      },
      {
        "contestId": 628,
        "index": "A",
        "name": "Tennis Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 627,
        "index": "F",
        "name": "Island Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 627,
        "index": "E",
        "name": "Orchestra",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 627,
        "index": "D",
        "name": "Preorder Test",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 627,
        "index": "C",
        "name": "Package Delivery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 627,
        "index": "B",
        "name": "Factory Repairs",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1700
      },
      {
        "contestId": 627,
        "index": "A",
        "name": "XOR Equation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 626,
        "index": "G",
        "name": "Raffles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 626,
        "index": "F",
        "name": "Group Projects",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 626,
        "index": "E",
        "name": "Simple Skewness",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "ternary search"
        ],
        "points": 2400
      },
      {
        "contestId": 626,
        "index": "D",
        "name": "Jerry's Protest",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 626,
        "index": "C",
        "name": "Block Towers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 626,
        "index": "B",
        "name": "Cards",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 626,
        "index": "A",
        "name": "Robot Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 625,
        "index": "E",
        "name": "Frog Fights",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 625,
        "index": "D",
        "name": "Finals in arithmetic",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 625,
        "index": "C",
        "name": "K-special Tables",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 625,
        "index": "B",
        "name": "War of the Corporations",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 625,
        "index": "A",
        "name": "Guest From the Past",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 624,
        "index": "B",
        "name": "Making a String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 624,
        "index": "A",
        "name": "Save Luke",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 623,
        "index": "E",
        "name": "Transforming Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 623,
        "index": "D",
        "name": "Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 623,
        "index": "C",
        "name": "Electric Charges",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 623,
        "index": "B",
        "name": "Array GCD",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 623,
        "index": "A",
        "name": "Graph and String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 622,
        "index": "F",
        "name": "The Sum of the k-th Powers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 622,
        "index": "E",
        "name": "Ants in Leaves",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 622,
        "index": "D",
        "name": "Optimal Number Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 622,
        "index": "C",
        "name": "Not Equal on a Segment",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 622,
        "index": "B",
        "name": "The Time",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 622,
        "index": "A",
        "name": "Infinite Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 621,
        "index": "E",
        "name": "Wet Shark and Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2000
      },
      {
        "contestId": 621,
        "index": "D",
        "name": "Rat Kwesh and Cheese",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 621,
        "index": "C",
        "name": "Wet Shark and Flowers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 1700
      },
      {
        "contestId": 621,
        "index": "B",
        "name": "Wet Shark and Bishops",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 621,
        "index": "A",
        "name": "Wet Shark and Odd and Even",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 620,
        "index": "F",
        "name": "Xors on Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 620,
        "index": "E",
        "name": "New Year Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 620,
        "index": "D",
        "name": "Professor GukiZ and Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 620,
        "index": "C",
        "name": "Pearls in a Row",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 620,
        "index": "B",
        "name": "Grandfather Dovlet\u2019s calculator",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 620,
        "index": "A",
        "name": "Professor GukiZ's Robot",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 618,
        "index": "G",
        "name": "Combining Slimes",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices",
          "probabilities"
        ],
        "points": 3300
      },
      {
        "contestId": 618,
        "index": "F",
        "name": "Double Knapsack",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 618,
        "index": "E",
        "name": "Robot Arm",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 618,
        "index": "D",
        "name": "Hamiltonian Spanning Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graph matchings",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 618,
        "index": "C",
        "name": "Constellation",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 618,
        "index": "B",
        "name": "Guess the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1100
      },
      {
        "contestId": 618,
        "index": "A",
        "name": "Slime Combining",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 617,
        "index": "E",
        "name": "XOR and Favorite Number",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 617,
        "index": "D",
        "name": "Polyline",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 617,
        "index": "C",
        "name": "Watering Flowers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 617,
        "index": "B",
        "name": "Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1300
      },
      {
        "contestId": 617,
        "index": "A",
        "name": "Elephant",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 616,
        "index": "F",
        "name": "Expensive Strings",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 616,
        "index": "E",
        "name": "Sum of Remainders",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 616,
        "index": "D",
        "name": "Longest k-Good Segment",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 616,
        "index": "C",
        "name": "The Labyrinth",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 1600
      },
      {
        "contestId": 616,
        "index": "B",
        "name": "Dinner with Emma",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 616,
        "index": "A",
        "name": "Comparing Two Long Integers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 615,
        "index": "E",
        "name": "Hexagons",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 615,
        "index": "D",
        "name": "Multipliers",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 615,
        "index": "C",
        "name": "Running Track",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 615,
        "index": "B",
        "name": "Longtail Hedgehog",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 615,
        "index": "A",
        "name": "Bulbs",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 614,
        "index": "B",
        "name": "Gena's Code",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 614,
        "index": "A",
        "name": "Link/Cut Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 613,
        "index": "E",
        "name": "Puzzle Lover",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "strings"
        ],
        "points": 3200
      },
      {
        "contestId": 613,
        "index": "D",
        "name": "Kingdom and its Cities",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dp",
          "graphs",
          "sortings",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 613,
        "index": "C",
        "name": "Necklace",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 613,
        "index": "B",
        "name": "Skills",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 613,
        "index": "A",
        "name": "Peter and Snow Blower",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "ternary search"
        ],
        "points": 1900
      },
      {
        "contestId": 612,
        "index": "F",
        "name": "Simba on the Circle",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 612,
        "index": "E",
        "name": "Square Root of Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 612,
        "index": "D",
        "name": "The Union of k-Segments",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 612,
        "index": "C",
        "name": "Replace To Make Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "expression parsing",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 612,
        "index": "B",
        "name": "HDD is Outdated Technology",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 612,
        "index": "A",
        "name": "The Text Splitting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 611,
        "index": "H",
        "name": "New Year  and Forgotten Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graphs"
        ],
        "points": 3200
      },
      {
        "contestId": 611,
        "index": "G",
        "name": "New Year and Cake",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "two pointers"
        ],
        "points": 2900
      },
      {
        "contestId": 611,
        "index": "F",
        "name": "New Year and Cleaning",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 611,
        "index": "E",
        "name": "New Year and Three Musketeers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 611,
        "index": "D",
        "name": "New Year and Ancient Prophecy",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 611,
        "index": "C",
        "name": "New Year and Domino",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 611,
        "index": "B",
        "name": "New Year and Old Property",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 611,
        "index": "A",
        "name": "New Year and Days",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 610,
        "index": "E",
        "name": "Alphabet Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 610,
        "index": "D",
        "name": "Vika and Segments",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "geometry",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 610,
        "index": "C",
        "name": "Harmony Analysis",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 610,
        "index": "B",
        "name": "Vika and Squares",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 610,
        "index": "A",
        "name": "Pasha and Stick",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 609,
        "index": "F",
        "name": "Frogs and mosquitoes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 609,
        "index": "E",
        "name": "Minimum spanning tree for each edge",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 609,
        "index": "D",
        "name": "Gadgets for dollars and pounds",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 609,
        "index": "C",
        "name": "Load Balancing",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 609,
        "index": "B",
        "name": "The Best Gift",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 609,
        "index": "A",
        "name": "USB Flash Drives",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 608,
        "index": "B",
        "name": "Hamming Distance Sum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 608,
        "index": "A",
        "name": "Saitama Destroys Hotel",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 607,
        "index": "E",
        "name": "Cross Sum",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 3300
      },
      {
        "contestId": 607,
        "index": "D",
        "name": "Power Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 607,
        "index": "C",
        "name": "Marbles",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 607,
        "index": "B",
        "name": "Zuma",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 607,
        "index": "A",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 606,
        "index": "B",
        "name": "Testing Robots",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 606,
        "index": "A",
        "name": "Magic Spheres",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 605,
        "index": "E",
        "name": "Intergalaxy Trips",
        "type": "PROGRAMMING",
        "tags": [
          "probabilities",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 605,
        "index": "D",
        "name": "Board Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar"
        ],
        "points": 2500
      },
      {
        "contestId": 605,
        "index": "C",
        "name": "Freelancer's Dreams",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 605,
        "index": "B",
        "name": "Lazy Student",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 605,
        "index": "A",
        "name": "Sorting Railway Cars",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 604,
        "index": "B",
        "name": "More Cowbell",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 604,
        "index": "A",
        "name": "Uncowed Forces",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 603,
        "index": "E",
        "name": "Pastoral Oddities",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dsu",
          "math",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 603,
        "index": "D",
        "name": "Ruminations on Ruminants",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 603,
        "index": "C",
        "name": "Lieges of Legendre",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 603,
        "index": "B",
        "name": "Moodular Arithmetic",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dsu",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 603,
        "index": "A",
        "name": "Alternative Thinking",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 602,
        "index": "B",
        "name": "Approximating a Constant Range",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 602,
        "index": "A",
        "name": "Two Bases",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 601,
        "index": "E",
        "name": "A Museum Robbery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 601,
        "index": "D",
        "name": "Acyclic Organic Compounds",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "hashing",
          "strings",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 601,
        "index": "C",
        "name": "Kleof\u00e1\u0161 and the n-thlon",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 601,
        "index": "B",
        "name": "Lipshitz Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 601,
        "index": "A",
        "name": "The Two Routes",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 600,
        "index": "F",
        "name": "Edge coloring of bipartite graph",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 600,
        "index": "E",
        "name": "Lomsat gelral",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 600,
        "index": "D",
        "name": "Area of Two Circles' Intersection",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 600,
        "index": "C",
        "name": "Make Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 600,
        "index": "B",
        "name": "Queries about less or equal elements",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 600,
        "index": "A",
        "name": "Extract Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 599,
        "index": "E",
        "name": "Sandy and Nuts",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 599,
        "index": "D",
        "name": "Spongebob and Squares",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 599,
        "index": "C",
        "name": "Day at the Beach",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 599,
        "index": "B",
        "name": "Spongebob and Joke",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 599,
        "index": "A",
        "name": "Patrick and Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 598,
        "index": "F",
        "name": "Cut Length",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 598,
        "index": "E",
        "name": "Chocolate Bar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 598,
        "index": "D",
        "name": "Igor In the Museum",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 598,
        "index": "C",
        "name": "Nearest vectors",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 598,
        "index": "B",
        "name": "Queries on a String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 598,
        "index": "A",
        "name": "Tricky Sum",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 597,
        "index": "C",
        "name": "Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 597,
        "index": "B",
        "name": "Restaurant",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 597,
        "index": "A",
        "name": "Divisibility",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 596,
        "index": "E",
        "name": "Wilbur and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 596,
        "index": "D",
        "name": "Wilbur and Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 596,
        "index": "C",
        "name": "Wilbur and Points",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 596,
        "index": "B",
        "name": "Wilbur and Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 596,
        "index": "A",
        "name": "Wilbur and Swimming Pool",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 595,
        "index": "B",
        "name": "Pasha and Phone",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 595,
        "index": "A",
        "name": "Vitaly and Night",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 594,
        "index": "E",
        "name": "Cutting the Line",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures",
          "strings"
        ],
        "points": 3100
      },
      {
        "contestId": 594,
        "index": "D",
        "name": "REQ",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 594,
        "index": "C",
        "name": "Edo and Magnets",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 594,
        "index": "B",
        "name": "Max and Bike",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 594,
        "index": "A",
        "name": "Warrior and Archer",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2300
      },
      {
        "contestId": 593,
        "index": "E",
        "name": "Strange Calculation and Cats",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 593,
        "index": "D",
        "name": "Happy Tree Party",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "math",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 593,
        "index": "C",
        "name": "Beautiful Function",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 593,
        "index": "B",
        "name": "Anton and Lines",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 593,
        "index": "A",
        "name": "2Char",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 592,
        "index": "E",
        "name": "BCPC",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 592,
        "index": "D",
        "name": "Super M",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 592,
        "index": "C",
        "name": "The Big Race",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 592,
        "index": "B",
        "name": "The Monster and the Squirrel",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 592,
        "index": "A",
        "name": "PawnChess",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 591,
        "index": "B",
        "name": "Rebranding",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 591,
        "index": "A",
        "name": "Wizards' Duel",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 590,
        "index": "E",
        "name": "Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings",
          "strings"
        ],
        "points": 3200
      },
      {
        "contestId": 590,
        "index": "D",
        "name": "Top Secret Task",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 590,
        "index": "C",
        "name": "Three States",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 590,
        "index": "B",
        "name": "Chip 'n Dale Rescue Rangers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 590,
        "index": "A",
        "name": "Median Smoothing",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 588,
        "index": "B",
        "name": "Duff in Love",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 588,
        "index": "A",
        "name": "Duff and Meat",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 587,
        "index": "F",
        "name": "Duff is Mad",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 3000
      },
      {
        "contestId": 587,
        "index": "E",
        "name": "Duff as a Queen",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2900
      },
      {
        "contestId": 587,
        "index": "D",
        "name": "Duff in Mafia",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "binary search"
        ],
        "points": 3100
      },
      {
        "contestId": 587,
        "index": "C",
        "name": "Duff in the Army",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 587,
        "index": "B",
        "name": "Duff in Beach",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 587,
        "index": "A",
        "name": "Duff and Weight Lifting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 586,
        "index": "B",
        "name": "Laurenty and Shop",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 586,
        "index": "A",
        "name": "Alena's Schedule",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 585,
        "index": "F",
        "name": "Digits of Number Pi",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "strings"
        ],
        "points": 3200
      },
      {
        "contestId": 585,
        "index": "E",
        "name": "Present for Vitalik the Philatelist",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 585,
        "index": "D",
        "name": "Lizard Era: Beginning",
        "type": "PROGRAMMING",
        "tags": [
          "meet-in-the-middle"
        ],
        "points": 2300
      },
      {
        "contestId": 585,
        "index": "C",
        "name": "Alice, Bob, Oranges and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 585,
        "index": "B",
        "name": "Phillip and Trains",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 585,
        "index": "A",
        "name": "Gennady the Dentist",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 584,
        "index": "E",
        "name": "Anton and Ira",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 584,
        "index": "D",
        "name": "Dima and Lisa",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 584,
        "index": "C",
        "name": "Marina and Vasya",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 584,
        "index": "B",
        "name": "Kolya and Tanya",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1500
      },
      {
        "contestId": 584,
        "index": "A",
        "name": "Olesya and Rodion",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 583,
        "index": "B",
        "name": "Robot's Task",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 583,
        "index": "A",
        "name": "Asphalting Roads",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 582,
        "index": "E",
        "name": "Boolean Function",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "expression parsing"
        ],
        "points": 3000
      },
      {
        "contestId": 582,
        "index": "D",
        "name": "Number of Binominal Coefficients",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 3300
      },
      {
        "contestId": 582,
        "index": "C",
        "name": "Superior Periodic Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "matrices"
        ],
        "points": 1900
      },
      {
        "contestId": 582,
        "index": "A",
        "name": "GCD Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 581,
        "index": "F",
        "name": "Zublicanes and Mumocrates",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 581,
        "index": "E",
        "name": "Kojiro and Furrari",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 581,
        "index": "D",
        "name": "Three Logos",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 581,
        "index": "C",
        "name": "Developing Skills",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 581,
        "index": "B",
        "name": "Luxurious Houses",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 581,
        "index": "A",
        "name": "Vasya the Hipster",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 580,
        "index": "E",
        "name": "Kefa and Watch",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 580,
        "index": "D",
        "name": "Kefa and Dishes",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 580,
        "index": "C",
        "name": "Kefa and Park",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 580,
        "index": "B",
        "name": "Kefa and Company",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 580,
        "index": "A",
        "name": "Kefa and First Steps",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 579,
        "index": "B",
        "name": "Finding Team Member",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 579,
        "index": "A",
        "name": "Raising Bacteria",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 1000
      },
      {
        "contestId": 578,
        "index": "F",
        "name": "Mirror Box",
        "type": "PROGRAMMING",
        "tags": [
          "matrices",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 578,
        "index": "E",
        "name": "Walking!",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 578,
        "index": "D",
        "name": "LCS Again",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 578,
        "index": "C",
        "name": "Weakness and Poorness",
        "type": "PROGRAMMING",
        "tags": [
          "ternary search"
        ],
        "points": 2000
      },
      {
        "contestId": 578,
        "index": "B",
        "name": "\"Or\" Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 578,
        "index": "A",
        "name": "A Problem about Polyline",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 577,
        "index": "B",
        "name": "Modulo Sum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 577,
        "index": "A",
        "name": "Multiplication Table",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 576,
        "index": "E",
        "name": "Painting Edges",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 3300
      },
      {
        "contestId": 576,
        "index": "D",
        "name": "Flights for Regular Customers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 576,
        "index": "C",
        "name": "Points on Plane",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "geometry",
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 576,
        "index": "B",
        "name": "Invariance of Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 576,
        "index": "A",
        "name": "Vasya and Petya's Game",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 575,
        "index": "I",
        "name": "Robots protection",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 575,
        "index": "H",
        "name": "Bots",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 575,
        "index": "G",
        "name": "Run for beer",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 575,
        "index": "F",
        "name": "Bulbo",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 575,
        "index": "E",
        "name": "Spectator Riots",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2800
      },
      {
        "contestId": 575,
        "index": "D",
        "name": "Tablecity",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 575,
        "index": "C",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "graph matchings"
        ],
        "points": 2700
      },
      {
        "contestId": 575,
        "index": "B",
        "name": "Bribes",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 575,
        "index": "A",
        "name": "Fibonotci",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 574,
        "index": "B",
        "name": "Bear and Three Musketeers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "hashing"
        ],
        "points": 1500
      },
      {
        "contestId": 574,
        "index": "A",
        "name": "Bear and Elections",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 573,
        "index": "E",
        "name": "Bear and Bowling",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3200
      },
      {
        "contestId": 573,
        "index": "D",
        "name": "Bear and Cavalry",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 573,
        "index": "C",
        "name": "Bear and Drawing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 573,
        "index": "B",
        "name": "Bear and Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 573,
        "index": "A",
        "name": "Bear and Poker",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 572,
        "index": "B",
        "name": "Order Book",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 572,
        "index": "A",
        "name": "Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 571,
        "index": "E",
        "name": "Geometric Progressions",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 571,
        "index": "D",
        "name": "Campus",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 571,
        "index": "C",
        "name": "CNF 2",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 571,
        "index": "B",
        "name": "Minimization",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 571,
        "index": "A",
        "name": "Lengthening Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 570,
        "index": "E",
        "name": "Pig and Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 570,
        "index": "D",
        "name": "Tree Requests",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 570,
        "index": "C",
        "name": "Replacement",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 570,
        "index": "B",
        "name": "Simple Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 570,
        "index": "A",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 569,
        "index": "B",
        "name": "Inventory",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 569,
        "index": "A",
        "name": "Music",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 568,
        "index": "E",
        "name": "Longest Increasing Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 568,
        "index": "D",
        "name": "Sign Posts",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 568,
        "index": "C",
        "name": "New Language",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 568,
        "index": "B",
        "name": "Symmetric and Transitive",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 568,
        "index": "A",
        "name": "Primes or Palindromes?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 567,
        "index": "F",
        "name": "Mausoleum",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 567,
        "index": "E",
        "name": "President and Roads",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "hashing",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 567,
        "index": "D",
        "name": "One-Dimensional Battle Ships",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 567,
        "index": "C",
        "name": "Geometric Progression",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 567,
        "index": "B",
        "name": "Berland National Library",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 567,
        "index": "A",
        "name": "Lineland Mail",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 566,
        "index": "G",
        "name": "Max and Min",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 566,
        "index": "F",
        "name": "Clique in the Divisibility Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 566,
        "index": "E",
        "name": "Restoring Map",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 566,
        "index": "D",
        "name": "Restructuring Company",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 1900
      },
      {
        "contestId": 566,
        "index": "C",
        "name": "Logistical Questions",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 566,
        "index": "B",
        "name": "Replicating Processes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 566,
        "index": "A",
        "name": "Matching Names",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "strings",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 560,
        "index": "B",
        "name": "Gerald is into Art",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 560,
        "index": "A",
        "name": "Currency System in Geraldion",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 559,
        "index": "E",
        "name": "Gerald and Path",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 3000
      },
      {
        "contestId": 559,
        "index": "D",
        "name": "Randomizer",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "geometry",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 559,
        "index": "C",
        "name": "Gerald and Giant Chess",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 559,
        "index": "B",
        "name": "Equivalent Strings",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "hashing",
          "sortings",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 559,
        "index": "A",
        "name": "Gerald's Hexagon",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 558,
        "index": "E",
        "name": "A Simple Task",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 558,
        "index": "D",
        "name": "Guess Your Way Out! II",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 558,
        "index": "C",
        "name": "Amr and Chemistry",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy",
          "math",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 558,
        "index": "B",
        "name": "Amr and The Large Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 558,
        "index": "A",
        "name": "Lala Land and Apple Trees",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 557,
        "index": "E",
        "name": "Ann and Half-Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs",
          "string suffix structures",
          "strings",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 557,
        "index": "D",
        "name": "Vitaly and Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 557,
        "index": "C",
        "name": "Arthur and Table",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 557,
        "index": "B",
        "name": "Pasha and Tea",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 557,
        "index": "A",
        "name": "Ilya and Diplomas",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 556,
        "index": "B",
        "name": "Case of Fake Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 556,
        "index": "A",
        "name": "Case of the Zeros and Ones",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 555,
        "index": "E",
        "name": "Case of Computer Network",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 555,
        "index": "D",
        "name": "Case of a Top Secret",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 555,
        "index": "C",
        "name": "Case of Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 555,
        "index": "B",
        "name": "Case of Fugitive",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 555,
        "index": "A",
        "name": "Case of Matryoshkas",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 554,
        "index": "B",
        "name": "Ohana Cleans Up",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 554,
        "index": "A",
        "name": "Kyoya and Photobooks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 553,
        "index": "E",
        "name": "Kyoya and Train",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "fft",
          "graphs",
          "math",
          "probabilities"
        ],
        "points": 3200
      },
      {
        "contestId": 553,
        "index": "D",
        "name": "Nudist Beach",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 553,
        "index": "C",
        "name": "Love Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 553,
        "index": "B",
        "name": "Kyoya and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 553,
        "index": "A",
        "name": "Kyoya and Colored Balls",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 552,
        "index": "E",
        "name": "Vanya and Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "expression parsing",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 552,
        "index": "D",
        "name": "Vanya and Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "data structures",
          "geometry",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 552,
        "index": "C",
        "name": "Vanya and Scales",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "math",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 552,
        "index": "B",
        "name": "Vanya and Books",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 552,
        "index": "A",
        "name": "Vanya and Table",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 551,
        "index": "E",
        "name": "GukiZ and GukiZiana",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 551,
        "index": "D",
        "name": "GukiZ and Binary Operations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "math",
          "matrices",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 551,
        "index": "C",
        "name": "GukiZ hates Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 551,
        "index": "B",
        "name": "ZgukistringZ",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 551,
        "index": "A",
        "name": "GukiZ and Contest",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 550,
        "index": "E",
        "name": "Brackets in Implications",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 550,
        "index": "D",
        "name": "Regular Bridge",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 550,
        "index": "C",
        "name": "Divisibility by Eight",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 550,
        "index": "B",
        "name": "Preparing Olympiad",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 550,
        "index": "A",
        "name": "Two Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 549,
        "index": "H",
        "name": "Degenerate Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 549,
        "index": "G",
        "name": "Happy Line",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 549,
        "index": "F",
        "name": "Yura and Developers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2800
      },
      {
        "contestId": 549,
        "index": "E",
        "name": "Sasha Circle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 549,
        "index": "D",
        "name": "Haar Features",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 549,
        "index": "C",
        "name": "The Game Of Parity",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2200
      },
      {
        "contestId": 549,
        "index": "B",
        "name": "Looksery Party",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 549,
        "index": "A",
        "name": "Face Detection",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 548,
        "index": "B",
        "name": "Mike and Fun",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 548,
        "index": "A",
        "name": "Mike and Fax",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 547,
        "index": "E",
        "name": "Mike and Friends",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures",
          "strings",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 547,
        "index": "D",
        "name": "Mike and Fish",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 547,
        "index": "C",
        "name": "Mike and Foam",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 547,
        "index": "B",
        "name": "Mike and Feet",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "dsu"
        ],
        "points": 1900
      },
      {
        "contestId": 547,
        "index": "A",
        "name": "Mike and Frog",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 546,
        "index": "E",
        "name": "Soldier and Traveling",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 546,
        "index": "D",
        "name": "Soldier and Number Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 546,
        "index": "C",
        "name": "Soldier and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "games"
        ],
        "points": 1400
      },
      {
        "contestId": 546,
        "index": "B",
        "name": "Soldier and Badges",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 546,
        "index": "A",
        "name": "Soldier and Bananas",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 545,
        "index": "E",
        "name": "Paths and Trees",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 545,
        "index": "D",
        "name": "Queue",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 545,
        "index": "C",
        "name": "Woodcutters",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 545,
        "index": "B",
        "name": "Equidistant String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 545,
        "index": "A",
        "name": "Toy Cars",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 544,
        "index": "B",
        "name": "Sea and Islands",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 544,
        "index": "A",
        "name": "Set of Strings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 543,
        "index": "E",
        "name": "Listening to Music",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 543,
        "index": "D",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 543,
        "index": "C",
        "name": "Remembering Strings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 543,
        "index": "B",
        "name": "Destroying Roads",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 543,
        "index": "A",
        "name": "Writing Code",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 542,
        "index": "F",
        "name": "Quest",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 542,
        "index": "E",
        "name": "Playing on Graph",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 542,
        "index": "D",
        "name": "Superhero's Job",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "hashing",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 542,
        "index": "C",
        "name": "Idempotent functions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 542,
        "index": "B",
        "name": "Duck Hunt",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 542,
        "index": "A",
        "name": "Place Your Ad Here",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 540,
        "index": "E",
        "name": "Infinite Inversions",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "sortings",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 540,
        "index": "D",
        "name": "Bad Luck Island",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 540,
        "index": "C",
        "name": "Ice Cave",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2000
      },
      {
        "contestId": 540,
        "index": "B",
        "name": "School Marks",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 540,
        "index": "A",
        "name": "Combination Lock",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 538,
        "index": "H",
        "name": "Summer Dichotomy",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "data structures",
          "dfs and similar",
          "greedy"
        ],
        "points": 3200
      },
      {
        "contestId": 538,
        "index": "G",
        "name": "Berserk Robot",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "sortings"
        ],
        "points": 3100
      },
      {
        "contestId": 538,
        "index": "F",
        "name": "A Heap of Heaps",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 538,
        "index": "E",
        "name": "Demiurges Play Again",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 538,
        "index": "D",
        "name": "Weird Chess",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 538,
        "index": "C",
        "name": "Tourist's Notes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 538,
        "index": "B",
        "name": "Quasi Binary",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 538,
        "index": "A",
        "name": "Cutting Banner",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 536,
        "index": "E",
        "name": "Tavas on the Path",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 536,
        "index": "D",
        "name": "Tavas in Kansas",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2900
      },
      {
        "contestId": 535,
        "index": "E",
        "name": "Tavas and Pashmaks",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 535,
        "index": "D",
        "name": "Tavas and Malekas",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 535,
        "index": "C",
        "name": "Tavas and Karafs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 535,
        "index": "B",
        "name": "Tavas and SaDDas",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 535,
        "index": "A",
        "name": "Tavas and Nafas",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 534,
        "index": "F",
        "name": "Simplified Nonogram",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "hashing",
          "meet-in-the-middle"
        ],
        "points": 2400
      },
      {
        "contestId": 534,
        "index": "E",
        "name": "Berland Local Positioning System",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "hashing",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 534,
        "index": "D",
        "name": "Handshakes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 534,
        "index": "C",
        "name": "Polycarpus' Dice",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 534,
        "index": "B",
        "name": "Covered Path",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 534,
        "index": "A",
        "name": "Exam",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 533,
        "index": "F",
        "name": "Encoding",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 533,
        "index": "E",
        "name": "Correcting Mistakes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "hashing",
          "strings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 533,
        "index": "D",
        "name": "Landmarks",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 533,
        "index": "C",
        "name": "Board Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 533,
        "index": "B",
        "name": "Work Group",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "strings",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 533,
        "index": "A",
        "name": "Berland Miners",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 530,
        "index": "I",
        "name": "Different variables",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2500
      },
      {
        "contestId": 530,
        "index": "H",
        "name": "Points in triangle",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 530,
        "index": "G",
        "name": "Levenshtein distance",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 530,
        "index": "F",
        "name": "Jumping frogs",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 530,
        "index": "E",
        "name": "Sum and product",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 530,
        "index": "D",
        "name": "Set subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 530,
        "index": "C",
        "name": "Diophantine equation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1500
      },
      {
        "contestId": 530,
        "index": "B",
        "name": "String inside out",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 530,
        "index": "A",
        "name": "Quadratic equation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1500
      },
      {
        "contestId": 529,
        "index": "B",
        "name": "Group Photo 2 (online mirror version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 528,
        "index": "E",
        "name": "Triangles 3000",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 528,
        "index": "D",
        "name": "Fuzzy Search",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "fft"
        ],
        "points": 2500
      },
      {
        "contestId": 527,
        "index": "E",
        "name": "Data Center Drama",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 527,
        "index": "D",
        "name": "Clique Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 527,
        "index": "C",
        "name": "Glass Carving",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 527,
        "index": "B",
        "name": "Error Correct System",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 527,
        "index": "A",
        "name": "Playing with Paper",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 526,
        "index": "G",
        "name": "Spiders Evil Plan",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 526,
        "index": "F",
        "name": "Pudding Monsters",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 3000
      },
      {
        "contestId": 526,
        "index": "E",
        "name": "Transmitting Levels",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 526,
        "index": "D",
        "name": "Om Nom and Necklace",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 526,
        "index": "C",
        "name": "Om Nom and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 526,
        "index": "B",
        "name": "Om Nom and Dark Park",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 526,
        "index": "A",
        "name": "King of Thieves",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 525,
        "index": "E",
        "name": "Anya and Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "dp",
          "math",
          "meet-in-the-middle"
        ],
        "points": 2100
      },
      {
        "contestId": 525,
        "index": "D",
        "name": "Arthur and Walls",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 525,
        "index": "C",
        "name": "Ilya and Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 525,
        "index": "B",
        "name": "Pasha and String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 525,
        "index": "A",
        "name": "Vitaliy and Pie",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 524,
        "index": "F",
        "name": "And Yet Another Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 524,
        "index": "E",
        "name": "Rooks and Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 524,
        "index": "D",
        "name": "Social Network",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 524,
        "index": "C",
        "name": "The Art of Dealing with ATM",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 524,
        "index": "B",
        "name": "\u0424\u043e\u0442\u043e \u043d\u0430 \u043f\u0430\u043c\u044f\u0442\u044c - 2 (round version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 524,
        "index": "A",
        "name": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u044d\u0442\u0438\u0445 \u043b\u044e\u0434\u0435\u0439?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 523,
        "index": "D",
        "name": "Statistics of Recompressing Videos",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 523,
        "index": "C",
        "name": "Name Quest",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 523,
        "index": "B",
        "name": "Mean Requests",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 523,
        "index": "A",
        "name": "Rotate, Flip and Zoom",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 522,
        "index": "D",
        "name": "Closest Equals",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 522,
        "index": "C",
        "name": "Chicken or Fish?",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 522,
        "index": "B",
        "name": "Photo to Remember",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 522,
        "index": "A",
        "name": "Reposts",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1200
      },
      {
        "contestId": 521,
        "index": "E",
        "name": "Cycling City",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 3100
      },
      {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 520,
        "index": "E",
        "name": "Pluses everywhere",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 520,
        "index": "D",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 520,
        "index": "C",
        "name": "DNA Alignment",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 520,
        "index": "B",
        "name": "Two Buttons",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "implementation",
          "math",
          "shortest paths"
        ],
        "points": 1400
      },
      {
        "contestId": 520,
        "index": "A",
        "name": "Pangram",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 519,
        "index": "E",
        "name": "A and B and Lecture Rooms",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 519,
        "index": "D",
        "name": "A and B and Interesting Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 519,
        "index": "C",
        "name": "A and B and Team Training",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 519,
        "index": "B",
        "name": "A and B and Compilation Errors",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 519,
        "index": "A",
        "name": "A and B and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 518,
        "index": "F",
        "name": "Pasha and Pipe",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 518,
        "index": "E",
        "name": "Arthur and Questions",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "ternary search"
        ],
        "points": 2200
      },
      {
        "contestId": 518,
        "index": "D",
        "name": "Ilya and Escalator",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 1700
      },
      {
        "contestId": 518,
        "index": "C",
        "name": "Anya and Smartphone",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 518,
        "index": "B",
        "name": "Tanya and Postcard",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 518,
        "index": "A",
        "name": "Vitaly and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 516,
        "index": "E",
        "name": "Drazil and His Happy Friends",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 3100
      },
      {
        "contestId": 516,
        "index": "D",
        "name": "Drazil and Morning Exercise",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "trees",
          "two pointers"
        ],
        "points": 2800
      },
      {
        "contestId": 515,
        "index": "E",
        "name": "Drazil and Park",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 515,
        "index": "D",
        "name": "Drazil and Tiles",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 515,
        "index": "C",
        "name": "Drazil and Factorial",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 515,
        "index": "B",
        "name": "Drazil and His Happy Friends",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dsu",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 515,
        "index": "A",
        "name": "Drazil and Date",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 514,
        "index": "E",
        "name": "Darth Vader and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2200
      },
      {
        "contestId": 514,
        "index": "D",
        "name": "R2D2 and Droid Army",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 514,
        "index": "C",
        "name": "Watto and Mechanism",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 514,
        "index": "B",
        "name": "Han Solo and Lazer Gun",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 514,
        "index": "A",
        "name": "Chewba\u0441ca and Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 513,
        "index": "G3",
        "name": "Inversions problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3100
      },
      {
        "contestId": 513,
        "index": "G2",
        "name": "Inversions problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 513,
        "index": "G1",
        "name": "Inversions problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 1800
      },
      {
        "contestId": 513,
        "index": "F2",
        "name": "Scaygerboss",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2800
      },
      {
        "contestId": 513,
        "index": "F1",
        "name": "Scaygerboss",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2700
      },
      {
        "contestId": 513,
        "index": "E2",
        "name": "Subarray Cuts",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 513,
        "index": "E1",
        "name": "Subarray Cuts",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 513,
        "index": "D2",
        "name": "Constrained Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 513,
        "index": "D1",
        "name": "Constrained Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2400
      },
      {
        "contestId": 513,
        "index": "C",
        "name": "Second price auction",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 513,
        "index": "B2",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 513,
        "index": "B1",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 513,
        "index": "A",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 512,
        "index": "E",
        "name": "Fox And Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer"
        ],
        "points": 2900
      },
      {
        "contestId": 512,
        "index": "D",
        "name": "Fox And Travelling",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 510,
        "index": "E",
        "name": "Fox And Dinner",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2300
      },
      {
        "contestId": 510,
        "index": "D",
        "name": "Fox And Jumping",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 510,
        "index": "C",
        "name": "Fox And Names",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 510,
        "index": "B",
        "name": "Fox And Two Dots",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 1500
      },
      {
        "contestId": 510,
        "index": "A",
        "name": "Fox And Snake",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 509,
        "index": "F",
        "name": "Progress Monitoring",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 509,
        "index": "E",
        "name": "Pretty Song",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 509,
        "index": "D",
        "name": "Restoring Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 509,
        "index": "B",
        "name": "Painting Pebbles",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 509,
        "index": "A",
        "name": "Maximum in Table",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 508,
        "index": "E",
        "name": "Arthur and Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 508,
        "index": "D",
        "name": "Tanya and Password",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 508,
        "index": "C",
        "name": "Anya and Ghosts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 508,
        "index": "B",
        "name": "Anton and currency you all know",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 508,
        "index": "A",
        "name": "Pasha and Pixels",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1100
      },
      {
        "contestId": 507,
        "index": "E",
        "name": "Breaking Good",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 507,
        "index": "D",
        "name": "The Maths Lecture",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 507,
        "index": "C",
        "name": "Guess Your Way Out!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 507,
        "index": "B",
        "name": "Amr and Pins",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 507,
        "index": "A",
        "name": "Amr and Music",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 506,
        "index": "E",
        "name": "Mr. Kitayuta's Gift",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "matrices",
          "strings"
        ],
        "points": 3000
      },
      {
        "contestId": 506,
        "index": "D",
        "name": "Mr. Kitayuta's Colorful Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 505,
        "index": "E",
        "name": "Mr. Kitayuta vs. Bamboos",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 505,
        "index": "D",
        "name": "Mr. Kitayuta's Technology",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2200
      },
      {
        "contestId": 505,
        "index": "C",
        "name": "Mr. Kitayuta, the Treasure Hunter",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 505,
        "index": "B",
        "name": "Mr. Kitayuta's Colorful Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs"
        ],
        "points": 1400
      },
      {
        "contestId": 505,
        "index": "A",
        "name": "Mr. Kitayuta's Gift",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 504,
        "index": "E",
        "name": "Misha and LCP on Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "hashing",
          "string suffix structures",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 504,
        "index": "D",
        "name": "Misha and XOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 2700
      },
      {
        "contestId": 501,
        "index": "E",
        "name": "Misha and Palindrome Degree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 501,
        "index": "D",
        "name": "Misha and Permutations Summation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 501,
        "index": "C",
        "name": "Misha and Forest",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 501,
        "index": "B",
        "name": "Misha and Changing Handles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 501,
        "index": "A",
        "name": "Contest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 500,
        "index": "G",
        "name": "New Year Running",
        "type": "PROGRAMMING",
        "tags": [
          "number theory",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 500,
        "index": "F",
        "name": "New Year Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 500,
        "index": "E",
        "name": "New Year Domino",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "dsu"
        ],
        "points": 2300
      },
      {
        "contestId": 500,
        "index": "D",
        "name": "New Year Santa Network",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 500,
        "index": "C",
        "name": "New Year Book Reading",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 500,
        "index": "B",
        "name": "New Year Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 500,
        "index": "A",
        "name": "New Year Transportation",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 499,
        "index": "B",
        "name": "Lecture",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 499,
        "index": "A",
        "name": "Watching a movie",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 498,
        "index": "E",
        "name": "Stairs and Lines",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 498,
        "index": "D",
        "name": "Traffic Jams in the Land",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 498,
        "index": "C",
        "name": "Array and Operations",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 498,
        "index": "B",
        "name": "Name That Tune",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 498,
        "index": "A",
        "name": "Crazy Town",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1700
      },
      {
        "contestId": 497,
        "index": "E",
        "name": "Subsequences Return",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2900
      },
      {
        "contestId": 497,
        "index": "D",
        "name": "Gears",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 496,
        "index": "E",
        "name": "Distributing Parts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 496,
        "index": "D",
        "name": "Tennis Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1900
      },
      {
        "contestId": 496,
        "index": "C",
        "name": "Removing Columns",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 496,
        "index": "B",
        "name": "Secret Combination",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 496,
        "index": "A",
        "name": "Minimum Difficulty",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 495,
        "index": "B",
        "name": "Modular Equations",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 495,
        "index": "A",
        "name": "Digital Counter",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 494,
        "index": "E",
        "name": "Sharti",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "games"
        ],
        "points": 3200
      },
      {
        "contestId": 494,
        "index": "D",
        "name": "Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 494,
        "index": "C",
        "name": "Helping People",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 494,
        "index": "B",
        "name": "Obsessive String",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 494,
        "index": "A",
        "name": "Treasure",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 493,
        "index": "E",
        "name": "Vasya and Polynomial",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 493,
        "index": "D",
        "name": "Vasya and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 493,
        "index": "C",
        "name": "Vasya and Basketball",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 493,
        "index": "B",
        "name": "Vasya and Wrestling",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 493,
        "index": "A",
        "name": "Vasya and Football",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 492,
        "index": "E",
        "name": "Vanya and Field",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 492,
        "index": "D",
        "name": "Vanya and Computer Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 492,
        "index": "C",
        "name": "Vanya and Exams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 492,
        "index": "B",
        "name": "Vanya and Lanterns",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 492,
        "index": "A",
        "name": "Vanya and Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 491,
        "index": "C",
        "name": "Deciphering",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings"
        ],
        "points": 2300
      },
      {
        "contestId": 491,
        "index": "B",
        "name": "New York Hotel",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 491,
        "index": "A",
        "name": "Up the hill",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 490,
        "index": "F",
        "name": "Treeland Tour",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 490,
        "index": "E",
        "name": "Restoring Increasing Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 490,
        "index": "D",
        "name": "Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "math",
          "meet-in-the-middle",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 490,
        "index": "B",
        "name": "Queue",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 490,
        "index": "A",
        "name": "Team Olympiad",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 489,
        "index": "F",
        "name": "Special Matrices",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 489,
        "index": "E",
        "name": "Hiking",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 489,
        "index": "D",
        "name": "Unbearable Controversy of Being",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 489,
        "index": "C",
        "name": "Given Length and Sum of Digits...",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 489,
        "index": "B",
        "name": "BerSU Ball",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graph matchings",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 489,
        "index": "A",
        "name": "SwapSort",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 488,
        "index": "B",
        "name": "Candy Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 488,
        "index": "A",
        "name": "Giga Tower",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1100
      },
      {
        "contestId": 487,
        "index": "E",
        "name": "Tourists",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 487,
        "index": "D",
        "name": "Conveyor Belts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 487,
        "index": "C",
        "name": "Prefix Product Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 487,
        "index": "B",
        "name": "Strip",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 487,
        "index": "A",
        "name": "Fight the Monster",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 486,
        "index": "E",
        "name": "LIS of Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "hashing",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 486,
        "index": "D",
        "name": "Valid Sets",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "math",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 486,
        "index": "C",
        "name": "Palindrome Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 486,
        "index": "B",
        "name": "OR in Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 486,
        "index": "A",
        "name": "Calculating Function",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 485,
        "index": "B",
        "name": "Valuable Resources",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 485,
        "index": "A",
        "name": "Factory",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "matrices"
        ],
        "points": 1400
      },
      {
        "contestId": 484,
        "index": "E",
        "name": "Sign on Fence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 484,
        "index": "D",
        "name": "Kindergarten",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 484,
        "index": "C",
        "name": "Strange Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 484,
        "index": "B",
        "name": "Maximum Value",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "sortings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 484,
        "index": "A",
        "name": "Bits",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1700
      },
      {
        "contestId": 483,
        "index": "B",
        "name": "Friends and Presents",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 483,
        "index": "A",
        "name": "Counterexample",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 482,
        "index": "E",
        "name": "ELCA",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 482,
        "index": "D",
        "name": "Random Function and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 482,
        "index": "C",
        "name": "Game with Strings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 482,
        "index": "B",
        "name": "Interesting Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 482,
        "index": "A",
        "name": "Diverse Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 480,
        "index": "E",
        "name": "Parking Lot",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2800
      },
      {
        "contestId": 480,
        "index": "D",
        "name": "Parcels",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 479,
        "index": "E",
        "name": "Riding in a Lift",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 479,
        "index": "D",
        "name": "Long Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 479,
        "index": "C",
        "name": "Exams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 479,
        "index": "B",
        "name": "Towers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 479,
        "index": "A",
        "name": "Expression",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 478,
        "index": "E",
        "name": "Wavy numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "meet-in-the-middle",
          "sortings"
        ],
        "points": 2900
      },
      {
        "contestId": 478,
        "index": "D",
        "name": "Red-Green Towers",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 478,
        "index": "C",
        "name": "Table Decorations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 478,
        "index": "B",
        "name": "Random Teams",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 478,
        "index": "A",
        "name": "Initial Bet",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 477,
        "index": "E",
        "name": "Dreamoon and Notepad",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 477,
        "index": "D",
        "name": "Dreamoon and Binary",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 476,
        "index": "E",
        "name": "Dreamoon and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 476,
        "index": "D",
        "name": "Dreamoon and Sets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 476,
        "index": "C",
        "name": "Dreamoon and Sums",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 476,
        "index": "B",
        "name": "Dreamoon and WiFi",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 1300
      },
      {
        "contestId": 476,
        "index": "A",
        "name": "Dreamoon and Stairs",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 475,
        "index": "F",
        "name": "Meta-universe",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2900
      },
      {
        "contestId": 475,
        "index": "E",
        "name": "Strongly Connected City 2",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2700
      },
      {
        "contestId": 475,
        "index": "D",
        "name": "CGCDSSQ",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 475,
        "index": "C",
        "name": "Kamal-ol-molk's Painting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 475,
        "index": "B",
        "name": "Strongly Connected City",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 475,
        "index": "A",
        "name": "Bayan Bus",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 474,
        "index": "F",
        "name": "Ant colony",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 474,
        "index": "E",
        "name": "Pillars",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "sortings",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 474,
        "index": "D",
        "name": "Flowers",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 474,
        "index": "C",
        "name": "Captain Marmot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 474,
        "index": "B",
        "name": "Worms",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 474,
        "index": "A",
        "name": "Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 472,
        "index": "G",
        "name": "Design Tutorial: Increase the Constraints",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "fft"
        ],
        "points": 2800
      },
      {
        "contestId": 472,
        "index": "F",
        "name": "Design Tutorial: Change the Goal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 472,
        "index": "E",
        "name": "Design Tutorial: Learn from a Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 472,
        "index": "D",
        "name": "Design Tutorial: Inverse the Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "shortest paths",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 472,
        "index": "C",
        "name": "Design Tutorial: Make It Nondeterministic",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 472,
        "index": "B",
        "name": "Design Tutorial: Learn from Life",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 472,
        "index": "A",
        "name": "Design Tutorial: Learn from Math",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 471,
        "index": "E",
        "name": "MUH and Lots and Lots of Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 2700
      },
      {
        "contestId": 471,
        "index": "D",
        "name": "MUH and Cube Walls",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 471,
        "index": "C",
        "name": "MUH and House of Cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 471,
        "index": "B",
        "name": "MUH and Important Things",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 471,
        "index": "A",
        "name": "MUH and Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 470,
        "index": "H",
        "name": "Array Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2300
      },
      {
        "contestId": 470,
        "index": "G",
        "name": "Hamming Distance",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2300
      },
      {
        "contestId": 470,
        "index": "F",
        "name": "Pairwise Sums",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2300
      },
      {
        "contestId": 470,
        "index": "E",
        "name": "Chessboard",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 470,
        "index": "D",
        "name": "Caesar Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 470,
        "index": "C",
        "name": "Eval",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 470,
        "index": "B",
        "name": "Hexakosioihexekontahexaphobia",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 470,
        "index": "A",
        "name": "Crystal Ball Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 469,
        "index": "B",
        "name": "Chat Online",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 469,
        "index": "A",
        "name": "I Wanna Be the Guy",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 468,
        "index": "E",
        "name": "Permanent",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graph matchings",
          "math",
          "meet-in-the-middle"
        ],
        "points": 3100
      },
      {
        "contestId": 468,
        "index": "D",
        "name": "Tree",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings"
        ],
        "points": 3100
      },
      {
        "contestId": 468,
        "index": "C",
        "name": "Hack it!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 468,
        "index": "B",
        "name": "Two Sets",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "dsu",
          "graph matchings",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 468,
        "index": "A",
        "name": "24 Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 467,
        "index": "E",
        "name": "Alex and Complicated Task",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 467,
        "index": "D",
        "name": "Fedor and Essay",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "hashing",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 467,
        "index": "C",
        "name": "George and Job",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 467,
        "index": "B",
        "name": "Fedor and New Game",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 467,
        "index": "A",
        "name": "George and Accommodation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 466,
        "index": "E",
        "name": "Information Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 466,
        "index": "D",
        "name": "Increase Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 466,
        "index": "C",
        "name": "Number of Ways",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 466,
        "index": "B",
        "name": "Wonder Room",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 466,
        "index": "A",
        "name": "Cheap Travel",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 465,
        "index": "B",
        "name": "Inbox (100500)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 465,
        "index": "A",
        "name": "inc ARG",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 464,
        "index": "E",
        "name": "The Classic Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 464,
        "index": "D",
        "name": "World of Darkraft - 2",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 464,
        "index": "C",
        "name": "Substitutes in Number",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 464,
        "index": "B",
        "name": "Restore Cube",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 464,
        "index": "A",
        "name": "No to Palindromes!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 463,
        "index": "E",
        "name": "Caisa and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 463,
        "index": "D",
        "name": "Gargari and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 463,
        "index": "C",
        "name": "Gargari and Bishops",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 463,
        "index": "B",
        "name": "Caisa and Pylons",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 463,
        "index": "A",
        "name": "Caisa and Sugar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 462,
        "index": "B",
        "name": "Appleman and Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 462,
        "index": "A",
        "name": "Appleman and Easy Task",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 461,
        "index": "E",
        "name": "Appleman and a Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "shortest paths",
          "strings"
        ],
        "points": 3000
      },
      {
        "contestId": 461,
        "index": "D",
        "name": "Appleman and Complicated Task",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 461,
        "index": "C",
        "name": "Appleman and a Sheet of Paper",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 461,
        "index": "B",
        "name": "Appleman and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 461,
        "index": "A",
        "name": "Appleman and Toastman",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 460,
        "index": "E",
        "name": "Roland and Rose",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 460,
        "index": "D",
        "name": "Little Victor and Set",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 460,
        "index": "C",
        "name": "Present",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 460,
        "index": "B",
        "name": "Little Dima and Equation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 460,
        "index": "A",
        "name": "Vasya and Socks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 459,
        "index": "E",
        "name": "Pashmak and Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 459,
        "index": "D",
        "name": "Pashmak and Parmida's problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 459,
        "index": "C",
        "name": "Pashmak and Buses",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 459,
        "index": "B",
        "name": "Pashmak and Flowers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 459,
        "index": "A",
        "name": "Pashmak and Garden",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 457,
        "index": "F",
        "name": "An easy problem about trees",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "greedy",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 457,
        "index": "E",
        "name": "Flow Optimality",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 457,
        "index": "D",
        "name": "Bingo!",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 457,
        "index": "C",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2100
      },
      {
        "contestId": 457,
        "index": "B",
        "name": "Distributed Join",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 457,
        "index": "A",
        "name": "Golden System",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "meet-in-the-middle"
        ],
        "points": 1700
      },
      {
        "contestId": 456,
        "index": "B",
        "name": "Fedya and Maths",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 456,
        "index": "A",
        "name": "Laptops",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 455,
        "index": "E",
        "name": "Function",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2900
      },
      {
        "contestId": 455,
        "index": "D",
        "name": "Serega and Fun",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 455,
        "index": "C",
        "name": "Civilization",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "ternary search",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 455,
        "index": "B",
        "name": "A Lot of Games",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games",
          "implementation",
          "strings",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 455,
        "index": "A",
        "name": "Boredom",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 454,
        "index": "B",
        "name": "Little Pony and Sort by Shift",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 454,
        "index": "A",
        "name": "Little Pony and Crystal Mine",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 453,
        "index": "E",
        "name": "Little Pony and Lord Tirek",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 453,
        "index": "D",
        "name": "Little Pony and Elements of Harmony",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 3000
      },
      {
        "contestId": 453,
        "index": "C",
        "name": "Little Pony and Summer Sun Celebration",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 453,
        "index": "B",
        "name": "Little Pony and Harmony Chest",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 453,
        "index": "A",
        "name": "Little Pony and Expected Maximum",
        "type": "PROGRAMMING",
        "tags": [
          "probabilities"
        ],
        "points": 1600
      },
      {
        "contestId": 452,
        "index": "F",
        "name": "Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "hashing"
        ],
        "points": 2700
      },
      {
        "contestId": 452,
        "index": "E",
        "name": "Three strings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "string suffix structures",
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 452,
        "index": "D",
        "name": "Washer, Dryer, Folder",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 452,
        "index": "C",
        "name": "Magic Trick",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities"
        ],
        "points": 2100
      },
      {
        "contestId": 452,
        "index": "B",
        "name": "4-point polyline",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "geometry",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 452,
        "index": "A",
        "name": "Eevee",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 451,
        "index": "E",
        "name": "Devu and Flowers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 451,
        "index": "D",
        "name": "Count Good Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 451,
        "index": "C",
        "name": "Predict Outcome of the Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 451,
        "index": "B",
        "name": "Sort the Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 451,
        "index": "A",
        "name": "Game With Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 450,
        "index": "B",
        "name": "Jzzhu and Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 450,
        "index": "A",
        "name": "Jzzhu and Children",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 449,
        "index": "E",
        "name": "Jzzhu and Squares",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 449,
        "index": "D",
        "name": "Jzzhu and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 449,
        "index": "C",
        "name": "Jzzhu and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 449,
        "index": "B",
        "name": "Jzzhu and Cities",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 449,
        "index": "A",
        "name": "Jzzhu and Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 448,
        "index": "E",
        "name": "Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "implementation",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 448,
        "index": "D",
        "name": "Multiplication Table",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force"
        ],
        "points": 1800
      },
      {
        "contestId": 448,
        "index": "C",
        "name": "Painting Fence",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 448,
        "index": "B",
        "name": "Suffix Structures",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 448,
        "index": "A",
        "name": "Rewards",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 447,
        "index": "B",
        "name": "DZY Loves Strings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 447,
        "index": "A",
        "name": "DZY Loves Hash",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 446,
        "index": "E",
        "name": "DZY Loves Bridges",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 3100
      },
      {
        "contestId": 446,
        "index": "D",
        "name": "DZY Loves Games",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 446,
        "index": "C",
        "name": "DZY Loves Fibonacci Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 446,
        "index": "B",
        "name": "DZY Loves Modification",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 446,
        "index": "A",
        "name": "DZY Loves Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 445,
        "index": "B",
        "name": "DZY Loves Chemistry",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 445,
        "index": "A",
        "name": "DZY Loves Chessboard",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 444,
        "index": "E",
        "name": "DZY Loves Planting",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dsu",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 444,
        "index": "D",
        "name": "DZY Loves Strings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "hashing",
          "strings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 444,
        "index": "C",
        "name": "DZY Loves Colors",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 444,
        "index": "B",
        "name": "DZY Loves FFT",
        "type": "PROGRAMMING",
        "tags": [
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 444,
        "index": "A",
        "name": "DZY Loves Physics",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 443,
        "index": "B",
        "name": "Kolya and Tandem Repeat",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 443,
        "index": "A",
        "name": "Anton and Letters",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 442,
        "index": "E",
        "name": "Gena and Second Distance",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3100
      },
      {
        "contestId": 442,
        "index": "D",
        "name": "Adam and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 442,
        "index": "C",
        "name": "Artem and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 442,
        "index": "B",
        "name": "Andrey and Problem",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 442,
        "index": "A",
        "name": "Borya and Hanabi",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 441,
        "index": "E",
        "name": "Valera and Number",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 441,
        "index": "D",
        "name": "Valera and Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "graphs",
          "implementation",
          "math",
          "string suffix structures"
        ],
        "points": 2100
      },
      {
        "contestId": 441,
        "index": "C",
        "name": "Valera and Tubes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 441,
        "index": "B",
        "name": "Valera and Fruits",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 441,
        "index": "A",
        "name": "Valera and Antique Items",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 440,
        "index": "D",
        "name": "Berland Federalization",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 440,
        "index": "C",
        "name": "One-Based Arithmetic",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "divide and conquer"
        ],
        "points": 1800
      },
      {
        "contestId": 440,
        "index": "B",
        "name": "Balancer",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 440,
        "index": "A",
        "name": "Forgotten Episode",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 439,
        "index": "E",
        "name": "Devu and Birthday Celebration",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 439,
        "index": "D",
        "name": "Devu and his Brother",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings",
          "ternary search",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 439,
        "index": "C",
        "name": "Devu and Partitioning of the Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 439,
        "index": "B",
        "name": "Devu, the Dumb Guy",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 439,
        "index": "A",
        "name": "Devu, the Singer and Churu, the Joker",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 438,
        "index": "E",
        "name": "The Child and Binary Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "fft",
          "number theory"
        ],
        "points": 3100
      },
      {
        "contestId": 438,
        "index": "D",
        "name": "The Child and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 437,
        "index": "E",
        "name": "The Child and Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 437,
        "index": "D",
        "name": "The Child and Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 437,
        "index": "C",
        "name": "The Child and Toy",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 437,
        "index": "B",
        "name": "The Child and Set",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 437,
        "index": "A",
        "name": "The Child and Homework",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 436,
        "index": "F",
        "name": "Banners",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 436,
        "index": "E",
        "name": "Cardboard Box",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 436,
        "index": "D",
        "name": "Pudding Monsters",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 436,
        "index": "C",
        "name": "Dungeons and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 436,
        "index": "B",
        "name": "Om Nom and Spiders",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 436,
        "index": "A",
        "name": "Feed with Candy",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 435,
        "index": "E",
        "name": "Special Graph",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 435,
        "index": "D",
        "name": "Special Grid",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 435,
        "index": "C",
        "name": "Cardiogram",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 435,
        "index": "B",
        "name": "Pasha Maximizes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 435,
        "index": "A",
        "name": "Queue on Bus Stop",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 434,
        "index": "E",
        "name": "Furukawa Nagisa's Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "divide and conquer",
          "sortings",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 434,
        "index": "D",
        "name": "Nanami's Power Plant",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2900
      },
      {
        "contestId": 433,
        "index": "E",
        "name": "Tachibana Kanade's Tofu",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 433,
        "index": "D",
        "name": "Nanami's Digital Board",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 433,
        "index": "C",
        "name": "Ryouko's Memory Note",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 433,
        "index": "B",
        "name": "Kuriyama Mirai's Stones",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 433,
        "index": "A",
        "name": "Kitahara Haruki's Gift",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 432,
        "index": "E",
        "name": "Square Tiling",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 432,
        "index": "D",
        "name": "Prefixes and Suffixes",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "string suffix structures",
          "strings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 432,
        "index": "C",
        "name": "Prime Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 432,
        "index": "B",
        "name": "Football Kit",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 432,
        "index": "A",
        "name": "Choosing Teams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 431,
        "index": "E",
        "name": "Chemistry Experiment",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "ternary search"
        ],
        "points": 2200
      },
      {
        "contestId": 431,
        "index": "D",
        "name": "Random Task",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 431,
        "index": "C",
        "name": "k-Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 431,
        "index": "B",
        "name": "Shower Line",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 431,
        "index": "A",
        "name": "Black Square",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 430,
        "index": "B",
        "name": "Balls Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 430,
        "index": "A",
        "name": "Points and Segments (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 429,
        "index": "E",
        "name": "Points and Segments",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 429,
        "index": "D",
        "name": "Tricky Function",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "geometry"
        ],
        "points": 2200
      },
      {
        "contestId": 429,
        "index": "C",
        "name": "Guess the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 429,
        "index": "B",
        "name": "Working out",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 429,
        "index": "A",
        "name": "Xor-tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 427,
        "index": "E",
        "name": "Police Patrol",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math",
          "ternary search"
        ],
        "points": 2000
      },
      {
        "contestId": 427,
        "index": "D",
        "name": "Match & Catch",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "string suffix structures",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 427,
        "index": "C",
        "name": "Checkposts",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 427,
        "index": "B",
        "name": "Prison Transfer",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 427,
        "index": "A",
        "name": "Police Recruits",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 426,
        "index": "B",
        "name": "Sereja and Mirroring",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 426,
        "index": "A",
        "name": "Sereja and Mugs",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 425,
        "index": "E",
        "name": "Sereja and Sets",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 425,
        "index": "D",
        "name": "Sereja and Squares",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "hashing"
        ],
        "points": 2300
      },
      {
        "contestId": 425,
        "index": "C",
        "name": "Sereja and Two Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 425,
        "index": "B",
        "name": "Sereja and Table",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 425,
        "index": "A",
        "name": "Sereja and Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 424,
        "index": "E",
        "name": "Colored Jenga",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 424,
        "index": "D",
        "name": "Biathlon Track",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "data structures",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 424,
        "index": "C",
        "name": "Magic Formulas",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 424,
        "index": "B",
        "name": "Megacity",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 424,
        "index": "A",
        "name": "Squats",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 421,
        "index": "D",
        "name": "Bug in Code",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 421,
        "index": "A",
        "name": "Pasha and Hamsters",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 420,
        "index": "E",
        "name": "Playing the ball",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 420,
        "index": "D",
        "name": "Cup Trick",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 420,
        "index": "C",
        "name": "Bug in Code",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "implementation",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 420,
        "index": "B",
        "name": "Online Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 420,
        "index": "A",
        "name": "Start Up",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 418,
        "index": "E",
        "name": "Tricky Password",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 418,
        "index": "D",
        "name": "Big Problems for Organizers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 417,
        "index": "E",
        "name": "Square Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 417,
        "index": "D",
        "name": "Cunning Gena",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 417,
        "index": "C",
        "name": "Football",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 417,
        "index": "B",
        "name": "Crash",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 417,
        "index": "A",
        "name": "Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 416,
        "index": "E",
        "name": "President's Path",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 416,
        "index": "D",
        "name": "Population Size",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 416,
        "index": "C",
        "name": "Booking System",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 416,
        "index": "B",
        "name": "Art Union",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 416,
        "index": "A",
        "name": "Guess a number!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 415,
        "index": "B",
        "name": "Mashmokh and Tokens",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 415,
        "index": "A",
        "name": "Mashmokh and Lights",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 414,
        "index": "E",
        "name": "Mashmokh's Designed Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3200
      },
      {
        "contestId": 414,
        "index": "D",
        "name": "Mashmokh and Water Tanks",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "trees",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 414,
        "index": "C",
        "name": "Mashmokh and Reverse Operation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer"
        ],
        "points": 2100
      },
      {
        "contestId": 414,
        "index": "B",
        "name": "Mashmokh and ACM",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 414,
        "index": "A",
        "name": "Mashmokh and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 413,
        "index": "E",
        "name": "Maze 2D",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2200
      },
      {
        "contestId": 413,
        "index": "D",
        "name": "2048",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 413,
        "index": "C",
        "name": "Jeopardy!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 413,
        "index": "B",
        "name": "Spyke Chatting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 413,
        "index": "A",
        "name": "Data Recovery",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 412,
        "index": "E",
        "name": "E-mail Addresses",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 412,
        "index": "D",
        "name": "Giving Awards",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2000
      },
      {
        "contestId": 412,
        "index": "C",
        "name": "Pattern",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 412,
        "index": "B",
        "name": "Network Configuration",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 412,
        "index": "A",
        "name": "Poster",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 411,
        "index": "C",
        "name": "Kicker",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 411,
        "index": "B",
        "name": "Multi-core Processor",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 411,
        "index": "A",
        "name": "Password Check",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 409,
        "index": "I",
        "name": "Feed the Golorp",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2400
      },
      {
        "contestId": 409,
        "index": "H",
        "name": "A + B Strikes Back",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "constructive algorithms",
          "dsu",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 409,
        "index": "G",
        "name": "On a plane",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "geometry"
        ],
        "points": 2200
      },
      {
        "contestId": 409,
        "index": "F",
        "name": "000001",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 409,
        "index": "E",
        "name": "Dome",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 409,
        "index": "D",
        "name": "Big Data",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 409,
        "index": "C",
        "name": "Magnum Opus",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 409,
        "index": "B",
        "name": "Mysterious Language",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 409,
        "index": "A",
        "name": "The Great Game",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 408,
        "index": "B",
        "name": "Garland",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 408,
        "index": "A",
        "name": "Line to Cashier",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 407,
        "index": "E",
        "name": "k-d-sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 407,
        "index": "D",
        "name": "Largest Submatrix 3",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing"
        ],
        "points": 2700
      },
      {
        "contestId": 407,
        "index": "C",
        "name": "Curious Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 407,
        "index": "B",
        "name": "Long Path",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 407,
        "index": "A",
        "name": "Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 406,
        "index": "E",
        "name": "Hamming Triples",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 2800
      },
      {
        "contestId": 406,
        "index": "D",
        "name": "Hill Climbing",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "geometry",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 405,
        "index": "E",
        "name": "Graph Cutting",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 405,
        "index": "D",
        "name": "Toy Sum",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 405,
        "index": "C",
        "name": "Unusual Product",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 405,
        "index": "B",
        "name": "Domino Effect",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1100
      },
      {
        "contestId": 405,
        "index": "A",
        "name": "Gravity Flip",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 404,
        "index": "E",
        "name": "Maze 1D",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 404,
        "index": "D",
        "name": "Minesweeper 1D",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 404,
        "index": "C",
        "name": "Restore Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 404,
        "index": "B",
        "name": "Marathon",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 404,
        "index": "A",
        "name": "Valera and X",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 403,
        "index": "E",
        "name": "Two Rooted Trees",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 403,
        "index": "D",
        "name": "Beautiful Pairs of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 402,
        "index": "E",
        "name": "Strictly Positive Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 402,
        "index": "D",
        "name": "Upgrading Array",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 402,
        "index": "C",
        "name": "Searching for Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 402,
        "index": "B",
        "name": "Trees in a Row",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 402,
        "index": "A",
        "name": "Nuts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 401,
        "index": "E",
        "name": "Olympic Games",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 401,
        "index": "D",
        "name": "Roman and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "dp",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 401,
        "index": "C",
        "name": "Team",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 401,
        "index": "B",
        "name": "Sereja and Contests",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 401,
        "index": "A",
        "name": "Vanya and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 400,
        "index": "E",
        "name": "Inna and Binary Logic",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 400,
        "index": "D",
        "name": "Dima and Bacteria",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 400,
        "index": "C",
        "name": "Inna and Huge Candy Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 400,
        "index": "B",
        "name": "Inna and New Matrix of Candies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "schedules"
        ],
        "points": 1200
      },
      {
        "contestId": 400,
        "index": "A",
        "name": "Inna and Choose Options",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 399,
        "index": "B",
        "name": "Red and Blue Balls",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 399,
        "index": "A",
        "name": "Pages",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ]
      },
      {
        "contestId": 398,
        "index": "E",
        "name": "Sorting Permutations",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 398,
        "index": "D",
        "name": "Instant Messanger",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ]
      },
      {
        "contestId": 398,
        "index": "C",
        "name": "Tree and Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ]
      },
      {
        "contestId": 398,
        "index": "B",
        "name": "Painting The Wall",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ]
      },
      {
        "contestId": 398,
        "index": "A",
        "name": "Cards",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ]
      },
      {
        "contestId": 397,
        "index": "B",
        "name": "On Corruption and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ]
      },
      {
        "contestId": 397,
        "index": "A",
        "name": "On Segment's Own Points",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ]
      },
      {
        "contestId": 396,
        "index": "E",
        "name": "On Iteration of One Well-Known Function",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 396,
        "index": "D",
        "name": "On Sum of Number of Inversions in Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ]
      },
      {
        "contestId": 396,
        "index": "C",
        "name": "On Changing Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "trees"
        ]
      },
      {
        "contestId": 396,
        "index": "B",
        "name": "On Sum of Fractions",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ]
      },
      {
        "contestId": 396,
        "index": "A",
        "name": "On Number of Decompositions into Multipliers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ]
      },
      {
        "contestId": 394,
        "index": "E",
        "name": "Lightbulb for Minister",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ]
      },
      {
        "contestId": 394,
        "index": "D",
        "name": "Physical Education and Buns",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ]
      },
      {
        "contestId": 394,
        "index": "C",
        "name": "Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ]
      },
      {
        "contestId": 394,
        "index": "B",
        "name": "Very Beautiful Number",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 394,
        "index": "A",
        "name": "Counting Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ]
      },
      {
        "contestId": 393,
        "index": "B",
        "name": "Three matrices",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 393,
        "index": "A",
        "name": "Nineteen",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 392,
        "index": "E",
        "name": "Deleting Substrings",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 392,
        "index": "D",
        "name": "Three Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ]
      },
      {
        "contestId": 392,
        "index": "C",
        "name": "Yet Another Number Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "matrices"
        ]
      },
      {
        "contestId": 392,
        "index": "B",
        "name": "Tower of Hanoi",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ]
      },
      {
        "contestId": 392,
        "index": "A",
        "name": "Blocked Points",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 391,
        "index": "F3",
        "name": "Stock Trading",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 391,
        "index": "F2",
        "name": "Stock Trading",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ]
      },
      {
        "contestId": 391,
        "index": "F1",
        "name": "Stock Trading",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ]
      },
      {
        "contestId": 391,
        "index": "E2",
        "name": "Three Trees",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 391,
        "index": "E1",
        "name": "Three Trees",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 391,
        "index": "D2",
        "name": "Supercollider",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ]
      },
      {
        "contestId": 391,
        "index": "D1",
        "name": "Supercollider",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ]
      },
      {
        "contestId": 391,
        "index": "C3",
        "name": "The Tournament",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 391,
        "index": "C2",
        "name": "The Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ]
      },
      {
        "contestId": 391,
        "index": "C1",
        "name": "The Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ]
      },
      {
        "contestId": 391,
        "index": "B",
        "name": "Word Folding",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ]
      },
      {
        "contestId": 391,
        "index": "A",
        "name": "Genetic Engineering",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ]
      },
      {
        "contestId": 390,
        "index": "E",
        "name": "Inna and Large Sweet Matrix",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 390,
        "index": "D",
        "name": "Inna and Sweet Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ]
      },
      {
        "contestId": 390,
        "index": "C",
        "name": "Inna and Candy Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ]
      },
      {
        "contestId": 390,
        "index": "B",
        "name": "Inna, Dima and Song",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ]
      },
      {
        "contestId": 390,
        "index": "A",
        "name": "Inna and Alarm Clock",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ]
      },
      {
        "contestId": 389,
        "index": "B",
        "name": "Fox and Cross",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 389,
        "index": "A",
        "name": "Fox and Number Game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 388,
        "index": "E",
        "name": "Fox and Meteor Shower",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3100
      },
      {
        "contestId": 388,
        "index": "D",
        "name": "Fox and Perfect Sets",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 388,
        "index": "C",
        "name": "Fox and Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 388,
        "index": "B",
        "name": "Fox and Minimal path",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "graphs",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 388,
        "index": "A",
        "name": "Fox and Box Accumulation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 387,
        "index": "E",
        "name": "George and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 387,
        "index": "D",
        "name": "George and Interesting Graph",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings"
        ],
        "points": 2200
      },
      {
        "contestId": 387,
        "index": "C",
        "name": "George and Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 387,
        "index": "B",
        "name": "George and Round",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 387,
        "index": "A",
        "name": "George and Sleep",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 386,
        "index": "D",
        "name": "Game with Points",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 386,
        "index": "C",
        "name": "Diverse Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 386,
        "index": "B",
        "name": "Fly, freebies, fly!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 386,
        "index": "A",
        "name": "Second-Price Auction",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 385,
        "index": "E",
        "name": "Bear in the Field",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 2300
      },
      {
        "contestId": 385,
        "index": "D",
        "name": "Bear and Floodlight",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "geometry"
        ],
        "points": 2200
      },
      {
        "contestId": 385,
        "index": "C",
        "name": "Bear and Prime Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 385,
        "index": "B",
        "name": "Bear and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 385,
        "index": "A",
        "name": "Bear and Raspberry",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 384,
        "index": "B",
        "name": "Multitasking",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 384,
        "index": "A",
        "name": "Coder",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 383,
        "index": "E",
        "name": "Vowels",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 383,
        "index": "D",
        "name": "Antimatter",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 383,
        "index": "C",
        "name": "Propagating tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 383,
        "index": "B",
        "name": "Volcanoes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 383,
        "index": "A",
        "name": "Milking cows",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 382,
        "index": "E",
        "name": "Ksenia and Combinatorics",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 382,
        "index": "D",
        "name": "Ksenia and Pawns",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 382,
        "index": "C",
        "name": "Arithmetic Progression",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 382,
        "index": "B",
        "name": "Number Busters",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 382,
        "index": "A",
        "name": "Ksenia and Pan Scales",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 381,
        "index": "B",
        "name": "Sereja and Stairs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 381,
        "index": "A",
        "name": "Sereja and Dima",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 800
      },
      {
        "contestId": 380,
        "index": "E",
        "name": "Sereja and Dividing",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 380,
        "index": "D",
        "name": "Sereja and Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 380,
        "index": "C",
        "name": "Sereja and Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "schedules"
        ],
        "points": 2000
      },
      {
        "contestId": 380,
        "index": "B",
        "name": "Sereja and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 380,
        "index": "A",
        "name": "Sereja and Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force"
        ],
        "points": 1600
      },
      {
        "contestId": 379,
        "index": "G",
        "name": "New Year Cactus",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3100
      },
      {
        "contestId": 379,
        "index": "F",
        "name": "New Year Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 379,
        "index": "E",
        "name": "New Year Tree Decorations",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "schedules",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 379,
        "index": "D",
        "name": "New Year Letter",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 379,
        "index": "C",
        "name": "New Year Ratings Change",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 379,
        "index": "B",
        "name": "New Year Present",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 379,
        "index": "A",
        "name": "New Year Candles",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 378,
        "index": "B",
        "name": "Semifinals",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 378,
        "index": "A",
        "name": "Playing with Dice",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 377,
        "index": "E",
        "name": "Cookie Clicker",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2800
      },
      {
        "contestId": 377,
        "index": "D",
        "name": "Developing Game",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 377,
        "index": "C",
        "name": "Captains Mode",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "games"
        ],
        "points": 2200
      },
      {
        "contestId": 377,
        "index": "B",
        "name": "Preparing for the Contest",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 377,
        "index": "A",
        "name": "Maze",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 1600
      },
      {
        "contestId": 376,
        "index": "B",
        "name": "I.O.U.",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 376,
        "index": "A",
        "name": "Lever",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 375,
        "index": "E",
        "name": "Red and Black Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 375,
        "index": "D",
        "name": "Tree and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 375,
        "index": "C",
        "name": "Circling Round Treasures",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 375,
        "index": "B",
        "name": "Maximum Submatrix 2",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 375,
        "index": "A",
        "name": "Divisible by Seven",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 374,
        "index": "E",
        "name": "Inna and Babies",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dsu",
          "geometry",
          "implementation"
        ],
        "points": 2600
      },
      {
        "contestId": 374,
        "index": "D",
        "name": "Inna and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 374,
        "index": "C",
        "name": "Inna and Dima",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 374,
        "index": "B",
        "name": "Inna and Nine",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 374,
        "index": "A",
        "name": "Inna and Pink Pony",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 373,
        "index": "B",
        "name": "Making Sequences is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 373,
        "index": "A",
        "name": "Collecting Beats is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 372,
        "index": "E",
        "name": "Drawing Circles is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 372,
        "index": "D",
        "name": "Choosing Subtree is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "trees",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 372,
        "index": "C",
        "name": "Watching Fireworks is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 372,
        "index": "B",
        "name": "Counting Rectangles is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "divide and conquer",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 372,
        "index": "A",
        "name": "Counting Kangaroos is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 371,
        "index": "E",
        "name": "Subway Innovation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 371,
        "index": "D",
        "name": "Vessels",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "implementation",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 371,
        "index": "C",
        "name": "Hamburgers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force"
        ],
        "points": 1600
      },
      {
        "contestId": 371,
        "index": "B",
        "name": "Fox Dividing Cheese",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 371,
        "index": "A",
        "name": "K-Periodic Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 370,
        "index": "E",
        "name": "Summer Reading",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 370,
        "index": "D",
        "name": "Broken Monitor",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 370,
        "index": "C",
        "name": "Mittens",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 370,
        "index": "B",
        "name": "Berland Bingo",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 370,
        "index": "A",
        "name": "Rook, Bishop and King",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math",
          "shortest paths"
        ],
        "points": 1100
      },
      {
        "contestId": 369,
        "index": "E",
        "name": "Valera and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 369,
        "index": "D",
        "name": "Valera and Fools",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 369,
        "index": "C",
        "name": "Valera and Elections",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 369,
        "index": "B",
        "name": "Valera and Contest",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 369,
        "index": "A",
        "name": "Valera and Plates",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 368,
        "index": "B",
        "name": "Sereja and Suffixes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 1100
      },
      {
        "contestId": 368,
        "index": "A",
        "name": "Sereja and Coat Rack",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 367,
        "index": "E",
        "name": "Sereja and Intervals",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 367,
        "index": "D",
        "name": "Sereja and Sets",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar"
        ],
        "points": 2400
      },
      {
        "contestId": 367,
        "index": "C",
        "name": "Sereja and the Arrangement of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 367,
        "index": "B",
        "name": "Sereja ans Anagrams",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 367,
        "index": "A",
        "name": "Sereja and Algorithm",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 366,
        "index": "E",
        "name": "Dima and Magic Guitar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 366,
        "index": "D",
        "name": "Dima and Trap Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dsu",
          "shortest paths",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 366,
        "index": "C",
        "name": "Dima and Salad",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 366,
        "index": "B",
        "name": "Dima and To-do List",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 366,
        "index": "A",
        "name": "Dima and Guards",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 365,
        "index": "B",
        "name": "The Fibonacci Segment",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 365,
        "index": "A",
        "name": "Good Number",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 364,
        "index": "E",
        "name": "Empty Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 364,
        "index": "D",
        "name": "Ghd",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "probabilities"
        ],
        "points": 2900
      },
      {
        "contestId": 364,
        "index": "C",
        "name": "Beautiful Set",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 364,
        "index": "B",
        "name": "Free Market",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 364,
        "index": "A",
        "name": "Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 363,
        "index": "E",
        "name": "Two Circles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 363,
        "index": "D",
        "name": "Renting Bikes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 363,
        "index": "C",
        "name": "Fixing Typos",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 363,
        "index": "B",
        "name": "Fence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1100
      },
      {
        "contestId": 363,
        "index": "A",
        "name": "Soroban",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 362,
        "index": "E",
        "name": "Petya and Pipes",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 362,
        "index": "D",
        "name": "Fools and Foolproof Roads",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 362,
        "index": "C",
        "name": "Insertion Sort",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 362,
        "index": "B",
        "name": "Petya and Staircases",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 362,
        "index": "A",
        "name": "Two Semiknights Meet",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 361,
        "index": "B",
        "name": "Levko and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 361,
        "index": "A",
        "name": "Levko and Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 360,
        "index": "E",
        "name": "Levko and Game",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2800
      },
      {
        "contestId": 360,
        "index": "D",
        "name": "Levko and Sets",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 360,
        "index": "C",
        "name": "Levko and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 360,
        "index": "B",
        "name": "Levko and Array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 360,
        "index": "A",
        "name": "Levko and Array Recovery",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 359,
        "index": "E",
        "name": "Neatness",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar"
        ],
        "points": 2400
      },
      {
        "contestId": 359,
        "index": "D",
        "name": "Pair of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 359,
        "index": "C",
        "name": "Prime Number",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 359,
        "index": "B",
        "name": "Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 359,
        "index": "A",
        "name": "Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 358,
        "index": "E",
        "name": "Dima and Kicks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dsu",
          "graphs",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 358,
        "index": "D",
        "name": "Dima and Hares",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 358,
        "index": "C",
        "name": "Dima and Containers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 358,
        "index": "B",
        "name": "Dima and Text Messages",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 358,
        "index": "A",
        "name": "Dima and Continuous Line",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 357,
        "index": "B",
        "name": "Flag Day",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 357,
        "index": "A",
        "name": "Group of Students",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 356,
        "index": "E",
        "name": "Xenia and String Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "implementation",
          "string suffix structures",
          "strings"
        ],
        "points": 3000
      },
      {
        "contestId": 356,
        "index": "D",
        "name": "Bags and Coins",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 356,
        "index": "C",
        "name": "Compartments",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 356,
        "index": "B",
        "name": "Xenia and Hamming",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 356,
        "index": "A",
        "name": "Knight Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 1500
      },
      {
        "contestId": 355,
        "index": "B",
        "name": "Vasya and Public Transport",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 355,
        "index": "A",
        "name": "Vasya and Digital Root",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 354,
        "index": "E",
        "name": "Lucky Number Representation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 354,
        "index": "D",
        "name": "Transferring Pyramid",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 354,
        "index": "C",
        "name": "Vasya and Beautiful Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 354,
        "index": "B",
        "name": "Game with Strings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "games"
        ],
        "points": 2400
      },
      {
        "contestId": 354,
        "index": "A",
        "name": "Vasya and Robot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 353,
        "index": "E",
        "name": "Antichain",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graph matchings",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 353,
        "index": "D",
        "name": "Queue",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 353,
        "index": "C",
        "name": "Find Maximum",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 353,
        "index": "B",
        "name": "Two Heaps",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 353,
        "index": "A",
        "name": "Domino",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 352,
        "index": "B",
        "name": "Jeff and Periods",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 352,
        "index": "A",
        "name": "Jeff and Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 351,
        "index": "E",
        "name": "Jeff and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 351,
        "index": "D",
        "name": "Jeff and Removing Periods",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 351,
        "index": "C",
        "name": "Jeff and Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2500
      },
      {
        "contestId": 351,
        "index": "B",
        "name": "Jeff and Furik",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 351,
        "index": "A",
        "name": "Jeff and Rounding",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 350,
        "index": "E",
        "name": "Wrong Floyd",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 350,
        "index": "D",
        "name": "Looking for Owls",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "geometry",
          "hashing",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 350,
        "index": "C",
        "name": "Bombs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 350,
        "index": "B",
        "name": "Resort",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 350,
        "index": "A",
        "name": "TL",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 349,
        "index": "B",
        "name": "Color the Fence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 349,
        "index": "A",
        "name": "Cinema Line",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 348,
        "index": "E",
        "name": "Pilgrims",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 348,
        "index": "D",
        "name": "Turtles",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 2500
      },
      {
        "contestId": 348,
        "index": "C",
        "name": "Subset Sums",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 348,
        "index": "B",
        "name": "Apple Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "number theory",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 348,
        "index": "A",
        "name": "Mafia",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 347,
        "index": "B",
        "name": "Fixed Points",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 347,
        "index": "A",
        "name": "Difference Row",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 346,
        "index": "E",
        "name": "Doodle Jump",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 3000
      },
      {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 346,
        "index": "C",
        "name": "Number Transformation II",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 346,
        "index": "B",
        "name": "Lucky Common Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 346,
        "index": "A",
        "name": "Alice and Bob",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 345,
        "index": "G",
        "name": "Suffix Subgroup",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 345,
        "index": "F",
        "name": "Superstitions Inspection",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2700
      },
      {
        "contestId": 345,
        "index": "E",
        "name": "Black Cat Rush",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2700
      },
      {
        "contestId": 345,
        "index": "D",
        "name": "Chain Letter",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 345,
        "index": "C",
        "name": "Counting Fridays",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 345,
        "index": "B",
        "name": "Triskaidekaphobia",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 345,
        "index": "A",
        "name": "Expecting Trouble",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "probabilities"
        ],
        "points": 1500
      },
      {
        "contestId": 344,
        "index": "B",
        "name": "Simple Molecules",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 344,
        "index": "A",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 343,
        "index": "E",
        "name": "Pumping Stations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "divide and conquer",
          "flows",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 343,
        "index": "D",
        "name": "Water Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 343,
        "index": "C",
        "name": "Read Time",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 343,
        "index": "B",
        "name": "Alternating Current",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 343,
        "index": "A",
        "name": "Rational Resistance",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 342,
        "index": "E",
        "name": "Xenia and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 342,
        "index": "D",
        "name": "Xenia and Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 342,
        "index": "C",
        "name": "Cupboard and Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1900
      },
      {
        "contestId": 342,
        "index": "B",
        "name": "Xenia and Spies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 342,
        "index": "A",
        "name": "Xenia and Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 341,
        "index": "E",
        "name": "Candies Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 341,
        "index": "D",
        "name": "Iahub and Xors",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 340,
        "index": "E",
        "name": "Iahub and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 340,
        "index": "D",
        "name": "Bubble Sort Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 340,
        "index": "C",
        "name": "Tourist Problem",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 340,
        "index": "B",
        "name": "Maximal Area Quadrilateral",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 340,
        "index": "A",
        "name": "The Wall",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 339,
        "index": "E",
        "name": "Three Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 339,
        "index": "D",
        "name": "Xenia and Bit Operations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 339,
        "index": "C",
        "name": "Xenia and Weights",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 339,
        "index": "B",
        "name": "Xenia and Ringroad",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 339,
        "index": "A",
        "name": "Helpful Maths",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 338,
        "index": "E",
        "name": "Optimize!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 338,
        "index": "D",
        "name": "GCD Table",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "math",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 337,
        "index": "E",
        "name": "Divisor Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 337,
        "index": "D",
        "name": "Book of Evil",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dp",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 337,
        "index": "C",
        "name": "Quiz",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "matrices",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 337,
        "index": "B",
        "name": "Routine Problem",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 337,
        "index": "A",
        "name": "Puzzles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 336,
        "index": "E",
        "name": "Vasily the Bear and Painting Square",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 336,
        "index": "C",
        "name": "Vasily the Bear and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 336,
        "index": "B",
        "name": "Vasily the Bear and Fly",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 336,
        "index": "A",
        "name": "Vasily the Bear and Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 335,
        "index": "F",
        "name": "Buy One, Get One Free",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 335,
        "index": "E",
        "name": "Counting Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 335,
        "index": "D",
        "name": "Rectangles and Square",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 335,
        "index": "C",
        "name": "More Reclamation",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2100
      },
      {
        "contestId": 335,
        "index": "B",
        "name": "Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 335,
        "index": "A",
        "name": "Banana",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 334,
        "index": "B",
        "name": "Eight Point Sets",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 334,
        "index": "A",
        "name": "Candy Bags",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 333,
        "index": "E",
        "name": "Summer Earnings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "geometry",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 333,
        "index": "D",
        "name": "Characteristics of Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 333,
        "index": "C",
        "name": "Lucky Tickets",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 2700
      },
      {
        "contestId": 333,
        "index": "B",
        "name": "Chips",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 333,
        "index": "A",
        "name": "Secrets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 332,
        "index": "E",
        "name": "Binary Key",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 332,
        "index": "D",
        "name": "Theft of Blueprints",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 332,
        "index": "C",
        "name": "Students' Revenge",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 332,
        "index": "B",
        "name": "Maximum Absurdity",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 332,
        "index": "A",
        "name": "Down the Hatch!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 331,
        "index": "E2",
        "name": "Deja Vu",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp"
        ],
        "points": 3100
      },
      {
        "contestId": 331,
        "index": "E1",
        "name": "Deja Vu",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 2900
      },
      {
        "contestId": 331,
        "index": "D3",
        "name": "Escaping on Beaveractor",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 331,
        "index": "D2",
        "name": "Escaping on Beaveractor",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 331,
        "index": "D1",
        "name": "Escaping on Beaveractor",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 331,
        "index": "C3",
        "name": "The Great Julya Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 331,
        "index": "C2",
        "name": "The Great Julya Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 331,
        "index": "C1",
        "name": "The Great Julya Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1100
      },
      {
        "contestId": 331,
        "index": "B2",
        "name": "Shave Beaver!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 331,
        "index": "B1",
        "name": "Shave Beaver!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 331,
        "index": "A2",
        "name": "Oh Sweet Beaverette",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 331,
        "index": "A1",
        "name": "Oh Sweet Beaverette",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 330,
        "index": "B",
        "name": "Road Construction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1300
      },
      {
        "contestId": 330,
        "index": "A",
        "name": "Cakeminator",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 329,
        "index": "E",
        "name": "Evil",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 329,
        "index": "D",
        "name": "The Evil Temple and the Moving Rocks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 329,
        "index": "C",
        "name": "Graph Reconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2400
      },
      {
        "contestId": 329,
        "index": "B",
        "name": "Biridian Forest",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "shortest paths"
        ],
        "points": 1500
      },
      {
        "contestId": 329,
        "index": "A",
        "name": "Purification",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 328,
        "index": "B",
        "name": "Sheldon and Ice Pieces",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 328,
        "index": "A",
        "name": "IQ Test",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 327,
        "index": "E",
        "name": "Axis Walking",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "constructive algorithms",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 2300
      },
      {
        "contestId": 327,
        "index": "D",
        "name": "Block Tower",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 327,
        "index": "C",
        "name": "Magic Five",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 327,
        "index": "B",
        "name": "Hungry Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 327,
        "index": "A",
        "name": "Flipping Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 325,
        "index": "E",
        "name": "The Red Button",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 325,
        "index": "D",
        "name": "Reclamation",
        "type": "PROGRAMMING",
        "tags": [
          "dsu"
        ],
        "points": 2900
      },
      {
        "contestId": 325,
        "index": "C",
        "name": "Monsters and Diamonds",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 325,
        "index": "B",
        "name": "Stadium and Games",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 325,
        "index": "A",
        "name": "Square and Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 323,
        "index": "C",
        "name": "Two permutations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 323,
        "index": "B",
        "name": "Tournament-graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 323,
        "index": "A",
        "name": "Black-and-White Cube",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 322,
        "index": "B",
        "name": "Ciel and Flowers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 322,
        "index": "A",
        "name": "Ciel and Dancing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 321,
        "index": "E",
        "name": "Ciel and Gondolas",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 321,
        "index": "D",
        "name": "Ciel and Flipboard",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 321,
        "index": "C",
        "name": "Ciel the Commander",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "divide and conquer",
          "greedy",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 321,
        "index": "B",
        "name": "Ciel and Duel",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 321,
        "index": "A",
        "name": "Ciel and Robot",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 320,
        "index": "B",
        "name": "Ping-Pong (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 320,
        "index": "A",
        "name": "Magic Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 319,
        "index": "E",
        "name": "Ping-Pong",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 319,
        "index": "D",
        "name": "Have You Ever Heard About the Word?",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 319,
        "index": "C",
        "name": "Kalila and Dimna in the Logging Industry",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 319,
        "index": "B",
        "name": "Psychos in a Line",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 319,
        "index": "A",
        "name": "Malek Dance Club",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 318,
        "index": "B",
        "name": "Strings of Power",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 318,
        "index": "A",
        "name": "Even Odds",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 317,
        "index": "E",
        "name": "Princess and Her Shadow",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "shortest paths"
        ],
        "points": 3100
      },
      {
        "contestId": 317,
        "index": "D",
        "name": "Game with Powers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2300
      },
      {
        "contestId": 317,
        "index": "C",
        "name": "Balance",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 317,
        "index": "B",
        "name": "Ants",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 317,
        "index": "A",
        "name": "Perfect Pair",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1600
      },
      {
        "contestId": 316,
        "index": "G3",
        "name": "Good Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures"
        ],
        "points": 2400
      },
      {
        "contestId": 316,
        "index": "G2",
        "name": "Good Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures"
        ],
        "points": 2200
      },
      {
        "contestId": 316,
        "index": "G1",
        "name": "Good Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 316,
        "index": "F3",
        "name": "Suns and Rays",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 316,
        "index": "F2",
        "name": "Suns and Rays",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 316,
        "index": "F1",
        "name": "Suns and Rays",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 316,
        "index": "E3",
        "name": "Summer Homework",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 316,
        "index": "E2",
        "name": "Summer Homework",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 316,
        "index": "E1",
        "name": "Summer Homework",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 316,
        "index": "D3",
        "name": "PE Lesson",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 316,
        "index": "D2",
        "name": "PE Lesson",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 316,
        "index": "D1",
        "name": "PE Lesson",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 316,
        "index": "C2",
        "name": "Tidying Up",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings"
        ],
        "points": 2300
      },
      {
        "contestId": 316,
        "index": "C1",
        "name": "Tidying Up",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2200
      },
      {
        "contestId": 316,
        "index": "B2",
        "name": "EKG",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 316,
        "index": "B1",
        "name": "EKG",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar"
        ],
        "points": 1500
      },
      {
        "contestId": 316,
        "index": "A2",
        "name": "Special Task",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 316,
        "index": "A1",
        "name": "Special Task",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 315,
        "index": "B",
        "name": "Sereja and Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 315,
        "index": "A",
        "name": "Sereja and Bottles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 314,
        "index": "E",
        "name": "Sereja and Squares",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 314,
        "index": "D",
        "name": "Sereja and Straight Lines",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "geometry",
          "sortings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 314,
        "index": "C",
        "name": "Sereja and Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 314,
        "index": "B",
        "name": "Sereja and Periods",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 314,
        "index": "A",
        "name": "Sereja and Contest",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 313,
        "index": "E",
        "name": "Ilya and Two Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dsu",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 313,
        "index": "D",
        "name": "Ilya and Roads",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 313,
        "index": "C",
        "name": "Ilya and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 313,
        "index": "B",
        "name": "Ilya and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 313,
        "index": "A",
        "name": "Ilya and Bank Account",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 312,
        "index": "B",
        "name": "Archer",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 1300
      },
      {
        "contestId": 312,
        "index": "A",
        "name": "Whose sentence is it?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 311,
        "index": "E",
        "name": "Biologist",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 2300
      },
      {
        "contestId": 311,
        "index": "D",
        "name": "Interval Cubing",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 311,
        "index": "C",
        "name": "Fetch the Treasure",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 311,
        "index": "B",
        "name": "Cats Transport",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 311,
        "index": "A",
        "name": "The Closest Pair",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 309,
        "index": "E",
        "name": "Sheep",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 309,
        "index": "D",
        "name": "Tennis Rackets",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 309,
        "index": "C",
        "name": "Memory for Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 309,
        "index": "B",
        "name": "Context Advertising",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 309,
        "index": "A",
        "name": "Morning run",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 306,
        "index": "D",
        "name": "Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry"
        ],
        "points": 2300
      },
      {
        "contestId": 306,
        "index": "C",
        "name": "White, Black and White Again",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 306,
        "index": "B",
        "name": "Optimizer",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 306,
        "index": "A",
        "name": "Candies",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 305,
        "index": "E",
        "name": "Playing with String",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2300
      },
      {
        "contestId": 305,
        "index": "D",
        "name": "Olya and Graph",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 305,
        "index": "C",
        "name": "Ivan and Powers of Two",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 305,
        "index": "B",
        "name": "Continued Fractions",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 305,
        "index": "A",
        "name": "Strange Addition",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 304,
        "index": "B",
        "name": "Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 304,
        "index": "A",
        "name": "Pythagorean Theorem II",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 303,
        "index": "E",
        "name": "Random Ranking",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 3000
      },
      {
        "contestId": 303,
        "index": "D",
        "name": "Rotatable Number",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 303,
        "index": "C",
        "name": "Minimum Modular",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 303,
        "index": "B",
        "name": "Rectangle Puzzle II",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 303,
        "index": "A",
        "name": "Lucky Permutation Triple",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 302,
        "index": "B",
        "name": "Eugeny and Play List",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 302,
        "index": "A",
        "name": "Eugeny and Array",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 301,
        "index": "E",
        "name": "Yaroslav and Arrangements",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 301,
        "index": "D",
        "name": "Yaroslav and Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 301,
        "index": "C",
        "name": "Yaroslav and Algorithm",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 301,
        "index": "B",
        "name": "Yaroslav and Time",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 301,
        "index": "A",
        "name": "Yaroslav and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 300,
        "index": "E",
        "name": "Empire Strikes Back",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 300,
        "index": "D",
        "name": "Painting Square",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "fft"
        ],
        "points": 2300
      },
      {
        "contestId": 300,
        "index": "C",
        "name": "Beautiful Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics"
        ],
        "points": 1800
      },
      {
        "contestId": 300,
        "index": "B",
        "name": "Coach",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 300,
        "index": "A",
        "name": "Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 299,
        "index": "B",
        "name": "Ksusha the Squirrel",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 299,
        "index": "A",
        "name": "Ksusha and Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 298,
        "index": "B",
        "name": "Sail",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 298,
        "index": "A",
        "name": "Snow Footprints",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 297,
        "index": "E",
        "name": "Mystic Carvings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 297,
        "index": "D",
        "name": "Color the Carpet",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 297,
        "index": "C",
        "name": "Splitting the Uniqueness",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2400
      },
      {
        "contestId": 297,
        "index": "B",
        "name": "Fish Weight",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 297,
        "index": "A",
        "name": "Parity Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1700
      },
      {
        "contestId": 296,
        "index": "B",
        "name": "Yaroslav and Two Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 296,
        "index": "A",
        "name": "Yaroslav and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 295,
        "index": "E",
        "name": "Yaroslav and Points",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 295,
        "index": "D",
        "name": "Greg and Caves",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 295,
        "index": "B",
        "name": "Greg and Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 295,
        "index": "A",
        "name": "Greg and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 294,
        "index": "E",
        "name": "Shaass the Great",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 294,
        "index": "D",
        "name": "Shaass and Painter Robot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 294,
        "index": "C",
        "name": "Shaass and Lights",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 294,
        "index": "B",
        "name": "Shaass and Bookshelf",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 294,
        "index": "A",
        "name": "Shaass and Oskols",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 293,
        "index": "E",
        "name": "Close Vertices",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 293,
        "index": "D",
        "name": "Ksusha and Square",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math",
          "probabilities",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 293,
        "index": "C",
        "name": "Cube Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 293,
        "index": "B",
        "name": "Distinct Paths",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics"
        ],
        "points": 2700
      },
      {
        "contestId": 293,
        "index": "A",
        "name": "Weird Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 292,
        "index": "E",
        "name": "Copying Data",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 292,
        "index": "D",
        "name": "Connected Components",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "dsu"
        ],
        "points": 1900
      },
      {
        "contestId": 292,
        "index": "C",
        "name": "Beautiful IP Addresses",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2000
      },
      {
        "contestId": 292,
        "index": "B",
        "name": "Network Topology",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 292,
        "index": "A",
        "name": "SMSC",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 291,
        "index": "E",
        "name": "Tree-String Problem",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "hashing",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 291,
        "index": "D",
        "name": "Parallel Programming",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 291,
        "index": "C",
        "name": "Network Mask",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "bitmasks",
          "brute force",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 291,
        "index": "B",
        "name": "Command Line Arguments",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 291,
        "index": "A",
        "name": "Spyke Talks",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 290,
        "index": "F",
        "name": "Greedy Petya",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 290,
        "index": "E",
        "name": "HQ",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 290,
        "index": "D",
        "name": "Orange",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 290,
        "index": "C",
        "name": "WTF?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graph matchings",
          "implementation",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 290,
        "index": "B",
        "name": "QR code",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 290,
        "index": "A",
        "name": "Mysterious strings",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 289,
        "index": "B",
        "name": "Polo the Penguin and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation",
          "sortings",
          "ternary search"
        ],
        "points": 1400
      },
      {
        "contestId": 289,
        "index": "A",
        "name": "Polo the Penguin and Segments",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 288,
        "index": "E",
        "name": "Polo the Penguin and Lucky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 288,
        "index": "D",
        "name": "Polo the Penguin and Trees",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 288,
        "index": "C",
        "name": "Polo the Penguin and XOR operation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 288,
        "index": "B",
        "name": "Polo the Penguin and Houses",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1500
      },
      {
        "contestId": 288,
        "index": "A",
        "name": "Polo the Penguin and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 287,
        "index": "B",
        "name": "Pipeline",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 287,
        "index": "A",
        "name": "IQ Test",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 286,
        "index": "E",
        "name": "Ladies' Shop",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "fft",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 286,
        "index": "D",
        "name": "Tourists",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 286,
        "index": "C",
        "name": "Main Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 286,
        "index": "B",
        "name": "Shifting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 286,
        "index": "A",
        "name": "Lucky Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 285,
        "index": "E",
        "name": "Positions in Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 285,
        "index": "D",
        "name": "Permutation Sum",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "implementation",
          "meet-in-the-middle"
        ],
        "points": 1900
      },
      {
        "contestId": 285,
        "index": "C",
        "name": "Building Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 285,
        "index": "B",
        "name": "Find Marble",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 285,
        "index": "A",
        "name": "Slightly Decreasing Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 284,
        "index": "B",
        "name": "Cows and Poker Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 284,
        "index": "A",
        "name": "Cows and Primitive Roots",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 283,
        "index": "E",
        "name": "Cow Tennis Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 283,
        "index": "D",
        "name": "Cows and Cool Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 283,
        "index": "C",
        "name": "Coin Troubles",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 283,
        "index": "B",
        "name": "Cow Program",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 283,
        "index": "A",
        "name": "Cows and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 282,
        "index": "E",
        "name": "Sausage Maximization",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 282,
        "index": "D",
        "name": "Yet Another Number Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2100
      },
      {
        "contestId": 282,
        "index": "C",
        "name": "XOR and OR",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 282,
        "index": "B",
        "name": "Painting Eggs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 282,
        "index": "A",
        "name": "Bit++",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 281,
        "index": "B",
        "name": "Nearest Fraction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 281,
        "index": "A",
        "name": "Word Capitalization",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "implementation",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 280,
        "index": "D",
        "name": "k-Maximum Subsequence Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "flows",
          "graphs",
          "implementation"
        ],
        "points": 2800
      },
      {
        "contestId": 280,
        "index": "C",
        "name": "Game on Tree",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 280,
        "index": "B",
        "name": "Maximum Xor Secondary",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 280,
        "index": "A",
        "name": "Rectangle Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 279,
        "index": "E",
        "name": "Beautiful Decomposition",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "greedy",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 279,
        "index": "D",
        "name": "The Minimum Number of Variables",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 279,
        "index": "C",
        "name": "Ladder",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 279,
        "index": "B",
        "name": "Books",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 279,
        "index": "A",
        "name": "Point on Spiral",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 278,
        "index": "B",
        "name": "New Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 278,
        "index": "A",
        "name": "Circle Line",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 277,
        "index": "E",
        "name": "Binary Tree on Plane",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 277,
        "index": "D",
        "name": "Google Code Jam",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2800
      },
      {
        "contestId": 277,
        "index": "C",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 277,
        "index": "B",
        "name": "Set of Points",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry"
        ],
        "points": 2300
      },
      {
        "contestId": 277,
        "index": "A",
        "name": "Learning Languages",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu"
        ],
        "points": 1400
      },
      {
        "contestId": 276,
        "index": "E",
        "name": "Little Girl and Problem on Trees",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 276,
        "index": "D",
        "name": "Little Girl and Maximum XOR",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 276,
        "index": "C",
        "name": "Little Girl and Maximum Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 276,
        "index": "B",
        "name": "Little Girl and Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 276,
        "index": "A",
        "name": "Lunch Rush",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 275,
        "index": "B",
        "name": "Convex Shape",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 275,
        "index": "A",
        "name": "Lights Out",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 274,
        "index": "E",
        "name": "Mirror Room",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 3000
      },
      {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 274,
        "index": "C",
        "name": "The Last Hole!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 274,
        "index": "B",
        "name": "Zero Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 274,
        "index": "A",
        "name": "k-Multiple Free Set",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 273,
        "index": "E",
        "name": "Dima and Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2600
      },
      {
        "contestId": 273,
        "index": "D",
        "name": "Dima and Figure",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 272,
        "index": "E",
        "name": "Dima and Horses",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 272,
        "index": "D",
        "name": "Dima and Two Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 272,
        "index": "B",
        "name": "Dima and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 272,
        "index": "A",
        "name": "Dima and Friends",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 271,
        "index": "E",
        "name": "Three Horses",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 271,
        "index": "D",
        "name": "Good Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 271,
        "index": "C",
        "name": "Secret",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 271,
        "index": "B",
        "name": "Prime Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 271,
        "index": "A",
        "name": "Beautiful Year",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 270,
        "index": "B",
        "name": "Multithreading",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 270,
        "index": "A",
        "name": "Fancy Fence",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 269,
        "index": "E",
        "name": "String Theory",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math",
          "strings"
        ],
        "points": 3100
      },
      {
        "contestId": 269,
        "index": "D",
        "name": "Maximum Waterfall",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 269,
        "index": "C",
        "name": "Flawed Flow",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "flows",
          "graphs",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 269,
        "index": "B",
        "name": "Greenhouse Effect",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 269,
        "index": "A",
        "name": "Magical Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 268,
        "index": "E",
        "name": "Playlist",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 268,
        "index": "D",
        "name": "Wall Bars",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 268,
        "index": "C",
        "name": "Beautiful Sets of Points",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 268,
        "index": "B",
        "name": "Buttons",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 268,
        "index": "A",
        "name": "Games",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 267,
        "index": "C",
        "name": "Berland Traffic",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 267,
        "index": "B",
        "name": "Dominoes",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 267,
        "index": "A",
        "name": "Subtractions",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 266,
        "index": "E",
        "name": "More Queries to Array...",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 266,
        "index": "D",
        "name": "BerDonalds",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 266,
        "index": "C",
        "name": "Below the Diagonal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 266,
        "index": "B",
        "name": "Queue at the School",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graph matchings",
          "implementation",
          "shortest paths"
        ],
        "points": 800
      },
      {
        "contestId": 266,
        "index": "A",
        "name": "Stones on the Table",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 265,
        "index": "B",
        "name": "Roadside Trees (Simplified Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 265,
        "index": "A",
        "name": "Colorful Stones (Simplified Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 264,
        "index": "E",
        "name": "Roadside Trees",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 264,
        "index": "D",
        "name": "Colorful Stones",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 264,
        "index": "C",
        "name": "Choosing Balls",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 264,
        "index": "B",
        "name": "Good Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 264,
        "index": "A",
        "name": "Escape from Stones",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "implementation",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 263,
        "index": "E",
        "name": "Rhombus",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 263,
        "index": "D",
        "name": "Cycle in Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 263,
        "index": "C",
        "name": "Circle of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 263,
        "index": "B",
        "name": "Squares",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 263,
        "index": "A",
        "name": "Beautiful Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 262,
        "index": "B",
        "name": "Roma and Changing Signs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 262,
        "index": "A",
        "name": "Roma and Lucky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 261,
        "index": "E",
        "name": "Maxim and Calculator",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "two pointers"
        ],
        "points": 2800
      },
      {
        "contestId": 261,
        "index": "D",
        "name": "Maxim and Increasing Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 261,
        "index": "C",
        "name": "Maxim and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 261,
        "index": "B",
        "name": "Maxim and Restaurant",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 261,
        "index": "A",
        "name": "Maxim and Discounts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 260,
        "index": "E",
        "name": "Dividing Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 260,
        "index": "D",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 260,
        "index": "C",
        "name": "Balls and Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 260,
        "index": "B",
        "name": "Ancient Prophesy",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 260,
        "index": "A",
        "name": "Adding Digits",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 259,
        "index": "B",
        "name": "Little Elephant and Magic Square",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 259,
        "index": "A",
        "name": "Little Elephant and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 258,
        "index": "E",
        "name": "Little Elephant and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 258,
        "index": "D",
        "name": "Little Elephant and Broken Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 258,
        "index": "C",
        "name": "Little Elephant and LCM",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 258,
        "index": "B",
        "name": "Little Elephant and Elections",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 258,
        "index": "A",
        "name": "Little Elephant and Bits",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 257,
        "index": "E",
        "name": "Greedy Elevator",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 257,
        "index": "D",
        "name": "Sum",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 257,
        "index": "C",
        "name": "View Angle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 257,
        "index": "B",
        "name": "Playing Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 257,
        "index": "A",
        "name": "Sockets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 256,
        "index": "E",
        "name": "Lucky Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 256,
        "index": "D",
        "name": "Liars and Serge",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 255,
        "index": "E",
        "name": "Furlo and Rublo and Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 255,
        "index": "D",
        "name": "Mr. Bender and Square",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 255,
        "index": "C",
        "name": "Almost Arithmetical Progression",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 255,
        "index": "B",
        "name": "Code Parsing",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 255,
        "index": "A",
        "name": "Greg's Workout",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 254,
        "index": "E",
        "name": "Dormitory",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 254,
        "index": "D",
        "name": "Rats",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 254,
        "index": "C",
        "name": "Anagram",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 254,
        "index": "B",
        "name": "Jury Size",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 254,
        "index": "A",
        "name": "Cards with Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 253,
        "index": "E",
        "name": "Printer",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 253,
        "index": "D",
        "name": "Table with Letters - 2",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 253,
        "index": "C",
        "name": "Text Editor",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 253,
        "index": "B",
        "name": "Physics Practical",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "sortings",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 253,
        "index": "A",
        "name": "Boys and Girls",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 252,
        "index": "B",
        "name": "Unsorting Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 252,
        "index": "A",
        "name": "Little Xor",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 251,
        "index": "E",
        "name": "Tree and Table",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "implementation",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 251,
        "index": "D",
        "name": "Two Sets",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 251,
        "index": "B",
        "name": "Playing with Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 251,
        "index": "A",
        "name": "Points on Line",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 250,
        "index": "E",
        "name": "Mad Joe",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2000
      },
      {
        "contestId": 250,
        "index": "D",
        "name": "Building Bridge",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "ternary search",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 250,
        "index": "C",
        "name": "Movie Critics",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 250,
        "index": "B",
        "name": "Restoring IPv6",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 250,
        "index": "A",
        "name": "Paper Work",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 249,
        "index": "E",
        "name": "Endless Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 249,
        "index": "D",
        "name": "Donkey and Stars",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry",
          "math",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 248,
        "index": "E",
        "name": "Piglet's Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 248,
        "index": "D",
        "name": "Sweets for Everyone!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 248,
        "index": "C",
        "name": "Robo-Footballer",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 248,
        "index": "B",
        "name": "Chilly Willy",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 248,
        "index": "A",
        "name": "Cupboards",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 246,
        "index": "E",
        "name": "Blood Cousins Return",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dp",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 246,
        "index": "D",
        "name": "Colorful Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 246,
        "index": "C",
        "name": "Beauty Pageant",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 246,
        "index": "B",
        "name": "Increase and Decrease",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 246,
        "index": "A",
        "name": "Buggy Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 245,
        "index": "H",
        "name": "Queries for Number of Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 245,
        "index": "G",
        "name": "Suggested Friends",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 245,
        "index": "F",
        "name": "Log Stream Analysis",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 245,
        "index": "E",
        "name": "Mishap in Club",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 245,
        "index": "D",
        "name": "Restoring Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 245,
        "index": "C",
        "name": "Game with Coins",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 245,
        "index": "B",
        "name": "Internet Address",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 245,
        "index": "A",
        "name": "System Administrator",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 244,
        "index": "B",
        "name": "Undoubtedly Lucky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar"
        ],
        "points": 1600
      },
      {
        "contestId": 244,
        "index": "A",
        "name": "Dividing Orange",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 243,
        "index": "E",
        "name": "Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 243,
        "index": "D",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "geometry",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 243,
        "index": "C",
        "name": "Colorado Potato Beetle",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 243,
        "index": "B",
        "name": "Hydra",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 243,
        "index": "A",
        "name": "The Brand New Function",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 1600
      },
      {
        "contestId": 242,
        "index": "E",
        "name": "XOR on Segment",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 242,
        "index": "D",
        "name": "Dispute",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 242,
        "index": "C",
        "name": "King's Path",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "hashing",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 242,
        "index": "B",
        "name": "Big Segment",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 242,
        "index": "A",
        "name": "Heads or Tails",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 241,
        "index": "G",
        "name": "Challenging Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 241,
        "index": "F",
        "name": "Race",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 241,
        "index": "E",
        "name": "Flights",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 241,
        "index": "D",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 241,
        "index": "C",
        "name": "Mirror Box",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 241,
        "index": "B",
        "name": "Friends",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "data structures",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 241,
        "index": "A",
        "name": "Old Peykan",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 240,
        "index": "F",
        "name": "TorCoder",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 240,
        "index": "E",
        "name": "Road Repairs",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 239,
        "index": "B",
        "name": "Easy Tape Programming",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 239,
        "index": "A",
        "name": "Two Bags of Potatoes",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 238,
        "index": "E",
        "name": "Meeting Her",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 238,
        "index": "D",
        "name": "Tape Programming",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2900
      },
      {
        "contestId": 238,
        "index": "C",
        "name": "World Eater Brothers",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 238,
        "index": "B",
        "name": "Boring Partition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 238,
        "index": "A",
        "name": "Not Wool Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 237,
        "index": "E",
        "name": "Build String",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 237,
        "index": "D",
        "name": "T-decomposition",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 237,
        "index": "C",
        "name": "Primes on Interval",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "number theory",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 237,
        "index": "B",
        "name": "Young Table",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 237,
        "index": "A",
        "name": "Free Cash",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 236,
        "index": "B",
        "name": "Easy Number Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 236,
        "index": "A",
        "name": "Boy or Girl",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 235,
        "index": "E",
        "name": "Number Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 235,
        "index": "D",
        "name": "Graph Game",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 235,
        "index": "C",
        "name": "Cyclical Quest",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "string suffix structures",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 235,
        "index": "B",
        "name": "Let's Play Osu!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 235,
        "index": "A",
        "name": "LCM Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 234,
        "index": "H",
        "name": "Merging Two Decks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 234,
        "index": "G",
        "name": "Practice",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 234,
        "index": "F",
        "name": "Fence",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 234,
        "index": "E",
        "name": "Champions' League",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 234,
        "index": "D",
        "name": "Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 234,
        "index": "C",
        "name": "Weather",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 234,
        "index": "B",
        "name": "Reading",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 234,
        "index": "A",
        "name": "Lefthanders and Righthanders",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 233,
        "index": "B",
        "name": "Non-square Equation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 233,
        "index": "A",
        "name": "Perfect Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 232,
        "index": "E",
        "name": "Quick Tortoise",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 232,
        "index": "D",
        "name": "Fence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "string suffix structures"
        ],
        "points": 2900
      },
      {
        "contestId": 232,
        "index": "C",
        "name": "Doe Graphs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 232,
        "index": "B",
        "name": "Table",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 232,
        "index": "A",
        "name": "Cycles",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 231,
        "index": "E",
        "name": "Cactus",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 231,
        "index": "D",
        "name": "Magic Box",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 1600
      },
      {
        "contestId": 231,
        "index": "C",
        "name": "To Add or Not to Add",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 231,
        "index": "B",
        "name": "Magic, Wizardry and Wonders",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 231,
        "index": "A",
        "name": "Team",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 800
      },
      {
        "contestId": 230,
        "index": "B",
        "name": "T-primes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 230,
        "index": "A",
        "name": "Dragons",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 229,
        "index": "E",
        "name": "Gifts",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 229,
        "index": "D",
        "name": "Towers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 229,
        "index": "C",
        "name": "Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 229,
        "index": "B",
        "name": "Planets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 229,
        "index": "A",
        "name": "Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 228,
        "index": "E",
        "name": "The Road to Berland is Paved With Good Intentions",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 228,
        "index": "D",
        "name": "Zigzag",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 228,
        "index": "C",
        "name": "Fractal Detector",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "hashing"
        ],
        "points": 2000
      },
      {
        "contestId": 228,
        "index": "B",
        "name": "Two Tables",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 228,
        "index": "A",
        "name": "Is your horseshoe on the other hoof?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 227,
        "index": "B",
        "name": "Effective Approach",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 227,
        "index": "A",
        "name": "Where do I Turn?",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1300
      },
      {
        "contestId": 226,
        "index": "E",
        "name": "Noble Knight's Path",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 226,
        "index": "D",
        "name": "The table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 226,
        "index": "C",
        "name": "Anniversary",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math",
          "matrices",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 226,
        "index": "B",
        "name": "Naughty Stone Piles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 226,
        "index": "A",
        "name": "Flying Saucer Segments",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 225,
        "index": "E",
        "name": "Unsolvable",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 225,
        "index": "D",
        "name": "Snake",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 225,
        "index": "C",
        "name": "Barcode",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 1700
      },
      {
        "contestId": 225,
        "index": "B",
        "name": "Well-known Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 225,
        "index": "A",
        "name": "Dice Tower",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 224,
        "index": "B",
        "name": "Array",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "implementation",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 224,
        "index": "A",
        "name": "Parallelepiped",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 223,
        "index": "E",
        "name": "Planar Graph",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "geometry",
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 223,
        "index": "D",
        "name": "Spider",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 223,
        "index": "C",
        "name": "Partial Sums",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 223,
        "index": "B",
        "name": "Two Strings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 223,
        "index": "A",
        "name": "Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "expression parsing",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 222,
        "index": "E",
        "name": "Decoding Genome",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "matrices"
        ],
        "points": 1900
      },
      {
        "contestId": 222,
        "index": "D",
        "name": "Olympiad",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 222,
        "index": "C",
        "name": "Reducing Fractions",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 222,
        "index": "B",
        "name": "Cosmic Tables",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 222,
        "index": "A",
        "name": "Shooshuns and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 221,
        "index": "B",
        "name": "Little Elephant and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 221,
        "index": "A",
        "name": "Little Elephant and Function",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 220,
        "index": "E",
        "name": "Little Elephant and Inversions",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 220,
        "index": "D",
        "name": "Little Elephant and Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 220,
        "index": "C",
        "name": "Little Elephant and Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 220,
        "index": "B",
        "name": "Little Elephant and Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 1800
      },
      {
        "contestId": 220,
        "index": "A",
        "name": "Little Elephant and Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 219,
        "index": "E",
        "name": "Parking Lot",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 219,
        "index": "D",
        "name": "Choosing Capital for Treeland",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 219,
        "index": "C",
        "name": "Color Stripe",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 219,
        "index": "B",
        "name": "Special Offer! Super Price 999 Bourles!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 219,
        "index": "A",
        "name": "k-String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 218,
        "index": "B",
        "name": "Airport",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 218,
        "index": "A",
        "name": "Mountain Scenery",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 217,
        "index": "E",
        "name": "Alien DNA",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 217,
        "index": "D",
        "name": "Bitonix' Patrol",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "combinatorics",
          "dfs and similar",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 217,
        "index": "C",
        "name": "Formurosa",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "expression parsing"
        ],
        "points": 2600
      },
      {
        "contestId": 217,
        "index": "B",
        "name": "Blackboard Fibonacci",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 217,
        "index": "A",
        "name": "Ice Skating",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1200
      },
      {
        "contestId": 216,
        "index": "E",
        "name": "Martian Luck",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 216,
        "index": "D",
        "name": "Spider's Web",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 216,
        "index": "C",
        "name": "Hiring Staff",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 216,
        "index": "B",
        "name": "Forming Teams",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 216,
        "index": "A",
        "name": "Tiling with Hexagons",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 215,
        "index": "E",
        "name": "Periodical Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 215,
        "index": "D",
        "name": "Hot Days",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 215,
        "index": "C",
        "name": "Crosses",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 215,
        "index": "B",
        "name": "Olympic Medal",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 215,
        "index": "A",
        "name": "Bicycle Chain",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 214,
        "index": "B",
        "name": "Hometask",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 214,
        "index": "A",
        "name": "System of Equations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 213,
        "index": "E",
        "name": "Two Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 213,
        "index": "D",
        "name": "Stars",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry"
        ],
        "points": 2300
      },
      {
        "contestId": 213,
        "index": "C",
        "name": "Relay Race",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 213,
        "index": "B",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 213,
        "index": "A",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 212,
        "index": "E",
        "name": "IT Restaurants",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 212,
        "index": "D",
        "name": "Cutting a Fence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dsu"
        ],
        "points": 2500
      },
      {
        "contestId": 212,
        "index": "C",
        "name": "Cowboys",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 212,
        "index": "B",
        "name": "Polycarpus is Looking for Good Substrings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "hashing",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 212,
        "index": "A",
        "name": "Privatization",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 209,
        "index": "C",
        "name": "Trails and Glades",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 209,
        "index": "B",
        "name": "Pixels",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 209,
        "index": "A",
        "name": "Multicolored Marbles",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 208,
        "index": "E",
        "name": "Blood Cousins",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 208,
        "index": "D",
        "name": "Prizes, Prizes, more Prizes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 208,
        "index": "C",
        "name": "Police Station",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 208,
        "index": "B",
        "name": "Solitaire",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 208,
        "index": "A",
        "name": "Dubstep",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 207,
        "index": "D9",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 207,
        "index": "D8",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 207,
        "index": "D7",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 207,
        "index": "D6",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 207,
        "index": "D5",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 207,
        "index": "D4",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 207,
        "index": "D3",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 207,
        "index": "D2",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 207,
        "index": "D10",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 207,
        "index": "D1",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 207,
        "index": "C3",
        "name": "Game with Two Trees",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 207,
        "index": "C2",
        "name": "Game with Two Trees",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 207,
        "index": "C1",
        "name": "Game with Two Trees",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 207,
        "index": "B3",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 207,
        "index": "B2",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 207,
        "index": "B1",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 207,
        "index": "A3",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 207,
        "index": "A2",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 207,
        "index": "A1",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 205,
        "index": "B",
        "name": "Little Elephant and Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 205,
        "index": "A",
        "name": "Little Elephant and Rozdil",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 204,
        "index": "E",
        "name": "Little Elephant and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "string suffix structures",
          "two pointers"
        ],
        "points": 2800
      },
      {
        "contestId": 204,
        "index": "D",
        "name": "Little Elephant and Retro Strings",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 204,
        "index": "C",
        "name": "Little Elephant and Furik and Rubik",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 204,
        "index": "B",
        "name": "Little Elephant and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 204,
        "index": "A",
        "name": "Little Elephant and Interval",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 203,
        "index": "E",
        "name": "Transportation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 203,
        "index": "D",
        "name": "Hit Ball",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 203,
        "index": "C",
        "name": "Photographer",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 203,
        "index": "B",
        "name": "Game on Paper",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 203,
        "index": "A",
        "name": "Two Problems",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 202,
        "index": "B",
        "name": "Brand New Easy Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1700
      },
      {
        "contestId": 202,
        "index": "A",
        "name": "LLPS",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 201,
        "index": "E",
        "name": "Thoroughly Bureaucratic Organization",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics"
        ],
        "points": 2600
      },
      {
        "contestId": 201,
        "index": "D",
        "name": "Brand New Problem",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 201,
        "index": "C",
        "name": "Fragile Bridges",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 201,
        "index": "B",
        "name": "Guess That Car!",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "ternary search"
        ],
        "points": 1800
      },
      {
        "contestId": 201,
        "index": "A",
        "name": "Clear Symmetry",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 200,
        "index": "E",
        "name": "Tractor College",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory",
          "ternary search"
        ],
        "points": 2400
      },
      {
        "contestId": 200,
        "index": "D",
        "name": "Programming Language",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "expression parsing",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 200,
        "index": "C",
        "name": "Football Championship",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 200,
        "index": "B",
        "name": "Drinks",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 200,
        "index": "A",
        "name": "Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 199,
        "index": "B",
        "name": "Special Olympics",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1900
      },
      {
        "contestId": 199,
        "index": "A",
        "name": "Hexadecimal's theorem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 198,
        "index": "E",
        "name": "Gripping Story",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 198,
        "index": "D",
        "name": "Cube Snake",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2700
      },
      {
        "contestId": 198,
        "index": "C",
        "name": "Delivering Carcinogen",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 198,
        "index": "B",
        "name": "Jumping on Walls",
        "type": "PROGRAMMING",
        "tags": [
          "shortest paths"
        ],
        "points": 1400
      },
      {
        "contestId": 198,
        "index": "A",
        "name": "About Bacteria",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 197,
        "index": "B",
        "name": "Limit",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 197,
        "index": "A",
        "name": "Plate Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 196,
        "index": "E",
        "name": "Opening Portals",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 196,
        "index": "D",
        "name": "The Next Good String",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "hashing",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 196,
        "index": "C",
        "name": "Paint Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "geometry",
          "sortings",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 196,
        "index": "B",
        "name": "Infinite Maze",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 196,
        "index": "A",
        "name": "Lexicographically Maximum Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 195,
        "index": "E",
        "name": "Building Forest",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 195,
        "index": "D",
        "name": "Analyzing Polyline",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 195,
        "index": "C",
        "name": "Try and Catch",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 195,
        "index": "B",
        "name": "After Training",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 195,
        "index": "A",
        "name": "Let's Watch Football",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 194,
        "index": "B",
        "name": "Square",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 194,
        "index": "A",
        "name": "Exams",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 193,
        "index": "E",
        "name": "Fibonacci Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "matrices"
        ],
        "points": 2900
      },
      {
        "contestId": 193,
        "index": "D",
        "name": "Two Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2900
      },
      {
        "contestId": 193,
        "index": "C",
        "name": "Hamming Distance",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 193,
        "index": "B",
        "name": "Xor",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2000
      },
      {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 192,
        "index": "B",
        "name": "Walking in the Rain",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 192,
        "index": "A",
        "name": "Funky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 191,
        "index": "E",
        "name": "Thwarting Demonstrations",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 191,
        "index": "D",
        "name": "Metro Scheme",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 191,
        "index": "C",
        "name": "Fools and Roads",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 191,
        "index": "B",
        "name": "Demonstration",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 191,
        "index": "A",
        "name": "Dynasty Puzzles",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 190,
        "index": "E",
        "name": "Counter Attack",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs",
          "hashing",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 190,
        "index": "D",
        "name": "Non-Secret Cypher",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 190,
        "index": "C",
        "name": "STL",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 1500
      },
      {
        "contestId": 190,
        "index": "B",
        "name": "Surrounded",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 190,
        "index": "A",
        "name": "Vasya and the Bus",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 189,
        "index": "B",
        "name": "Counting Rhombi",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 189,
        "index": "A",
        "name": "Cut Ribbon",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1300
      },
      {
        "contestId": 188,
        "index": "H",
        "name": "Stack",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "expression parsing",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 188,
        "index": "G",
        "name": "Array Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 188,
        "index": "F",
        "name": "Binary Notation",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 188,
        "index": "E",
        "name": "HQ9+",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 188,
        "index": "D",
        "name": "Asterisks",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 188,
        "index": "C",
        "name": "LCM",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 188,
        "index": "B",
        "name": "A + Reverse B",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 188,
        "index": "A",
        "name": "Hexagonal Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1100
      },
      {
        "contestId": 187,
        "index": "E",
        "name": "Heaven Tour",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 187,
        "index": "D",
        "name": "BRT Contract",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 187,
        "index": "C",
        "name": "Weak Memory",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu"
        ],
        "points": 2000
      },
      {
        "contestId": 187,
        "index": "B",
        "name": "AlgoRace",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 187,
        "index": "A",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 186,
        "index": "B",
        "name": "Growing Mushrooms",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 186,
        "index": "A",
        "name": "Comparing Strings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 185,
        "index": "E",
        "name": "Soap Time! - 2",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 185,
        "index": "D",
        "name": "Visit of the Great",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 185,
        "index": "C",
        "name": "Clever Fat Rat",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 185,
        "index": "B",
        "name": "Mushroom Scientists",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "ternary search"
        ],
        "points": 1800
      },
      {
        "contestId": 185,
        "index": "A",
        "name": "Plant",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 183,
        "index": "E",
        "name": "Candy Shop",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 183,
        "index": "D",
        "name": "T-shirt",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 183,
        "index": "C",
        "name": "Cyclic Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2200
      },
      {
        "contestId": 183,
        "index": "B",
        "name": "Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 1700
      },
      {
        "contestId": 183,
        "index": "A",
        "name": "Headquarters",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 182,
        "index": "E",
        "name": "Wooden Fence",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 182,
        "index": "D",
        "name": "Common Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "hashing",
          "implementation",
          "math",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 182,
        "index": "C",
        "name": "Optimal Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 182,
        "index": "B",
        "name": "Vasya's Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 182,
        "index": "A",
        "name": "Battlefield",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 181,
        "index": "B",
        "name": "Number of Triplets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 181,
        "index": "A",
        "name": "Series of Crimes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 180,
        "index": "F",
        "name": "Mathematical Analysis Rocks!",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 180,
        "index": "D",
        "name": "Name",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 180,
        "index": "C",
        "name": "Letter",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1400
      },
      {
        "contestId": 180,
        "index": "B",
        "name": "Divisibility Rules",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 180,
        "index": "A",
        "name": "Defragmentation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 178,
        "index": "F3",
        "name": "Representative Sampling",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 178,
        "index": "F2",
        "name": "Representative Sampling",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 178,
        "index": "F1",
        "name": "Representative Sampling",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 178,
        "index": "E3",
        "name": "The Beaver's Problem - 2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 178,
        "index": "E2",
        "name": "The Beaver's Problem - 2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 178,
        "index": "E1",
        "name": "The Beaver's Problem - 2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 178,
        "index": "D3",
        "name": "Magic Squares",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 178,
        "index": "D2",
        "name": "Magic Squares",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 178,
        "index": "D1",
        "name": "Magic Squares",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 178,
        "index": "C3",
        "name": "Smart Beaver and Resolving Collisions",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 178,
        "index": "C2",
        "name": "Smart Beaver and Resolving Collisions",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 178,
        "index": "C1",
        "name": "Smart Beaver and Resolving Collisions",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 178,
        "index": "B3",
        "name": "Greedy Merchants",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 178,
        "index": "B2",
        "name": "Greedy Merchants",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 178,
        "index": "B1",
        "name": "Greedy Merchants",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 178,
        "index": "A3",
        "name": "Educational Game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 178,
        "index": "A2",
        "name": "Educational Game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 178,
        "index": "A1",
        "name": "Educational Game",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1000
      },
      {
        "contestId": 177,
        "index": "G2",
        "name": "Fibonacci Strings",
        "type": "PROGRAMMING",
        "tags": [
          "matrices",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 177,
        "index": "G1",
        "name": "Fibonacci Strings",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2400
      },
      {
        "contestId": 177,
        "index": "F2",
        "name": "Script Generation",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 177,
        "index": "F1",
        "name": "Script Generation",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 177,
        "index": "E2",
        "name": "Space Voyage",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1900
      },
      {
        "contestId": 177,
        "index": "E1",
        "name": "Space Voyage",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1700
      },
      {
        "contestId": 177,
        "index": "D2",
        "name": "Encrypting Messages",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 177,
        "index": "D1",
        "name": "Encrypting Messages",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1200
      },
      {
        "contestId": 177,
        "index": "C2",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 177,
        "index": "C1",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 177,
        "index": "B2",
        "name": "Rectangular Game",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 177,
        "index": "B1",
        "name": "Rectangular Game",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 177,
        "index": "A2",
        "name": "Good Matrix Elements",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 177,
        "index": "A1",
        "name": "Good Matrix Elements",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 176,
        "index": "E",
        "name": "Archaeology",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 176,
        "index": "D",
        "name": "Hyper String",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 176,
        "index": "C",
        "name": "Playing with Superglue",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms"
        ],
        "points": 2000
      },
      {
        "contestId": 176,
        "index": "B",
        "name": "Word Cut",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 176,
        "index": "A",
        "name": "Trading Business",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 175,
        "index": "F",
        "name": "Gnomes of Might and Magic",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 175,
        "index": "E",
        "name": "Power Defence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "geometry",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 175,
        "index": "D",
        "name": "Plane of Tanks: Duel",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 175,
        "index": "C",
        "name": "Geometry Horse",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 175,
        "index": "B",
        "name": "Plane of Tanks: Pro",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 175,
        "index": "A",
        "name": "Robot Bicorn Attack",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 174,
        "index": "C",
        "name": "Range Increments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 174,
        "index": "B",
        "name": "File List",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 174,
        "index": "A",
        "name": "Problem About Equation",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 173,
        "index": "E",
        "name": "Camping Groups",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 173,
        "index": "D",
        "name": "Deputies",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 173,
        "index": "C",
        "name": "Spiral Maximum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 173,
        "index": "B",
        "name": "Chamber of Secrets",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 173,
        "index": "A",
        "name": "Rock-Paper-Scissors",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 172,
        "index": "E",
        "name": "BHTML+BCSS",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "expression parsing"
        ],
        "points": 2200
      },
      {
        "contestId": 172,
        "index": "D",
        "name": "Calendar Reform",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 172,
        "index": "C",
        "name": "Bus",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 172,
        "index": "B",
        "name": "Pseudorandom Sequence Period",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 172,
        "index": "A",
        "name": "Phone Code",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 171,
        "index": "H",
        "name": "A polyline",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 171,
        "index": "G",
        "name": "Mysterious numbers - 2",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 171,
        "index": "F",
        "name": "ucyhf",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "implementation",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 171,
        "index": "E",
        "name": "MYSTERIOUS LANGUAGE",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 171,
        "index": "D",
        "name": "Broken checker",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 171,
        "index": "C",
        "name": "A Piece of Cake",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 171,
        "index": "B",
        "name": "Star",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "combinatorics"
        ],
        "points": 1300
      },
      {
        "contestId": 171,
        "index": "A",
        "name": "Mysterious numbers - 1",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ],
        "points": 1200
      },
      {
        "contestId": 169,
        "index": "B",
        "name": "Replacing Digits",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 169,
        "index": "A",
        "name": "Chores",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 168,
        "index": "B",
        "name": "Wizards and Minimal Spell",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 168,
        "index": "A",
        "name": "Wizards and Demonstration",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 167,
        "index": "E",
        "name": "Wizards and Bets",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math",
          "matrices"
        ],
        "points": 2900
      },
      {
        "contestId": 167,
        "index": "D",
        "name": "Wizards and Roads",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "graph matchings",
          "graphs",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 167,
        "index": "C",
        "name": "Wizards and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 167,
        "index": "B",
        "name": "Wizards and Huge Prize",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 167,
        "index": "A",
        "name": "Wizards and Trolleybuses",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 166,
        "index": "E",
        "name": "Tetrahedron",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices"
        ],
        "points": 1500
      },
      {
        "contestId": 166,
        "index": "D",
        "name": "Shoe Store",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graph matchings",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 166,
        "index": "C",
        "name": "Median",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 166,
        "index": "B",
        "name": "Polygons",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 166,
        "index": "A",
        "name": "Rank List",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 165,
        "index": "E",
        "name": "Compatible Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 165,
        "index": "D",
        "name": "Beard Graph",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 165,
        "index": "C",
        "name": "Another Problem on Strings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "math",
          "strings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 165,
        "index": "B",
        "name": "Burning Midnight Oil",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 165,
        "index": "A",
        "name": "Supercentral Point",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 164,
        "index": "E",
        "name": "Polycarpus and Tasks",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 164,
        "index": "D",
        "name": "Minimum Diameter",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force"
        ],
        "points": 3100
      },
      {
        "contestId": 164,
        "index": "C",
        "name": "Machine Programming",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 164,
        "index": "B",
        "name": "Ancient Berland Hieroglyphs",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 163,
        "index": "E",
        "name": "e-Government",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "strings",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 163,
        "index": "D",
        "name": "Large Refrigerator",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2900
      },
      {
        "contestId": 163,
        "index": "C",
        "name": "Conveyor",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 163,
        "index": "B",
        "name": "Lemmings",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 2000
      },
      {
        "contestId": 163,
        "index": "A",
        "name": "Substring and Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 162,
        "index": "J",
        "name": "Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 162,
        "index": "I",
        "name": "Truncatable primes",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 162,
        "index": "H",
        "name": "Alternating case",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 162,
        "index": "G",
        "name": "Non-decimal sum",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 162,
        "index": "F",
        "name": "Factorial zeros",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 162,
        "index": "E",
        "name": "HQ9+",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 162,
        "index": "D",
        "name": "Remove digits",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 162,
        "index": "C",
        "name": "Prime factorization",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 162,
        "index": "B",
        "name": "Binary notation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 162,
        "index": "A",
        "name": "Pentagonal numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 161,
        "index": "E",
        "name": "Polycarpus the Safecracker",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 161,
        "index": "D",
        "name": "Distance in Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 161,
        "index": "C",
        "name": "Abracadabra",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer"
        ],
        "points": 2400
      },
      {
        "contestId": 161,
        "index": "B",
        "name": "Discounts",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 161,
        "index": "A",
        "name": "Dress'em in Vests!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "greedy",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 160,
        "index": "E",
        "name": "Buses and People",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 160,
        "index": "D",
        "name": "Edges in MST",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 160,
        "index": "C",
        "name": "Find Pair",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 160,
        "index": "B",
        "name": "Unlucky Ticket",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 160,
        "index": "A",
        "name": "Twins",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 159,
        "index": "E",
        "name": "Zebra Tower",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 159,
        "index": "D",
        "name": "Palindrome pairs",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "dp",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 159,
        "index": "C",
        "name": "String Manipulation 1.0",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "brute force",
          "data structures",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 159,
        "index": "B",
        "name": "Matchmaker",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 159,
        "index": "A",
        "name": "Friends or Not",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 158,
        "index": "E",
        "name": "Phone Talks",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 158,
        "index": "D",
        "name": "Ice Sculptures",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 158,
        "index": "C",
        "name": "Cd and pwd commands",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 158,
        "index": "B",
        "name": "Taxi",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 158,
        "index": "A",
        "name": "Next Round",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 157,
        "index": "B",
        "name": "Trace",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 157,
        "index": "A",
        "name": "Game Outcome",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 156,
        "index": "E",
        "name": "Mrs. Hudson's Pancakes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 156,
        "index": "D",
        "name": "Clues",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 156,
        "index": "C",
        "name": "Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 156,
        "index": "B",
        "name": "Suspects",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 156,
        "index": "A",
        "name": "Message",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1700
      },
      {
        "contestId": 155,
        "index": "B",
        "name": "Combination",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 155,
        "index": "A",
        "name": "I_love_\\%username\\%",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 154,
        "index": "E",
        "name": "Martian Colony",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 154,
        "index": "D",
        "name": "Flatland Fencing",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 154,
        "index": "C",
        "name": "Double Profiles",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "hashing",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 154,
        "index": "B",
        "name": "Colliders",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 154,
        "index": "A",
        "name": "Hometask",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 153,
        "index": "E",
        "name": "Euclidean Distance",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 153,
        "index": "D",
        "name": "Date Change",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 153,
        "index": "C",
        "name": "Caesar Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2200
      },
      {
        "contestId": 153,
        "index": "B",
        "name": "Binary notation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 153,
        "index": "A",
        "name": "A + B",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 152,
        "index": "E",
        "name": "Garden",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 152,
        "index": "D",
        "name": "Frames",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2600
      },
      {
        "contestId": 152,
        "index": "C",
        "name": "Pocket Book",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1400
      },
      {
        "contestId": 152,
        "index": "B",
        "name": "Steps",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 152,
        "index": "A",
        "name": "Marks",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 151,
        "index": "B",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 151,
        "index": "A",
        "name": "Soft Drinking",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 150,
        "index": "E",
        "name": "Freezing with Style",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 150,
        "index": "D",
        "name": "Mission Impassable",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 150,
        "index": "C",
        "name": "Smart Cheater",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 150,
        "index": "B",
        "name": "Quantity of Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 150,
        "index": "A",
        "name": "Win or Freeze",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 149,
        "index": "E",
        "name": "Martian Strings",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 149,
        "index": "D",
        "name": "Coloring Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 149,
        "index": "C",
        "name": "Division into Teams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 149,
        "index": "B",
        "name": "Martian Clock",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 149,
        "index": "A",
        "name": "Business trip",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 148,
        "index": "E",
        "name": "Porcelain",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 148,
        "index": "D",
        "name": "Bag of mice",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "math",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 148,
        "index": "C",
        "name": "Terse princess",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 148,
        "index": "B",
        "name": "Escape",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 148,
        "index": "A",
        "name": "Insomnia cure",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 147,
        "index": "B",
        "name": "Smile House",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "matrices"
        ],
        "points": 2500
      },
      {
        "contestId": 147,
        "index": "A",
        "name": "Punctuation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 146,
        "index": "B",
        "name": "Lucky Mask",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 146,
        "index": "A",
        "name": "Lucky Ticket",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 145,
        "index": "E",
        "name": "Lucky Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 145,
        "index": "D",
        "name": "Lucky Pair",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "implementation"
        ],
        "points": 2900
      },
      {
        "contestId": 145,
        "index": "C",
        "name": "Lucky Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 145,
        "index": "B",
        "name": "Lucky Number 2",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 145,
        "index": "A",
        "name": "Lucky Conversion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 144,
        "index": "E",
        "name": "Competition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 144,
        "index": "D",
        "name": "Missile Silos",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 144,
        "index": "C",
        "name": "Anagram Search",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 144,
        "index": "B",
        "name": "Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 144,
        "index": "A",
        "name": "Arrival of the General",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 143,
        "index": "B",
        "name": "Help Kingdom of Far Far Away 2",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 143,
        "index": "A",
        "name": "Help Vasilisa the Wise 2",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 142,
        "index": "E",
        "name": "Help Greg the Dwarf 2",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3000
      },
      {
        "contestId": 142,
        "index": "D",
        "name": "Help Shrek and Donkey 2",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2600
      },
      {
        "contestId": 142,
        "index": "C",
        "name": "Help Caretaker",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 142,
        "index": "B",
        "name": "Help General",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 142,
        "index": "A",
        "name": "Help Farmer",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 141,
        "index": "E",
        "name": "Clearing Up",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "dsu",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 141,
        "index": "D",
        "name": "Take-off Ramps",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 141,
        "index": "C",
        "name": "Queue",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 141,
        "index": "B",
        "name": "Hopscotch",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 141,
        "index": "A",
        "name": "Amusing Joke",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 140,
        "index": "F",
        "name": "New Year Snowflake",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 140,
        "index": "E",
        "name": "New Year Garland",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 140,
        "index": "D",
        "name": "New Year Contest",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 140,
        "index": "C",
        "name": "New Year Snowmen",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 140,
        "index": "B",
        "name": "New Year Cards",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 140,
        "index": "A",
        "name": "New Year Table",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 139,
        "index": "B",
        "name": "Wallpaper",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 139,
        "index": "A",
        "name": "Petr and Book",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 138,
        "index": "E",
        "name": "Hellish Constraints",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "two pointers"
        ],
        "points": 2900
      },
      {
        "contestId": 138,
        "index": "D",
        "name": "World of Darkraft",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2500
      },
      {
        "contestId": 138,
        "index": "C",
        "name": "Mushroom Gnomes - 2",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "probabilities",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 138,
        "index": "B",
        "name": "Digits Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 138,
        "index": "A",
        "name": "Literature Lesson",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 137,
        "index": "E",
        "name": "Last Chance",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 137,
        "index": "D",
        "name": "Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 137,
        "index": "C",
        "name": "History",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 137,
        "index": "B",
        "name": "Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 137,
        "index": "A",
        "name": "Postcards and photos",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 136,
        "index": "B",
        "name": "Ternary Logic",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 136,
        "index": "A",
        "name": "Presents",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 135,
        "index": "E",
        "name": "Weak Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 3000
      },
      {
        "contestId": 135,
        "index": "D",
        "name": "Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 135,
        "index": "C",
        "name": "Zero-One",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 135,
        "index": "B",
        "name": "Rectangle and Square",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 135,
        "index": "A",
        "name": "Replacement",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 134,
        "index": "C",
        "name": "Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 134,
        "index": "B",
        "name": "Pairs of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 134,
        "index": "A",
        "name": "Average Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 133,
        "index": "B",
        "name": "Unary",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 133,
        "index": "A",
        "name": "HQ9+",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 132,
        "index": "E",
        "name": "Bits of merry old England",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 132,
        "index": "D",
        "name": "Constants in the language of Shakespeare",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 132,
        "index": "C",
        "name": "Logo Turtle",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 132,
        "index": "B",
        "name": "Piet",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 132,
        "index": "A",
        "name": "Turing Tape",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 131,
        "index": "F",
        "name": "Present to Mom",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 131,
        "index": "E",
        "name": "Yet Another Task with Queens",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 131,
        "index": "D",
        "name": "Subway",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 131,
        "index": "C",
        "name": "The World is a Theatre",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 131,
        "index": "B",
        "name": "Opposites Attract",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 131,
        "index": "A",
        "name": "cAPS lOCK",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 130,
        "index": "J",
        "name": "Date calculation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1800
      },
      {
        "contestId": 130,
        "index": "I",
        "name": "Array sorting",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 130,
        "index": "H",
        "name": "Balanced brackets",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 130,
        "index": "G",
        "name": "CAPS LOCK ON",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 130,
        "index": "F",
        "name": "Prime factorization",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 130,
        "index": "E",
        "name": "Tribonacci numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 130,
        "index": "D",
        "name": "Exponentiation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1500
      },
      {
        "contestId": 130,
        "index": "C",
        "name": "Decimal sum",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1500
      },
      {
        "contestId": 130,
        "index": "B",
        "name": "Gnikool Ssalg",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "strings"
        ],
        "points": 1400
      },
      {
        "contestId": 130,
        "index": "A",
        "name": "Hexagonal numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 129,
        "index": "B",
        "name": "Students and Shoelaces",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 129,
        "index": "A",
        "name": "Cookies",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 128,
        "index": "E",
        "name": "Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 128,
        "index": "D",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 128,
        "index": "C",
        "name": "Games with Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 128,
        "index": "B",
        "name": "String",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "hashing",
          "implementation",
          "string suffix structures",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 128,
        "index": "A",
        "name": "Statues",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 1500
      },
      {
        "contestId": 127,
        "index": "B",
        "name": "Canvas Frames",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 127,
        "index": "A",
        "name": "Wasted Time",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 900
      },
      {
        "contestId": 126,
        "index": "E",
        "name": "Pills",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "flows"
        ],
        "points": 2900
      },
      {
        "contestId": 126,
        "index": "D",
        "name": "Fibonacci Sums",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 126,
        "index": "C",
        "name": "E-reader Display",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 126,
        "index": "B",
        "name": "Password",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 126,
        "index": "A",
        "name": "Hot Bath",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 125,
        "index": "E",
        "name": "MST Company",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 125,
        "index": "D",
        "name": "Two progressions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 125,
        "index": "C",
        "name": "Hobbits' Party",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 125,
        "index": "B",
        "name": "Simple XML",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 125,
        "index": "A",
        "name": "Measuring Lengths in Baden",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 124,
        "index": "B",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 124,
        "index": "A",
        "name": "The number of positions",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 123,
        "index": "E",
        "name": "Maze",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "probabilities",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 123,
        "index": "D",
        "name": "String",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures"
        ],
        "points": 2300
      },
      {
        "contestId": 123,
        "index": "C",
        "name": "Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 123,
        "index": "B",
        "name": "Squares",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 123,
        "index": "A",
        "name": "Prime Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 122,
        "index": "B",
        "name": "Lucky Substring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 122,
        "index": "A",
        "name": "Lucky Division",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 121,
        "index": "E",
        "name": "Lucky Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 121,
        "index": "D",
        "name": "Lucky Segments",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 121,
        "index": "C",
        "name": "Lucky Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 121,
        "index": "B",
        "name": "Lucky Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 121,
        "index": "A",
        "name": "Lucky Sum",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 120,
        "index": "J",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "geometry",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 120,
        "index": "I",
        "name": "Luck is in Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 120,
        "index": "H",
        "name": "Brevity is Soul of Wit",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings"
        ],
        "points": 1800
      },
      {
        "contestId": 120,
        "index": "G",
        "name": "Boom",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 120,
        "index": "F",
        "name": "Spiders",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 120,
        "index": "E",
        "name": "Put Knight!",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 120,
        "index": "D",
        "name": "Three Sons",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 120,
        "index": "C",
        "name": "Winnie-the-Pooh and honey",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 120,
        "index": "B",
        "name": "Quiz League",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 120,
        "index": "A",
        "name": "Elevator",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 119,
        "index": "E",
        "name": "Alternative Reality",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 119,
        "index": "D",
        "name": "String Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 119,
        "index": "C",
        "name": "Education Reform",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 119,
        "index": "B",
        "name": "Before Exam",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 119,
        "index": "A",
        "name": "Epic Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 118,
        "index": "E",
        "name": "Bertown roads",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 118,
        "index": "D",
        "name": "Caesar's Legions",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 118,
        "index": "C",
        "name": "Fancy Number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 118,
        "index": "B",
        "name": "Present from Lena",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 118,
        "index": "A",
        "name": "String Task",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 117,
        "index": "E",
        "name": "Tree or not Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "implementation",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 117,
        "index": "D",
        "name": "Not Quick Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 117,
        "index": "C",
        "name": "Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 117,
        "index": "B",
        "name": "Very Interesting Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 117,
        "index": "A",
        "name": "Elevator",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 116,
        "index": "B",
        "name": "Little Pigs and Wolves",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 116,
        "index": "A",
        "name": "Tram",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 115,
        "index": "E",
        "name": "Linear Kingdom Races",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 115,
        "index": "D",
        "name": "Unambiguous Arithmetic Expression",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "expression parsing"
        ],
        "points": 2600
      },
      {
        "contestId": 115,
        "index": "C",
        "name": "Plumber",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 115,
        "index": "B",
        "name": "Lawnmower",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 115,
        "index": "A",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 900
      },
      {
        "contestId": 114,
        "index": "B",
        "name": "PFAST Inc.",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 114,
        "index": "A",
        "name": "Cifera",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 113,
        "index": "E",
        "name": "Sleeping",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 113,
        "index": "D",
        "name": "Museum",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 113,
        "index": "C",
        "name": "Double Happiness",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 113,
        "index": "B",
        "name": "Petr#",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "hashing",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 113,
        "index": "A",
        "name": "Grammar Lessons",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 112,
        "index": "B",
        "name": "Petya and Square",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 112,
        "index": "A",
        "name": "Petya and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 111,
        "index": "E",
        "name": "Petya and Rectangle",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 111,
        "index": "D",
        "name": "Petya and Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 111,
        "index": "C",
        "name": "Petya and Spiders",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "dsu"
        ],
        "points": 2100
      },
      {
        "contestId": 111,
        "index": "B",
        "name": "Petya and Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 111,
        "index": "A",
        "name": "Petya and Inequiations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 110,
        "index": "B",
        "name": "Lucky String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 110,
        "index": "A",
        "name": "Nearly Lucky Number",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 109,
        "index": "E",
        "name": "Lucky Interval",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 109,
        "index": "D",
        "name": "Lucky Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 109,
        "index": "C",
        "name": "Lucky Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "dsu",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 109,
        "index": "B",
        "name": "Lucky Probability",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 109,
        "index": "A",
        "name": "Lucky Sum of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 108,
        "index": "B",
        "name": "Datatypes",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 108,
        "index": "A",
        "name": "Palindromic Times",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 107,
        "index": "E",
        "name": "Darts",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 107,
        "index": "D",
        "name": "Crime Management",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 107,
        "index": "C",
        "name": "Arrangement",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 107,
        "index": "B",
        "name": "Basketball Team",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 1600
      },
      {
        "contestId": 107,
        "index": "A",
        "name": "Dorm Water Supply",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1400
      },
      {
        "contestId": 106,
        "index": "E",
        "name": "Space Rescuers",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 106,
        "index": "D",
        "name": "Treasure Island",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 106,
        "index": "C",
        "name": "Buns",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 106,
        "index": "B",
        "name": "Choosing Laptop",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 106,
        "index": "A",
        "name": "Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 105,
        "index": "E",
        "name": "Lift and Throw",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2500
      },
      {
        "contestId": 105,
        "index": "D",
        "name": "Entertaining Geodetics",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dsu",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 105,
        "index": "C",
        "name": "Item World",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 105,
        "index": "B",
        "name": "Dark Assembly",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 105,
        "index": "A",
        "name": "Transmigration",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 104,
        "index": "A",
        "name": "Blackjack",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 103,
        "index": "E",
        "name": "Buying Sets",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings"
        ],
        "points": 2900
      },
      {
        "contestId": 103,
        "index": "D",
        "name": "Time to Raid Cowavans",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 103,
        "index": "C",
        "name": "Russian Roulette",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 103,
        "index": "B",
        "name": "Cthulhu",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 103,
        "index": "A",
        "name": "Testing Pants for Sadness",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 102,
        "index": "B",
        "name": "Sum of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 102,
        "index": "A",
        "name": "Clothes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1200
      },
      {
        "contestId": 101,
        "index": "E",
        "name": "Candies and Stones",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 101,
        "index": "D",
        "name": "Castle",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "probabilities",
          "sortings",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 101,
        "index": "C",
        "name": "Vectors",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 101,
        "index": "B",
        "name": "Buses",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 101,
        "index": "A",
        "name": "Homework",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 100,
        "index": "J",
        "name": "Interval Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 100,
        "index": "I",
        "name": "Rotation",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "geometry",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 100,
        "index": "H",
        "name": "Battleship",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dfs and similar",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 100,
        "index": "G",
        "name": "Name the album",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 100,
        "index": "F",
        "name": "Polynom",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 100,
        "index": "E",
        "name": "Lamps in a Line",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 100,
        "index": "D",
        "name": "World of Mouth",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 100,
        "index": "C",
        "name": "A+B",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 100,
        "index": "B",
        "name": "Friendly Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 100,
        "index": "A",
        "name": "Carpeting the Room",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 99,
        "index": "B",
        "name": "Help Chef Gerasim",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 99,
        "index": "A",
        "name": "Help Far Away Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 98,
        "index": "E",
        "name": "Help Shrek and Donkey",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "math",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 98,
        "index": "D",
        "name": "Help Monks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 98,
        "index": "C",
        "name": "Help Greg the Dwarf",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "ternary search"
        ],
        "points": 2500
      },
      {
        "contestId": 98,
        "index": "B",
        "name": "Help King",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "probabilities",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 98,
        "index": "A",
        "name": "Help Victoria the Wise",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 97,
        "index": "E",
        "name": "Leaders",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 97,
        "index": "D",
        "name": "Robot in Basement",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "implementation"
        ],
        "points": 2700
      },
      {
        "contestId": 97,
        "index": "C",
        "name": "Winning Strategy",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "math",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 97,
        "index": "B",
        "name": "Superset",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer"
        ],
        "points": 2300
      },
      {
        "contestId": 97,
        "index": "A",
        "name": "Domino",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 96,
        "index": "B",
        "name": "Lucky Numbers (easy)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 96,
        "index": "A",
        "name": "Football",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 95,
        "index": "E",
        "name": "Lucky Country",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 95,
        "index": "D",
        "name": "Horse Races",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 95,
        "index": "C",
        "name": "Volleyball",
        "type": "PROGRAMMING",
        "tags": [
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 95,
        "index": "B",
        "name": "Lucky Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 95,
        "index": "A",
        "name": "Hockey",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 94,
        "index": "B",
        "name": "Friends",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 94,
        "index": "A",
        "name": "Restoring Password",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 93,
        "index": "E",
        "name": "Lostborn",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2600
      },
      {
        "contestId": 93,
        "index": "D",
        "name": "Flags",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices"
        ],
        "points": 2500
      },
      {
        "contestId": 93,
        "index": "C",
        "name": "Azembler",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 93,
        "index": "B",
        "name": "End of Exams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 93,
        "index": "A",
        "name": "Frames",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 92,
        "index": "B",
        "name": "Binary Number",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 92,
        "index": "A",
        "name": "Chips",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 91,
        "index": "E",
        "name": "Igloo Skyscraper",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 91,
        "index": "D",
        "name": "Grocer's Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 91,
        "index": "C",
        "name": "Ski Base",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dsu",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 91,
        "index": "B",
        "name": "Queue",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 91,
        "index": "A",
        "name": "Newspaper Headline",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 90,
        "index": "B",
        "name": "African Crossword",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 90,
        "index": "A",
        "name": "Cableway",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 89,
        "index": "E",
        "name": "Fire and Ice",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 89,
        "index": "D",
        "name": "Space mines",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 89,
        "index": "C",
        "name": "Chip Play",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 89,
        "index": "B",
        "name": "Widget Library",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "expression parsing",
          "graphs",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 89,
        "index": "A",
        "name": "Robbery",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 88,
        "index": "B",
        "name": "Keyboard",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 88,
        "index": "A",
        "name": "Chord",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 87,
        "index": "E",
        "name": "Mogohu-Rea Idol",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 87,
        "index": "D",
        "name": "Beautiful Road",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "implementation",
          "sortings",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 87,
        "index": "C",
        "name": "Interesting Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 87,
        "index": "B",
        "name": "Vasya and Types",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 87,
        "index": "A",
        "name": "Trains",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 86,
        "index": "E",
        "name": "Long sequence",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 86,
        "index": "D",
        "name": "Powerful array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 86,
        "index": "C",
        "name": "Genetic engineering",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "string suffix structures",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 86,
        "index": "B",
        "name": "Tetris revisited",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graph matchings",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 86,
        "index": "A",
        "name": "Reflection",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 85,
        "index": "E",
        "name": "Guard Towers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dsu",
          "geometry",
          "graphs",
          "sortings"
        ],
        "points": 2600
      },
      {
        "contestId": 85,
        "index": "D",
        "name": "Sum of Medians",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 85,
        "index": "C",
        "name": "Petya and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "probabilities",
          "sortings",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 85,
        "index": "B",
        "name": "Embassy Queue",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 85,
        "index": "A",
        "name": "Domino",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 84,
        "index": "C",
        "name": "Biathlon",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 84,
        "index": "A",
        "name": "Toy Army",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 83,
        "index": "E",
        "name": "Two Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 83,
        "index": "D",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 83,
        "index": "C",
        "name": "Track",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 83,
        "index": "B",
        "name": "Doctor",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 83,
        "index": "A",
        "name": "Magical Array",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 82,
        "index": "E",
        "name": "Corridor",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 82,
        "index": "D",
        "name": "Two out of Three",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 82,
        "index": "C",
        "name": "General Mobilization",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 82,
        "index": "B",
        "name": "Sets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "hashing",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 82,
        "index": "A",
        "name": "Double Cola",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 81,
        "index": "E",
        "name": "Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 81,
        "index": "D",
        "name": "Polycarp's Picture Gallery",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 81,
        "index": "C",
        "name": "Average Score",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 81,
        "index": "B",
        "name": "Sequence Formatting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 81,
        "index": "A",
        "name": "Plug-in",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 80,
        "index": "B",
        "name": "Depression",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 80,
        "index": "A",
        "name": "Panoramix's Prediction",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 79,
        "index": "E",
        "name": "Security System",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 79,
        "index": "D",
        "name": "Password",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "shortest paths"
        ],
        "points": 2800
      },
      {
        "contestId": 79,
        "index": "C",
        "name": "Beaver",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "hashing",
          "strings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 79,
        "index": "B",
        "name": "Colorful Field",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 79,
        "index": "A",
        "name": "Bus Game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 78,
        "index": "E",
        "name": "Evacuation",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 78,
        "index": "D",
        "name": "Archer's Shot",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "math",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 78,
        "index": "C",
        "name": "Beaver Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 78,
        "index": "B",
        "name": "Easter Eggs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 78,
        "index": "A",
        "name": "Haiku",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 77,
        "index": "E",
        "name": "Martian Food",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2800
      },
      {
        "contestId": 77,
        "index": "D",
        "name": "Domino Carpet",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 77,
        "index": "C",
        "name": "Beavermuncher-0xFF",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu",
          "greedy",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 77,
        "index": "B",
        "name": "Falling Anvils",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 77,
        "index": "A",
        "name": "Heroes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 76,
        "index": "F",
        "name": "Tourist",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 76,
        "index": "E",
        "name": "Points",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 76,
        "index": "D",
        "name": "Plus and xor",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 76,
        "index": "C",
        "name": "Mutation",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 76,
        "index": "B",
        "name": "Mice",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 76,
        "index": "A",
        "name": "Gift",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "sortings",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 75,
        "index": "E",
        "name": "Ship's Shortest Path",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 75,
        "index": "D",
        "name": "Big Maximum Sum",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "math",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 75,
        "index": "C",
        "name": "Modified GCD",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 75,
        "index": "B",
        "name": "Facetook Priority Wall",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 75,
        "index": "A",
        "name": "Life Without Zeros",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 74,
        "index": "E",
        "name": "Shift It!",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2800
      },
      {
        "contestId": 74,
        "index": "D",
        "name": "Hanger",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 74,
        "index": "C",
        "name": "Chessboard Billiard",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 74,
        "index": "B",
        "name": "Train",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 74,
        "index": "A",
        "name": "Room Leader",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 73,
        "index": "F",
        "name": "Plane of Tanks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 73,
        "index": "E",
        "name": "Morrowindows",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 73,
        "index": "D",
        "name": "FreeDiv",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 73,
        "index": "C",
        "name": "LionAge II",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 73,
        "index": "B",
        "name": "Need For Brake",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 73,
        "index": "A",
        "name": "The Elder Trolls IV: Oblivon",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 72,
        "index": "I",
        "name": "Goofy Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 72,
        "index": "H",
        "name": "Reverse It!",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 72,
        "index": "G",
        "name": "Fibonacci army",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 1000
      },
      {
        "contestId": 72,
        "index": "F",
        "name": "Oil",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 72,
        "index": "E",
        "name": "Ali goes shopping",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 72,
        "index": "D",
        "name": "Perse-script",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "expression parsing"
        ],
        "points": 2300
      },
      {
        "contestId": 72,
        "index": "C",
        "name": "Extraordinarily Nice Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 72,
        "index": "B",
        "name": "INI-file",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 72,
        "index": "A",
        "name": "Goshtasp, Vishtasp and Eidi",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 71,
        "index": "E",
        "name": "Nuclear Fusion",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 71,
        "index": "D",
        "name": "Solitaire",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 71,
        "index": "B",
        "name": "Progress Bar",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 71,
        "index": "A",
        "name": "Way Too Long Words",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 70,
        "index": "E",
        "name": "Information Reform",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 70,
        "index": "D",
        "name": "Professor's task",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 70,
        "index": "C",
        "name": "Lucky Tickets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 70,
        "index": "B",
        "name": "Text Messaging",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "greedy",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 70,
        "index": "A",
        "name": "Cookies",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 69,
        "index": "E",
        "name": "Subsegments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 69,
        "index": "D",
        "name": "Dot",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 1900
      },
      {
        "contestId": 69,
        "index": "C",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 69,
        "index": "B",
        "name": "Bets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 69,
        "index": "A",
        "name": "Young Physicist",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 68,
        "index": "E",
        "name": "Contact",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 68,
        "index": "D",
        "name": "Half-decay tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2500
      },
      {
        "contestId": 68,
        "index": "C",
        "name": "Synchrophasotron",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2200
      },
      {
        "contestId": 68,
        "index": "B",
        "name": "Energy exchange",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1600
      },
      {
        "contestId": 68,
        "index": "A",
        "name": "Irrational problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 67,
        "index": "E",
        "name": "Save the City!",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 67,
        "index": "D",
        "name": "Optical Experiment",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 67,
        "index": "C",
        "name": "Sequence of Balls",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 67,
        "index": "B",
        "name": "Restoration of the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 67,
        "index": "A",
        "name": "Partial Teacher",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 66,
        "index": "E",
        "name": "Petya and Post",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 66,
        "index": "D",
        "name": "Petya and His Friends",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 66,
        "index": "C",
        "name": "Petya and File System",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 66,
        "index": "B",
        "name": "Petya and Countryside",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 66,
        "index": "A",
        "name": "Petya and Java",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 65,
        "index": "E",
        "name": "Harry Potter and Moving Staircases",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 2900
      },
      {
        "contestId": 65,
        "index": "D",
        "name": "Harry Potter and the Sorting Hat",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "hashing"
        ],
        "points": 2200
      },
      {
        "contestId": 65,
        "index": "C",
        "name": "Harry Potter and the Golden Snitch",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 65,
        "index": "B",
        "name": "Harry Potter and the History of Magic",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 65,
        "index": "A",
        "name": "Harry Potter and Three Spells",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 64,
        "index": "I",
        "name": "Sort the Table",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 64,
        "index": "H",
        "name": "Table Bowling",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 64,
        "index": "G",
        "name": "Path Canonization",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2200
      },
      {
        "contestId": 64,
        "index": "F",
        "name": "Domain",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "expression parsing"
        ],
        "points": 2000
      },
      {
        "contestId": 64,
        "index": "E",
        "name": "Prime Segment",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 64,
        "index": "D",
        "name": "Presents",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 64,
        "index": "C",
        "name": "Table",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 64,
        "index": "B",
        "name": "Expression",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "expression parsing"
        ],
        "points": 1500
      },
      {
        "contestId": 64,
        "index": "A",
        "name": "Factorial",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 63,
        "index": "E",
        "name": "Sweets Game",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp",
          "games",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 63,
        "index": "D",
        "name": "Dividing Island",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1900
      },
      {
        "contestId": 63,
        "index": "C",
        "name": "Bulls and Cows",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 63,
        "index": "B",
        "name": "Settlers' Training",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 63,
        "index": "A",
        "name": "Sinking Ship",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 62,
        "index": "E",
        "name": "World Evil",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows"
        ],
        "points": 2700
      },
      {
        "contestId": 62,
        "index": "D",
        "name": "Wormhouse",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 62,
        "index": "C",
        "name": "Inquisition",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 62,
        "index": "B",
        "name": "Tyndex.Brome",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 62,
        "index": "A",
        "name": "A Student's Dream",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 61,
        "index": "E",
        "name": "Enemy is weak",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 61,
        "index": "D",
        "name": "Eternal Victory",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 61,
        "index": "C",
        "name": "Capture Valerian",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 61,
        "index": "B",
        "name": "Hard Work",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 61,
        "index": "A",
        "name": "Ultra-Fast Mathematician",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 60,
        "index": "E",
        "name": "Mushroom Gnomes",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 2600
      },
      {
        "contestId": 60,
        "index": "D",
        "name": "Savior",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dsu",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 60,
        "index": "C",
        "name": "Mushroom Strife",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar"
        ],
        "points": 2100
      },
      {
        "contestId": 60,
        "index": "B",
        "name": "Serial Time!",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu"
        ],
        "points": 1400
      },
      {
        "contestId": 60,
        "index": "A",
        "name": "Where Are My Flakes?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 59,
        "index": "E",
        "name": "Shortest Path",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 59,
        "index": "D",
        "name": "Team Arrangement",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 59,
        "index": "C",
        "name": "Title",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing"
        ],
        "points": 1600
      },
      {
        "contestId": 59,
        "index": "B",
        "name": "Fortune Telling",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 59,
        "index": "A",
        "name": "Word",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 58,
        "index": "E",
        "name": "Expression",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 58,
        "index": "D",
        "name": "Calendar",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 58,
        "index": "C",
        "name": "Trees",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1800
      },
      {
        "contestId": 58,
        "index": "B",
        "name": "Coins",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 58,
        "index": "A",
        "name": "Chat room",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 57,
        "index": "E",
        "name": "Chess",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "shortest paths"
        ],
        "points": 3000
      },
      {
        "contestId": 57,
        "index": "D",
        "name": "Journey",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 57,
        "index": "C",
        "name": "Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 57,
        "index": "B",
        "name": "Martian Architecture",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 57,
        "index": "A",
        "name": "Square Earth?",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 56,
        "index": "E",
        "name": "Domino Principle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 56,
        "index": "D",
        "name": "Changing a String",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 56,
        "index": "C",
        "name": "Corporation Mail",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "expression parsing",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 56,
        "index": "B",
        "name": "Spoilt Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 56,
        "index": "A",
        "name": "Bar",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 55,
        "index": "E",
        "name": "Very simple problem",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 55,
        "index": "D",
        "name": "Beautiful numbers",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 55,
        "index": "C",
        "name": "Pie or die",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 1900
      },
      {
        "contestId": 55,
        "index": "B",
        "name": "Smallest number",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1600
      },
      {
        "contestId": 55,
        "index": "A",
        "name": "Flea travel",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 54,
        "index": "E",
        "name": "Vacuum \u0421leaner",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 54,
        "index": "D",
        "name": "Writing a Song",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 54,
        "index": "C",
        "name": "First Digit Law",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 54,
        "index": "B",
        "name": "Cutting Jigsaw Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 54,
        "index": "A",
        "name": "Presents",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 53,
        "index": "E",
        "name": "Dead Ends",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 53,
        "index": "D",
        "name": "Physical Education",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 53,
        "index": "C",
        "name": "Little Frog",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1200
      },
      {
        "contestId": 53,
        "index": "B",
        "name": "Blog Photo",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 53,
        "index": "A",
        "name": "Autocomplete",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 52,
        "index": "C",
        "name": "Circular RMQ",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 52,
        "index": "B",
        "name": "Right Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1600
      },
      {
        "contestId": 52,
        "index": "A",
        "name": "123-sequence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 51,
        "index": "F",
        "name": "Caterpillar",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 51,
        "index": "E",
        "name": "Pentagon",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 51,
        "index": "D",
        "name": "Geometrical problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 51,
        "index": "C",
        "name": "Three Base Stations",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 51,
        "index": "B",
        "name": "bHTML Tables Analisys",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing"
        ],
        "points": 1700
      },
      {
        "contestId": 51,
        "index": "A",
        "name": "Cheaterius's Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 50,
        "index": "E",
        "name": "Square Equation Roots",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 50,
        "index": "D",
        "name": "Bombing",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "probabilities"
        ],
        "points": 2100
      },
      {
        "contestId": 50,
        "index": "C",
        "name": "Happy Farm 5",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 50,
        "index": "B",
        "name": "Choosing Symbol Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 50,
        "index": "A",
        "name": "Domino piling",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 49,
        "index": "E",
        "name": "Common ancestor",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 49,
        "index": "D",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 49,
        "index": "C",
        "name": "Disposition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 49,
        "index": "B",
        "name": "Sum",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 49,
        "index": "A",
        "name": "Sleuth",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 48,
        "index": "H",
        "name": "Black and White",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2800
      },
      {
        "contestId": 48,
        "index": "G",
        "name": "Galaxy Union",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 48,
        "index": "F",
        "name": "Snow sellers",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 2800
      },
      {
        "contestId": 48,
        "index": "E",
        "name": "Ivan the Fool VS Gorynych the Dragon",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 48,
        "index": "D",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 48,
        "index": "C",
        "name": "The Race",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 48,
        "index": "B",
        "name": "Land Lot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 48,
        "index": "A",
        "name": "Rock-paper-scissors",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "schedules"
        ],
        "points": 900
      },
      {
        "contestId": 47,
        "index": "E",
        "name": "Cannon",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 47,
        "index": "D",
        "name": "Safe",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2200
      },
      {
        "contestId": 47,
        "index": "C",
        "name": "Crossword",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 47,
        "index": "B",
        "name": "Coins",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 47,
        "index": "A",
        "name": "Triangular numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 46,
        "index": "G",
        "name": "Emperor's Problem",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 46,
        "index": "F",
        "name": "Hercule Poirot Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 46,
        "index": "E",
        "name": "Comb",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 46,
        "index": "D",
        "name": "Parking Lot",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 46,
        "index": "C",
        "name": "Hamsters and Tigers",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 46,
        "index": "B",
        "name": "T-shirts from Sponsor",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 46,
        "index": "A",
        "name": "Ball Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 45,
        "index": "J",
        "name": "Planting Trees",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 45,
        "index": "I",
        "name": "TCMCF+++",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 45,
        "index": "H",
        "name": "Road Problem",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 45,
        "index": "G",
        "name": "Prime Problem",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 45,
        "index": "F",
        "name": "Goats and Wolves",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 45,
        "index": "E",
        "name": "Director",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 45,
        "index": "D",
        "name": "Event Dates",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "meet-in-the-middle",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 45,
        "index": "C",
        "name": "Dancing Lessons",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 45,
        "index": "B",
        "name": "School",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "dsu"
        ],
        "points": 2200
      },
      {
        "contestId": 45,
        "index": "A",
        "name": "Codecraft III",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 44,
        "index": "J",
        "name": "Triminoes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 44,
        "index": "I",
        "name": "Toys",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics"
        ],
        "points": 2300
      },
      {
        "contestId": 44,
        "index": "H",
        "name": "Phone Number",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 44,
        "index": "G",
        "name": "Shooting Gallery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 44,
        "index": "F",
        "name": "BerPaint",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 44,
        "index": "E",
        "name": "Anfisa the Monkey",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1400
      },
      {
        "contestId": 44,
        "index": "D",
        "name": "Hyperdrive",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 44,
        "index": "C",
        "name": "Holidays",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 44,
        "index": "B",
        "name": "Cola",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 44,
        "index": "A",
        "name": "Indian Summer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 43,
        "index": "E",
        "name": "Race",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 43,
        "index": "D",
        "name": "Journey",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 43,
        "index": "C",
        "name": "Lucky Tickets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 43,
        "index": "B",
        "name": "Letter",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 43,
        "index": "A",
        "name": "Football",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 42,
        "index": "E",
        "name": "Baldman and the military",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 42,
        "index": "D",
        "name": "Strange town",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 42,
        "index": "C",
        "name": "Safe cracking",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 2200
      },
      {
        "contestId": 42,
        "index": "B",
        "name": "Game of chess unfinished",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 42,
        "index": "A",
        "name": "Guilty --- to the kitchen!",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 41,
        "index": "E",
        "name": "3-cycles",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 41,
        "index": "D",
        "name": "Pawn",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 41,
        "index": "C",
        "name": "Email address",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 41,
        "index": "B",
        "name": "Martian Dollar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 41,
        "index": "A",
        "name": "Translation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 40,
        "index": "E",
        "name": "Number Table",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 2500
      },
      {
        "contestId": 40,
        "index": "D",
        "name": "Interesting Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 40,
        "index": "C",
        "name": "Berland Square",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 40,
        "index": "B",
        "name": "Repaintings",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 40,
        "index": "A",
        "name": "Find Color",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 39,
        "index": "K",
        "name": "Testing",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 39,
        "index": "J",
        "name": "Spelling Check",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 39,
        "index": "I",
        "name": "Tram",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 39,
        "index": "H",
        "name": "Multiplication Table",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 39,
        "index": "G",
        "name": "Inverse Function",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 39,
        "index": "F",
        "name": "Pacifist frogs",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 39,
        "index": "E",
        "name": "What Has Dirichlet Got to Do with That?",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 39,
        "index": "D",
        "name": "Cubical Planet",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 39,
        "index": "C",
        "name": "Moon Craters",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 39,
        "index": "B",
        "name": "Company Income Growth",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 39,
        "index": "A",
        "name": "C*++ Calculations",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 38,
        "index": "H",
        "name": "The Great Marathon",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 38,
        "index": "G",
        "name": "Queue",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 38,
        "index": "F",
        "name": "Smart Boy",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 38,
        "index": "E",
        "name": "Let's Go Rolling!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 38,
        "index": "D",
        "name": "Vasya the Architect",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 38,
        "index": "C",
        "name": "Blinds",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1400
      },
      {
        "contestId": 38,
        "index": "B",
        "name": "Chess",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 38,
        "index": "A",
        "name": "Army",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 37,
        "index": "E",
        "name": "Trial for Chief",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 37,
        "index": "D",
        "name": "Lesson Timetable",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 37,
        "index": "C",
        "name": "Old Berland Language",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 37,
        "index": "B",
        "name": "Computer Game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 37,
        "index": "A",
        "name": "Towers",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 36,
        "index": "E",
        "name": "Two Paths",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dsu",
          "graphs",
          "implementation"
        ],
        "points": 2600
      },
      {
        "contestId": 36,
        "index": "D",
        "name": "New Game with a Chess Piece",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2300
      },
      {
        "contestId": 36,
        "index": "C",
        "name": "Bowls",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 36,
        "index": "B",
        "name": "Fractal",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 36,
        "index": "A",
        "name": "Extra-terrestrial Intelligence",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 35,
        "index": "E",
        "name": "Parade",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 35,
        "index": "D",
        "name": "Animals",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 35,
        "index": "C",
        "name": "Fire Again",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "shortest paths"
        ],
        "points": 1500
      },
      {
        "contestId": 35,
        "index": "B",
        "name": "Warehouse",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 35,
        "index": "A",
        "name": "Shell Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 34,
        "index": "E",
        "name": "Collisions",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 34,
        "index": "D",
        "name": "Road Map",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 34,
        "index": "C",
        "name": "Page Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 34,
        "index": "B",
        "name": "Sale",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 34,
        "index": "A",
        "name": "Reconnaissance 2",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 33,
        "index": "E",
        "name": "Helper",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 33,
        "index": "D",
        "name": "Knights",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "graphs",
          "shortest paths",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 33,
        "index": "C",
        "name": "Wonderful Randomized Sum",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 33,
        "index": "B",
        "name": "String Problem",
        "type": "PROGRAMMING",
        "tags": [
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 33,
        "index": "A",
        "name": "What is for dinner?",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 32,
        "index": "E",
        "name": "Hide-and-Seek",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 32,
        "index": "D",
        "name": "Constellation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 32,
        "index": "C",
        "name": "Flea",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 32,
        "index": "B",
        "name": "Borze",
        "type": "PROGRAMMING",
        "tags": [
          "expression parsing",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 32,
        "index": "A",
        "name": "Reconnaissance",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 31,
        "index": "E",
        "name": "TV Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 31,
        "index": "D",
        "name": "Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 31,
        "index": "C",
        "name": "Schedule",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 31,
        "index": "B",
        "name": "Sysadmin Bob",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 31,
        "index": "A",
        "name": "Worms Evolution",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 30,
        "index": "E",
        "name": "Tricky and Clever Password",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "hashing",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 30,
        "index": "D",
        "name": "King's Problem?",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 30,
        "index": "C",
        "name": "Shooting Gallery",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 30,
        "index": "B",
        "name": "Codeforces World Finals",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 30,
        "index": "A",
        "name": "Accounting",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 29,
        "index": "E",
        "name": "Quarrel",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 29,
        "index": "D",
        "name": "Ant on the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 29,
        "index": "C",
        "name": "Mail Stamps",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 29,
        "index": "B",
        "name": "Traffic Lights",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 29,
        "index": "A",
        "name": "Spit Problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1000
      },
      {
        "contestId": 28,
        "index": "E",
        "name": "DravDe saves the world",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 28,
        "index": "D",
        "name": "Don't fear, DravDe is kind",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "hashing"
        ],
        "points": 2400
      },
      {
        "contestId": 28,
        "index": "C",
        "name": "Bath Queue",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 28,
        "index": "B",
        "name": "pSort",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 28,
        "index": "A",
        "name": "Bender Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 27,
        "index": "E",
        "name": "Number With The Given Amount Of Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 27,
        "index": "D",
        "name": "Ring Road 2",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 27,
        "index": "C",
        "name": "Unordered Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dfs and similar",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 27,
        "index": "A",
        "name": "Next Test",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 26,
        "index": "E",
        "name": "Multithreading",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2400
      },
      {
        "contestId": 26,
        "index": "D",
        "name": "Tickets",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 26,
        "index": "C",
        "name": "Parquet",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 26,
        "index": "B",
        "name": "Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 26,
        "index": "A",
        "name": "Almost Prime",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 900
      },
      {
        "contestId": 25,
        "index": "E",
        "name": "Test",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 25,
        "index": "D",
        "name": "Roads not only in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 25,
        "index": "C",
        "name": "Roads in Berland",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 25,
        "index": "B",
        "name": "Phone numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 25,
        "index": "A",
        "name": "IQ test",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1300
      },
      {
        "contestId": 24,
        "index": "E",
        "name": "Berland collider",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 2300
      },
      {
        "contestId": 24,
        "index": "D",
        "name": "Broken robot",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 24,
        "index": "C",
        "name": "Sequence of points",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 24,
        "index": "B",
        "name": "F1 Champions",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 24,
        "index": "A",
        "name": "Ring road",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1400
      },
      {
        "contestId": 23,
        "index": "E",
        "name": "Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 23,
        "index": "D",
        "name": "Tetragon",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 23,
        "index": "C",
        "name": "Oranges and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 23,
        "index": "B",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 23,
        "index": "A",
        "name": "You're Given a String...",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 22,
        "index": "E",
        "name": "Scheme",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 22,
        "index": "D",
        "name": "Segments",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 22,
        "index": "C",
        "name": "System Administrator",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 22,
        "index": "B",
        "name": "Bargaining Table",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 22,
        "index": "A",
        "name": "Second Order Statistics",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 800
      },
      {
        "contestId": 21,
        "index": "D",
        "name": "Traveling Graph",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "graph matchings",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 21,
        "index": "C",
        "name": "Stripe 2",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 21,
        "index": "B",
        "name": "Intersection",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 21,
        "index": "A",
        "name": "Jabber ID",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 20,
        "index": "C",
        "name": "Dijkstra?",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 20,
        "index": "B",
        "name": "Equation",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 20,
        "index": "A",
        "name": "BerOS file system",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 19,
        "index": "E",
        "name": "Fairy",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dsu"
        ],
        "points": 2900
      },
      {
        "contestId": 19,
        "index": "D",
        "name": "Points",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 19,
        "index": "C",
        "name": "Deletion of Repeats",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "string suffix structures"
        ],
        "points": 2200
      },
      {
        "contestId": 19,
        "index": "B",
        "name": "Checkout Assistant",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 19,
        "index": "A",
        "name": "World Football Cup",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 18,
        "index": "E",
        "name": "Flag 2",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 18,
        "index": "D",
        "name": "Seller Bob",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 18,
        "index": "C",
        "name": "Stripe",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 18,
        "index": "B",
        "name": "Platforms",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 18,
        "index": "A",
        "name": "Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 1500
      },
      {
        "contestId": 17,
        "index": "E",
        "name": "Palisection",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2900
      },
      {
        "contestId": 17,
        "index": "D",
        "name": "Notepad",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 17,
        "index": "C",
        "name": "Balance",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 17,
        "index": "B",
        "name": "Hierarchy",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "greedy",
          "shortest paths"
        ],
        "points": 1500
      },
      {
        "contestId": 17,
        "index": "A",
        "name": "Noldbach problem",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 16,
        "index": "E",
        "name": "Fish",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 16,
        "index": "D",
        "name": "Logging",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 16,
        "index": "C",
        "name": "Monitor",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 16,
        "index": "B",
        "name": "Burglar and Matches",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 16,
        "index": "A",
        "name": "Flag",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 15,
        "index": "E",
        "name": "Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 15,
        "index": "D",
        "name": "Map",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 15,
        "index": "C",
        "name": "Industrial Nim",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 15,
        "index": "B",
        "name": "Laser",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 15,
        "index": "A",
        "name": "Cottage Village",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 14,
        "index": "E",
        "name": "Camels",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 14,
        "index": "D",
        "name": "Two Paths",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths",
          "trees",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "geometry",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 14,
        "index": "B",
        "name": "Young Photographer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 14,
        "index": "A",
        "name": "Letter",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 13,
        "index": "E",
        "name": "Holes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 2700
      },
      {
        "contestId": 13,
        "index": "D",
        "name": "Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 13,
        "index": "C",
        "name": "Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 13,
        "index": "B",
        "name": "Letter A",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 13,
        "index": "A",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 12,
        "index": "E",
        "name": "Start of the session",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2100
      },
      {
        "contestId": 12,
        "index": "D",
        "name": "Ball",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 12,
        "index": "C",
        "name": "Fruits",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 12,
        "index": "B",
        "name": "Correct Solution?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 12,
        "index": "A",
        "name": "Super Agent",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 11,
        "index": "E",
        "name": "Forward, march!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 11,
        "index": "D",
        "name": "A Simple Task",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 11,
        "index": "C",
        "name": "How Many Squares?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 11,
        "index": "B",
        "name": "Jumping Jack",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 11,
        "index": "A",
        "name": "Increasing Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 10,
        "index": "E",
        "name": "Greedy Change",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 10,
        "index": "D",
        "name": "LCIS",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 10,
        "index": "C",
        "name": "Digital Root",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 10,
        "index": "B",
        "name": "Cinema Cashier",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 10,
        "index": "A",
        "name": "Power Consumption Calculation",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 9,
        "index": "E",
        "name": "Interestring graph and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 9,
        "index": "D",
        "name": "How many trees?",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "divide and conquer",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 9,
        "index": "C",
        "name": "Hexadecimal's Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 9,
        "index": "B",
        "name": "Running Student",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 9,
        "index": "A",
        "name": "Die Roll",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 800
      },
      {
        "contestId": 8,
        "index": "E",
        "name": "Beads",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 8,
        "index": "D",
        "name": "Two Friends",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 8,
        "index": "C",
        "name": "Looking for Order",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 8,
        "index": "B",
        "name": "Obsession with Robots",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 8,
        "index": "A",
        "name": "Train and Peter",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 7,
        "index": "E",
        "name": "Defining Macros",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "expression parsing",
          "implementation"
        ],
        "points": 2600
      },
      {
        "contestId": 7,
        "index": "D",
        "name": "Palindrome Degree",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 7,
        "index": "C",
        "name": "Line",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 7,
        "index": "B",
        "name": "Memory Manager",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 7,
        "index": "A",
        "name": "Kalevitch and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1100
      },
      {
        "contestId": 6,
        "index": "E",
        "name": "Exposition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dsu",
          "trees",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 6,
        "index": "D",
        "name": "Lizards and Basements 2",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 6,
        "index": "C",
        "name": "Alice, Bob and Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "two pointers"
        ],
        "points": 1200
      },
      {
        "contestId": 6,
        "index": "B",
        "name": "President's Office",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 6,
        "index": "A",
        "name": "Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry"
        ],
        "points": 900
      },
      {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 5,
        "index": "D",
        "name": "Follow Traffic Rules",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 5,
        "index": "C",
        "name": "Longest Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp",
          "greedy",
          "sortings",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 5,
        "index": "B",
        "name": "Center Alignment",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 5,
        "index": "A",
        "name": "Chat Servers Outgoing Traffic",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 4,
        "index": "D",
        "name": "Mysterious Present",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 4,
        "index": "C",
        "name": "Registration System",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 4,
        "index": "B",
        "name": "Before an Exam",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 4,
        "index": "A",
        "name": "Watermelon",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 3,
        "index": "D",
        "name": "Least Cost Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 3,
        "index": "C",
        "name": "Tic-tac-toe",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "games",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 3,
        "index": "B",
        "name": "Lorry",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 3,
        "index": "A",
        "name": "Shortest path of the king",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "shortest paths"
        ],
        "points": 1000
      },
      {
        "contestId": 2,
        "index": "C",
        "name": "Commentator problem",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2600
      },
      {
        "contestId": 2,
        "index": "B",
        "name": "The least round way",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 2,
        "index": "A",
        "name": "Winner",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1,
        "index": "C",
        "name": "Ancient Berland Circus",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1,
        "index": "B",
        "name": "Spreadsheet",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1,
        "index": "A",
        "name": "Theatre Square",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 1836,
        "index": "C",
        "name": "k-th equality",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1836,
        "index": "D",
        "name": "Lottery",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 2500
      },
      {
        "contestId": 1836,
        "index": "E",
        "name": "Twin Clusters",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "meet-in-the-middle",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1836,
        "index": "F",
        "name": "Doctor's Brown Hypothesis",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dfs and similar",
          "graphs",
          "graphs",
          "math",
          "math",
          "number theory",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1831,
        "index": "C",
        "name": "Copil Copac Draws Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1400
      },
      {
        "contestId": 1831,
        "index": "D",
        "name": "The BOSS Can Count Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1831,
        "index": "E",
        "name": "Hyperregular Bracket Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "hashing",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1831,
        "index": "F",
        "name": "Mex Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "brute force",
          "dp",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1828,
        "index": "C",
        "name": "Counting Orders",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1828,
        "index": "D1",
        "name": "Range Sorting (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "dsu",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1828,
        "index": "D2",
        "name": "Range Sorting (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1828,
        "index": "E",
        "name": "Palindrome Partition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "hashing",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1828,
        "index": "F",
        "name": "Two Centroids",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2800
      },
      {
        "contestId": 1825,
        "index": "C",
        "name": "LuoTianyi and the Show",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1825,
        "index": "D1",
        "name": "LuoTianyi and the Floating Islands (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1825,
        "index": "D2",
        "name": "LuoTianyi and the Floating Islands (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "math",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1825,
        "index": "E",
        "name": "LuoTianyi and XOR-Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "dsu",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1820,
        "index": "C",
        "name": "Constructive Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1820,
        "index": "D",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1820,
        "index": "E",
        "name": "The Fox and the Complete Tree Traversal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "math",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1820,
        "index": "F",
        "name": "Misha and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 1818,
        "index": "C",
        "name": "Almost Increasing Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1818,
        "index": "D",
        "name": "Fish Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1818,
        "index": "E",
        "name": "Similar Polynomials",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1818,
        "index": "F",
        "name": "Toy Machine",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games"
        ],
        "points": 2700
      },
      {
        "contestId": 1816,
        "index": "C",
        "name": "Ian and Array Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1816,
        "index": "D",
        "name": "Sum Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation",
          "interactive",
          "shortest paths",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1816,
        "index": "E",
        "name": "Between",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 1816,
        "index": "F",
        "name": "XOR Counting",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1813,
        "index": "A",
        "name": "Buffer Sharing in Multi-tenant Database Environment",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive"
        ]
      },
      {
        "contestId": 1812,
        "index": "A",
        "name": "Are You a Robot?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "*special problem",
          "*special problem",
          "expression parsing",
          "strings"
        ]
      },
      {
        "contestId": 1812,
        "index": "B",
        "name": "Was it Rated?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "*special problem",
          "*special problem",
          "brute force",
          "implementation"
        ]
      },
      {
        "contestId": 1812,
        "index": "C",
        "name": "Digits",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1812,
        "index": "D",
        "name": "Trivial Conjecture",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "math",
          "number theory"
        ]
      },
      {
        "contestId": 1812,
        "index": "E",
        "name": "Not a Geometry Problem",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "*special problem",
          "constructive algorithms",
          "geometry",
          "math"
        ]
      },
      {
        "contestId": 1812,
        "index": "F",
        "name": "Factorization",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "number theory"
        ]
      },
      {
        "contestId": 1812,
        "index": "G",
        "name": "Colour Vision",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1812,
        "index": "H",
        "name": "Expected Twist",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive"
        ]
      },
      {
        "contestId": 1812,
        "index": "I",
        "name": "Mountain Climber",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1812,
        "index": "J",
        "name": "Unmysterious Language",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "strings"
        ]
      },
      {
        "contestId": 1802,
        "index": "C",
        "name": "The Very Beautiful Blanket",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 1802,
        "index": "D",
        "name": "Buying gifts",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1802,
        "index": "E",
        "name": "Music Festival",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1802,
        "index": "F",
        "name": "The way home",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 1802,
        "index": "G",
        "name": "Gasoline prices",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1786,
        "index": "C",
        "name": "Monsters (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1786,
        "index": "D",
        "name": "Letter Exchange",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1786,
        "index": "E",
        "name": "Monsters (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 1786,
        "index": "F",
        "name": "Wooden Spoon",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "games",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1785,
        "index": "A",
        "name": "Monsters (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1785,
        "index": "B",
        "name": "Letter Exchange",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1785,
        "index": "C",
        "name": "Monsters (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1785,
        "index": "D",
        "name": "Wooden Spoon",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1785,
        "index": "E",
        "name": "Infinite Game",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "games"
        ],
        "points": 3100
      },
      {
        "contestId": 1785,
        "index": "F",
        "name": "Minimums or Medians",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "two pointers"
        ],
        "points": 3400
      },
      {
        "contestId": 1782,
        "index": "A",
        "name": "Parallel Projection",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1782,
        "index": "B",
        "name": "Going to the Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1000
      },
      {
        "contestId": 1782,
        "index": "C",
        "name": "Equal Frequencies",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1782,
        "index": "D",
        "name": "Many Perfect Squares",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1782,
        "index": "E",
        "name": "Rectangle Shrinking",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1782,
        "index": "F",
        "name": "Bracket Insertion",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "probabilities",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1782,
        "index": "G",
        "name": "Diverse Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 1782,
        "index": "H1",
        "name": "Window Signals (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1782,
        "index": "H2",
        "name": "Window Signals (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1755,
        "index": "A",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1755,
        "index": "B",
        "name": "Make it Divisible by 25",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "math"
        ]
      },
      {
        "contestId": 1755,
        "index": "C",
        "name": "Save More Mice",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ]
      },
      {
        "contestId": 1755,
        "index": "D",
        "name": "Gardener and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "trees"
        ]
      },
      {
        "contestId": 1755,
        "index": "E",
        "name": "Sleeping Schedule",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ]
      },
      {
        "contestId": 1755,
        "index": "F",
        "name": "Half of Same",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1754,
        "index": "C1",
        "name": "Make Nonzero Sum (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 1754,
        "index": "C2",
        "name": "Make Nonzero Sum (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1754,
        "index": "D",
        "name": "Factorial Divisibility",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1754,
        "index": "E",
        "name": "Wish I Knew How to Sort",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 1754,
        "index": "F",
        "name": "The Beach",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths",
          "shortest paths",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1752,
        "index": "A",
        "name": "Parameterized Branch Instruction Stream Generation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 3200
      },
      {
        "contestId": 1751,
        "index": "A",
        "name": "Task Scheduling and Data Assignment",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1724,
        "index": "A",
        "name": "Topology-Aware VM Placement",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive"
        ]
      },
      {
        "contestId": 1723,
        "index": "GP1",
        "name": "Optimal Graph Partition for Fast Routing (GP1)",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs",
          "shortest paths"
        ]
      },
      {
        "contestId": 1723,
        "index": "GP2",
        "name": "Optimal Graph Partition for Fast Routing (GP2)",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs",
          "shortest paths"
        ]
      },
      {
        "contestId": 1719,
        "index": "D1",
        "name": "Burenka and Traditions (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1719,
        "index": "D2",
        "name": "Burenka and Traditions (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1719,
        "index": "E",
        "name": "Fibonacci Strings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 1719,
        "index": "F",
        "name": "Tonya and Burenka-179",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1711,
        "index": "C",
        "name": "Color the Picture",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1711,
        "index": "D",
        "name": "Rain",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1711,
        "index": "E",
        "name": "XOR Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1708,
        "index": "C",
        "name": "Doremy's IQ",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1708,
        "index": "D",
        "name": "Difference Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1708,
        "index": "E",
        "name": "DFS Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 1708,
        "index": "F",
        "name": "Partial Virtual Trees",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "trees"
        ],
        "points": 3000
      },
      {
        "contestId": 1694,
        "index": "C",
        "name": "Directional Increase",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 1694,
        "index": "D",
        "name": "Fake Plastic Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1694,
        "index": "E",
        "name": "Keshi in Search of AmShZ",
        "type": "PROGRAMMING",
        "tags": [
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 1694,
        "index": "F",
        "name": "Decinc Dividing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "data structures",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1688,
        "index": "D",
        "name": "The Enchanted Forest",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1688,
        "index": "E",
        "name": "Railway System",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dsu",
          "graphs",
          "greedy",
          "interactive",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1688,
        "index": "F",
        "name": "Sanae and Giant Robot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dsu"
        ],
        "points": 2500
      },
      {
        "contestId": 1686,
        "index": "C",
        "name": "Circular Local MiniMax",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1100
      },
      {
        "contestId": 1686,
        "index": "D",
        "name": "Linguistics",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings",
          "strings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1686,
        "index": "E",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1686,
        "index": "F",
        "name": "Permutation Weight (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2800
      },
      {
        "contestId": 1678,
        "index": "C",
        "name": "Tokitsukaze and Strange Inequality",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures"
        ],
        "points": 1600
      },
      {
        "contestId": 1678,
        "index": "D",
        "name": "Tokitsukaze and Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1678,
        "index": "E",
        "name": "Tokitsukaze and Two Colorful Tapes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1678,
        "index": "F",
        "name": "Tokitsukaze and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1668,
        "index": "C",
        "name": "Make it Increasing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1668,
        "index": "D",
        "name": "Optimal Partition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1668,
        "index": "E",
        "name": "Half Queen Cover",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1668,
        "index": "F",
        "name": "Edge Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1652,
        "index": "A",
        "name": "Maximum Cake Tastiness",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 1652,
        "index": "B",
        "name": "Prefix Removals",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1652,
        "index": "C",
        "name": "Alice and the Cake",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1652,
        "index": "D",
        "name": "Potion Brewing Class",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1652,
        "index": "E",
        "name": "Arithmetic Operations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1652,
        "index": "F",
        "name": "Minimal String Xoration",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "data structures",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1652,
        "index": "G",
        "name": "Snowy Mountain",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1649,
        "index": "C",
        "name": "Weird Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math",
          "matrices"
        ],
        "points": 1400
      },
      {
        "contestId": 1649,
        "index": "D",
        "name": "Integral Array",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1649,
        "index": "E",
        "name": "Tyler and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1649,
        "index": "F",
        "name": "Serious Business",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 1645,
        "index": "A",
        "name": "Spy Detected!",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1645,
        "index": "B",
        "name": "Repeating Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1645,
        "index": "C",
        "name": "Teams Forming",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ]
      },
      {
        "contestId": 1645,
        "index": "D",
        "name": "Two Shuffled Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1645,
        "index": "E",
        "name": "Powers Of Two",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "bitmasks",
          "greedy"
        ]
      },
      {
        "contestId": 1645,
        "index": "F",
        "name": "Boxers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ]
      },
      {
        "contestId": 1645,
        "index": "G",
        "name": "Median String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "strings"
        ]
      },
      {
        "contestId": 1645,
        "index": "H",
        "name": "Two Merged Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ]
      },
      {
        "contestId": 1642,
        "index": "C",
        "name": "Great Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1642,
        "index": "D",
        "name": "Repetitions Decoding",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 1642,
        "index": "E",
        "name": "Anonymity Is Important",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1642,
        "index": "F",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "combinatorics",
          "math",
          "two pointers"
        ],
        "points": 2700
      },
      {
        "contestId": 1631,
        "index": "C",
        "name": "And Matching",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 1500
      },
      {
        "contestId": 1631,
        "index": "D",
        "name": "Range and Partition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1631,
        "index": "E",
        "name": "Paint the Middle",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2200
      },
      {
        "contestId": 1631,
        "index": "F",
        "name": "Flipping Range",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1629,
        "index": "C",
        "name": "Meximum Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1400
      },
      {
        "contestId": 1629,
        "index": "D",
        "name": "Peculiar Movie Preferences",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1629,
        "index": "E",
        "name": "Grid Xor",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "interactive",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1629,
        "index": "F1",
        "name": "Game on Sum (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "games"
        ],
        "points": 2100
      },
      {
        "contestId": 1629,
        "index": "F2",
        "name": "Game on Sum (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "games"
        ],
        "points": 2400
      },
      {
        "contestId": 1604,
        "index": "C",
        "name": "Di-visible Confusion",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1604,
        "index": "D",
        "name": "Moderate Modular Mode",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1604,
        "index": "E",
        "name": "Extreme Extension",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1604,
        "index": "F",
        "name": "Artistic Partition",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 3000
      },
      {
        "contestId": 1602,
        "index": "C",
        "name": "Array Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 1602,
        "index": "D",
        "name": "Frog Traveler",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1602,
        "index": "E",
        "name": "Optimal Insertion",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2300
      },
      {
        "contestId": 1602,
        "index": "F",
        "name": "Difficult Mountain",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 1600,
        "index": "A",
        "name": "Weights",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 1600,
        "index": "B",
        "name": "Mars",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 1600,
        "index": "C",
        "name": "Restaurant Game",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 1600,
        "index": "D",
        "name": "Hidden Fortress",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "interactive"
        ],
        "points": 2100
      },
      {
        "contestId": 1600,
        "index": "G",
        "name": "Bob's Beautiful Array",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 1600,
        "index": "H",
        "name": "Shortest path",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 1600,
        "index": "I",
        "name": "Bubble Strike",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 1591,
        "index": "A",
        "name": "Life of a Flower",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1591,
        "index": "B",
        "name": "Array Eversion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 900
      },
      {
        "contestId": 1591,
        "index": "C",
        "name": "Minimize Distance",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1591,
        "index": "D",
        "name": "Yet Another Sorting Problem",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1591,
        "index": "E",
        "name": "Frequency Queries",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "trees",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 1591,
        "index": "F",
        "name": "Non-equal Neighbours",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1589,
        "index": "A",
        "name": "Mathematical Addition",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1589,
        "index": "B",
        "name": "Coloring Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1000
      },
      {
        "contestId": 1589,
        "index": "C",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1589,
        "index": "D",
        "name": "Guess the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "interactive",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1589,
        "index": "E",
        "name": "Game with Stones",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "games",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1589,
        "index": "F",
        "name": "Strange LCS",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1588,
        "index": "A",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 900
      },
      {
        "contestId": 1588,
        "index": "B",
        "name": "Guess the Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "implementation",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 1588,
        "index": "C",
        "name": "Game with Stones",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "divide and conquer",
          "games",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1588,
        "index": "D",
        "name": "Strange LCS",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1588,
        "index": "E",
        "name": "Eligible Segments",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "two pointers"
        ],
        "points": 3200
      },
      {
        "contestId": 1586,
        "index": "A",
        "name": "Windblume Ode",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 800
      },
      {
        "contestId": 1586,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "trees"
        ],
        "points": 1200
      },
      {
        "contestId": 1586,
        "index": "C",
        "name": "Omkar and Determination",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1586,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "interactive",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1586,
        "index": "E",
        "name": "Moment of Bloom",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graph matchings",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1586,
        "index": "F",
        "name": "Defender of Childhood Dreams",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "divide and conquer",
          "graphs",
          "greedy",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1586,
        "index": "G",
        "name": "Omkar and Time Travel",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1586,
        "index": "H",
        "name": "Omkar and Tours",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "sortings",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 1581,
        "index": "C",
        "name": "Portal",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1581,
        "index": "D",
        "name": "Mathematics Curriculum",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1581,
        "index": "E",
        "name": "Train Maintenance",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 2200
      },
      {
        "contestId": 1581,
        "index": "F",
        "name": "Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1573,
        "index": "C",
        "name": "Book",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "graphs",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1573,
        "index": "D",
        "name": "Xor of 3",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 1573,
        "index": "E",
        "name": "Paint",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 1573,
        "index": "F",
        "name": "Bridge Club",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graphs",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1570,
        "index": "A",
        "name": "A+B (Trial Problem)",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1570,
        "index": "B",
        "name": "Yellow Cards",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1570,
        "index": "C",
        "name": "Shooting",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "implementation"
        ]
      },
      {
        "contestId": 1570,
        "index": "D",
        "name": "Reachable Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1570,
        "index": "E",
        "name": "Erasing Zeroes",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ]
      },
      {
        "contestId": 1570,
        "index": "F",
        "name": "Square Filling",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1570,
        "index": "G",
        "name": "XOR Guessing",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive"
        ]
      },
      {
        "contestId": 1570,
        "index": "H",
        "name": "Chainword",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "strings"
        ]
      },
      {
        "contestId": 1570,
        "index": "I",
        "name": "Minimum Difference",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1563,
        "index": "A",
        "name": "Charmed by the Game",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1563,
        "index": "B",
        "name": "Up the Strip",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1563,
        "index": "C",
        "name": "Bottom-Tier Reversals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2000
      },
      {
        "contestId": 1563,
        "index": "D",
        "name": "Top-Notch Insertions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 2600
      },
      {
        "contestId": 1563,
        "index": "E",
        "name": "Down Below",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 1563,
        "index": "F",
        "name": "Strange Sort",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 3300
      },
      {
        "contestId": 1561,
        "index": "B",
        "name": "Charmed by the Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1561,
        "index": "D2",
        "name": "Up the Strip",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1561,
        "index": "E",
        "name": "Bottom-Tier Reversals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2000
      },
      {
        "contestId": 1561,
        "index": "F",
        "name": "Top-Notch Insertions",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 1549,
        "index": "C",
        "name": "Web of Lies",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1549,
        "index": "D",
        "name": "Integers Have Friends",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "math",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1549,
        "index": "E",
        "name": "The Three Little Pigs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "fft",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 1549,
        "index": "F1",
        "name": "Gregor and the Odd Cows (Easy)",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1549,
        "index": "F2",
        "name": "Gregor and the Odd Cows (Hard)",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "number theory"
        ],
        "points": 3300
      },
      {
        "contestId": 1546,
        "index": "C",
        "name": "AquaMoon and Strange Sort",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1546,
        "index": "D",
        "name": "AquaMoon and Chess",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1546,
        "index": "E",
        "name": "AquaMoon and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 1546,
        "index": "F",
        "name": "AquaMoon and Wrong Coordinate",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1544,
        "index": "A",
        "name": "Binary Decimal",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1544,
        "index": "B",
        "name": "Putting Plates",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1544,
        "index": "C",
        "name": "Pursuit",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1544,
        "index": "D",
        "name": "Secret Santa",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1544,
        "index": "E",
        "name": "Minimax",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "expression parsing",
          "greedy",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1544,
        "index": "F",
        "name": "Bingo",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1544,
        "index": "G",
        "name": "What a Reversal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 3300
      },
      {
        "contestId": 1544,
        "index": "H",
        "name": "Turing's Award",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3400
      },
      {
        "contestId": 1541,
        "index": "C",
        "name": "Great Graphs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "shortest paths",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1541,
        "index": "D",
        "name": "Tree Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1541,
        "index": "E1",
        "name": "Converging Array (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1541,
        "index": "E2",
        "name": "Converging Array (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 1529,
        "index": "C",
        "name": "Parsa's Humongous Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1529,
        "index": "D",
        "name": "Kavi on Pairing Duty",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1529,
        "index": "E",
        "name": "Trees of Tranquillity",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1529,
        "index": "F",
        "name": "It's a bird! No, it's a plane! No, it's AaParsa!",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 1524,
        "index": "A",
        "name": "Balanced Regions",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1522,
        "index": "A",
        "name": "Football Betting",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive"
        ]
      },
      {
        "contestId": 1509,
        "index": "D",
        "name": "Binary Literature",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "strings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1509,
        "index": "E",
        "name": "Almost Sorted",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1509,
        "index": "F",
        "name": "Complete the MST",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1504,
        "index": "C",
        "name": "Balance the Bits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1504,
        "index": "D",
        "name": "3-Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "graphs",
          "interactive"
        ],
        "points": 1700
      },
      {
        "contestId": 1504,
        "index": "E",
        "name": "Travelling Salesman Problem",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "graphs",
          "greedy",
          "shortest paths",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1504,
        "index": "F",
        "name": "Flip the Cards",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 2600
      },
      {
        "contestId": 1501,
        "index": "C",
        "name": "Going Home",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1501,
        "index": "D",
        "name": "Two chandeliers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "chinese remainder theorem",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1501,
        "index": "E",
        "name": "Matrix Sorting",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 1501,
        "index": "F",
        "name": "Tiles for Bathroom",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 2900
      },
      {
        "contestId": 1496,
        "index": "C",
        "name": "Diamond Miner",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "greedy",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1496,
        "index": "D",
        "name": "Let's Go Hiking",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 1900
      },
      {
        "contestId": 1496,
        "index": "E",
        "name": "Garden of the Sun",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 1496,
        "index": "F",
        "name": "BFS Trees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "math",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 1489,
        "index": "A",
        "name": "Remove Duplicates",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1489,
        "index": "B",
        "name": "Water Buying",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1489,
        "index": "C",
        "name": "File Name",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ]
      },
      {
        "contestId": 1489,
        "index": "D",
        "name": "Substrings Sort",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ]
      },
      {
        "contestId": 1489,
        "index": "E",
        "name": "Books Queries",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1489,
        "index": "F",
        "name": "Boxes Packing",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1489,
        "index": "G",
        "name": "Make It Connected",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs"
        ]
      },
      {
        "contestId": 1484,
        "index": "A",
        "name": "Prison Break",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 800
      },
      {
        "contestId": 1484,
        "index": "B",
        "name": "Restore Modulo",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1484,
        "index": "C",
        "name": "Basic Diplomacy",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "flows",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1484,
        "index": "D",
        "name": "Playlist",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1484,
        "index": "E",
        "name": "Skyline Photo",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 1484,
        "index": "F",
        "name": "Useful Edges",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1483,
        "index": "A",
        "name": "Basic Diplomacy",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1483,
        "index": "B",
        "name": "Playlist",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1483,
        "index": "C",
        "name": "Skyline Photo",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1483,
        "index": "D",
        "name": "Useful Edges",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1483,
        "index": "E",
        "name": "Vabank",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "interactive"
        ],
        "points": 3200
      },
      {
        "contestId": 1483,
        "index": "F",
        "name": "Exam",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dsu",
          "string suffix structures",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 1480,
        "index": "C",
        "name": "Searching Local Minimum",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "math",
          "ternary search"
        ],
        "points": 1700
      },
      {
        "contestId": 1480,
        "index": "D1",
        "name": "Painting the Array I",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1480,
        "index": "D2",
        "name": "Painting the Array II",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1480,
        "index": "E",
        "name": "Continuous City",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 1478,
        "index": "D",
        "name": "Nezzar and Board",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1478,
        "index": "E",
        "name": "Nezzar and Binary String",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1478,
        "index": "F",
        "name": "Nezzar and Nice Beatmap",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1471,
        "index": "C",
        "name": "Strange Birthday Party",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1471,
        "index": "D",
        "name": "Strange Definition",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "graphs",
          "hashing",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 1471,
        "index": "E",
        "name": "Strange Shuffle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "interactive"
        ],
        "points": 2500
      },
      {
        "contestId": 1471,
        "index": "F",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1465,
        "index": "A",
        "name": "In-game Chat",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1465,
        "index": "B",
        "name": "Fair Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1000
      },
      {
        "contestId": 1465,
        "index": "C",
        "name": "Peaceful Rooks",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1465,
        "index": "D",
        "name": "Grime Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "math",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1465,
        "index": "E",
        "name": "Poman Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "greedy",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1465,
        "index": "F",
        "name": "The Thorny Path",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 1464,
        "index": "A",
        "name": "Peaceful Rooks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1464,
        "index": "B",
        "name": "Grime Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "implementation",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1464,
        "index": "C",
        "name": "Poman Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "greedy",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1464,
        "index": "D",
        "name": "The Thorny Path",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 3000
      },
      {
        "contestId": 1464,
        "index": "E",
        "name": "No Game No Life",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "games",
          "math",
          "matrices",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 1460,
        "index": "A",
        "name": "Fixing the Cloud",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1459,
        "index": "C",
        "name": "Row GCD",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1459,
        "index": "D",
        "name": "Glass Half Spilled",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1459,
        "index": "E",
        "name": "Latin Square",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices"
        ],
        "points": 2700
      },
      {
        "contestId": 1459,
        "index": "F",
        "name": "Flip and Reverse",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 1457,
        "index": "A",
        "name": "Prison Break",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1457,
        "index": "B",
        "name": "Repainting Street",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1100
      },
      {
        "contestId": 1457,
        "index": "C",
        "name": "Bouncing Ball",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1457,
        "index": "D",
        "name": "XOR-gun",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1457,
        "index": "E",
        "name": "New Game Plus!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 1456,
        "index": "A",
        "name": "Bouncing Ball",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1456,
        "index": "B",
        "name": "XOR-gun",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1456,
        "index": "C",
        "name": "New Game Plus!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 1456,
        "index": "D",
        "name": "Cakes for Clones",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 1447,
        "index": "C",
        "name": "Knapsack",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 1447,
        "index": "D",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1447,
        "index": "E",
        "name": "Xor Tree",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "dp",
          "graphs",
          "string suffix structures",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1447,
        "index": "F1",
        "name": "Frequency Problem (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1447,
        "index": "F2",
        "name": "Frequency Problem (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 3000
      },
      {
        "contestId": 1445,
        "index": "C",
        "name": "Division",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1445,
        "index": "D",
        "name": "Divide and Sum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1445,
        "index": "E",
        "name": "Team-Building",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1443,
        "index": "D",
        "name": "Extreme Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1443,
        "index": "F",
        "name": "Identify the Operations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1441,
        "index": "A",
        "name": "Identify the Operations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1441,
        "index": "B",
        "name": "Graph Transpositions",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1441,
        "index": "C",
        "name": "Sum",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1441,
        "index": "D",
        "name": "Black, White and Grey Tree",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 1441,
        "index": "E",
        "name": "Differentiating Games",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "interactive"
        ],
        "points": 3400
      },
      {
        "contestId": 1441,
        "index": "F",
        "name": "Matching",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1440,
        "index": "C1",
        "name": "Binary Table (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1440,
        "index": "C2",
        "name": "Binary Table (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1440,
        "index": "D",
        "name": "Graph Subset Problem",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "hashing"
        ],
        "points": 2600
      },
      {
        "contestId": 1440,
        "index": "E",
        "name": "Greedy Shopping",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1435,
        "index": "A",
        "name": "Finding Sasuke",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1435,
        "index": "B",
        "name": "A New Technique",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1435,
        "index": "C",
        "name": "Perform Easily",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dp",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1435,
        "index": "D",
        "name": "Shurikens",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "schedules"
        ],
        "points": 1700
      },
      {
        "contestId": 1435,
        "index": "E",
        "name": "Solo mid Oracle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "number theory",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1434,
        "index": "A",
        "name": "Perform Easily",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dp",
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1434,
        "index": "B",
        "name": "Shurikens",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1434,
        "index": "C",
        "name": "Solo mid Oracle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 1434,
        "index": "D",
        "name": "Roads and Ramen",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2800
      },
      {
        "contestId": 1432,
        "index": "A",
        "name": "A+B (Trial Problem)",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1432,
        "index": "B",
        "name": "Candies and Two Sisters",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1432,
        "index": "C",
        "name": "Equalize Prices Again",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1432,
        "index": "D",
        "name": "Construct the String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ]
      },
      {
        "contestId": 1432,
        "index": "E",
        "name": "Binary String Minimizing",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ]
      },
      {
        "contestId": 1432,
        "index": "F",
        "name": "Platforms Jumping",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy",
          "implementation"
        ]
      },
      {
        "contestId": 1424,
        "index": "A",
        "name": "Wakanda Forever",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1424,
        "index": "B",
        "name": "Valuable Paper",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "flows",
          "graph matchings"
        ],
        "points": 1900
      },
      {
        "contestId": 1424,
        "index": "C",
        "name": "Du\u0161an's Railway",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "trees"
        ],
        "points": 3500
      },
      {
        "contestId": 1424,
        "index": "D",
        "name": "Does anyone else hate the wind?",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 1424,
        "index": "E",
        "name": "5G Antenna Towers",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 1424,
        "index": "F",
        "name": "Coins",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 1424,
        "index": "H",
        "name": "Lookup Tables",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 3000
      },
      {
        "contestId": 1424,
        "index": "I",
        "name": "Bubble Cup hypothesis",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 1424,
        "index": "J",
        "name": "Lonely Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1424,
        "index": "K",
        "name": "Light switches",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "meet-in-the-middle"
        ],
        "points": 2600
      },
      {
        "contestId": 1424,
        "index": "L",
        "name": "Milutin's Plums",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ],
        "points": 2800
      },
      {
        "contestId": 1424,
        "index": "N",
        "name": "BubbleSquare Tokens",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3500
      },
      {
        "contestId": 1417,
        "index": "C",
        "name": "k-Amazing Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 1417,
        "index": "D",
        "name": "Make Them Equal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1417,
        "index": "E",
        "name": "XOR Inverse",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "strings",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1417,
        "index": "F",
        "name": "Graph and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "trees"
        ],
        "points": 2600
      },
      {
        "contestId": 1405,
        "index": "C",
        "name": "Balanced Bitstring",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 1405,
        "index": "D",
        "name": "Tree Tag",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "games",
          "strings",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1405,
        "index": "E",
        "name": "Fixed Point Removal",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 1397,
        "index": "C",
        "name": "Multiples of Length",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1397,
        "index": "D",
        "name": "Stoned Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "games",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1397,
        "index": "E",
        "name": "Monster Invaders",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1395,
        "index": "D",
        "name": "Boboniu Chats with Du",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1395,
        "index": "E",
        "name": "Boboniu Walks on Graph",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "hashing"
        ],
        "points": 2300
      },
      {
        "contestId": 1395,
        "index": "F",
        "name": "Boboniu and String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "strings"
        ],
        "points": 2600
      },
      {
        "contestId": 1384,
        "index": "C",
        "name": "String Transformation 1",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1384,
        "index": "D",
        "name": "GameGame",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "games",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1384,
        "index": "E",
        "name": "String Transformation 2",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 1384,
        "index": "F",
        "name": "Rearrange",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2800
      },
      {
        "contestId": 1382,
        "index": "C1",
        "name": "Prefix Flip (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 1382,
        "index": "C2",
        "name": "Prefix Flip (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 1382,
        "index": "D",
        "name": "Unmerge",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 1382,
        "index": "E",
        "name": "Mastermind",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 2500
      },
      {
        "contestId": 1378,
        "index": "A1",
        "name": "Huawei Graph Mining Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1378,
        "index": "A2",
        "name": "Huawei Graph Mining Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1378,
        "index": "A3",
        "name": "Huawei Graph Mining Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1377,
        "index": "A1",
        "name": "Huawei Graph Mining Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1377,
        "index": "A2",
        "name": "Huawei Graph Mining Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1377,
        "index": "A3",
        "name": "Huawei Graph Mining Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1376,
        "index": "A1",
        "name": "Sort the Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1376,
        "index": "B1",
        "name": "Maximal Independent Set",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs"
        ]
      },
      {
        "contestId": 1376,
        "index": "B2",
        "name": "Maximal Independent Set",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs"
        ]
      },
      {
        "contestId": 1376,
        "index": "B3",
        "name": "Maximal Independent Set",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs"
        ]
      },
      {
        "contestId": 1376,
        "index": "B4",
        "name": "Maximal Independent Set",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "graphs"
        ]
      },
      {
        "contestId": 1362,
        "index": "D",
        "name": "Johnny and Contribution",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1362,
        "index": "E",
        "name": "Johnny and Grandmaster",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "math",
          "number theory",
          "sortings",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1362,
        "index": "F",
        "name": "Johnny and Megan's Necklace",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1350,
        "index": "C",
        "name": "Orac and LCM",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 1350,
        "index": "D",
        "name": "Orac and Medians",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1350,
        "index": "E",
        "name": "Orac and Game of Life",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "implementation",
          "math",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 1350,
        "index": "F",
        "name": "Slime and Sequences (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "fft",
          "math"
        ],
        "points": 3100
      },
      {
        "contestId": 1347,
        "index": "A",
        "name": "A+B (Trial Problem)",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 800
      },
      {
        "contestId": 1347,
        "index": "B",
        "name": "Square?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1347,
        "index": "C",
        "name": "Sum of Round Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1347,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1347,
        "index": "E",
        "name": "Special Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 1345,
        "index": "C",
        "name": "Hilbert's Hotel",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1345,
        "index": "D",
        "name": "Monopole Magnets",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu"
        ],
        "points": 2000
      },
      {
        "contestId": 1345,
        "index": "E",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 1345,
        "index": "F",
        "name": "R\u00e9sum\u00e9 Review",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 1341,
        "index": "C",
        "name": "Nastya and Strange Generator",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1341,
        "index": "D",
        "name": "Nastya and Scoreboard",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1341,
        "index": "E",
        "name": "Nastya and Unexpected Guest",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 1341,
        "index": "F",
        "name": "Nastya and Time Machine",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 1339,
        "index": "C",
        "name": "Powered Addition",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1339,
        "index": "D",
        "name": "Edge Weight Assignment",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "greedy",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1339,
        "index": "E",
        "name": "Perfect Triples",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "implementation",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1337,
        "index": "C",
        "name": "Linova and Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "sortings",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1337,
        "index": "D",
        "name": "Xenia and Colorful Gems",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1337,
        "index": "E",
        "name": "Kaavi and Magic Spell",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1337,
        "index": "F",
        "name": "Yui and Mahjong Set",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 1330,
        "index": "C",
        "name": "Dreamoon Likes Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1330,
        "index": "D",
        "name": "Dreamoon Likes Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1330,
        "index": "E",
        "name": "Drazil Likes Heap",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1323,
        "index": "C",
        "name": "Unusual Competitions",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 1323,
        "index": "D",
        "name": "Present",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "bitmasks",
          "math",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 1323,
        "index": "E",
        "name": "Instant Noodles",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1323,
        "index": "F",
        "name": "Reality Show",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "dp"
        ],
        "points": 2800
      },
      {
        "contestId": 1321,
        "index": "B",
        "name": "Journey Planning",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 1321,
        "index": "D",
        "name": "Navigation System",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 1321,
        "index": "E",
        "name": "World of Darkraft: Battle for Azathoth",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1321,
        "index": "F",
        "name": "Reachable Strings",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 1319,
        "index": "A",
        "name": "Contest for Robots",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1319,
        "index": "B",
        "name": "Journey Planning",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "sortings"
        ]
      },
      {
        "contestId": 1319,
        "index": "C",
        "name": "Remove Adjacent",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ]
      },
      {
        "contestId": 1319,
        "index": "D",
        "name": "Navigation System",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ]
      },
      {
        "contestId": 1319,
        "index": "E",
        "name": "World of Darkraft: Battle for Azathoth",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "sortings"
        ]
      },
      {
        "contestId": 1319,
        "index": "F",
        "name": "Treeland and Viruses",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1319,
        "index": "G",
        "name": "Reachable Strings",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ]
      },
      {
        "contestId": 1319,
        "index": "H",
        "name": "Blocks and Sensors",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 1315,
        "index": "D",
        "name": "Recommendations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1315,
        "index": "E",
        "name": "Double Elimination",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 1315,
        "index": "F",
        "name": "Au Pont Rouge",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1314,
        "index": "A",
        "name": "Recommendations",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 1314,
        "index": "B",
        "name": "Double Elimination",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 1314,
        "index": "C",
        "name": "Au Pont Rouge",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "sortings",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1314,
        "index": "D",
        "name": "Tourism",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "graphs",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1314,
        "index": "E",
        "name": "Strange Function",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1314,
        "index": "F",
        "name": "Bad Cryptography",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 3400
      },
      {
        "contestId": 1300,
        "index": "C",
        "name": "Anu Has a Function",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1300,
        "index": "D",
        "name": "Aerodynamic",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 1300,
        "index": "E",
        "name": "Water Balance",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1298,
        "index": "A",
        "name": "Restoring Three Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ]
      },
      {
        "contestId": 1298,
        "index": "B",
        "name": "Remove Duplicates",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ]
      },
      {
        "contestId": 1298,
        "index": "C",
        "name": "File Name",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "strings"
        ]
      },
      {
        "contestId": 1298,
        "index": "D",
        "name": "Bus Video System",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "combinatorics",
          "math"
        ]
      },
      {
        "contestId": 1298,
        "index": "E",
        "name": "Mentors",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "data structures",
          "implementation"
        ]
      },
      {
        "contestId": 1298,
        "index": "F1",
        "name": "Median on Segments (Permutations Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ]
      },
      {
        "contestId": 1298,
        "index": "F2",
        "name": "Median on Segments (General Case Edition)",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ]
      },
      {
        "contestId": 1293,
        "index": "C",
        "name": "NEKO's Maze Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1293,
        "index": "D",
        "name": "Aroma's Search",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1293,
        "index": "E",
        "name": "Xenon's Attack on the Gangs",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1293,
        "index": "F",
        "name": "Chaotic V.",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1291,
        "index": "C",
        "name": "Mind Control",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1291,
        "index": "D",
        "name": "Irreducible Anagrams",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "strings",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 1291,
        "index": "E",
        "name": "Prefix Enlightenment",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1287,
        "index": "C",
        "name": "Garland",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1287,
        "index": "D",
        "name": "Numbers on Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1287,
        "index": "E1",
        "name": "Madhouse (Easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive"
        ],
        "points": 2400
      },
      {
        "contestId": 1287,
        "index": "E2",
        "name": "Madhouse (Hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive"
        ],
        "points": 2800
      },
      {
        "contestId": 1287,
        "index": "F",
        "name": "LCC",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "probabilities"
        ],
        "points": 3100
      },
      {
        "contestId": 1281,
        "index": "C",
        "name": "Cut and Paste",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1281,
        "index": "D",
        "name": "Beingawesomeism",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1281,
        "index": "E",
        "name": "Jeremy Bearimy",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1281,
        "index": "F",
        "name": "Miss Punyverse",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1277,
        "index": "C",
        "name": "As Simple as One and Two",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1277,
        "index": "E",
        "name": "Two Fairs",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 1277,
        "index": "F",
        "name": "Beautiful Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1274,
        "index": "A",
        "name": "Android",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1274,
        "index": "B",
        "name": "iOS",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1273,
        "index": "A",
        "name": "\u0422\u0438\u043f\u043e\u0433\u0440\u0430\u0444\u0438\u043a\u0430, \u0432\u0451\u0440\u0441\u0442\u043a\u0430 \u0438 \u0446\u0432\u0435\u0442\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1273,
        "index": "B",
        "name": "\u041e\u0431\u0449\u0438\u0435 \u0437\u043d\u0430\u043d\u0438\u044f",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1273,
        "index": "C",
        "name": "\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b-1",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1273,
        "index": "D",
        "name": "\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b-2",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1269,
        "index": "C",
        "name": "Long Beautiful Integer",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1269,
        "index": "D",
        "name": "Domino for Young",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1269,
        "index": "E",
        "name": "K Integers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 1265,
        "index": "C",
        "name": "Beautiful Regional Contest",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1265,
        "index": "D",
        "name": "Beautiful Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 1265,
        "index": "F",
        "name": "Beautiful Bracket Sequence (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1262,
        "index": "A",
        "name": "Math Problem",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 1262,
        "index": "B",
        "name": "Box",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1200
      },
      {
        "contestId": 1262,
        "index": "C",
        "name": "Messy",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1262,
        "index": "D1",
        "name": "Optimal Subsequences (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1262,
        "index": "D2",
        "name": "Optimal Subsequences (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1262,
        "index": "E",
        "name": "Arson In Berland Forest",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1262,
        "index": "F1",
        "name": "Wrong Answer on test 233 (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1262,
        "index": "F2",
        "name": "Wrong Answer on test 233 (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1261,
        "index": "A",
        "name": "Messy",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1261,
        "index": "B1",
        "name": "Optimal Subsequences (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1261,
        "index": "B2",
        "name": "Optimal Subsequences (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 1261,
        "index": "C",
        "name": "Arson In Berland Forest",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures",
          "dfs and similar",
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 1261,
        "index": "D1",
        "name": "Wrong Answer on test 233 (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1261,
        "index": "D2",
        "name": "Wrong Answer on test 233 (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "fft",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1261,
        "index": "E",
        "name": "Not Same",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 1259,
        "index": "A",
        "name": "Happy Birthday, Polycarp!",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1259,
        "index": "B",
        "name": "Make Them Odd",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1259,
        "index": "C",
        "name": "As Simple as One and Two",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 1259,
        "index": "D",
        "name": "Let's Play the Words?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 1259,
        "index": "E",
        "name": "Two Fairs",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 1259,
        "index": "F",
        "name": "Beautiful Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1259,
        "index": "G",
        "name": "Tree Elimination",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 1255,
        "index": "D",
        "name": "Feeding Chicken",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 1255,
        "index": "E1",
        "name": "Send Boxes to Alice (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1255,
        "index": "E2",
        "name": "Send Boxes to Alice (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2100
      },
      {
        "contestId": 1255,
        "index": "F",
        "name": "Point Ordering",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "interactive"
        ],
        "points": 2300
      },
      {
        "contestId": 1248,
        "index": "C",
        "name": "Ivan the Fool and the Probability Theory",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 1248,
        "index": "D2",
        "name": "The World Is Just a Programming Task (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 1248,
        "index": "E",
        "name": "Queue in the Train",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1248,
        "index": "F",
        "name": "Catowice City",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1247,
        "index": "A",
        "name": "Forgetting Things",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 900
      },
      {
        "contestId": 1247,
        "index": "B1",
        "name": "TV Subscriptions (Easy Version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1247,
        "index": "B2",
        "name": "TV Subscriptions (Hard Version)",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 1247,
        "index": "C",
        "name": "p-binary",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 1247,
        "index": "D",
        "name": "Power Products",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1247,
        "index": "E",
        "name": "Rock Is Push",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1247,
        "index": "F",
        "name": "Tree Factory",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1246,
        "index": "A",
        "name": "p-binary",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1246,
        "index": "B",
        "name": "Power Products",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 1246,
        "index": "C",
        "name": "Rock Is Push",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1246,
        "index": "D",
        "name": "Tree Factory",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "divide and conquer",
          "greedy",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1246,
        "index": "E",
        "name": "To Make 1",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 1243,
        "index": "C",
        "name": "Tile Painting",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 1243,
        "index": "D",
        "name": "0-1 MST",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1243,
        "index": "E",
        "name": "Sum Balance",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "dp",
          "graphs",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1241,
        "index": "A",
        "name": "CME",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1241,
        "index": "B",
        "name": "Strings Equalization",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "strings"
        ],
        "points": 1000
      },
      {
        "contestId": 1241,
        "index": "C",
        "name": "Save the Nature",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1241,
        "index": "D",
        "name": "Sequence Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1241,
        "index": "E",
        "name": "Paint the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1241,
        "index": "F",
        "name": "Stack Exterminable Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 1240,
        "index": "A",
        "name": "Save the Nature",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1240,
        "index": "B",
        "name": "Sequence Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 1240,
        "index": "C",
        "name": "Paint the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 1240,
        "index": "D",
        "name": "Stack Exterminable Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp",
          "hashing"
        ],
        "points": 2600
      },
      {
        "contestId": 1240,
        "index": "E",
        "name": "Wooden Raft",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 3200
      },
      {
        "contestId": 1235,
        "index": "A3",
        "name": "Shuffled Images",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1235,
        "index": "B3",
        "name": "Shuffled Images",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1235,
        "index": "C3",
        "name": "Shuffled Images",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ]
      },
      {
        "contestId": 1231,
        "index": "A",
        "name": "Dawid and Bags of Candies",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1231,
        "index": "B",
        "name": "Ania and Minimizing",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 1231,
        "index": "D",
        "name": "Anadi and Domino",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1231,
        "index": "F",
        "name": "Marcin and Training Camp",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1231,
        "index": "G",
        "name": "Kamil and Making a Stream",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1230,
        "index": "C",
        "name": "Anadi and Domino",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 1230,
        "index": "D",
        "name": "Marcin and Training Camp",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1230,
        "index": "E",
        "name": "Kamil and Making a Stream",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1230,
        "index": "F",
        "name": "Konrad and Company Evaluation",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1229,
        "index": "A",
        "name": "Marcin and Training Camp",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1229,
        "index": "B",
        "name": "Kamil and Making a Stream",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "dp",
          "graphs",
          "math",
          "number theory",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1229,
        "index": "C",
        "name": "Konrad and Company Evaluation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1229,
        "index": "D",
        "name": "Wojtek and Card Tricks",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1229,
        "index": "E1",
        "name": "Marek and Matching (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "probabilities"
        ],
        "points": 3100
      },
      {
        "contestId": 1229,
        "index": "E2",
        "name": "Marek and Matching (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "probabilities"
        ],
        "points": 3200
      },
      {
        "contestId": 1229,
        "index": "F",
        "name": "Mateusz and Escape Room",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3500
      },
      {
        "contestId": 1219,
        "index": "A",
        "name": "BubbleReactor",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2800
      },
      {
        "contestId": 1219,
        "index": "B",
        "name": "Xor Spanning Tree",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 1219,
        "index": "D",
        "name": "Workout plan",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 1219,
        "index": "E",
        "name": "Jumping Transformers",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 1219,
        "index": "F",
        "name": "Guarding warehouses",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 1219,
        "index": "H",
        "name": "Function Composition",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 1219,
        "index": "I",
        "name": "The Light Square",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 1212,
        "index": "A",
        "name": "Wrong Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1212,
        "index": "B",
        "name": "Two-gram",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1212,
        "index": "C",
        "name": "Less or Equal",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 1212,
        "index": "D",
        "name": "Divide by three, multiply by two",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 1212,
        "index": "E",
        "name": "Booking System",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1212,
        "index": "F",
        "name": "One-Based Arithmetic",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force"
        ],
        "points": 1800
      },
      {
        "contestId": 1212,
        "index": "G",
        "name": "Hiking",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1212,
        "index": "H",
        "name": "Berland Federalization",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 1206,
        "index": "C",
        "name": "Almost Equal",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 1206,
        "index": "D",
        "name": "Shortest Cycle",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 1206,
        "index": "E",
        "name": "Palindromic Paths",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "interactive"
        ],
        "points": 2400
      },
      {
        "contestId": 1206,
        "index": "F",
        "name": "Almost All",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1199,
        "index": "C",
        "name": "MP3",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 1199,
        "index": "D",
        "name": "Welfare State",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1199,
        "index": "E",
        "name": "Matching vs  Independent Set",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 1199,
        "index": "F",
        "name": "Rectangle Painting 1",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 1191,
        "index": "C",
        "name": "Tokitsukaze and Discard Items",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1191,
        "index": "D",
        "name": "Tokitsukaze, CSL and Stone Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 1191,
        "index": "E",
        "name": "Tokitsukaze and Duel",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "games",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 1191,
        "index": "F",
        "name": "Tokitsukaze and Strange Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer"
        ],
        "points": 2000
      },
      {
        "contestId": 1189,
        "index": "D1",
        "name": "Add on a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1189,
        "index": "D2",
        "name": "Add on a Tree: Revolution",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1189,
        "index": "E",
        "name": "Count Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 1189,
        "index": "F",
        "name": "Array Beauty",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 1180,
        "index": "C",
        "name": "Valeriy and Deque",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1180,
        "index": "D",
        "name": "Tolik and His Uncle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 1180,
        "index": "E",
        "name": "Serge and Dining Room",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 1173,
        "index": "C",
        "name": "Nauuo and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1173,
        "index": "D",
        "name": "Nauuo and Circle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp",
          "geometry",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1173,
        "index": "E1",
        "name": "Nauuo and Pictures (easy version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 1173,
        "index": "E2",
        "name": "Nauuo and Pictures (hard version)",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 1173,
        "index": "F",
        "name": "Nauuo and Portals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2900
      },
      {
        "contestId": 1171,
        "index": "A",
        "name": "Dice Rolling",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 800
      },
      {
        "contestId": 1171,
        "index": "B",
        "name": "New Year and the Christmas Ornament",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1171,
        "index": "C",
        "name": "Letters Rearranging",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 1171,
        "index": "D",
        "name": "Got Any Grapes?",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1171,
        "index": "E",
        "name": "Doggo Recoloring",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 1171,
        "index": "F",
        "name": "Division and Union",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 1169,
        "index": "C",
        "name": "Increasing by Modulo",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1169,
        "index": "D",
        "name": "Good Triple",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1900
      },
      {
        "contestId": 1169,
        "index": "E",
        "name": "And Reachability",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 1164,
        "index": "A",
        "name": "Three Friends (1 point)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "B",
        "name": "Triangle Area (1 point)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "C",
        "name": "7-digit Number (1 point)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "D",
        "name": "Multiple of 29 (1 point)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "E",
        "name": "Least Possible Difference (1 point)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "F",
        "name": "Regular Polygon (1 point)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "G",
        "name": "Find Number (1 point)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "H",
        "name": "Circle Radius (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "I",
        "name": "Maximum Value (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "J",
        "name": "Eleven Segments (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "K",
        "name": "2018 Integers (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "L",
        "name": "Queens (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "M",
        "name": "Seven Digit Number (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "N",
        "name": "All Streets (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "O",
        "name": "Greatest Prime Divisor (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "P",
        "name": "Equilateral Triangles (2 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "Q",
        "name": "Surjective Functions (3 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "R",
        "name": "Divisible by 83 (3 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "S",
        "name": "Find Distance (3 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "T",
        "name": "Compute the Product (3 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1164,
        "index": "U",
        "name": "The Greatest Possible Value (3 points)",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ]
      },
      {
        "contestId": 1162,
        "index": "C",
        "name": "Hide and Seek",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 1162,
        "index": "D",
        "name": "Chladni Figure",
        "type": "PROGRAMMING",
        "tags": [
          "number theory",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1162,
        "index": "E",
        "name": "Thanos Nim",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 1162,
        "index": "F",
        "name": "Palindrome XOR",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 1161,
        "index": "A",
        "name": "Hide and Seek",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 1161,
        "index": "B",
        "name": "Chladni Figure",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 1161,
        "index": "C",
        "name": "Thanos Nim",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 1161,
        "index": "D",
        "name": "Palindrome XOR",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "implementation"
        ],
        "points": 2400
      },
      {
        "contestId": 1161,
        "index": "E",
        "name": "Rainbow Coins",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 1161,
        "index": "F",
        "name": "Zigzag Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "interactive"
        ],
        "points": 3500
      },
      {
        "contestId": 1159,
        "index": "C",
        "name": "The Party and Sweets",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1159,
        "index": "D",
        "name": "The minimal unique substring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "math",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1159,
        "index": "E",
        "name": "Permutation recovery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1159,
        "index": "F",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1150,
        "index": "C",
        "name": "Prefix Sum Primes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1200
      },
      {
        "contestId": 1150,
        "index": "D",
        "name": "Three Religions",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 1150,
        "index": "E",
        "name": "Tree Generator\u2122",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1143,
        "index": "D",
        "name": "The Beatles",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 1143,
        "index": "E",
        "name": "Lynyrd Skynyrd",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1143,
        "index": "F",
        "name": "U2",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1138,
        "index": "C",
        "name": "Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 1138,
        "index": "D",
        "name": "Camp Schedule",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 1138,
        "index": "E",
        "name": "Museums Tour",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 1138,
        "index": "F",
        "name": "Cooperative Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "interactive",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 1130,
        "index": "D1",
        "name": "Toy Train (Simplified)",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1130,
        "index": "D2",
        "name": "Toy Train",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 1130,
        "index": "E",
        "name": "Wrong Answer",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1121,
        "index": "D",
        "name": "Diana and Liana",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1121,
        "index": "E",
        "name": "Once in a casino",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 1121,
        "index": "F",
        "name": "Compress String",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1113,
        "index": "C",
        "name": "Sasha and a Bit of Relax",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 1113,
        "index": "D",
        "name": "Sasha and One More Name",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 1113,
        "index": "E",
        "name": "Sasha and a Patient Friend",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2800
      },
      {
        "contestId": 1113,
        "index": "F",
        "name": "Sasha and Interesting Fact from Graph Theory",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1112,
        "index": "A",
        "name": "Technogoblet of Fire",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1100
      },
      {
        "contestId": 1112,
        "index": "B",
        "name": "System Testing",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1112,
        "index": "C",
        "name": "Diana and Liana",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 1112,
        "index": "D",
        "name": "Compress String",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 1112,
        "index": "E",
        "name": "Once in a casino",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1112,
        "index": "F",
        "name": "Power Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 1112,
        "index": "G",
        "name": "The very same Munchhausen",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 1112,
        "index": "H",
        "name": "Secret Letters",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3100
      },
      {
        "contestId": 1104,
        "index": "C",
        "name": "Grid game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 1104,
        "index": "D",
        "name": "Game with modulo",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 1104,
        "index": "E",
        "name": "Johnny Solving",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "math"
        ],
        "points": 2700
      },
      {
        "contestId": 1099,
        "index": "D",
        "name": "Sum in the tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 1099,
        "index": "E",
        "name": "Nice table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1087,
        "index": "A",
        "name": "Right-Left Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 800
      },
      {
        "contestId": 1087,
        "index": "B",
        "name": "Div Times Mod",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1100
      },
      {
        "contestId": 1087,
        "index": "C",
        "name": "Connect Three",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1087,
        "index": "D",
        "name": "Minimum Diameter Tree",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1087,
        "index": "E",
        "name": "Vasya and Templates",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1087,
        "index": "F",
        "name": "Rock-Paper-Scissors Champion",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 1086,
        "index": "A",
        "name": "Connect Three",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 1086,
        "index": "B",
        "name": "Minimum Diameter Tree",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 1086,
        "index": "C",
        "name": "Vasya and Templates",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 1086,
        "index": "D",
        "name": "Rock-Paper-Scissors Champion",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 1086,
        "index": "E",
        "name": "Beautiful Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1084,
        "index": "D",
        "name": "The Fair Nut and the Best Path",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1084,
        "index": "E",
        "name": "The Fair Nut and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 1084,
        "index": "F",
        "name": "Max Mex",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 1079,
        "index": "A",
        "name": "Kitchen Utensils",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 900
      },
      {
        "contestId": 1079,
        "index": "B",
        "name": "Personalized Cup",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1200
      },
      {
        "contestId": 1079,
        "index": "C",
        "name": "Playing Piano",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 1079,
        "index": "D",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 1079,
        "index": "E",
        "name": "The Unbearable Lightness of Weights",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1079,
        "index": "F",
        "name": "Vasya and Maximum Matching",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1079,
        "index": "G",
        "name": "Chattering",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 1078,
        "index": "A",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation",
          "math",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 1078,
        "index": "B",
        "name": "The Unbearable Lightness of Weights",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 1078,
        "index": "C",
        "name": "Vasya and Maximum Matching",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 1078,
        "index": "D",
        "name": "Chattering",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2900
      },
      {
        "contestId": 1075,
        "index": "C",
        "name": "The Tower is Going Home",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1075,
        "index": "D",
        "name": "Intersecting Subtrees",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "interactive",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1075,
        "index": "E",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 1075,
        "index": "F",
        "name": "Deduction Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu"
        ],
        "points": 2400
      },
      {
        "contestId": 1074,
        "index": "A",
        "name": "The Tower is Going Home",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 1074,
        "index": "B",
        "name": "Intersecting Subtrees",
        "type": "PROGRAMMING",
        "tags": [
          "interactive",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 1074,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 1074,
        "index": "D",
        "name": "Deduction Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "hashing"
        ],
        "points": 2400
      },
      {
        "contestId": 1074,
        "index": "E",
        "name": "Grid Sort",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 3100
      },
      {
        "contestId": 1074,
        "index": "F",
        "name": "DFS",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1072,
        "index": "A",
        "name": "Golden Plate",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 1072,
        "index": "B",
        "name": "Curiosity Has No Limits",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 1072,
        "index": "C",
        "name": "Cram Time",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 1072,
        "index": "D",
        "name": "Minimum path",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 1072,
        "index": "E",
        "name": "Triple Flips",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1072,
        "index": "F",
        "name": "Familiar Operations",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1071,
        "index": "A",
        "name": "Cram Time",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 1071,
        "index": "B",
        "name": "Minimum path",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "greedy",
          "hashing"
        ],
        "points": 1900
      },
      {
        "contestId": 1071,
        "index": "C",
        "name": "Triple Flips",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1071,
        "index": "D",
        "name": "Familiar Operations",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math"
        ],
        "points": 2800
      },
      {
        "contestId": 1068,
        "index": "D",
        "name": "Array Without Local Maximums",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1068,
        "index": "E",
        "name": "Multihedgehog",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 1068,
        "index": "F",
        "name": "Knights",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2600
      },
      {
        "contestId": 1064,
        "index": "C",
        "name": "Oh Those Palindromes",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 1064,
        "index": "D",
        "name": "Labyrinth",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 1064,
        "index": "E",
        "name": "Dwarves, Hats and Extrasensory Abilities",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "geometry",
          "interactive"
        ],
        "points": 1900
      },
      {
        "contestId": 1064,
        "index": "F",
        "name": "Candies for Children",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 1058,
        "index": "A",
        "name": "In Search of an Easy Problem",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 1058,
        "index": "B",
        "name": "Vasya and Cornfield",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1100
      },
      {
        "contestId": 1058,
        "index": "C",
        "name": "Vasya and Golden Ticket",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 1058,
        "index": "D",
        "name": "Vasya and Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 1058,
        "index": "E",
        "name": "Vasya and Good Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1058,
        "index": "F",
        "name": "Putting Boxes Together",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 1058,
        "index": "G",
        "name": "Linear Congruential Generator",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1053,
        "index": "A",
        "name": "Vasya and Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 1053,
        "index": "B",
        "name": "Vasya and Good Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 1053,
        "index": "C",
        "name": "Putting Boxes Together",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2500
      },
      {
        "contestId": 1053,
        "index": "D",
        "name": "Linear Congruential Generator",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 2900
      },
      {
        "contestId": 1052,
        "index": "C",
        "name": "Blood Pressure Estimation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 3100
      },
      {
        "contestId": 1047,
        "index": "C",
        "name": "Enlarge GCD",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1047,
        "index": "D",
        "name": "Little C Loves 3 II",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "flows",
          "graph matchings"
        ],
        "points": 2200
      },
      {
        "contestId": 1047,
        "index": "E",
        "name": "Region Separation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "number theory",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 1046,
        "index": "A",
        "name": "AI robots",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 1046,
        "index": "B",
        "name": "Hyperspace Highways",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 1046,
        "index": "D",
        "name": "Interstellar battle",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 1046,
        "index": "E",
        "name": "Ancient civilizations",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 1046,
        "index": "G",
        "name": "Space Isaac",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 1046,
        "index": "H",
        "name": "Palindrome Pairs",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "hashing"
        ],
        "points": 1600
      },
      {
        "contestId": 1046,
        "index": "J",
        "name": "Self-exploration",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 1040,
        "index": "C",
        "name": "Timetable",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 1040,
        "index": "D",
        "name": "Subway Pursuit",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ],
        "points": 2100
      },
      {
        "contestId": 1040,
        "index": "E",
        "name": "Network Safety",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 1020,
        "index": "C",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 1020,
        "index": "D",
        "name": "The hat",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 1020,
        "index": "E",
        "name": "Sergey's problem",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 1014,
        "index": "A2",
        "name": "Colored Path",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 3200
      },
      {
        "contestId": 1013,
        "index": "C",
        "name": "Photo of The Sky",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1013,
        "index": "D",
        "name": "Chemical table",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "matrices"
        ],
        "points": 1900
      },
      {
        "contestId": 1013,
        "index": "E",
        "name": "Hills",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 1013,
        "index": "F",
        "name": "AB-Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 2800
      },
      {
        "contestId": 1011,
        "index": "C",
        "name": "Fly",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 1011,
        "index": "D",
        "name": "Rocket",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 1800
      },
      {
        "contestId": 1011,
        "index": "E",
        "name": "Border",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 1011,
        "index": "F",
        "name": "Mars rover",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 1008,
        "index": "C",
        "name": "Reorder the Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 1008,
        "index": "D",
        "name": "Pave the Parallelepiped",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 1008,
        "index": "E",
        "name": "Guess two numbers",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 998,
        "index": "C",
        "name": "Convert to Ones",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 998,
        "index": "D",
        "name": "Roman Digits",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 998,
        "index": "E",
        "name": "Sky Full of Stars",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 996,
        "index": "C",
        "name": "Tesla",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 996,
        "index": "D",
        "name": "Suit and Tie",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 996,
        "index": "E",
        "name": "Leaving the Bar",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "geometry",
          "greedy",
          "math",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 996,
        "index": "F",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 994,
        "index": "C",
        "name": "Two Squares",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1600
      },
      {
        "contestId": 994,
        "index": "D",
        "name": "Open Communication",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks"
        ],
        "points": 1900
      },
      {
        "contestId": 994,
        "index": "E",
        "name": "Careful Maneuvering",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 994,
        "index": "F",
        "name": "Compute Power",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 987,
        "index": "D",
        "name": "Fair",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 987,
        "index": "E",
        "name": "Petr and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 987,
        "index": "F",
        "name": "AND Graph",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dfs and similar",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 984,
        "index": "C",
        "name": "Finite or not?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 984,
        "index": "D",
        "name": "XOR-pyramid",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 984,
        "index": "E",
        "name": "Elevator",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 967,
        "index": "C",
        "name": "Stairs and Elevators",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1600
      },
      {
        "contestId": 967,
        "index": "D",
        "name": "Resource Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 967,
        "index": "E",
        "name": "Big Secret",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 967,
        "index": "F",
        "name": "Aztec Catacombs",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 966,
        "index": "A",
        "name": "Stairs and Elevators",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 966,
        "index": "B",
        "name": "Resource Distribution",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 1700
      },
      {
        "contestId": 966,
        "index": "C",
        "name": "Big Secret",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "greedy",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 966,
        "index": "D",
        "name": "Aztec Catacombs",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 966,
        "index": "E",
        "name": "May Holidays",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2900
      },
      {
        "contestId": 966,
        "index": "F",
        "name": "Parametric Circulation",
        "type": "PROGRAMMING",
        "tags": [
          "flows"
        ],
        "points": 3100
      },
      {
        "contestId": 964,
        "index": "C",
        "name": "Alternating Sum",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "matrices",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 964,
        "index": "D",
        "name": "Destruction of a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 964,
        "index": "E",
        "name": "Cutting Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 957,
        "index": "B",
        "name": "Mystical Mosaic",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 957,
        "index": "C",
        "name": "Three-level Laser",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 957,
        "index": "D",
        "name": "Riverside Curio",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 957,
        "index": "E",
        "name": "Contact ATC",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 956,
        "index": "A",
        "name": "Mystical Mosaic",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 956,
        "index": "B",
        "name": "Three-level Laser",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 956,
        "index": "C",
        "name": "Riverside Curio",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 956,
        "index": "D",
        "name": "Contact ATC",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 956,
        "index": "E",
        "name": "Wardrobe",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2700
      },
      {
        "contestId": 956,
        "index": "F",
        "name": "Minimal Subset Difference",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 3200
      },
      {
        "contestId": 953,
        "index": "A",
        "name": "2-3-numbers",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 953,
        "index": "B",
        "name": "Add Points",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 953,
        "index": "C",
        "name": "Is This a Zebra?",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 953,
        "index": "D",
        "name": "Choose Place",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 953,
        "index": "E",
        "name": "Merge Equal Elements",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 953,
        "index": "F",
        "name": "Mobile Communications",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 953,
        "index": "G",
        "name": "Large Bouquets",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 953,
        "index": "H",
        "name": "Endless Roses Most Beautiful",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 953,
        "index": "I",
        "name": "A Vital Problem",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 953,
        "index": "J",
        "name": "Segments",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 951,
        "index": "A",
        "name": "Plasticine zebra",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 951,
        "index": "B",
        "name": "Colored Cubes",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 951,
        "index": "C",
        "name": "Down or Right",
        "type": "PROGRAMMING",
        "tags": [
          "interactive"
        ],
        "points": 2100
      },
      {
        "contestId": 951,
        "index": "D",
        "name": "Mobile Phone Network",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 951,
        "index": "E",
        "name": "Disjoint Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2700
      },
      {
        "contestId": 951,
        "index": "F",
        "name": "Company Acquisitions",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 951,
        "index": "G",
        "name": "Pisces",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 3400
      },
      {
        "contestId": 950,
        "index": "C",
        "name": "Zebras",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 950,
        "index": "D",
        "name": "A Leapfrog in the Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 950,
        "index": "E",
        "name": "Data Center Maintenance",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 950,
        "index": "F",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 948,
        "index": "B",
        "name": "Primal Sport",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 948,
        "index": "C",
        "name": "Producing Snow",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 1600
      },
      {
        "contestId": 948,
        "index": "D",
        "name": "Perfect Security",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 948,
        "index": "E",
        "name": "Picking Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 947,
        "index": "A",
        "name": "Primal Sport",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 947,
        "index": "B",
        "name": "Producing Snow",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 947,
        "index": "C",
        "name": "Perfect Security",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "strings",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 947,
        "index": "D",
        "name": "Picking Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 947,
        "index": "E",
        "name": "Perpetual Subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math",
          "matrices"
        ],
        "points": 3100
      },
      {
        "contestId": 947,
        "index": "F",
        "name": "Public Service",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "trees"
        ],
        "points": 3200
      },
      {
        "contestId": 944,
        "index": "A",
        "name": "World Cup",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 944,
        "index": "B",
        "name": "Laboratory Work",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 944,
        "index": "C",
        "name": "Peculiar apple-tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 944,
        "index": "D",
        "name": "Game with String",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 944,
        "index": "E",
        "name": "Teodor is not a liar!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 944,
        "index": "F",
        "name": "Game with Tokens",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "games"
        ],
        "points": 2500
      },
      {
        "contestId": 944,
        "index": "G",
        "name": "Coins Exhibition",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2900
      },
      {
        "contestId": 937,
        "index": "C",
        "name": "Save Energy!",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 937,
        "index": "D",
        "name": "Sleepy Game",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "games",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 937,
        "index": "E",
        "name": "Lock Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 934,
        "index": "C",
        "name": "A Twisty Movement",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 934,
        "index": "D",
        "name": "A Determined Cleanup",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 934,
        "index": "E",
        "name": "A Colourful Prospect",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 931,
        "index": "D",
        "name": "Peculiar apple-tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 931,
        "index": "E",
        "name": "Game with String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "probabilities"
        ],
        "points": 1600
      },
      {
        "contestId": 931,
        "index": "F",
        "name": "Teodor is not a liar!",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 918,
        "index": "C",
        "name": "The Monster",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 918,
        "index": "D",
        "name": "MADMAX",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "games",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 918,
        "index": "E",
        "name": "Pollywog",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "matrices"
        ],
        "points": 2900
      },
      {
        "contestId": 907,
        "index": "C",
        "name": "Shockers",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 907,
        "index": "D",
        "name": "Seating of Students",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2200
      },
      {
        "contestId": 907,
        "index": "E",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 907,
        "index": "F",
        "name": "Power Tower",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 904,
        "index": "A",
        "name": "Masha and Bears",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 904,
        "index": "B",
        "name": "Tic-Tac-Toe",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1400
      },
      {
        "contestId": 904,
        "index": "C",
        "name": "Shockers",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 904,
        "index": "D",
        "name": "Seating of Students",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2200
      },
      {
        "contestId": 904,
        "index": "E",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs"
        ],
        "points": 2400
      },
      {
        "contestId": 904,
        "index": "F",
        "name": "Power Tower",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 902,
        "index": "C",
        "name": "Hashing Trees",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1500
      },
      {
        "contestId": 902,
        "index": "D",
        "name": "GCD of Polynomials",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 902,
        "index": "E",
        "name": "Bipartite Segments",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 897,
        "index": "C",
        "name": "Nephren gives a riddle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 897,
        "index": "D",
        "name": "Ithea Plays With Chtholly",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "implementation",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 897,
        "index": "E",
        "name": "Willem, Chtholly and Seniorious",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 892,
        "index": "C",
        "name": "Pride",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 892,
        "index": "D",
        "name": "Gluttony",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 892,
        "index": "E",
        "name": "Envy",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 890,
        "index": "A",
        "name": "ACM ICPC",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1000
      },
      {
        "contestId": 890,
        "index": "B",
        "name": "Vlad and Cafes",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1000
      },
      {
        "contestId": 890,
        "index": "C",
        "name": "Petya and Catacombs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 890,
        "index": "D",
        "name": "Restoration of string",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 890,
        "index": "E",
        "name": "Maximum Element",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 890,
        "index": "F",
        "name": "Symmetric Projections",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 889,
        "index": "A",
        "name": "Petya and Catacombs",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 889,
        "index": "B",
        "name": "Restoration of string",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 889,
        "index": "C",
        "name": "Maximum Element",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 889,
        "index": "D",
        "name": "Symmetric Projections",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2900
      },
      {
        "contestId": 879,
        "index": "C",
        "name": "Short Program",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "constructive algorithms",
          "graph matchings"
        ],
        "points": 1600
      },
      {
        "contestId": 879,
        "index": "D",
        "name": "Teams Formation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 879,
        "index": "E",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 876,
        "index": "C",
        "name": "Classroom Watch",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 876,
        "index": "D",
        "name": "Sorting the Coins",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "implementation",
          "sortings",
          "trees",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 876,
        "index": "E",
        "name": "National Property",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 876,
        "index": "F",
        "name": "High Cry",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 872,
        "index": "A",
        "name": "Search for Pretty Integers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 900
      },
      {
        "contestId": 872,
        "index": "B",
        "name": "Maximum of Maximums of Minimums",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 872,
        "index": "C",
        "name": "Maximum splitting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 872,
        "index": "D",
        "name": "Something with XOR Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 872,
        "index": "E",
        "name": "Points, Lines and Ready-made Titles",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 871,
        "index": "A",
        "name": "Maximum splitting",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 871,
        "index": "B",
        "name": "Something with XOR Queries",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "interactive"
        ],
        "points": 2000
      },
      {
        "contestId": 871,
        "index": "C",
        "name": "Points, Lines and Ready-made Titles",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 871,
        "index": "D",
        "name": "Paths",
        "type": "PROGRAMMING",
        "tags": [
          "number theory",
          "sortings"
        ],
        "points": 2700
      },
      {
        "contestId": 867,
        "index": "B",
        "name": "Save the problem!",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 867,
        "index": "C",
        "name": "Ordering Pizza",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "ternary search"
        ],
        "points": 1900
      },
      {
        "contestId": 867,
        "index": "D",
        "name": "Gotta Go Fast",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 867,
        "index": "E",
        "name": "Buy Low Sell High",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2400
      },
      {
        "contestId": 867,
        "index": "F",
        "name": "Hex Dyslexia",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3300
      },
      {
        "contestId": 866,
        "index": "A",
        "name": "Save the problem!",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 866,
        "index": "B",
        "name": "Ordering Pizza",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 866,
        "index": "C",
        "name": "Gotta Go Fast",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 866,
        "index": "D",
        "name": "Buy Low Sell High",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 866,
        "index": "E",
        "name": "Hex Dyslexia",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 3300
      },
      {
        "contestId": 866,
        "index": "F",
        "name": "Egg Roulette",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "meet-in-the-middle"
        ],
        "points": 3300
      },
      {
        "contestId": 866,
        "index": "G",
        "name": "Flowers and Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3300
      },
      {
        "contestId": 861,
        "index": "A",
        "name": "k-rounding",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1100
      },
      {
        "contestId": 861,
        "index": "B",
        "name": "Which floor?",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 861,
        "index": "C",
        "name": "Did you mean...",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 861,
        "index": "D",
        "name": "Polycarp's phone book",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 861,
        "index": "E",
        "name": "Tests Renumeration",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 861,
        "index": "F",
        "name": "Wizard's Tour",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2300
      },
      {
        "contestId": 860,
        "index": "A",
        "name": "Did you mean...",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 860,
        "index": "B",
        "name": "Polycarp's phone book",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 860,
        "index": "C",
        "name": "Tests Renumeration",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 860,
        "index": "D",
        "name": "Wizard's Tour",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 854,
        "index": "C",
        "name": "Planning",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 854,
        "index": "D",
        "name": "Jury Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 854,
        "index": "E",
        "name": "Boredom",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 851,
        "index": "C",
        "name": "Five Dimensional Points",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 851,
        "index": "D",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 851,
        "index": "E",
        "name": "Arpa and a game with Mojtaba",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "games"
        ],
        "points": 2200
      },
      {
        "contestId": 849,
        "index": "C",
        "name": "From Y to Y",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1600
      },
      {
        "contestId": 849,
        "index": "D",
        "name": "Rooter's Song",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1900
      },
      {
        "contestId": 849,
        "index": "E",
        "name": "Goodbye Souvenir",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2600
      },
      {
        "contestId": 844,
        "index": "C",
        "name": "Sorting by Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 844,
        "index": "D",
        "name": "Interactive LowerBound",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "interactive",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 844,
        "index": "E",
        "name": "Upgrading Tree",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 841,
        "index": "C",
        "name": "Leha and Function",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1300
      },
      {
        "contestId": 841,
        "index": "D",
        "name": "Leha and another game about graph",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 841,
        "index": "E",
        "name": "On the Bench",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 834,
        "index": "C",
        "name": "The Meaningless Game",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 834,
        "index": "D",
        "name": "The Bakery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 834,
        "index": "E",
        "name": "Ever-Hungry Krakozyabra",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 831,
        "index": "D",
        "name": "Office Keys",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 831,
        "index": "E",
        "name": "Cards Sorting",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1600
      },
      {
        "contestId": 831,
        "index": "F",
        "name": "Bamboo Partition",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 828,
        "index": "C",
        "name": "String Reconstruction",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 828,
        "index": "D",
        "name": "High Load",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 828,
        "index": "E",
        "name": "DNA Evolution",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 828,
        "index": "F",
        "name": "Best Edge Weight",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs"
        ],
        "points": 2700
      },
      {
        "contestId": 823,
        "index": "A",
        "name": "High Load",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 823,
        "index": "B",
        "name": "DNA Evolution",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 823,
        "index": "C",
        "name": "Bamboo Partition",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math",
          "two pointers"
        ],
        "points": 2300
      },
      {
        "contestId": 823,
        "index": "D",
        "name": "Rusty String",
        "type": "PROGRAMMING",
        "tags": [
          "fft",
          "math",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 823,
        "index": "E",
        "name": "Singer House",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "graphs"
        ],
        "points": 2800
      },
      {
        "contestId": 823,
        "index": "F",
        "name": "Perpetual Motion Machine",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 3100
      },
      {
        "contestId": 823,
        "index": "G",
        "name": "Dirty Arkady's Kitchen",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs"
        ],
        "points": 3200
      },
      {
        "contestId": 820,
        "index": "C",
        "name": "Mister B and Boring Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 820,
        "index": "D",
        "name": "Mister B and PR Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 820,
        "index": "E",
        "name": "Mister B and Beacons on Field",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 816,
        "index": "C",
        "name": "Karen and Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 816,
        "index": "D",
        "name": "Karen and Test",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 816,
        "index": "E",
        "name": "Karen and Supermarket",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 810,
        "index": "C",
        "name": "Do you want a date?",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 810,
        "index": "D",
        "name": "Glad to see you!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 2200
      },
      {
        "contestId": 810,
        "index": "E",
        "name": "Find a car",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 807,
        "index": "C",
        "name": "Success Rate",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 807,
        "index": "D",
        "name": "Dynamic Problem Scoring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 807,
        "index": "E",
        "name": "Prairie Partition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 807,
        "index": "F",
        "name": "Perishable Roads",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 806,
        "index": "A",
        "name": "Success Rate",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 806,
        "index": "B",
        "name": "Dynamic Problem Scoring",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 806,
        "index": "C",
        "name": "Prairie Partition",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 806,
        "index": "D",
        "name": "Perishable Roads",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2700
      },
      {
        "contestId": 806,
        "index": "E",
        "name": "Blog Post Rating",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3000
      },
      {
        "contestId": 806,
        "index": "F",
        "name": "Test Data Generation",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3400
      },
      {
        "contestId": 805,
        "index": "C",
        "name": "Find Amir",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 805,
        "index": "D",
        "name": "Minimum number of steps",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1400
      },
      {
        "contestId": 805,
        "index": "E",
        "name": "Ice cream coloring",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 805,
        "index": "F",
        "name": "Expected diameter of a tree",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "probabilities",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 801,
        "index": "C",
        "name": "Voltage Keepsake",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 801,
        "index": "D",
        "name": "Volatile Kite",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 801,
        "index": "E",
        "name": "Vulnerable Kerbals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 800,
        "index": "A",
        "name": "Voltage Keepsake",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 800,
        "index": "B",
        "name": "Volatile Kite",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1800
      },
      {
        "contestId": 800,
        "index": "C",
        "name": "Vulnerable Kerbals",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 800,
        "index": "D",
        "name": "Varying Kibibits",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2700
      },
      {
        "contestId": 800,
        "index": "E",
        "name": "Verifying Kingdom",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "interactive"
        ],
        "points": 3200
      },
      {
        "contestId": 795,
        "index": "A",
        "name": "Amusement Park",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 795,
        "index": "B",
        "name": "Significant Cups",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "sortings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 795,
        "index": "C",
        "name": "Maximum Number",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 795,
        "index": "D",
        "name": "Lie or Truth",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 795,
        "index": "E",
        "name": "Big Number and Remainder",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 795,
        "index": "F",
        "name": "Pens And Days Of Week",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 795,
        "index": "G",
        "name": "Perfectionist Arkadiy",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "math",
          "number theory"
        ],
        "points": 2700
      },
      {
        "contestId": 795,
        "index": "H",
        "name": "Repairing Of String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "constructive algorithms",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 795,
        "index": "I",
        "name": "Composing Of String",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp",
          "greedy",
          "strings"
        ],
        "points": 2300
      },
      {
        "contestId": 795,
        "index": "J",
        "name": "Stepan's Series",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 795,
        "index": "K",
        "name": "Stepan and Vowels",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 795,
        "index": "L",
        "name": "Bars",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "binary search",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 791,
        "index": "B",
        "name": "Bear and Friendship Condition",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 791,
        "index": "C",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 791,
        "index": "D",
        "name": "Bear and Tree Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 791,
        "index": "E",
        "name": "Bear and Company",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 790,
        "index": "A",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 790,
        "index": "B",
        "name": "Bear and Tree Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "dp",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 790,
        "index": "C",
        "name": "Bear and Company",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 790,
        "index": "D",
        "name": "Bear and Rectangle Strips",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 3000
      },
      {
        "contestId": 790,
        "index": "E",
        "name": "Bear and Isomorphic Points",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3300
      },
      {
        "contestId": 789,
        "index": "C",
        "name": "Functions again",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 789,
        "index": "D",
        "name": "Weird journey",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2100
      },
      {
        "contestId": 789,
        "index": "E",
        "name": "The Great Mixing",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dfs and similar",
          "dp",
          "graph matchings",
          "graphs",
          "math",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 787,
        "index": "C",
        "name": "Berzerk",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 787,
        "index": "D",
        "name": "Legacy",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 787,
        "index": "E",
        "name": "Till I Collapse",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 2400
      },
      {
        "contestId": 782,
        "index": "A",
        "name": "Andryusha and Socks",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 800
      },
      {
        "contestId": 782,
        "index": "B",
        "name": "The Meeting Place Cannot Be Changed",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "ternary search"
        ],
        "points": 1600
      },
      {
        "contestId": 782,
        "index": "C",
        "name": "Andryusha and Colored Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 782,
        "index": "D",
        "name": "Innokenty and a Football League",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 782,
        "index": "E",
        "name": "Underground Lab",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 782,
        "index": "F",
        "name": "Axel and Marston in Bitland",
        "type": "PROGRAMMING",
        "tags": [
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 781,
        "index": "A",
        "name": "Andryusha and Colored Balloons",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "greedy",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 781,
        "index": "B",
        "name": "Innokenty and a Football League",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "brute force",
          "graph matchings",
          "graphs",
          "greedy",
          "implementation",
          "shortest paths",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 781,
        "index": "C",
        "name": "Underground Lab",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 781,
        "index": "D",
        "name": "Axel and Marston in Bitland",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "graphs",
          "matrices"
        ],
        "points": 2400
      },
      {
        "contestId": 781,
        "index": "E",
        "name": "Andryusha and Nervous Barriers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2700
      },
      {
        "contestId": 781,
        "index": "F",
        "name": "Intranet of Buses",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "two pointers"
        ],
        "points": 3100
      },
      {
        "contestId": 779,
        "index": "D",
        "name": "String Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 779,
        "index": "E",
        "name": "Bitwise Formula",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "expression parsing",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 779,
        "index": "F",
        "name": "Peterson Polyglot",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 764,
        "index": "C",
        "name": "Timofey and a tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 764,
        "index": "D",
        "name": "Timofey and rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 764,
        "index": "E",
        "name": "Timofey and remoduling",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 760,
        "index": "C",
        "name": "Pavel and barbecue",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 760,
        "index": "D",
        "name": "Travel Card",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 760,
        "index": "E",
        "name": "Nikita and stack",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 760,
        "index": "F",
        "name": "Bacterial Melee",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 759,
        "index": "A",
        "name": "Pavel and barbecue",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu"
        ],
        "points": 1700
      },
      {
        "contestId": 759,
        "index": "B",
        "name": "Travel Card",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 759,
        "index": "C",
        "name": "Nikita and stack",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 759,
        "index": "D",
        "name": "Bacterial Melee",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 759,
        "index": "E",
        "name": "Byteland coins",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 3200
      },
      {
        "contestId": 759,
        "index": "F",
        "name": "Long number",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 3400
      },
      {
        "contestId": 752,
        "index": "A",
        "name": "Santa Claus and a Place in a Class",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 800
      },
      {
        "contestId": 752,
        "index": "B",
        "name": "Santa Claus and Keyboard Check",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 752,
        "index": "C",
        "name": "Santa Claus and Robot",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "shortest paths"
        ],
        "points": 1400
      },
      {
        "contestId": 752,
        "index": "D",
        "name": "Santa Claus and a Palindrome",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "hashing",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 752,
        "index": "E",
        "name": "Santa Claus and Tangerines",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 752,
        "index": "F",
        "name": "Santa Clauses and a Soccer Championship",
        "type": "PROGRAMMING",
        "tags": [
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 751,
        "index": "A",
        "name": "\u041e\u0446\u0435\u043d\u043a\u0438 \u0412\u0430\u0441\u0438",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 800
      },
      {
        "contestId": 751,
        "index": "B",
        "name": "\u041f\u0443\u0442\u044c \u041f\u043e\u043b\u0438\u043a\u0430\u0440\u043f\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1200
      },
      {
        "contestId": 745,
        "index": "C",
        "name": "Hongcow Builds A Nation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 745,
        "index": "D",
        "name": "Hongcow's Game",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "interactive"
        ],
        "points": 1900
      },
      {
        "contestId": 745,
        "index": "E",
        "name": "Hongcow Buys a Deck of Cards",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 742,
        "index": "C",
        "name": "Arpa's loud Owf and Mehrdad's evil plan",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 742,
        "index": "D",
        "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "dsu"
        ],
        "points": 1600
      },
      {
        "contestId": 742,
        "index": "E",
        "name": "Arpa\u2019s overnight party and Mehrdad\u2019s silent entering",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 740,
        "index": "C",
        "name": "Alyona and mex",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1700
      },
      {
        "contestId": 740,
        "index": "D",
        "name": "Alyona and a tree",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dfs and similar",
          "graph matchings",
          "graphs"
        ],
        "points": 1900
      },
      {
        "contestId": 740,
        "index": "E",
        "name": "Alyona and towers",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 738,
        "index": "A",
        "name": "Interview with Oleg",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 900
      },
      {
        "contestId": 738,
        "index": "B",
        "name": "Spotlights",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 738,
        "index": "C",
        "name": "Road to Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1700
      },
      {
        "contestId": 738,
        "index": "D",
        "name": "Sea Battle",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "constructive algorithms",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 738,
        "index": "E",
        "name": "Subordinates",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 738,
        "index": "F",
        "name": "Financiers Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2500
      },
      {
        "contestId": 737,
        "index": "A",
        "name": "Road to Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "binary search"
        ],
        "points": 1700
      },
      {
        "contestId": 737,
        "index": "B",
        "name": "Sea Battle",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 737,
        "index": "C",
        "name": "Subordinates",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 737,
        "index": "D",
        "name": "Financiers Game",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games"
        ],
        "points": 2500
      },
      {
        "contestId": 736,
        "index": "A",
        "name": "Tennis Championship",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "dfs and similar",
          "dp",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 736,
        "index": "B",
        "name": "Taxes",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 736,
        "index": "C",
        "name": "Ostap and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "trees"
        ],
        "points": 2500
      },
      {
        "contestId": 719,
        "index": "C",
        "name": "Efim and Strange Grade",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 719,
        "index": "E",
        "name": "Sasha and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math",
          "matrices"
        ],
        "points": 2300
      },
      {
        "contestId": 716,
        "index": "C",
        "name": "Plus and Square Root",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 716,
        "index": "D",
        "name": "Complete The Graph",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 2300
      },
      {
        "contestId": 716,
        "index": "E",
        "name": "Digit Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "divide and conquer",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 714,
        "index": "C",
        "name": "Sonya and Queries",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 714,
        "index": "D",
        "name": "Searching Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "interactive"
        ],
        "points": 2200
      },
      {
        "contestId": 714,
        "index": "E",
        "name": "Sonya and Problem Wihtout a Legend",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 709,
        "index": "C",
        "name": "Letters Cyclic Shift",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1200
      },
      {
        "contestId": 709,
        "index": "D",
        "name": "Recover the String",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 709,
        "index": "E",
        "name": "Centroids",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 705,
        "index": "C",
        "name": "Thor",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 705,
        "index": "D",
        "name": "Ant Man",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2500
      },
      {
        "contestId": 705,
        "index": "E",
        "name": "Black Widow",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 701,
        "index": "D",
        "name": "As Fast As Possible",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 701,
        "index": "E",
        "name": "Connecting Universities",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 701,
        "index": "F",
        "name": "Break Up",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 699,
        "index": "C",
        "name": "Vacations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1400
      },
      {
        "contestId": 699,
        "index": "D",
        "name": "Fix a Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 1700
      },
      {
        "contestId": 699,
        "index": "E",
        "name": "LRU",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 699,
        "index": "F",
        "name": "Limak and Shooting Points",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 697,
        "index": "C",
        "name": "Lorenzo Von Matterhorn",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 697,
        "index": "D",
        "name": "Puzzles",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 697,
        "index": "E",
        "name": "PLEASE",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 697,
        "index": "F",
        "name": "Legen...",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 695,
        "index": "A",
        "name": "LRU",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 695,
        "index": "B",
        "name": "Break Up",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 695,
        "index": "C",
        "name": "Limak and Shooting Points",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 695,
        "index": "D",
        "name": "Cron",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2800
      },
      {
        "contestId": 695,
        "index": "E",
        "name": "Huffman Coding on Segment",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 3100
      },
      {
        "contestId": 695,
        "index": "F",
        "name": "Coprime Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "number theory"
        ],
        "points": 3000
      },
      {
        "contestId": 695,
        "index": "G",
        "name": "Cool Slogans",
        "type": "PROGRAMMING",
        "tags": [
          "string suffix structures"
        ],
        "points": 3300
      },
      {
        "contestId": 688,
        "index": "C",
        "name": "NP-Hard Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 688,
        "index": "D",
        "name": "Remainders Game",
        "type": "PROGRAMMING",
        "tags": [
          "chinese remainder theorem",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 688,
        "index": "E",
        "name": "The Values You Can Make",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 686,
        "index": "C",
        "name": "Robbers' watch",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 686,
        "index": "D",
        "name": "Kay and Snowflake",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 686,
        "index": "E",
        "name": "Optimal Point",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 684,
        "index": "A2",
        "name": "Online Exam",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive",
          "math",
          "probabilities"
        ],
        "points": 3100
      },
      {
        "contestId": 680,
        "index": "C",
        "name": "Bear and Prime 100",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "interactive",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 680,
        "index": "D",
        "name": "Bear and Tower of Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 680,
        "index": "E",
        "name": "Bear and Square Grid",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 674,
        "index": "A",
        "name": "Bear and Colors",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 674,
        "index": "B",
        "name": "Bear and Two Paths",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 674,
        "index": "C",
        "name": "Levels and Regions",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 674,
        "index": "D",
        "name": "Bearish Fanpages",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 674,
        "index": "E",
        "name": "Bear and Destroying Subtrees",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities",
          "trees"
        ],
        "points": 2700
      },
      {
        "contestId": 674,
        "index": "F",
        "name": "Bears and Juice",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "meet-in-the-middle"
        ],
        "points": 2900
      },
      {
        "contestId": 674,
        "index": "G",
        "name": "Choosing Ads",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 673,
        "index": "C",
        "name": "Bear and Colors",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 673,
        "index": "D",
        "name": "Bear and Two Paths",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 673,
        "index": "E",
        "name": "Levels and Regions",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 673,
        "index": "F",
        "name": "Bearish Fanpages",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 672,
        "index": "C",
        "name": "Recycling Bottles",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 672,
        "index": "D",
        "name": "Robin Hood",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 672,
        "index": "E",
        "name": "Ultimate Weirdness of an Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "number theory"
        ],
        "points": 2800
      },
      {
        "contestId": 669,
        "index": "B",
        "name": "Little Artem and Grasshopper",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1000
      },
      {
        "contestId": 669,
        "index": "C",
        "name": "Little Artem and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 669,
        "index": "D",
        "name": "Little Artem and Dance",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 669,
        "index": "E",
        "name": "Little Artem and Time Machine",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 668,
        "index": "A",
        "name": "Little Artem and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 668,
        "index": "B",
        "name": "Little Artem and Dance",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 668,
        "index": "C",
        "name": "Little Artem and Random Variable",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 2400
      },
      {
        "contestId": 668,
        "index": "D",
        "name": "Little Artem and Time Machine",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 668,
        "index": "E",
        "name": "Little Artem and 2-SAT",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 3000
      },
      {
        "contestId": 668,
        "index": "F",
        "name": "Little Artem and Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2300
      },
      {
        "contestId": 667,
        "index": "C",
        "name": "Reberland Linguistics",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 1800
      },
      {
        "contestId": 667,
        "index": "D",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "graphs",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 667,
        "index": "E",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 664,
        "index": "B",
        "name": "Rebus",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 664,
        "index": "C",
        "name": "International Olympiad",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 664,
        "index": "D",
        "name": "Graph Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 664,
        "index": "E",
        "name": "To Hack or not to Hack",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 663,
        "index": "B",
        "name": "International Olympiad",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 663,
        "index": "C",
        "name": "Graph Coloring",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 663,
        "index": "D",
        "name": "To Hack or not to Hack",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 3100
      },
      {
        "contestId": 663,
        "index": "E",
        "name": "Binary Table",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 658,
        "index": "B",
        "name": "Bear and Displayed Friends",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 658,
        "index": "C",
        "name": "Bear and Forgotten Tree 3",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 658,
        "index": "D",
        "name": "Bear and Polynomials",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 658,
        "index": "E",
        "name": "Bear and Contribution",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 657,
        "index": "A",
        "name": "Bear and Forgotten Tree 3",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "trees"
        ],
        "points": 1600
      },
      {
        "contestId": 657,
        "index": "B",
        "name": "Bear and Polynomials",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 657,
        "index": "C",
        "name": "Bear and Contribution",
        "type": "PROGRAMMING",
        "tags": [
          "sortings",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 657,
        "index": "D",
        "name": "Bear and Paradox",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math",
          "sortings"
        ],
        "points": 2800
      },
      {
        "contestId": 657,
        "index": "E",
        "name": "Bear and Chemistry",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "trees"
        ],
        "points": 3300
      },
      {
        "contestId": 655,
        "index": "A",
        "name": "Amity Assessment",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 655,
        "index": "B",
        "name": "Mischievous Mess Makers",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1200
      },
      {
        "contestId": 655,
        "index": "C",
        "name": "Enduring Exodus",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 655,
        "index": "D",
        "name": "Robot Rapping Results Report",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 655,
        "index": "E",
        "name": "Intellectual Inquiry",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "strings"
        ],
        "points": 2200
      },
      {
        "contestId": 655,
        "index": "F",
        "name": "Cowslip Collections",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 655,
        "index": "G",
        "name": "Armistice Area Apportionment",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 3200
      },
      {
        "contestId": 651,
        "index": "C",
        "name": "Watchmen",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "geometry",
          "implementation",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 651,
        "index": "D",
        "name": "Image Preview",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "dp",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 651,
        "index": "E",
        "name": "Table Compression",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 649,
        "index": "A",
        "name": "\u041b\u044e\u0431\u0438\u043c\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u041f\u043e\u043b\u0438\u043a\u0430\u0440\u043f\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1000
      },
      {
        "contestId": 649,
        "index": "B",
        "name": "\u042d\u0442\u0430\u0436\u0438",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1400
      },
      {
        "contestId": 649,
        "index": "C",
        "name": "\u041f\u0435\u0447\u0430\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0439",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 649,
        "index": "D",
        "name": "\u0414\u0435\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0430\u043c\u044f\u0442\u0438",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 649,
        "index": "E",
        "name": "\u0410\u0432\u0442\u043e\u0431\u0443\u0441",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 648,
        "index": "A",
        "name": "\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043f\u043e\u0434\u044a\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 900
      },
      {
        "contestId": 648,
        "index": "B",
        "name": "\u0421\u043e\u0431\u0435\u0440\u0438 \u0441\u0442\u043e\u043b",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 800
      },
      {
        "contestId": 648,
        "index": "C",
        "name": "\u041f\u0443\u0442\u044c \u0420\u043e\u0431\u043e\u0442\u0430",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 1100
      },
      {
        "contestId": 648,
        "index": "D",
        "name": "\u0421\u043e\u0431\u0430\u0447\u043a\u0438 \u0438 \u043c\u0438\u0441\u043a\u0438",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 648,
        "index": "E",
        "name": "\u0421\u043e\u0431\u0435\u0440\u0438 \u0447\u0438\u0441\u043b\u043e",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 647,
        "index": "A",
        "name": "\u041e\u0446\u0435\u043d\u043a\u0438 \u0412\u0430\u0441\u0438",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 800
      },
      {
        "contestId": 647,
        "index": "B",
        "name": "\u0417\u0432\u0451\u0437\u0434\u043d\u043e\u0435 \u043d\u0435\u0431\u043e",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1200
      },
      {
        "contestId": 646,
        "index": "A",
        "name": "\u0422\u0440\u0438 \u0431\u0440\u0430\u0442\u0430",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 800
      },
      {
        "contestId": 646,
        "index": "B",
        "name": "\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 1500
      },
      {
        "contestId": 642,
        "index": "A",
        "name": "Scheduler for Invokers",
        "type": "PROGRAMMING",
        "tags": [
          "*special",
          "interactive"
        ],
        "points": 3000
      },
      {
        "contestId": 640,
        "index": "A",
        "name": "Lazy Caterer Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1300
      },
      {
        "contestId": 640,
        "index": "B",
        "name": "Seasons",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 640,
        "index": "C",
        "name": "Array Sum",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 640,
        "index": "D",
        "name": "Maximal Difference",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 640,
        "index": "E",
        "name": "Divisibility Check",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2000
      },
      {
        "contestId": 640,
        "index": "F",
        "name": "Primes in Interval",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1900
      },
      {
        "contestId": 640,
        "index": "G",
        "name": "Hungarian Notation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2200
      },
      {
        "contestId": 640,
        "index": "H",
        "name": "Rotate Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2400
      },
      {
        "contestId": 636,
        "index": "A",
        "name": "Transfer",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 635,
        "index": "B",
        "name": "Island Puzzle",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1300
      },
      {
        "contestId": 635,
        "index": "C",
        "name": "XOR Equation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 635,
        "index": "D",
        "name": "Factory Repairs",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1700
      },
      {
        "contestId": 635,
        "index": "E",
        "name": "Package Delivery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 635,
        "index": "F",
        "name": "Preorder Test",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 634,
        "index": "B",
        "name": "XOR Equation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 634,
        "index": "C",
        "name": "Factory Repairs",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1700
      },
      {
        "contestId": 634,
        "index": "D",
        "name": "Package Delivery",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "divide and conquer",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 634,
        "index": "E",
        "name": "Preorder Test",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "graphs",
          "greedy"
        ],
        "points": 2600
      },
      {
        "contestId": 634,
        "index": "F",
        "name": "Orchestra",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 3000
      },
      {
        "contestId": 624,
        "index": "C",
        "name": "Graph and String",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 1800
      },
      {
        "contestId": 624,
        "index": "D",
        "name": "Array GCD",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 624,
        "index": "E",
        "name": "Electric Charges",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 614,
        "index": "C",
        "name": "Peter and Snow Blower",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1900
      },
      {
        "contestId": 614,
        "index": "D",
        "name": "Skills",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 614,
        "index": "E",
        "name": "Necklace",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 608,
        "index": "C",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 608,
        "index": "D",
        "name": "Zuma",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 608,
        "index": "E",
        "name": "Marbles",
        "type": "PROGRAMMING",
        "tags": [
          "strings"
        ],
        "points": 2500
      },
      {
        "contestId": 606,
        "index": "C",
        "name": "Sorting Railway Cars",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 606,
        "index": "D",
        "name": "Lazy Student",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 606,
        "index": "E",
        "name": "Freelancer's Dreams",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 604,
        "index": "C",
        "name": "Alternative Thinking",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 604,
        "index": "D",
        "name": "Moodular Arithmetic",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dsu",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 604,
        "index": "E",
        "name": "Lieges of Legendre",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 602,
        "index": "C",
        "name": "The Two Routes",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1600
      },
      {
        "contestId": 602,
        "index": "D",
        "name": "Lipshitz Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 602,
        "index": "E",
        "name": "Kleof\u00e1\u0161 and the n-thlon",
        "type": "PROGRAMMING",
        "tags": [
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 595,
        "index": "C",
        "name": "Warrior and Archer",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2300
      },
      {
        "contestId": 595,
        "index": "D",
        "name": "Max and Bike",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 595,
        "index": "E",
        "name": "Edo and Magnets",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "implementation"
        ],
        "points": 2300
      },
      {
        "contestId": 591,
        "index": "C",
        "name": "Median Smoothing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 591,
        "index": "D",
        "name": "Chip 'n Dale Rescue Rangers",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2100
      },
      {
        "contestId": 591,
        "index": "E",
        "name": "Three States",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "shortest paths"
        ],
        "points": 2200
      },
      {
        "contestId": 588,
        "index": "C",
        "name": "Duff and Weight Lifting",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 588,
        "index": "D",
        "name": "Duff in Beach",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 588,
        "index": "E",
        "name": "Duff in the Army",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 588,
        "index": "F",
        "name": "Duff in Mafia",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 586,
        "index": "C",
        "name": "Gennady the Dentist",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 586,
        "index": "D",
        "name": "Phillip and Trains",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 586,
        "index": "E",
        "name": "Alice, Bob, Oranges and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 586,
        "index": "F",
        "name": "Lizard Era: Beginning",
        "type": "PROGRAMMING",
        "tags": [
          "meet-in-the-middle"
        ],
        "points": 2300
      },
      {
        "contestId": 583,
        "index": "C",
        "name": "GCD Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 583,
        "index": "D",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 583,
        "index": "E",
        "name": "Superior Periodic Subarrays",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 579,
        "index": "C",
        "name": "A Problem about Polyline",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 579,
        "index": "D",
        "name": "\"Or\" Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 579,
        "index": "E",
        "name": "Weakness and Poorness",
        "type": "PROGRAMMING",
        "tags": [
          "ternary search"
        ],
        "points": 2000
      },
      {
        "contestId": 579,
        "index": "F",
        "name": "LCS Again",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 577,
        "index": "C",
        "name": "Vasya and Petya's Game",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 577,
        "index": "D",
        "name": "Invariance of Tree",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 577,
        "index": "E",
        "name": "Points on Plane",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2100
      },
      {
        "contestId": 574,
        "index": "C",
        "name": "Bear and Poker",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 574,
        "index": "D",
        "name": "Bear and Blocks",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math",
          "shortest paths"
        ],
        "points": 1600
      },
      {
        "contestId": 574,
        "index": "E",
        "name": "Bear and Drawing",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "trees"
        ],
        "points": 2300
      },
      {
        "contestId": 572,
        "index": "C",
        "name": "Lengthening Sticks",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2100
      },
      {
        "contestId": 572,
        "index": "D",
        "name": "Minimization",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 572,
        "index": "E",
        "name": "CNF 2",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 569,
        "index": "C",
        "name": "Primes or Palindromes?",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 569,
        "index": "D",
        "name": "Symmetric and Transitive",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 569,
        "index": "E",
        "name": "New Language",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 562,
        "index": "A",
        "name": "Logistical Questions",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 562,
        "index": "B",
        "name": "Clique in the Divisibility Graph",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 562,
        "index": "C",
        "name": "Restoring Map",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 562,
        "index": "D",
        "name": "Restructuring Company",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 562,
        "index": "E",
        "name": "Max and Min",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 562,
        "index": "F",
        "name": "Matching Names",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 562,
        "index": "G",
        "name": "Replicating Processes",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 560,
        "index": "C",
        "name": "Gerald's Hexagon",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 1600
      },
      {
        "contestId": 560,
        "index": "D",
        "name": "Equivalent Strings",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "implementation",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 560,
        "index": "E",
        "name": "Gerald and Giant Chess",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 556,
        "index": "C",
        "name": "Case of Matryoshkas",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 556,
        "index": "D",
        "name": "Case of Fugitive",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 556,
        "index": "E",
        "name": "Case of Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 554,
        "index": "C",
        "name": "Kyoya and Colored Balls",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 554,
        "index": "D",
        "name": "Kyoya and Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 554,
        "index": "E",
        "name": "Love Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 548,
        "index": "C",
        "name": "Mike and Frog",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 548,
        "index": "D",
        "name": "Mike and Feet",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 548,
        "index": "E",
        "name": "Mike and Foam",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 544,
        "index": "C",
        "name": "Writing Code",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 544,
        "index": "D",
        "name": "Destroying Roads",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "graphs",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 544,
        "index": "E",
        "name": "Remembering Strings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 541,
        "index": "A",
        "name": "Place Your Ad Here",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 541,
        "index": "B",
        "name": "Duck Hunt",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 541,
        "index": "C",
        "name": "Idempotent functions",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 541,
        "index": "D",
        "name": "Superhero's Job",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 541,
        "index": "E",
        "name": "Playing on Graph",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 541,
        "index": "F",
        "name": "Quest",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 537,
        "index": "A",
        "name": "Antiplagiarism",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2900
      },
      {
        "contestId": 536,
        "index": "A",
        "name": "Tavas and Karafs",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 536,
        "index": "B",
        "name": "Tavas and Malekas",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 536,
        "index": "C",
        "name": "Tavas and Pashmaks",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 2600
      },
      {
        "contestId": 532,
        "index": "A",
        "name": "Berland Miners",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 532,
        "index": "B",
        "name": "Work Group",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 532,
        "index": "C",
        "name": "Board Game",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 532,
        "index": "D",
        "name": "Landmarks",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 532,
        "index": "E",
        "name": "Correcting Mistakes",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 532,
        "index": "F",
        "name": "Encoding",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 531,
        "index": "A",
        "name": "Quadratic equation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1500
      },
      {
        "contestId": 531,
        "index": "B",
        "name": "String inside out",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 531,
        "index": "C",
        "name": "Diophantine equation",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1500
      },
      {
        "contestId": 531,
        "index": "D",
        "name": "Set subtraction",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1600
      },
      {
        "contestId": 531,
        "index": "E",
        "name": "Sum and product",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 1700
      },
      {
        "contestId": 531,
        "index": "F",
        "name": "Jumping frogs",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 531,
        "index": "G",
        "name": "Levenshtein distance",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 531,
        "index": "H",
        "name": "Points in triangle",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2100
      },
      {
        "contestId": 531,
        "index": "I",
        "name": "Different variables",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2500
      },
      {
        "contestId": 529,
        "index": "A",
        "name": "And Yet Another Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2700
      },
      {
        "contestId": 529,
        "index": "C",
        "name": "Rooks and Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 529,
        "index": "D",
        "name": "Social Network",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 529,
        "index": "E",
        "name": "The Art of Dealing with ATM",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1900
      },
      {
        "contestId": 528,
        "index": "A",
        "name": "Glass Carving",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 528,
        "index": "B",
        "name": "Clique Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1800
      },
      {
        "contestId": 528,
        "index": "C",
        "name": "Data Center Drama",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 2600
      },
      {
        "contestId": 521,
        "index": "A",
        "name": "DNA Alignment",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 521,
        "index": "B",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 521,
        "index": "C",
        "name": "Pluses everywhere",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 516,
        "index": "A",
        "name": "Drazil and Factorial",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 516,
        "index": "B",
        "name": "Drazil and Tiles",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graph matchings",
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 516,
        "index": "C",
        "name": "Drazil and Park",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2300
      },
      {
        "contestId": 512,
        "index": "A",
        "name": "Fox And Names",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "greedy",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 512,
        "index": "B",
        "name": "Fox And Jumping",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "math",
          "number theory",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 512,
        "index": "C",
        "name": "Fox And Dinner",
        "type": "PROGRAMMING",
        "tags": [
          "flows",
          "graph matchings"
        ],
        "points": 2300
      },
      {
        "contestId": 506,
        "index": "A",
        "name": "Mr. Kitayuta, the Treasure Hunter",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 506,
        "index": "B",
        "name": "Mr. Kitayuta's Technology",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 506,
        "index": "C",
        "name": "Mr. Kitayuta vs. Bamboos",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2900
      },
      {
        "contestId": 504,
        "index": "A",
        "name": "Misha and Forest",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "graphs",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 504,
        "index": "B",
        "name": "Misha and Permutations Summation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 504,
        "index": "C",
        "name": "Misha and Palindrome Degree",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 2500
      },
      {
        "contestId": 499,
        "index": "C",
        "name": "Crazy Town",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 499,
        "index": "D",
        "name": "Name That Tune",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "two pointers"
        ],
        "points": 2400
      },
      {
        "contestId": 499,
        "index": "E",
        "name": "Array and Operations",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 497,
        "index": "A",
        "name": "Removing Columns",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 497,
        "index": "B",
        "name": "Tennis Game",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 497,
        "index": "C",
        "name": "Distributing Parts",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "sortings",
          "two pointers"
        ],
        "points": 2100
      },
      {
        "contestId": 495,
        "index": "C",
        "name": "Treasure",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 495,
        "index": "D",
        "name": "Obsessive String",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 495,
        "index": "E",
        "name": "Helping People",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 488,
        "index": "C",
        "name": "Fight the Monster",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 488,
        "index": "D",
        "name": "Strip",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 488,
        "index": "E",
        "name": "Prefix Product Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 485,
        "index": "C",
        "name": "Bits",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 485,
        "index": "D",
        "name": "Maximum Value",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 485,
        "index": "E",
        "name": "Strange Sorting",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 483,
        "index": "C",
        "name": "Diverse Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 483,
        "index": "D",
        "name": "Interesting Array",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures"
        ],
        "points": 1800
      },
      {
        "contestId": 483,
        "index": "E",
        "name": "Game with Strings",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2600
      },
      {
        "contestId": 480,
        "index": "A",
        "name": "Exams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 480,
        "index": "B",
        "name": "Long Jumps",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "hashing",
          "implementation",
          "sortings"
        ],
        "points": 1700
      },
      {
        "contestId": 480,
        "index": "C",
        "name": "Riding in a Lift",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 477,
        "index": "A",
        "name": "Dreamoon and Sums",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 477,
        "index": "B",
        "name": "Dreamoon and Sets",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 477,
        "index": "C",
        "name": "Dreamoon and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2200
      },
      {
        "contestId": 469,
        "index": "C",
        "name": "24 Game",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 469,
        "index": "D",
        "name": "Two Sets",
        "type": "PROGRAMMING",
        "tags": [
          "2-sat",
          "data structures",
          "graph matchings",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 469,
        "index": "E",
        "name": "Hack it!",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 2500
      },
      {
        "contestId": 465,
        "index": "C",
        "name": "No to Palindromes!",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1700
      },
      {
        "contestId": 465,
        "index": "D",
        "name": "Restore Cube",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2000
      },
      {
        "contestId": 465,
        "index": "E",
        "name": "Substitutes in Number",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 462,
        "index": "C",
        "name": "Appleman and Toastman",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "sortings"
        ],
        "points": 1200
      },
      {
        "contestId": 462,
        "index": "D",
        "name": "Appleman and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 2000
      },
      {
        "contestId": 462,
        "index": "E",
        "name": "Appleman and a Sheet of Paper",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 458,
        "index": "A",
        "name": "Golden System",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 458,
        "index": "B",
        "name": "Distributed Join",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 458,
        "index": "C",
        "name": "Elections",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "ternary search"
        ],
        "points": 2100
      },
      {
        "contestId": 458,
        "index": "D",
        "name": "Bingo!",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "probabilities"
        ],
        "points": 2700
      },
      {
        "contestId": 458,
        "index": "E",
        "name": "Flow Optimality",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 458,
        "index": "F",
        "name": "An easy problem about trees",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3200
      },
      {
        "contestId": 456,
        "index": "C",
        "name": "Boredom",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 456,
        "index": "D",
        "name": "A Lot of Games",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "games",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 456,
        "index": "E",
        "name": "Civilization",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 454,
        "index": "C",
        "name": "Little Pony and Expected Maximum",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities"
        ],
        "points": 1600
      },
      {
        "contestId": 454,
        "index": "D",
        "name": "Little Pony and Harmony Chest",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 454,
        "index": "E",
        "name": "Little Pony and Summer Sun Celebration",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2200
      },
      {
        "contestId": 450,
        "index": "C",
        "name": "Jzzhu and Chocolate",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 450,
        "index": "D",
        "name": "Jzzhu and Cities",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 450,
        "index": "E",
        "name": "Jzzhu and Apples",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "number theory"
        ],
        "points": 2500
      },
      {
        "contestId": 447,
        "index": "C",
        "name": "DZY Loves Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 447,
        "index": "D",
        "name": "DZY Loves Modification",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 447,
        "index": "E",
        "name": "DZY Loves Fibonacci Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 445,
        "index": "C",
        "name": "DZY Loves Physics",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 445,
        "index": "D",
        "name": "DZY Loves FFT",
        "type": "PROGRAMMING",
        "tags": [
          "probabilities"
        ],
        "points": 2300
      },
      {
        "contestId": 445,
        "index": "E",
        "name": "DZY Loves Colors",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2400
      },
      {
        "contestId": 443,
        "index": "C",
        "name": "Borya and Hanabi",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1700
      },
      {
        "contestId": 443,
        "index": "D",
        "name": "Andrey and Problem",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "probabilities",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 443,
        "index": "E",
        "name": "Artem and Array",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 2500
      },
      {
        "contestId": 438,
        "index": "A",
        "name": "The Child and Toy",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 438,
        "index": "B",
        "name": "The Child and Zoo",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "dsu",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 438,
        "index": "C",
        "name": "The Child and Polygon",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "geometry"
        ],
        "points": 2500
      },
      {
        "contestId": 434,
        "index": "A",
        "name": "Ryouko's Memory Note",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 434,
        "index": "B",
        "name": "Nanami's Digital Board",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "dp",
          "dsu",
          "implementation",
          "two pointers"
        ],
        "points": 2000
      },
      {
        "contestId": 434,
        "index": "C",
        "name": "Tachibana Kanade's Tofu",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2500
      },
      {
        "contestId": 430,
        "index": "C",
        "name": "Xor-tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "data structures",
          "dfs and similar",
          "trees"
        ],
        "points": 1300
      },
      {
        "contestId": 430,
        "index": "D",
        "name": "Working out",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 430,
        "index": "E",
        "name": "Guess the Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dfs and similar"
        ],
        "points": 2300
      },
      {
        "contestId": 426,
        "index": "C",
        "name": "Sereja and Swaps",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "sortings",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 426,
        "index": "D",
        "name": "Sereja and Table",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 426,
        "index": "E",
        "name": "Sereja and Two Sequences",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 421,
        "index": "B",
        "name": "Start Up",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1000
      },
      {
        "contestId": 421,
        "index": "C",
        "name": "Online Meeting",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 421,
        "index": "E",
        "name": "Cup Trick",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2200
      },
      {
        "contestId": 419,
        "index": "A",
        "name": "Start Up",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1000
      },
      {
        "contestId": 419,
        "index": "B",
        "name": "Online Meeting",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 419,
        "index": "C",
        "name": "Bug in Code",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 419,
        "index": "D",
        "name": "Cup Trick",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 419,
        "index": "E",
        "name": "Playing the ball",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 418,
        "index": "A",
        "name": "Football",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 418,
        "index": "B",
        "name": "Cunning Gena",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 418,
        "index": "C",
        "name": "Square Table",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dp",
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 415,
        "index": "C",
        "name": "Mashmokh and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 415,
        "index": "D",
        "name": "Mashmokh and ACM",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 415,
        "index": "E",
        "name": "Mashmokh and Reverse Operation",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 408,
        "index": "C",
        "name": "Triangle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 408,
        "index": "D",
        "name": "Long Path",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 408,
        "index": "E",
        "name": "Curious Array",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 406,
        "index": "A",
        "name": "Unusual Product",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 406,
        "index": "B",
        "name": "Toy Sum",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 406,
        "index": "C",
        "name": "Graph Cutting",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 403,
        "index": "A",
        "name": "Searching for Graph",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs"
        ],
        "points": 1500
      },
      {
        "contestId": 403,
        "index": "B",
        "name": "Upgrading Array",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 403,
        "index": "C",
        "name": "Strictly Positive Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 399,
        "index": "C",
        "name": "Cards",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ]
      },
      {
        "contestId": 399,
        "index": "D",
        "name": "Painting The Wall",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 399,
        "index": "E",
        "name": "Tree and Array",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 397,
        "index": "C",
        "name": "On Number of Decompositions into Multipliers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ]
      },
      {
        "contestId": 397,
        "index": "D",
        "name": "On Sum of Fractions",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ]
      },
      {
        "contestId": 397,
        "index": "E",
        "name": "On Changing Tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "trees"
        ]
      },
      {
        "contestId": 393,
        "index": "C",
        "name": "Blocked Points",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ]
      },
      {
        "contestId": 393,
        "index": "D",
        "name": "Tower of Hanoi",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ]
      },
      {
        "contestId": 393,
        "index": "E",
        "name": "Yet Another Number Sequence",
        "type": "PROGRAMMING",
        "tags": []
      },
      {
        "contestId": 389,
        "index": "C",
        "name": "Fox and Box Accumulation",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "greedy"
        ],
        "points": 1400
      },
      {
        "contestId": 389,
        "index": "D",
        "name": "Fox and Minimal path",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "graphs",
          "implementation",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 389,
        "index": "E",
        "name": "Fox and Card Game",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 384,
        "index": "C",
        "name": "Milking cows",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 384,
        "index": "D",
        "name": "Volcanoes",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2500
      },
      {
        "contestId": 384,
        "index": "E",
        "name": "Propagating tree",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 381,
        "index": "C",
        "name": "Sereja and Prefixes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 381,
        "index": "D",
        "name": "Sereja and Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2400
      },
      {
        "contestId": 381,
        "index": "E",
        "name": "Sereja and Brackets",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 378,
        "index": "C",
        "name": "Maze",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 1600
      },
      {
        "contestId": 378,
        "index": "D",
        "name": "Preparing for the Contest",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "greedy",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 378,
        "index": "E",
        "name": "Captains Mode",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "brute force",
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 376,
        "index": "C",
        "name": "Divisible by Seven",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 376,
        "index": "D",
        "name": "Maximum Submatrix 2",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 376,
        "index": "E",
        "name": "Circling Round Treasures",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "shortest paths"
        ],
        "points": 2600
      },
      {
        "contestId": 373,
        "index": "C",
        "name": "Counting Kangaroos is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings",
          "two pointers"
        ],
        "points": 1600
      },
      {
        "contestId": 373,
        "index": "D",
        "name": "Counting Rectangles is Fun",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 373,
        "index": "E",
        "name": "Watching Fireworks is Fun",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 368,
        "index": "C",
        "name": "Sereja and Algorithm",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 368,
        "index": "D",
        "name": "Sereja ans Anagrams",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 368,
        "index": "E",
        "name": "Sereja and the Arrangement of Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 365,
        "index": "C",
        "name": "Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "math",
          "matrices"
        ],
        "points": 1600
      },
      {
        "contestId": 365,
        "index": "D",
        "name": "Free Market",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 365,
        "index": "E",
        "name": "Beautiful Set",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "number theory"
        ],
        "points": 2300
      },
      {
        "contestId": 361,
        "index": "C",
        "name": "Levko and Array Recovery",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 361,
        "index": "D",
        "name": "Levko and Array",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 361,
        "index": "E",
        "name": "Levko and Strings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 357,
        "index": "C",
        "name": "Knight Tournament",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1500
      },
      {
        "contestId": 357,
        "index": "D",
        "name": "Xenia and Hamming",
        "type": "PROGRAMMING",
        "tags": [
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 357,
        "index": "E",
        "name": "Compartments",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 355,
        "index": "C",
        "name": "Vasya and Robot",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 355,
        "index": "D",
        "name": "Game with Strings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 355,
        "index": "E",
        "name": "Vasya and Beautiful Arrays",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "data structures"
        ],
        "points": 2100
      },
      {
        "contestId": 352,
        "index": "C",
        "name": "Jeff and Rounding",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 352,
        "index": "D",
        "name": "Jeff and Furik",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 352,
        "index": "E",
        "name": "Jeff and Brackets",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 349,
        "index": "C",
        "name": "Mafia",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 349,
        "index": "D",
        "name": "Apple Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "number theory",
          "trees"
        ],
        "points": 2100
      },
      {
        "contestId": 349,
        "index": "E",
        "name": "Subset Sums",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 347,
        "index": "C",
        "name": "Alice and Bob",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 347,
        "index": "D",
        "name": "Lucky Common Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 347,
        "index": "E",
        "name": "Number Transformation II",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 344,
        "index": "C",
        "name": "Rational Resistance",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 344,
        "index": "D",
        "name": "Alternating Current",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 344,
        "index": "E",
        "name": "Read Time",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 341,
        "index": "A",
        "name": "Tourist Problem",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 341,
        "index": "B",
        "name": "Bubble Sort Graph",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 341,
        "index": "C",
        "name": "Iahub and Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 338,
        "index": "A",
        "name": "Quiz",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 338,
        "index": "B",
        "name": "Book of Evil",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 2000
      },
      {
        "contestId": 338,
        "index": "C",
        "name": "Divisor Tree",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 334,
        "index": "C",
        "name": "Secrets",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 334,
        "index": "D",
        "name": "Chips",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 334,
        "index": "E",
        "name": "Lucky Tickets",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 330,
        "index": "C",
        "name": "Purification",
        "type": "PROGRAMMING",
        "tags": [
          "matrices"
        ],
        "points": 1500
      },
      {
        "contestId": 330,
        "index": "D",
        "name": "Biridian Forest",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "implementation",
          "shortest paths"
        ],
        "points": 1500
      },
      {
        "contestId": 330,
        "index": "E",
        "name": "Graph Reconstruction",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 326,
        "index": "A",
        "name": "Banana",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1400
      },
      {
        "contestId": 326,
        "index": "B",
        "name": "Palindrome",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 326,
        "index": "C",
        "name": "More Reclamation",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 326,
        "index": "D",
        "name": "Rectangles and Square",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 326,
        "index": "E",
        "name": "Counting Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2800
      },
      {
        "contestId": 326,
        "index": "F",
        "name": "Buy One, Get One Free",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 324,
        "index": "A1",
        "name": "Oh Sweet Beaverette",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1400
      },
      {
        "contestId": 324,
        "index": "A2",
        "name": "Oh Sweet Beaverette",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 324,
        "index": "B1",
        "name": "Shave Beaver!",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 324,
        "index": "B2",
        "name": "Shave Beaver!",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 324,
        "index": "C1",
        "name": "The Great Julya Calendar",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1100
      },
      {
        "contestId": 324,
        "index": "C2",
        "name": "The Great Julya Calendar",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 324,
        "index": "C3",
        "name": "The Great Julya Calendar",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 324,
        "index": "D1",
        "name": "Escaping on Beaveractor",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 324,
        "index": "D2",
        "name": "Escaping on Beaveractor",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 324,
        "index": "D3",
        "name": "Escaping on Beaveractor",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 324,
        "index": "E1",
        "name": "Deja Vu",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 324,
        "index": "E2",
        "name": "Deja Vu",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3100
      },
      {
        "contestId": 322,
        "index": "C",
        "name": "Ciel and Robot",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 322,
        "index": "D",
        "name": "Ciel and Duel",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "flows",
          "greedy",
          "two pointers"
        ],
        "points": 1900
      },
      {
        "contestId": 322,
        "index": "E",
        "name": "Ciel the Commander",
        "type": "PROGRAMMING",
        "tags": [
          "divide and conquer"
        ],
        "points": 2100
      },
      {
        "contestId": 320,
        "index": "C",
        "name": "Malek Dance Club",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 320,
        "index": "D",
        "name": "Psychos in a Line",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1900
      },
      {
        "contestId": 320,
        "index": "E",
        "name": "Kalila and Dimna in the Logging Industry",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 318,
        "index": "C",
        "name": "Perfect Pair",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 318,
        "index": "D",
        "name": "Ants",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar"
        ],
        "points": 2000
      },
      {
        "contestId": 318,
        "index": "E",
        "name": "Balance",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar"
        ],
        "points": 2500
      },
      {
        "contestId": 315,
        "index": "C",
        "name": "Sereja and Contest",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 315,
        "index": "D",
        "name": "Sereja and Periods",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 315,
        "index": "E",
        "name": "Sereja and Subsequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "data structures"
        ],
        "points": 2000
      },
      {
        "contestId": 312,
        "index": "C",
        "name": "The Closest Pair",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 312,
        "index": "D",
        "name": "Cats Transport",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2400
      },
      {
        "contestId": 312,
        "index": "E",
        "name": "Fetch the Treasure",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "graphs",
          "shortest paths"
        ],
        "points": 2500
      },
      {
        "contestId": 308,
        "index": "A",
        "name": "Morning run",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 308,
        "index": "B",
        "name": "Context Advertising",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 308,
        "index": "C",
        "name": "Memory for Arrays",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 308,
        "index": "D",
        "name": "Tennis Rackets",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 308,
        "index": "E",
        "name": "Sheep",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2900
      },
      {
        "contestId": 304,
        "index": "C",
        "name": "Lucky Permutation Triple",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1300
      },
      {
        "contestId": 304,
        "index": "D",
        "name": "Rectangle Puzzle II",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "ternary search"
        ],
        "points": 1700
      },
      {
        "contestId": 304,
        "index": "E",
        "name": "Minimum Modular",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "math",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 302,
        "index": "C",
        "name": "Yaroslav and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms"
        ],
        "points": 1800
      },
      {
        "contestId": 302,
        "index": "D",
        "name": "Yaroslav and Time",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dfs and similar",
          "dp",
          "shortest paths"
        ],
        "points": 2100
      },
      {
        "contestId": 302,
        "index": "E",
        "name": "Yaroslav and Algorithm",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 299,
        "index": "C",
        "name": "Weird Game",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 299,
        "index": "D",
        "name": "Distinct Paths",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 299,
        "index": "E",
        "name": "Cube Problem",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 298,
        "index": "C",
        "name": "Parity Game",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math",
          "number theory"
        ],
        "points": 1700
      },
      {
        "contestId": 298,
        "index": "D",
        "name": "Fish Weight",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 298,
        "index": "E",
        "name": "Splitting the Uniqueness",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "sortings"
        ],
        "points": 2400
      },
      {
        "contestId": 296,
        "index": "C",
        "name": "Greg and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 296,
        "index": "D",
        "name": "Greg and Graph",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 296,
        "index": "E",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 289,
        "index": "C",
        "name": "Polo the Penguin and Strings",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 289,
        "index": "D",
        "name": "Polo the Penguin and Houses",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dfs and similar",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 289,
        "index": "E",
        "name": "Polo the Penguin and XOR operation",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 287,
        "index": "C",
        "name": "Lucky Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "implementation",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 287,
        "index": "D",
        "name": "Shifting",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 287,
        "index": "E",
        "name": "Main Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "greedy"
        ],
        "points": 2100
      },
      {
        "contestId": 284,
        "index": "C",
        "name": "Cows and Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "data structures",
          "dp"
        ],
        "points": 1600
      },
      {
        "contestId": 284,
        "index": "D",
        "name": "Cow Program",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 284,
        "index": "E",
        "name": "Coin Troubles",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 281,
        "index": "C",
        "name": "Rectangle Puzzle",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 281,
        "index": "D",
        "name": "Maximum Xor Secondary",
        "type": "PROGRAMMING",
        "tags": [
          "two pointers"
        ],
        "points": 1800
      },
      {
        "contestId": 281,
        "index": "E",
        "name": "Game on Tree",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2200
      },
      {
        "contestId": 278,
        "index": "C",
        "name": "Learning Languages",
        "type": "PROGRAMMING",
        "tags": [
          "dsu"
        ],
        "points": 1400
      },
      {
        "contestId": 278,
        "index": "D",
        "name": "Set of Points",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "geometry"
        ],
        "points": 2300
      },
      {
        "contestId": 278,
        "index": "E",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2400
      },
      {
        "contestId": 275,
        "index": "C",
        "name": "k-Multiple Free Set",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 275,
        "index": "D",
        "name": "Zero Tree",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dp",
          "trees"
        ],
        "points": 1800
      },
      {
        "contestId": 275,
        "index": "E",
        "name": "The Last Hole!",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 273,
        "index": "A",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 273,
        "index": "B",
        "name": "Dima and Two Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 1600
      },
      {
        "contestId": 273,
        "index": "C",
        "name": "Dima and Horses",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "greedy"
        ],
        "points": 2200
      },
      {
        "contestId": 270,
        "index": "C",
        "name": "Magical Boxes",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy",
          "implementation",
          "math",
          "sortings"
        ],
        "points": 1600
      },
      {
        "contestId": 270,
        "index": "D",
        "name": "Greenhouse Effect",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 270,
        "index": "E",
        "name": "Flawed Flow",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "sortings"
        ],
        "points": 2100
      },
      {
        "contestId": 265,
        "index": "C",
        "name": "Escape from Stones",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1200
      },
      {
        "contestId": 265,
        "index": "D",
        "name": "Good Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 265,
        "index": "E",
        "name": "Choosing Balls",
        "type": "PROGRAMMING",
        "tags": [
          "schedules",
          "sortings"
        ],
        "points": 2000
      },
      {
        "contestId": 262,
        "index": "C",
        "name": "Maxim and Discounts",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "sortings"
        ],
        "points": 1400
      },
      {
        "contestId": 262,
        "index": "D",
        "name": "Maxim and Restaurant",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 1900
      },
      {
        "contestId": 262,
        "index": "E",
        "name": "Maxim and Matrix",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 259,
        "index": "C",
        "name": "Little Elephant and Bits",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 259,
        "index": "D",
        "name": "Little Elephant and Elections",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 259,
        "index": "E",
        "name": "Little Elephant and LCM",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 256,
        "index": "A",
        "name": "Almost Arithmetical Progression",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "dp",
          "two pointers"
        ],
        "points": 1500
      },
      {
        "contestId": 256,
        "index": "B",
        "name": "Mr. Bender and Square",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 256,
        "index": "C",
        "name": "Furlo and Rublo and Game",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2200
      },
      {
        "contestId": 252,
        "index": "C",
        "name": "Points on Line",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "combinatorics",
          "two pointers"
        ],
        "points": 1300
      },
      {
        "contestId": 252,
        "index": "D",
        "name": "Playing with Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 252,
        "index": "E",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "number theory"
        ],
        "points": 2000
      },
      {
        "contestId": 249,
        "index": "A",
        "name": "Robo-Footballer",
        "type": "PROGRAMMING",
        "tags": [
          "geometry"
        ],
        "points": 2000
      },
      {
        "contestId": 249,
        "index": "B",
        "name": "Sweets for Everyone!",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "greedy"
        ],
        "points": 2300
      },
      {
        "contestId": 249,
        "index": "C",
        "name": "Piglet's Birthday",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "probabilities"
        ],
        "points": 2600
      },
      {
        "contestId": 247,
        "index": "A",
        "name": "Paper Work",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1000
      },
      {
        "contestId": 247,
        "index": "B",
        "name": "Restoring IPv6",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 247,
        "index": "C",
        "name": "Movie Critics",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 247,
        "index": "D",
        "name": "Building Bridge",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 247,
        "index": "E",
        "name": "Mad Joe",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 244,
        "index": "C",
        "name": "The Brand New Function",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "divide and conquer",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 244,
        "index": "D",
        "name": "Hydra",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 244,
        "index": "E",
        "name": "Colorado Potato Beetle",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 240,
        "index": "A",
        "name": "Cinema",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 240,
        "index": "B",
        "name": "Fence",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1800
      },
      {
        "contestId": 240,
        "index": "C",
        "name": "Practice",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 240,
        "index": "D",
        "name": "Merging Two Decks",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy"
        ],
        "points": 2000
      },
      {
        "contestId": 239,
        "index": "C",
        "name": "Not Wool Sequences",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "constructive algorithms",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 239,
        "index": "D",
        "name": "Boring Partition",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "greedy",
          "sortings"
        ],
        "points": 1800
      },
      {
        "contestId": 239,
        "index": "E",
        "name": "World Eater Brothers",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 236,
        "index": "C",
        "name": "LCM Challenge",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 236,
        "index": "D",
        "name": "Let's Play Osu!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 236,
        "index": "E",
        "name": "Cyclical Quest",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 233,
        "index": "C",
        "name": "Cycles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "matrices"
        ],
        "points": 1600
      },
      {
        "contestId": 233,
        "index": "D",
        "name": "Table",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 233,
        "index": "E",
        "name": "Doe Graphs",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 230,
        "index": "C",
        "name": "Shifts",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 230,
        "index": "D",
        "name": "Planets",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "graphs",
          "shortest paths"
        ],
        "points": 1700
      },
      {
        "contestId": 230,
        "index": "E",
        "name": "Triangles",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "graphs",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 227,
        "index": "C",
        "name": "Flying Saucer Segments",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 227,
        "index": "D",
        "name": "Naughty Stone Piles",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "sortings"
        ],
        "points": 1900
      },
      {
        "contestId": 227,
        "index": "E",
        "name": "Anniversary",
        "type": "PROGRAMMING",
        "tags": [
          "matrices",
          "number theory"
        ],
        "points": 2400
      },
      {
        "contestId": 224,
        "index": "C",
        "name": "Bracket Sequence",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1700
      },
      {
        "contestId": 224,
        "index": "D",
        "name": "Two Strings",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "strings"
        ],
        "points": 1900
      },
      {
        "contestId": 224,
        "index": "E",
        "name": "Partial Sums",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 221,
        "index": "C",
        "name": "Little Elephant and Problem",
        "type": "PROGRAMMING",
        "tags": [
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 221,
        "index": "D",
        "name": "Little Elephant and Array",
        "type": "PROGRAMMING",
        "tags": [
          "data structures"
        ],
        "points": 1800
      },
      {
        "contestId": 221,
        "index": "E",
        "name": "Little Elephant and Shifts",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 218,
        "index": "C",
        "name": "Ice Skating",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "dsu",
          "graphs"
        ],
        "points": 1200
      },
      {
        "contestId": 218,
        "index": "D",
        "name": "Blackboard Fibonacci",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 218,
        "index": "E",
        "name": "Formurosa",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2600
      },
      {
        "contestId": 214,
        "index": "C",
        "name": "Game",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "greedy"
        ],
        "points": 1700
      },
      {
        "contestId": 214,
        "index": "D",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 214,
        "index": "E",
        "name": "Relay Race",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 211,
        "index": "A",
        "name": "Privatization",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 3000
      },
      {
        "contestId": 211,
        "index": "B",
        "name": "Polycarpus is Looking for Good Substrings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 211,
        "index": "C",
        "name": "Cowboys",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics"
        ],
        "points": 2100
      },
      {
        "contestId": 211,
        "index": "D",
        "name": "Cutting a Fence",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 211,
        "index": "E",
        "name": "IT Restaurants",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1500
      },
      {
        "contestId": 206,
        "index": "A1",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 206,
        "index": "A2",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 206,
        "index": "A3",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 206,
        "index": "B1",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 206,
        "index": "B2",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 206,
        "index": "B3",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1700
      },
      {
        "contestId": 206,
        "index": "C1",
        "name": "Game with Two Trees",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 206,
        "index": "C2",
        "name": "Game with Two Trees",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 206,
        "index": "C3",
        "name": "Game with Two Trees",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2700
      },
      {
        "contestId": 206,
        "index": "D1",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 206,
        "index": "D10",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 206,
        "index": "D2",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 206,
        "index": "D3",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 206,
        "index": "D4",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 206,
        "index": "D5",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 206,
        "index": "D6",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 206,
        "index": "D7",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1600
      },
      {
        "contestId": 206,
        "index": "D8",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 206,
        "index": "D9",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1800
      },
      {
        "contestId": 205,
        "index": "C",
        "name": "Little Elephant and Interval",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "combinatorics",
          "dp",
          "math"
        ],
        "points": 1500
      },
      {
        "contestId": 205,
        "index": "D",
        "name": "Little Elephant and Cards",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "brute force",
          "sortings"
        ],
        "points": 1500
      },
      {
        "contestId": 205,
        "index": "E",
        "name": "Little Elephant and Furik and Rubik",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "probabilities"
        ],
        "points": 2000
      },
      {
        "contestId": 202,
        "index": "C",
        "name": "Clear Symmetry",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 202,
        "index": "D",
        "name": "Guess That Car!",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 202,
        "index": "E",
        "name": "Fragile Bridges",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 199,
        "index": "C",
        "name": "About Bacteria",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 199,
        "index": "D",
        "name": "Jumping on Walls",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "shortest paths"
        ],
        "points": 1400
      },
      {
        "contestId": 199,
        "index": "E",
        "name": "Delivering Carcinogen",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry"
        ],
        "points": 2400
      },
      {
        "contestId": 197,
        "index": "C",
        "name": "Lexicographically Maximum Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings",
          "strings"
        ],
        "points": 1100
      },
      {
        "contestId": 197,
        "index": "D",
        "name": "Infinite Maze",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "hashing"
        ],
        "points": 2000
      },
      {
        "contestId": 197,
        "index": "E",
        "name": "Paint Tree",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "geometry",
          "trees"
        ],
        "points": 2200
      },
      {
        "contestId": 194,
        "index": "C",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "graphs",
          "implementation",
          "matrices",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 194,
        "index": "D",
        "name": "Xor",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 194,
        "index": "E",
        "name": "Hamming Distance",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 2400
      },
      {
        "contestId": 192,
        "index": "C",
        "name": "Dynasty Puzzles",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 192,
        "index": "D",
        "name": "Demonstration",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms"
        ],
        "points": 1700
      },
      {
        "contestId": 192,
        "index": "E",
        "name": "Fools and Roads",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 189,
        "index": "C",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 189,
        "index": "D",
        "name": "AlgoRace",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "shortest paths"
        ],
        "points": 1800
      },
      {
        "contestId": 189,
        "index": "E",
        "name": "Weak Memory",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "shortest paths"
        ],
        "points": 2000
      },
      {
        "contestId": 186,
        "index": "C",
        "name": "Plant",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "matrices",
          "number theory"
        ],
        "points": 1300
      },
      {
        "contestId": 186,
        "index": "D",
        "name": "Mushroom Scientists",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 186,
        "index": "E",
        "name": "Clever Fat Rat",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 181,
        "index": "C",
        "name": "Trading Business",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "graph matchings",
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 181,
        "index": "D",
        "name": "Word Cut",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 181,
        "index": "E",
        "name": "Playing with Superglue",
        "type": "PROGRAMMING",
        "tags": [
          "games"
        ],
        "points": 2000
      },
      {
        "contestId": 174,
        "index": "D",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "tags": [
          "graphs"
        ],
        "points": 1700
      },
      {
        "contestId": 174,
        "index": "E",
        "name": "Ancient Berland Hieroglyphs",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 170,
        "index": "A",
        "name": "Placing Rectangles",
        "type": "PROGRAMMING",
        "tags": [
          "*special"
        ],
        "points": 2900
      },
      {
        "contestId": 169,
        "index": "C",
        "name": "Substring and Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 169,
        "index": "D",
        "name": "Lemmings",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 169,
        "index": "E",
        "name": "Conveyor",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 168,
        "index": "C",
        "name": "Wizards and Trolleybuses",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 168,
        "index": "D",
        "name": "Wizards and Huge Prize",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 168,
        "index": "E",
        "name": "Wizards and Numbers",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "math"
        ],
        "points": 2300
      },
      {
        "contestId": 157,
        "index": "C",
        "name": "Message",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "dp",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 157,
        "index": "D",
        "name": "Suspects",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 157,
        "index": "E",
        "name": "Cipher",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "math"
        ],
        "points": 2000
      },
      {
        "contestId": 155,
        "index": "C",
        "name": "Hometask",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1600
      },
      {
        "contestId": 155,
        "index": "D",
        "name": "Colliders",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 1600
      },
      {
        "contestId": 155,
        "index": "E",
        "name": "Double Profiles",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "sortings"
        ],
        "points": 2300
      },
      {
        "contestId": 151,
        "index": "C",
        "name": "Win or Freeze",
        "type": "PROGRAMMING",
        "tags": [
          "games",
          "greedy",
          "math",
          "number theory"
        ],
        "points": 1400
      },
      {
        "contestId": 151,
        "index": "D",
        "name": "Quantity of Strings",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dsu",
          "graphs",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 151,
        "index": "E",
        "name": "Smart Cheater",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "probabilities"
        ],
        "points": 2200
      },
      {
        "contestId": 146,
        "index": "C",
        "name": "Lucky Conversion",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 146,
        "index": "D",
        "name": "Lucky Number 2",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 146,
        "index": "E",
        "name": "Lucky Subsequence",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 143,
        "index": "C",
        "name": "Help Farmer",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1600
      },
      {
        "contestId": 143,
        "index": "D",
        "name": "Help General",
        "type": "PROGRAMMING",
        "tags": [
          "graph matchings",
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 143,
        "index": "E",
        "name": "Help Caretaker",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 139,
        "index": "C",
        "name": "Literature Lesson",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 139,
        "index": "D",
        "name": "Digits Permutations",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1900
      },
      {
        "contestId": 139,
        "index": "E",
        "name": "Mushroom Gnomes - 2",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "probabilities",
          "sortings"
        ],
        "points": 2200
      },
      {
        "contestId": 136,
        "index": "C",
        "name": "Replacement",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "implementation",
          "sortings"
        ],
        "points": 1300
      },
      {
        "contestId": 136,
        "index": "D",
        "name": "Rectangle and Square",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "geometry",
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 136,
        "index": "E",
        "name": "Zero-One",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "games",
          "greedy"
        ],
        "points": 1900
      },
      {
        "contestId": 133,
        "index": "C",
        "name": "Turing Tape",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1300
      },
      {
        "contestId": 133,
        "index": "D",
        "name": "Piet",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2100
      },
      {
        "contestId": 133,
        "index": "E",
        "name": "Logo Turtle",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 129,
        "index": "C",
        "name": "Statues",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1500
      },
      {
        "contestId": 129,
        "index": "D",
        "name": "String",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "string suffix structures",
          "strings"
        ],
        "points": 2100
      },
      {
        "contestId": 129,
        "index": "E",
        "name": "Games with Rectangle",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dp"
        ],
        "points": 2000
      },
      {
        "contestId": 127,
        "index": "C",
        "name": "Hot Bath",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 127,
        "index": "D",
        "name": "Password",
        "type": "PROGRAMMING",
        "tags": [
          "hashing",
          "strings"
        ],
        "points": 1700
      },
      {
        "contestId": 127,
        "index": "E",
        "name": "E-reader Display",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 2000
      },
      {
        "contestId": 124,
        "index": "C",
        "name": "Prime Permutation",
        "type": "PROGRAMMING",
        "tags": [
          "constructive algorithms",
          "dfs and similar",
          "dsu",
          "greedy",
          "number theory",
          "sortings",
          "strings"
        ],
        "points": 1300
      },
      {
        "contestId": 124,
        "index": "D",
        "name": "Squares",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "constructive algorithms",
          "number theory"
        ],
        "points": 1800
      },
      {
        "contestId": 124,
        "index": "E",
        "name": "Brackets",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 122,
        "index": "C",
        "name": "Lucky Sum",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 122,
        "index": "D",
        "name": "Lucky Transformation",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1500
      },
      {
        "contestId": 122,
        "index": "E",
        "name": "Lucky Permutation",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 1900
      },
      {
        "contestId": 116,
        "index": "C",
        "name": "Party",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "trees"
        ],
        "points": 900
      },
      {
        "contestId": 116,
        "index": "D",
        "name": "Lawnmower",
        "type": "PROGRAMMING",
        "tags": [
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 116,
        "index": "E",
        "name": "Plumber",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 114,
        "index": "C",
        "name": "Grammar Lessons",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1600
      },
      {
        "contestId": 114,
        "index": "D",
        "name": "Petr#",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "hashing",
          "string suffix structures",
          "strings"
        ],
        "points": 2000
      },
      {
        "contestId": 114,
        "index": "E",
        "name": "Double Happiness",
        "type": "PROGRAMMING",
        "tags": [
          "math",
          "number theory"
        ],
        "points": 2200
      },
      {
        "contestId": 112,
        "index": "C",
        "name": "Petya and Inequiations",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1400
      },
      {
        "contestId": 112,
        "index": "D",
        "name": "Petya and Divisors",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "number theory"
        ],
        "points": 1900
      },
      {
        "contestId": 112,
        "index": "E",
        "name": "Petya and Spiders",
        "type": "PROGRAMMING",
        "tags": [
          "bitmasks",
          "dp"
        ],
        "points": 2100
      },
      {
        "contestId": 110,
        "index": "C",
        "name": "Lucky Sum of Digits",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math"
        ],
        "points": 1000
      },
      {
        "contestId": 110,
        "index": "D",
        "name": "Lucky Probability",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "combinatorics",
          "dfs and similar",
          "probabilities"
        ],
        "points": 1900
      },
      {
        "contestId": 110,
        "index": "E",
        "name": "Lucky Tree",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "dfs and similar",
          "trees"
        ],
        "points": 1900
      },
      {
        "contestId": 108,
        "index": "C",
        "name": "Dorm Water Supply",
        "type": "PROGRAMMING",
        "tags": [
          "dfs and similar",
          "graphs",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 108,
        "index": "D",
        "name": "Basketball Team",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "math",
          "probabilities"
        ],
        "points": 1600
      },
      {
        "contestId": 108,
        "index": "E",
        "name": "Arrangement",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2400
      },
      {
        "contestId": 104,
        "index": "B",
        "name": "Testing Pants for Sadness",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1100
      },
      {
        "contestId": 104,
        "index": "C",
        "name": "Cthulhu",
        "type": "PROGRAMMING",
        "tags": [
          "dsu",
          "trees"
        ],
        "points": 1500
      },
      {
        "contestId": 104,
        "index": "D",
        "name": "Russian Roulette",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 104,
        "index": "E",
        "name": "Time to Raid Cowavans",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      },
      {
        "contestId": 102,
        "index": "C",
        "name": "Homework",
        "type": "PROGRAMMING",
        "tags": [
          "greedy"
        ],
        "points": 1200
      },
      {
        "contestId": 102,
        "index": "D",
        "name": "Buses",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1700
      },
      {
        "contestId": 102,
        "index": "E",
        "name": "Vectors",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 99,
        "index": "C",
        "name": "Help Victoria the Wise",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 1700
      },
      {
        "contestId": 99,
        "index": "D",
        "name": "Help King",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2200
      },
      {
        "contestId": 99,
        "index": "E",
        "name": "Help Greg the Dwarf",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "geometry",
          "ternary search"
        ],
        "points": 2500
      },
      {
        "contestId": 96,
        "index": "C",
        "name": "Hockey",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "strings"
        ],
        "points": 1600
      },
      {
        "contestId": 96,
        "index": "D",
        "name": "Volleyball",
        "type": "PROGRAMMING",
        "tags": [
          "graphs",
          "shortest paths"
        ],
        "points": 1900
      },
      {
        "contestId": 96,
        "index": "E",
        "name": "Horse Races",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2500
      },
      {
        "contestId": 94,
        "index": "C",
        "name": "Frames",
        "type": "PROGRAMMING",
        "tags": [
          "math"
        ],
        "points": 1700
      },
      {
        "contestId": 94,
        "index": "D",
        "name": "End of Exams",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1900
      },
      {
        "contestId": 94,
        "index": "E",
        "name": "Azembler",
        "type": "PROGRAMMING",
        "tags": [
          "brute force"
        ],
        "points": 2500
      },
      {
        "contestId": 92,
        "index": "C",
        "name": "Newspaper Headline",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp",
          "greedy"
        ],
        "points": 1500
      },
      {
        "contestId": 92,
        "index": "D",
        "name": "Queue",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "data structures",
          "dp"
        ],
        "points": 1500
      },
      {
        "contestId": 92,
        "index": "E",
        "name": "Ski Base",
        "type": "PROGRAMMING",
        "tags": [
          "data structures",
          "dsu",
          "graphs"
        ],
        "points": 2300
      },
      {
        "contestId": 90,
        "index": "C",
        "name": "Robbery",
        "type": "PROGRAMMING",
        "tags": [
          "greedy",
          "math"
        ],
        "points": 1800
      },
      {
        "contestId": 90,
        "index": "D",
        "name": "Widget Library",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 90,
        "index": "E",
        "name": "Chip Play",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2300
      },
      {
        "contestId": 88,
        "index": "C",
        "name": "Trains",
        "type": "PROGRAMMING",
        "tags": [
          "implementation",
          "math",
          "number theory"
        ],
        "points": 1500
      },
      {
        "contestId": 88,
        "index": "D",
        "name": "Vasya and Types",
        "type": "PROGRAMMING",
        "tags": [
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 88,
        "index": "E",
        "name": "Interesting Game",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2000
      },
      {
        "contestId": 84,
        "index": "B",
        "name": "Magical Array",
        "type": "PROGRAMMING",
        "tags": [
          "combinatorics",
          "implementation"
        ],
        "points": 1300
      },
      {
        "contestId": 84,
        "index": "D",
        "name": "Doctor",
        "type": "PROGRAMMING",
        "tags": [
          "binary search",
          "implementation"
        ],
        "points": 1800
      },
      {
        "contestId": 84,
        "index": "E",
        "name": "Track",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "shortest paths"
        ],
        "points": 2400
      },
      {
        "contestId": 80,
        "index": "C",
        "name": "Heroes",
        "type": "PROGRAMMING",
        "tags": [
          "brute force",
          "implementation"
        ],
        "points": 1400
      },
      {
        "contestId": 80,
        "index": "D",
        "name": "Falling Anvils",
        "type": "PROGRAMMING",
        "tags": [
          "geometry",
          "probabilities"
        ],
        "points": 1800
      },
      {
        "contestId": 80,
        "index": "E",
        "name": "Beavermuncher-0xFF",
        "type": "PROGRAMMING",
        "tags": [],
        "points": 2100
      }
    ],
    "problemStatistics": [
      {
        "contestId": 1848,
        "index": "F",
        "solvedCount": 592
      },
      {
        "contestId": 1848,
        "index": "E",
        "solvedCount": 304
      },
      {
        "contestId": 1848,
        "index": "D",
        "solvedCount": 1250
      },
      {
        "contestId": 1848,
        "index": "C",
        "solvedCount": 3262
      },
      {
        "contestId": 1848,
        "index": "B",
        "solvedCount": 8203
      },
      {
        "contestId": 1848,
        "index": "A",
        "solvedCount": 10916
      },
      {
        "contestId": 1847,
        "index": "F",
        "solvedCount": 549
      },
      {
        "contestId": 1847,
        "index": "E",
        "solvedCount": 189
      },
      {
        "contestId": 1847,
        "index": "D",
        "solvedCount": 2499
      },
      {
        "contestId": 1847,
        "index": "C",
        "solvedCount": 8927
      },
      {
        "contestId": 1847,
        "index": "B",
        "solvedCount": 14193
      },
      {
        "contestId": 1847,
        "index": "A",
        "solvedCount": 17692
      },
      {
        "contestId": 1846,
        "index": "G",
        "solvedCount": 737
      },
      {
        "contestId": 1846,
        "index": "F",
        "solvedCount": 535
      },
      {
        "contestId": 1846,
        "index": "E2",
        "solvedCount": 1049
      },
      {
        "contestId": 1846,
        "index": "E1",
        "solvedCount": 6177
      },
      {
        "contestId": 1846,
        "index": "D",
        "solvedCount": 8510
      },
      {
        "contestId": 1846,
        "index": "C",
        "solvedCount": 6793
      },
      {
        "contestId": 1846,
        "index": "B",
        "solvedCount": 13823
      },
      {
        "contestId": 1846,
        "index": "A",
        "solvedCount": 19094
      },
      {
        "contestId": 1845,
        "index": "F",
        "solvedCount": 34
      },
      {
        "contestId": 1845,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 1845,
        "index": "D",
        "solvedCount": 1668
      },
      {
        "contestId": 1845,
        "index": "C",
        "solvedCount": 4569
      },
      {
        "contestId": 1845,
        "index": "B",
        "solvedCount": 11041
      },
      {
        "contestId": 1845,
        "index": "A",
        "solvedCount": 12069
      },
      {
        "contestId": 1844,
        "index": "H",
        "solvedCount": 37
      },
      {
        "contestId": 1844,
        "index": "G",
        "solvedCount": 250
      },
      {
        "contestId": 1844,
        "index": "F2",
        "solvedCount": 214
      },
      {
        "contestId": 1844,
        "index": "F1",
        "solvedCount": 506
      },
      {
        "contestId": 1844,
        "index": "E",
        "solvedCount": 1207
      },
      {
        "contestId": 1844,
        "index": "D",
        "solvedCount": 8649
      },
      {
        "contestId": 1844,
        "index": "C",
        "solvedCount": 10964
      },
      {
        "contestId": 1844,
        "index": "B",
        "solvedCount": 13689
      },
      {
        "contestId": 1844,
        "index": "A",
        "solvedCount": 19210
      },
      {
        "contestId": 1843,
        "index": "F2",
        "solvedCount": 147
      },
      {
        "contestId": 1843,
        "index": "F1",
        "solvedCount": 1274
      },
      {
        "contestId": 1843,
        "index": "E",
        "solvedCount": 2933
      },
      {
        "contestId": 1843,
        "index": "D",
        "solvedCount": 7476
      },
      {
        "contestId": 1843,
        "index": "C",
        "solvedCount": 16592
      },
      {
        "contestId": 1843,
        "index": "B",
        "solvedCount": 15076
      },
      {
        "contestId": 1843,
        "index": "A",
        "solvedCount": 18780
      },
      {
        "contestId": 1842,
        "index": "I",
        "solvedCount": 66
      },
      {
        "contestId": 1842,
        "index": "H",
        "solvedCount": 267
      },
      {
        "contestId": 1842,
        "index": "G",
        "solvedCount": 453
      },
      {
        "contestId": 1842,
        "index": "F",
        "solvedCount": 856
      },
      {
        "contestId": 1842,
        "index": "E",
        "solvedCount": 1167
      },
      {
        "contestId": 1842,
        "index": "D",
        "solvedCount": 3119
      },
      {
        "contestId": 1842,
        "index": "C",
        "solvedCount": 8066
      },
      {
        "contestId": 1842,
        "index": "B",
        "solvedCount": 12218
      },
      {
        "contestId": 1842,
        "index": "A",
        "solvedCount": 16544
      },
      {
        "contestId": 1841,
        "index": "F",
        "solvedCount": 47
      },
      {
        "contestId": 1841,
        "index": "E",
        "solvedCount": 268
      },
      {
        "contestId": 1841,
        "index": "D",
        "solvedCount": 707
      },
      {
        "contestId": 1841,
        "index": "C",
        "solvedCount": 1541
      },
      {
        "contestId": 1841,
        "index": "B",
        "solvedCount": 9402
      },
      {
        "contestId": 1841,
        "index": "A",
        "solvedCount": 13945
      },
      {
        "contestId": 1840,
        "index": "G2",
        "solvedCount": 59
      },
      {
        "contestId": 1840,
        "index": "G1",
        "solvedCount": 348
      },
      {
        "contestId": 1840,
        "index": "F",
        "solvedCount": 171
      },
      {
        "contestId": 1840,
        "index": "E",
        "solvedCount": 2067
      },
      {
        "contestId": 1840,
        "index": "D",
        "solvedCount": 4624
      },
      {
        "contestId": 1840,
        "index": "C",
        "solvedCount": 11550
      },
      {
        "contestId": 1840,
        "index": "B",
        "solvedCount": 10213
      },
      {
        "contestId": 1840,
        "index": "A",
        "solvedCount": 18431
      },
      {
        "contestId": 1839,
        "index": "E",
        "solvedCount": 843
      },
      {
        "contestId": 1839,
        "index": "D",
        "solvedCount": 1629
      },
      {
        "contestId": 1839,
        "index": "C",
        "solvedCount": 8984
      },
      {
        "contestId": 1839,
        "index": "B",
        "solvedCount": 11880
      },
      {
        "contestId": 1839,
        "index": "A",
        "solvedCount": 15064
      },
      {
        "contestId": 1838,
        "index": "F",
        "solvedCount": 207
      },
      {
        "contestId": 1838,
        "index": "E",
        "solvedCount": 995
      },
      {
        "contestId": 1838,
        "index": "D",
        "solvedCount": 2454
      },
      {
        "contestId": 1838,
        "index": "C",
        "solvedCount": 10405
      },
      {
        "contestId": 1838,
        "index": "B",
        "solvedCount": 13426
      },
      {
        "contestId": 1838,
        "index": "A",
        "solvedCount": 18331
      },
      {
        "contestId": 1837,
        "index": "F",
        "solvedCount": 246
      },
      {
        "contestId": 1837,
        "index": "E",
        "solvedCount": 401
      },
      {
        "contestId": 1837,
        "index": "D",
        "solvedCount": 5005
      },
      {
        "contestId": 1837,
        "index": "C",
        "solvedCount": 11447
      },
      {
        "contestId": 1837,
        "index": "B",
        "solvedCount": 12931
      },
      {
        "contestId": 1837,
        "index": "A",
        "solvedCount": 16673
      },
      {
        "contestId": 1836,
        "index": "B",
        "solvedCount": 10018
      },
      {
        "contestId": 1836,
        "index": "A",
        "solvedCount": 16373
      },
      {
        "contestId": 1835,
        "index": "F",
        "solvedCount": 78
      },
      {
        "contestId": 1835,
        "index": "E",
        "solvedCount": 122
      },
      {
        "contestId": 1835,
        "index": "D",
        "solvedCount": 244
      },
      {
        "contestId": 1835,
        "index": "C",
        "solvedCount": 540
      },
      {
        "contestId": 1835,
        "index": "B",
        "solvedCount": 494
      },
      {
        "contestId": 1835,
        "index": "A",
        "solvedCount": 1484
      },
      {
        "contestId": 1834,
        "index": "F",
        "solvedCount": 343
      },
      {
        "contestId": 1834,
        "index": "E",
        "solvedCount": 1381
      },
      {
        "contestId": 1834,
        "index": "D",
        "solvedCount": 3081
      },
      {
        "contestId": 1834,
        "index": "C",
        "solvedCount": 9402
      },
      {
        "contestId": 1834,
        "index": "B",
        "solvedCount": 11310
      },
      {
        "contestId": 1834,
        "index": "A",
        "solvedCount": 15567
      },
      {
        "contestId": 1833,
        "index": "G",
        "solvedCount": 718
      },
      {
        "contestId": 1833,
        "index": "F",
        "solvedCount": 1206
      },
      {
        "contestId": 1833,
        "index": "E",
        "solvedCount": 2616
      },
      {
        "contestId": 1833,
        "index": "D",
        "solvedCount": 4856
      },
      {
        "contestId": 1833,
        "index": "C",
        "solvedCount": 14458
      },
      {
        "contestId": 1833,
        "index": "B",
        "solvedCount": 13005
      },
      {
        "contestId": 1833,
        "index": "A",
        "solvedCount": 18297
      },
      {
        "contestId": 1832,
        "index": "F",
        "solvedCount": 11
      },
      {
        "contestId": 1832,
        "index": "E",
        "solvedCount": 445
      },
      {
        "contestId": 1832,
        "index": "D2",
        "solvedCount": 190
      },
      {
        "contestId": 1832,
        "index": "D1",
        "solvedCount": 490
      },
      {
        "contestId": 1832,
        "index": "C",
        "solvedCount": 6187
      },
      {
        "contestId": 1832,
        "index": "B",
        "solvedCount": 7513
      },
      {
        "contestId": 1832,
        "index": "A",
        "solvedCount": 12723
      },
      {
        "contestId": 1831,
        "index": "B",
        "solvedCount": 14704
      },
      {
        "contestId": 1831,
        "index": "A",
        "solvedCount": 19643
      },
      {
        "contestId": 1830,
        "index": "F",
        "solvedCount": 80
      },
      {
        "contestId": 1830,
        "index": "E",
        "solvedCount": 139
      },
      {
        "contestId": 1830,
        "index": "D",
        "solvedCount": 386
      },
      {
        "contestId": 1830,
        "index": "C",
        "solvedCount": 939
      },
      {
        "contestId": 1830,
        "index": "B",
        "solvedCount": 1604
      },
      {
        "contestId": 1830,
        "index": "A",
        "solvedCount": 2132
      },
      {
        "contestId": 1829,
        "index": "H",
        "solvedCount": 1165
      },
      {
        "contestId": 1829,
        "index": "G",
        "solvedCount": 2012
      },
      {
        "contestId": 1829,
        "index": "F",
        "solvedCount": 5400
      },
      {
        "contestId": 1829,
        "index": "E",
        "solvedCount": 7411
      },
      {
        "contestId": 1829,
        "index": "D",
        "solvedCount": 9516
      },
      {
        "contestId": 1829,
        "index": "C",
        "solvedCount": 13603
      },
      {
        "contestId": 1829,
        "index": "B",
        "solvedCount": 18874
      },
      {
        "contestId": 1829,
        "index": "A",
        "solvedCount": 20682
      },
      {
        "contestId": 1828,
        "index": "B",
        "solvedCount": 16426
      },
      {
        "contestId": 1828,
        "index": "A",
        "solvedCount": 20092
      },
      {
        "contestId": 1827,
        "index": "F",
        "solvedCount": 80
      },
      {
        "contestId": 1827,
        "index": "E",
        "solvedCount": 259
      },
      {
        "contestId": 1827,
        "index": "D",
        "solvedCount": 466
      },
      {
        "contestId": 1827,
        "index": "C",
        "solvedCount": 714
      },
      {
        "contestId": 1827,
        "index": "B2",
        "solvedCount": 960
      },
      {
        "contestId": 1827,
        "index": "B1",
        "solvedCount": 1436
      },
      {
        "contestId": 1827,
        "index": "A",
        "solvedCount": 2834
      },
      {
        "contestId": 1826,
        "index": "F",
        "solvedCount": 269
      },
      {
        "contestId": 1826,
        "index": "E",
        "solvedCount": 1221
      },
      {
        "contestId": 1826,
        "index": "D",
        "solvedCount": 5788
      },
      {
        "contestId": 1826,
        "index": "C",
        "solvedCount": 10032
      },
      {
        "contestId": 1826,
        "index": "B",
        "solvedCount": 12296
      },
      {
        "contestId": 1826,
        "index": "A",
        "solvedCount": 11787
      },
      {
        "contestId": 1825,
        "index": "B",
        "solvedCount": 12258
      },
      {
        "contestId": 1825,
        "index": "A",
        "solvedCount": 16929
      },
      {
        "contestId": 1824,
        "index": "E",
        "solvedCount": 88
      },
      {
        "contestId": 1824,
        "index": "D",
        "solvedCount": 296
      },
      {
        "contestId": 1824,
        "index": "C",
        "solvedCount": 756
      },
      {
        "contestId": 1824,
        "index": "B2",
        "solvedCount": 1236
      },
      {
        "contestId": 1824,
        "index": "B1",
        "solvedCount": 1612
      },
      {
        "contestId": 1824,
        "index": "A",
        "solvedCount": 2189
      },
      {
        "contestId": 1823,
        "index": "F",
        "solvedCount": 518
      },
      {
        "contestId": 1823,
        "index": "E",
        "solvedCount": 985
      },
      {
        "contestId": 1823,
        "index": "D",
        "solvedCount": 2993
      },
      {
        "contestId": 1823,
        "index": "C",
        "solvedCount": 9489
      },
      {
        "contestId": 1823,
        "index": "B",
        "solvedCount": 12866
      },
      {
        "contestId": 1823,
        "index": "A",
        "solvedCount": 14045
      },
      {
        "contestId": 1822,
        "index": "G2",
        "solvedCount": 156
      },
      {
        "contestId": 1822,
        "index": "G1",
        "solvedCount": 1163
      },
      {
        "contestId": 1822,
        "index": "F",
        "solvedCount": 1033
      },
      {
        "contestId": 1822,
        "index": "E",
        "solvedCount": 1924
      },
      {
        "contestId": 1822,
        "index": "D",
        "solvedCount": 6276
      },
      {
        "contestId": 1822,
        "index": "C",
        "solvedCount": 11934
      },
      {
        "contestId": 1822,
        "index": "B",
        "solvedCount": 12878
      },
      {
        "contestId": 1822,
        "index": "A",
        "solvedCount": 12992
      },
      {
        "contestId": 1821,
        "index": "F",
        "solvedCount": 78
      },
      {
        "contestId": 1821,
        "index": "E",
        "solvedCount": 510
      },
      {
        "contestId": 1821,
        "index": "D",
        "solvedCount": 1201
      },
      {
        "contestId": 1821,
        "index": "C",
        "solvedCount": 5035
      },
      {
        "contestId": 1821,
        "index": "B",
        "solvedCount": 7274
      },
      {
        "contestId": 1821,
        "index": "A",
        "solvedCount": 10534
      },
      {
        "contestId": 1820,
        "index": "B",
        "solvedCount": 10875
      },
      {
        "contestId": 1820,
        "index": "A",
        "solvedCount": 14395
      },
      {
        "contestId": 1819,
        "index": "F",
        "solvedCount": 88
      },
      {
        "contestId": 1819,
        "index": "E",
        "solvedCount": 170
      },
      {
        "contestId": 1819,
        "index": "D",
        "solvedCount": 422
      },
      {
        "contestId": 1819,
        "index": "C",
        "solvedCount": 869
      },
      {
        "contestId": 1819,
        "index": "B",
        "solvedCount": 1466
      },
      {
        "contestId": 1819,
        "index": "A",
        "solvedCount": 2746
      },
      {
        "contestId": 1818,
        "index": "B",
        "solvedCount": 11492
      },
      {
        "contestId": 1818,
        "index": "A",
        "solvedCount": 11336
      },
      {
        "contestId": 1817,
        "index": "F",
        "solvedCount": 106
      },
      {
        "contestId": 1817,
        "index": "E",
        "solvedCount": 181
      },
      {
        "contestId": 1817,
        "index": "D",
        "solvedCount": 394
      },
      {
        "contestId": 1817,
        "index": "C",
        "solvedCount": 650
      },
      {
        "contestId": 1817,
        "index": "B",
        "solvedCount": 1516
      },
      {
        "contestId": 1817,
        "index": "A",
        "solvedCount": 2477
      },
      {
        "contestId": 1816,
        "index": "B",
        "solvedCount": 12881
      },
      {
        "contestId": 1816,
        "index": "A",
        "solvedCount": 15284
      },
      {
        "contestId": 1815,
        "index": "F",
        "solvedCount": 144
      },
      {
        "contestId": 1815,
        "index": "E",
        "solvedCount": 234
      },
      {
        "contestId": 1815,
        "index": "D",
        "solvedCount": 654
      },
      {
        "contestId": 1815,
        "index": "C",
        "solvedCount": 1102
      },
      {
        "contestId": 1815,
        "index": "B",
        "solvedCount": 1327
      },
      {
        "contestId": 1815,
        "index": "A",
        "solvedCount": 3346
      },
      {
        "contestId": 1814,
        "index": "F",
        "solvedCount": 31
      },
      {
        "contestId": 1814,
        "index": "E",
        "solvedCount": 250
      },
      {
        "contestId": 1814,
        "index": "D",
        "solvedCount": 111
      },
      {
        "contestId": 1814,
        "index": "C",
        "solvedCount": 3719
      },
      {
        "contestId": 1814,
        "index": "B",
        "solvedCount": 2520
      },
      {
        "contestId": 1814,
        "index": "A",
        "solvedCount": 12872
      },
      {
        "contestId": 1811,
        "index": "G2",
        "solvedCount": 226
      },
      {
        "contestId": 1811,
        "index": "G1",
        "solvedCount": 385
      },
      {
        "contestId": 1811,
        "index": "F",
        "solvedCount": 156
      },
      {
        "contestId": 1811,
        "index": "E",
        "solvedCount": 3282
      },
      {
        "contestId": 1811,
        "index": "D",
        "solvedCount": 2252
      },
      {
        "contestId": 1811,
        "index": "C",
        "solvedCount": 8991
      },
      {
        "contestId": 1811,
        "index": "B",
        "solvedCount": 11095
      },
      {
        "contestId": 1811,
        "index": "A",
        "solvedCount": 16337
      },
      {
        "contestId": 1810,
        "index": "H",
        "solvedCount": 91
      },
      {
        "contestId": 1810,
        "index": "G",
        "solvedCount": 300
      },
      {
        "contestId": 1810,
        "index": "F",
        "solvedCount": 447
      },
      {
        "contestId": 1810,
        "index": "E",
        "solvedCount": 2444
      },
      {
        "contestId": 1810,
        "index": "D",
        "solvedCount": 5975
      },
      {
        "contestId": 1810,
        "index": "C",
        "solvedCount": 11686
      },
      {
        "contestId": 1810,
        "index": "B",
        "solvedCount": 15863
      },
      {
        "contestId": 1810,
        "index": "A",
        "solvedCount": 18710
      },
      {
        "contestId": 1809,
        "index": "G",
        "solvedCount": 27
      },
      {
        "contestId": 1809,
        "index": "F",
        "solvedCount": 115
      },
      {
        "contestId": 1809,
        "index": "E",
        "solvedCount": 125
      },
      {
        "contestId": 1809,
        "index": "D",
        "solvedCount": 1263
      },
      {
        "contestId": 1809,
        "index": "C",
        "solvedCount": 3251
      },
      {
        "contestId": 1809,
        "index": "B",
        "solvedCount": 9079
      },
      {
        "contestId": 1809,
        "index": "A",
        "solvedCount": 13884
      },
      {
        "contestId": 1808,
        "index": "E3",
        "solvedCount": 305
      },
      {
        "contestId": 1808,
        "index": "E2",
        "solvedCount": 483
      },
      {
        "contestId": 1808,
        "index": "E1",
        "solvedCount": 973
      },
      {
        "contestId": 1808,
        "index": "D",
        "solvedCount": 1797
      },
      {
        "contestId": 1808,
        "index": "C",
        "solvedCount": 2988
      },
      {
        "contestId": 1808,
        "index": "B",
        "solvedCount": 11123
      },
      {
        "contestId": 1808,
        "index": "A",
        "solvedCount": 14612
      },
      {
        "contestId": 1807,
        "index": "G2",
        "solvedCount": 7165
      },
      {
        "contestId": 1807,
        "index": "G1",
        "solvedCount": 8135
      },
      {
        "contestId": 1807,
        "index": "F",
        "solvedCount": 1164
      },
      {
        "contestId": 1807,
        "index": "E",
        "solvedCount": 4097
      },
      {
        "contestId": 1807,
        "index": "D",
        "solvedCount": 12676
      },
      {
        "contestId": 1807,
        "index": "C",
        "solvedCount": 16140
      },
      {
        "contestId": 1807,
        "index": "B",
        "solvedCount": 21923
      },
      {
        "contestId": 1807,
        "index": "A",
        "solvedCount": 25339
      },
      {
        "contestId": 1806,
        "index": "F2",
        "solvedCount": 186
      },
      {
        "contestId": 1806,
        "index": "F1",
        "solvedCount": 234
      },
      {
        "contestId": 1806,
        "index": "E",
        "solvedCount": 2193
      },
      {
        "contestId": 1806,
        "index": "D",
        "solvedCount": 678
      },
      {
        "contestId": 1806,
        "index": "C",
        "solvedCount": 6135
      },
      {
        "contestId": 1806,
        "index": "B",
        "solvedCount": 15090
      },
      {
        "contestId": 1806,
        "index": "A",
        "solvedCount": 18993
      },
      {
        "contestId": 1805,
        "index": "F2",
        "solvedCount": 241
      },
      {
        "contestId": 1805,
        "index": "F1",
        "solvedCount": 585
      },
      {
        "contestId": 1805,
        "index": "E",
        "solvedCount": 1229
      },
      {
        "contestId": 1805,
        "index": "D",
        "solvedCount": 4828
      },
      {
        "contestId": 1805,
        "index": "C",
        "solvedCount": 10195
      },
      {
        "contestId": 1805,
        "index": "B",
        "solvedCount": 16714
      },
      {
        "contestId": 1805,
        "index": "A",
        "solvedCount": 17205
      },
      {
        "contestId": 1804,
        "index": "H",
        "solvedCount": 130
      },
      {
        "contestId": 1804,
        "index": "G",
        "solvedCount": 149
      },
      {
        "contestId": 1804,
        "index": "F",
        "solvedCount": 675
      },
      {
        "contestId": 1804,
        "index": "E",
        "solvedCount": 1200
      },
      {
        "contestId": 1804,
        "index": "D",
        "solvedCount": 3882
      },
      {
        "contestId": 1804,
        "index": "C",
        "solvedCount": 9847
      },
      {
        "contestId": 1804,
        "index": "B",
        "solvedCount": 12342
      },
      {
        "contestId": 1804,
        "index": "A",
        "solvedCount": 16684
      },
      {
        "contestId": 1802,
        "index": "B",
        "solvedCount": 11408
      },
      {
        "contestId": 1802,
        "index": "A",
        "solvedCount": 14133
      },
      {
        "contestId": 1801,
        "index": "G",
        "solvedCount": 174
      },
      {
        "contestId": 1801,
        "index": "F",
        "solvedCount": 446
      },
      {
        "contestId": 1801,
        "index": "E",
        "solvedCount": 277
      },
      {
        "contestId": 1801,
        "index": "D",
        "solvedCount": 1304
      },
      {
        "contestId": 1801,
        "index": "C",
        "solvedCount": 1731
      },
      {
        "contestId": 1801,
        "index": "B",
        "solvedCount": 2005
      },
      {
        "contestId": 1801,
        "index": "A",
        "solvedCount": 2351
      },
      {
        "contestId": 1800,
        "index": "G",
        "solvedCount": 221
      },
      {
        "contestId": 1800,
        "index": "F",
        "solvedCount": 487
      },
      {
        "contestId": 1800,
        "index": "E2",
        "solvedCount": 3473
      },
      {
        "contestId": 1800,
        "index": "E1",
        "solvedCount": 3884
      },
      {
        "contestId": 1800,
        "index": "D",
        "solvedCount": 7007
      },
      {
        "contestId": 1800,
        "index": "C2",
        "solvedCount": 9601
      },
      {
        "contestId": 1800,
        "index": "C1",
        "solvedCount": 10538
      },
      {
        "contestId": 1800,
        "index": "B",
        "solvedCount": 12016
      },
      {
        "contestId": 1800,
        "index": "A",
        "solvedCount": 13379
      },
      {
        "contestId": 1799,
        "index": "H",
        "solvedCount": 178
      },
      {
        "contestId": 1799,
        "index": "G",
        "solvedCount": 522
      },
      {
        "contestId": 1799,
        "index": "F",
        "solvedCount": 632
      },
      {
        "contestId": 1799,
        "index": "E",
        "solvedCount": 998
      },
      {
        "contestId": 1799,
        "index": "D2",
        "solvedCount": 1933
      },
      {
        "contestId": 1799,
        "index": "D1",
        "solvedCount": 3336
      },
      {
        "contestId": 1799,
        "index": "C",
        "solvedCount": 4535
      },
      {
        "contestId": 1799,
        "index": "B",
        "solvedCount": 9240
      },
      {
        "contestId": 1799,
        "index": "A",
        "solvedCount": 10616
      },
      {
        "contestId": 1798,
        "index": "F",
        "solvedCount": 358
      },
      {
        "contestId": 1798,
        "index": "E",
        "solvedCount": 1261
      },
      {
        "contestId": 1798,
        "index": "D",
        "solvedCount": 7300
      },
      {
        "contestId": 1798,
        "index": "C",
        "solvedCount": 6716
      },
      {
        "contestId": 1798,
        "index": "B",
        "solvedCount": 14070
      },
      {
        "contestId": 1798,
        "index": "A",
        "solvedCount": 17987
      },
      {
        "contestId": 1797,
        "index": "F",
        "solvedCount": 202
      },
      {
        "contestId": 1797,
        "index": "E",
        "solvedCount": 923
      },
      {
        "contestId": 1797,
        "index": "D",
        "solvedCount": 2902
      },
      {
        "contestId": 1797,
        "index": "C",
        "solvedCount": 6047
      },
      {
        "contestId": 1797,
        "index": "B",
        "solvedCount": 12283
      },
      {
        "contestId": 1797,
        "index": "A",
        "solvedCount": 15020
      },
      {
        "contestId": 1796,
        "index": "F",
        "solvedCount": 3
      },
      {
        "contestId": 1796,
        "index": "E",
        "solvedCount": 78
      },
      {
        "contestId": 1796,
        "index": "D",
        "solvedCount": 746
      },
      {
        "contestId": 1796,
        "index": "C",
        "solvedCount": 2568
      },
      {
        "contestId": 1796,
        "index": "B",
        "solvedCount": 8112
      },
      {
        "contestId": 1796,
        "index": "A",
        "solvedCount": 10630
      },
      {
        "contestId": 1795,
        "index": "G",
        "solvedCount": 63
      },
      {
        "contestId": 1795,
        "index": "F",
        "solvedCount": 146
      },
      {
        "contestId": 1795,
        "index": "E",
        "solvedCount": 350
      },
      {
        "contestId": 1795,
        "index": "D",
        "solvedCount": 2695
      },
      {
        "contestId": 1795,
        "index": "C",
        "solvedCount": 3837
      },
      {
        "contestId": 1795,
        "index": "B",
        "solvedCount": 11017
      },
      {
        "contestId": 1795,
        "index": "A",
        "solvedCount": 12799
      },
      {
        "contestId": 1794,
        "index": "E",
        "solvedCount": 801
      },
      {
        "contestId": 1794,
        "index": "D",
        "solvedCount": 2830
      },
      {
        "contestId": 1794,
        "index": "C",
        "solvedCount": 10239
      },
      {
        "contestId": 1794,
        "index": "B",
        "solvedCount": 15497
      },
      {
        "contestId": 1794,
        "index": "A",
        "solvedCount": 15123
      },
      {
        "contestId": 1793,
        "index": "F",
        "solvedCount": 1080
      },
      {
        "contestId": 1793,
        "index": "E",
        "solvedCount": 758
      },
      {
        "contestId": 1793,
        "index": "D",
        "solvedCount": 4913
      },
      {
        "contestId": 1793,
        "index": "C",
        "solvedCount": 14081
      },
      {
        "contestId": 1793,
        "index": "B",
        "solvedCount": 13685
      },
      {
        "contestId": 1793,
        "index": "A",
        "solvedCount": 16630
      },
      {
        "contestId": 1792,
        "index": "F2",
        "solvedCount": 33
      },
      {
        "contestId": 1792,
        "index": "F1",
        "solvedCount": 89
      },
      {
        "contestId": 1792,
        "index": "E",
        "solvedCount": 184
      },
      {
        "contestId": 1792,
        "index": "D",
        "solvedCount": 1900
      },
      {
        "contestId": 1792,
        "index": "C",
        "solvedCount": 3821
      },
      {
        "contestId": 1792,
        "index": "B",
        "solvedCount": 7219
      },
      {
        "contestId": 1792,
        "index": "A",
        "solvedCount": 15110
      },
      {
        "contestId": 1791,
        "index": "G2",
        "solvedCount": 678
      },
      {
        "contestId": 1791,
        "index": "G1",
        "solvedCount": 9091
      },
      {
        "contestId": 1791,
        "index": "F",
        "solvedCount": 2968
      },
      {
        "contestId": 1791,
        "index": "E",
        "solvedCount": 10349
      },
      {
        "contestId": 1791,
        "index": "D",
        "solvedCount": 11556
      },
      {
        "contestId": 1791,
        "index": "C",
        "solvedCount": 21600
      },
      {
        "contestId": 1791,
        "index": "B",
        "solvedCount": 23543
      },
      {
        "contestId": 1791,
        "index": "A",
        "solvedCount": 26345
      },
      {
        "contestId": 1790,
        "index": "G",
        "solvedCount": 198
      },
      {
        "contestId": 1790,
        "index": "F",
        "solvedCount": 407
      },
      {
        "contestId": 1790,
        "index": "E",
        "solvedCount": 4934
      },
      {
        "contestId": 1790,
        "index": "D",
        "solvedCount": 6788
      },
      {
        "contestId": 1790,
        "index": "C",
        "solvedCount": 11832
      },
      {
        "contestId": 1790,
        "index": "B",
        "solvedCount": 15746
      },
      {
        "contestId": 1790,
        "index": "A",
        "solvedCount": 20871
      },
      {
        "contestId": 1789,
        "index": "F",
        "solvedCount": 384
      },
      {
        "contestId": 1789,
        "index": "E",
        "solvedCount": 656
      },
      {
        "contestId": 1789,
        "index": "D",
        "solvedCount": 1364
      },
      {
        "contestId": 1789,
        "index": "C",
        "solvedCount": 6851
      },
      {
        "contestId": 1789,
        "index": "B",
        "solvedCount": 14407
      },
      {
        "contestId": 1789,
        "index": "A",
        "solvedCount": 14700
      },
      {
        "contestId": 1788,
        "index": "F",
        "solvedCount": 643
      },
      {
        "contestId": 1788,
        "index": "E",
        "solvedCount": 2047
      },
      {
        "contestId": 1788,
        "index": "D",
        "solvedCount": 3211
      },
      {
        "contestId": 1788,
        "index": "C",
        "solvedCount": 13807
      },
      {
        "contestId": 1788,
        "index": "B",
        "solvedCount": 16819
      },
      {
        "contestId": 1788,
        "index": "A",
        "solvedCount": 23219
      },
      {
        "contestId": 1787,
        "index": "I",
        "solvedCount": 121
      },
      {
        "contestId": 1787,
        "index": "H",
        "solvedCount": 153
      },
      {
        "contestId": 1787,
        "index": "G",
        "solvedCount": 319
      },
      {
        "contestId": 1787,
        "index": "F",
        "solvedCount": 563
      },
      {
        "contestId": 1787,
        "index": "E",
        "solvedCount": 1898
      },
      {
        "contestId": 1787,
        "index": "D",
        "solvedCount": 2905
      },
      {
        "contestId": 1787,
        "index": "C",
        "solvedCount": 5738
      },
      {
        "contestId": 1787,
        "index": "B",
        "solvedCount": 11637
      },
      {
        "contestId": 1787,
        "index": "A",
        "solvedCount": 17583
      },
      {
        "contestId": 1786,
        "index": "B",
        "solvedCount": 7584
      },
      {
        "contestId": 1786,
        "index": "A2",
        "solvedCount": 10661
      },
      {
        "contestId": 1786,
        "index": "A1",
        "solvedCount": 12914
      },
      {
        "contestId": 1784,
        "index": "F",
        "solvedCount": 56
      },
      {
        "contestId": 1784,
        "index": "E",
        "solvedCount": 80
      },
      {
        "contestId": 1784,
        "index": "D",
        "solvedCount": 188
      },
      {
        "contestId": 1784,
        "index": "C",
        "solvedCount": 196
      },
      {
        "contestId": 1784,
        "index": "B",
        "solvedCount": 312
      },
      {
        "contestId": 1784,
        "index": "A",
        "solvedCount": 1923
      },
      {
        "contestId": 1783,
        "index": "G",
        "solvedCount": 29
      },
      {
        "contestId": 1783,
        "index": "F",
        "solvedCount": 120
      },
      {
        "contestId": 1783,
        "index": "E",
        "solvedCount": 382
      },
      {
        "contestId": 1783,
        "index": "D",
        "solvedCount": 896
      },
      {
        "contestId": 1783,
        "index": "C",
        "solvedCount": 2509
      },
      {
        "contestId": 1783,
        "index": "B",
        "solvedCount": 8233
      },
      {
        "contestId": 1783,
        "index": "A",
        "solvedCount": 14595
      },
      {
        "contestId": 1781,
        "index": "H2",
        "solvedCount": 47
      },
      {
        "contestId": 1781,
        "index": "H1",
        "solvedCount": 44
      },
      {
        "contestId": 1781,
        "index": "G",
        "solvedCount": 103
      },
      {
        "contestId": 1781,
        "index": "F",
        "solvedCount": 210
      },
      {
        "contestId": 1781,
        "index": "E",
        "solvedCount": 263
      },
      {
        "contestId": 1781,
        "index": "D",
        "solvedCount": 1183
      },
      {
        "contestId": 1781,
        "index": "C",
        "solvedCount": 1403
      },
      {
        "contestId": 1781,
        "index": "B",
        "solvedCount": 2621
      },
      {
        "contestId": 1781,
        "index": "A",
        "solvedCount": 2199
      },
      {
        "contestId": 1780,
        "index": "G",
        "solvedCount": 490
      },
      {
        "contestId": 1780,
        "index": "F",
        "solvedCount": 1107
      },
      {
        "contestId": 1780,
        "index": "E",
        "solvedCount": 1084
      },
      {
        "contestId": 1780,
        "index": "D",
        "solvedCount": 3993
      },
      {
        "contestId": 1780,
        "index": "B",
        "solvedCount": 14256
      },
      {
        "contestId": 1780,
        "index": "A",
        "solvedCount": 19860
      },
      {
        "contestId": 1779,
        "index": "H",
        "solvedCount": 115
      },
      {
        "contestId": 1779,
        "index": "G",
        "solvedCount": 258
      },
      {
        "contestId": 1779,
        "index": "F",
        "solvedCount": 1099
      },
      {
        "contestId": 1779,
        "index": "E",
        "solvedCount": 1504
      },
      {
        "contestId": 1779,
        "index": "D",
        "solvedCount": 6582
      },
      {
        "contestId": 1779,
        "index": "C",
        "solvedCount": 10276
      },
      {
        "contestId": 1779,
        "index": "B",
        "solvedCount": 21004
      },
      {
        "contestId": 1779,
        "index": "A",
        "solvedCount": 21961
      },
      {
        "contestId": 1778,
        "index": "F",
        "solvedCount": 461
      },
      {
        "contestId": 1778,
        "index": "E",
        "solvedCount": 705
      },
      {
        "contestId": 1778,
        "index": "D",
        "solvedCount": 2195
      },
      {
        "contestId": 1778,
        "index": "C",
        "solvedCount": 6634
      },
      {
        "contestId": 1778,
        "index": "B",
        "solvedCount": 11640
      },
      {
        "contestId": 1778,
        "index": "A",
        "solvedCount": 21987
      },
      {
        "contestId": 1777,
        "index": "F",
        "solvedCount": 626
      },
      {
        "contestId": 1777,
        "index": "E",
        "solvedCount": 1351
      },
      {
        "contestId": 1777,
        "index": "D",
        "solvedCount": 2620
      },
      {
        "contestId": 1777,
        "index": "C",
        "solvedCount": 6344
      },
      {
        "contestId": 1777,
        "index": "B",
        "solvedCount": 15194
      },
      {
        "contestId": 1777,
        "index": "A",
        "solvedCount": 18429
      },
      {
        "contestId": 1776,
        "index": "N",
        "solvedCount": 4
      },
      {
        "contestId": 1776,
        "index": "M",
        "solvedCount": 37
      },
      {
        "contestId": 1776,
        "index": "L",
        "solvedCount": 1017
      },
      {
        "contestId": 1776,
        "index": "K",
        "solvedCount": 10
      },
      {
        "contestId": 1776,
        "index": "J",
        "solvedCount": 153
      },
      {
        "contestId": 1776,
        "index": "I",
        "solvedCount": 127
      },
      {
        "contestId": 1776,
        "index": "H",
        "solvedCount": 1313
      },
      {
        "contestId": 1776,
        "index": "G",
        "solvedCount": 447
      },
      {
        "contestId": 1776,
        "index": "F",
        "solvedCount": 702
      },
      {
        "contestId": 1776,
        "index": "E",
        "solvedCount": 4
      },
      {
        "contestId": 1776,
        "index": "D",
        "solvedCount": 62
      },
      {
        "contestId": 1776,
        "index": "C",
        "solvedCount": 137
      },
      {
        "contestId": 1776,
        "index": "B",
        "solvedCount": 297
      },
      {
        "contestId": 1776,
        "index": "A",
        "solvedCount": 2229
      },
      {
        "contestId": 1775,
        "index": "F",
        "solvedCount": 653
      },
      {
        "contestId": 1775,
        "index": "E",
        "solvedCount": 2642
      },
      {
        "contestId": 1775,
        "index": "D",
        "solvedCount": 4783
      },
      {
        "contestId": 1775,
        "index": "C",
        "solvedCount": 8074
      },
      {
        "contestId": 1775,
        "index": "B",
        "solvedCount": 10788
      },
      {
        "contestId": 1775,
        "index": "A2",
        "solvedCount": 17297
      },
      {
        "contestId": 1775,
        "index": "A1",
        "solvedCount": 18637
      },
      {
        "contestId": 1774,
        "index": "H",
        "solvedCount": 111
      },
      {
        "contestId": 1774,
        "index": "G",
        "solvedCount": 257
      },
      {
        "contestId": 1774,
        "index": "F2",
        "solvedCount": 521
      },
      {
        "contestId": 1774,
        "index": "F1",
        "solvedCount": 913
      },
      {
        "contestId": 1774,
        "index": "E",
        "solvedCount": 2884
      },
      {
        "contestId": 1774,
        "index": "D",
        "solvedCount": 6362
      },
      {
        "contestId": 1774,
        "index": "C",
        "solvedCount": 10289
      },
      {
        "contestId": 1774,
        "index": "B",
        "solvedCount": 9831
      },
      {
        "contestId": 1774,
        "index": "A",
        "solvedCount": 20825
      },
      {
        "contestId": 1773,
        "index": "L",
        "solvedCount": 0
      },
      {
        "contestId": 1773,
        "index": "K",
        "solvedCount": 522
      },
      {
        "contestId": 1773,
        "index": "J",
        "solvedCount": 15
      },
      {
        "contestId": 1773,
        "index": "I",
        "solvedCount": 112
      },
      {
        "contestId": 1773,
        "index": "H",
        "solvedCount": 73
      },
      {
        "contestId": 1773,
        "index": "G",
        "solvedCount": 53
      },
      {
        "contestId": 1773,
        "index": "F",
        "solvedCount": 1063
      },
      {
        "contestId": 1773,
        "index": "E",
        "solvedCount": 834
      },
      {
        "contestId": 1773,
        "index": "D",
        "solvedCount": 95
      },
      {
        "contestId": 1773,
        "index": "C",
        "solvedCount": 8
      },
      {
        "contestId": 1773,
        "index": "B",
        "solvedCount": 221
      },
      {
        "contestId": 1773,
        "index": "A",
        "solvedCount": 426
      },
      {
        "contestId": 1772,
        "index": "G",
        "solvedCount": 205
      },
      {
        "contestId": 1772,
        "index": "F",
        "solvedCount": 447
      },
      {
        "contestId": 1772,
        "index": "E",
        "solvedCount": 1651
      },
      {
        "contestId": 1772,
        "index": "D",
        "solvedCount": 3763
      },
      {
        "contestId": 1772,
        "index": "C",
        "solvedCount": 10489
      },
      {
        "contestId": 1772,
        "index": "B",
        "solvedCount": 14988
      },
      {
        "contestId": 1772,
        "index": "A",
        "solvedCount": 17101
      },
      {
        "contestId": 1771,
        "index": "F",
        "solvedCount": 744
      },
      {
        "contestId": 1771,
        "index": "E",
        "solvedCount": 587
      },
      {
        "contestId": 1771,
        "index": "D",
        "solvedCount": 2213
      },
      {
        "contestId": 1771,
        "index": "C",
        "solvedCount": 7369
      },
      {
        "contestId": 1771,
        "index": "B",
        "solvedCount": 10501
      },
      {
        "contestId": 1771,
        "index": "A",
        "solvedCount": 19473
      },
      {
        "contestId": 1770,
        "index": "H",
        "solvedCount": 66
      },
      {
        "contestId": 1770,
        "index": "G",
        "solvedCount": 124
      },
      {
        "contestId": 1770,
        "index": "F",
        "solvedCount": 418
      },
      {
        "contestId": 1770,
        "index": "E",
        "solvedCount": 1167
      },
      {
        "contestId": 1770,
        "index": "D",
        "solvedCount": 3342
      },
      {
        "contestId": 1770,
        "index": "C",
        "solvedCount": 7622
      },
      {
        "contestId": 1770,
        "index": "B",
        "solvedCount": 17638
      },
      {
        "contestId": 1770,
        "index": "A",
        "solvedCount": 20521
      },
      {
        "contestId": 1769,
        "index": "D3",
        "solvedCount": 91
      },
      {
        "contestId": 1769,
        "index": "D2",
        "solvedCount": 159
      },
      {
        "contestId": 1769,
        "index": "D1",
        "solvedCount": 285
      },
      {
        "contestId": 1769,
        "index": "C2",
        "solvedCount": 592
      },
      {
        "contestId": 1769,
        "index": "C1",
        "solvedCount": 608
      },
      {
        "contestId": 1769,
        "index": "B2",
        "solvedCount": 652
      },
      {
        "contestId": 1769,
        "index": "B1",
        "solvedCount": 953
      },
      {
        "contestId": 1769,
        "index": "A",
        "solvedCount": 1238
      },
      {
        "contestId": 1768,
        "index": "F",
        "solvedCount": 560
      },
      {
        "contestId": 1768,
        "index": "E",
        "solvedCount": 1549
      },
      {
        "contestId": 1768,
        "index": "D",
        "solvedCount": 5738
      },
      {
        "contestId": 1768,
        "index": "C",
        "solvedCount": 11990
      },
      {
        "contestId": 1768,
        "index": "B",
        "solvedCount": 19948
      },
      {
        "contestId": 1768,
        "index": "A",
        "solvedCount": 25558
      },
      {
        "contestId": 1767,
        "index": "F",
        "solvedCount": 4
      },
      {
        "contestId": 1767,
        "index": "E",
        "solvedCount": 129
      },
      {
        "contestId": 1767,
        "index": "D",
        "solvedCount": 3532
      },
      {
        "contestId": 1767,
        "index": "C",
        "solvedCount": 669
      },
      {
        "contestId": 1767,
        "index": "B",
        "solvedCount": 11872
      },
      {
        "contestId": 1767,
        "index": "A",
        "solvedCount": 13054
      },
      {
        "contestId": 1766,
        "index": "F",
        "solvedCount": 32
      },
      {
        "contestId": 1766,
        "index": "E",
        "solvedCount": 230
      },
      {
        "contestId": 1766,
        "index": "D",
        "solvedCount": 2081
      },
      {
        "contestId": 1766,
        "index": "C",
        "solvedCount": 5746
      },
      {
        "contestId": 1766,
        "index": "B",
        "solvedCount": 9444
      },
      {
        "contestId": 1766,
        "index": "A",
        "solvedCount": 13003
      },
      {
        "contestId": 1765,
        "index": "N",
        "solvedCount": 581
      },
      {
        "contestId": 1765,
        "index": "M",
        "solvedCount": 1100
      },
      {
        "contestId": 1765,
        "index": "L",
        "solvedCount": 124
      },
      {
        "contestId": 1765,
        "index": "K",
        "solvedCount": 763
      },
      {
        "contestId": 1765,
        "index": "J",
        "solvedCount": 18
      },
      {
        "contestId": 1765,
        "index": "I",
        "solvedCount": 32
      },
      {
        "contestId": 1765,
        "index": "H",
        "solvedCount": 249
      },
      {
        "contestId": 1765,
        "index": "G",
        "solvedCount": 60
      },
      {
        "contestId": 1765,
        "index": "F",
        "solvedCount": 140
      },
      {
        "contestId": 1765,
        "index": "E",
        "solvedCount": 1189
      },
      {
        "contestId": 1765,
        "index": "D",
        "solvedCount": 588
      },
      {
        "contestId": 1765,
        "index": "C",
        "solvedCount": 54
      },
      {
        "contestId": 1765,
        "index": "B",
        "solvedCount": 1383
      },
      {
        "contestId": 1765,
        "index": "A",
        "solvedCount": 158
      },
      {
        "contestId": 1764,
        "index": "H",
        "solvedCount": 122
      },
      {
        "contestId": 1764,
        "index": "G3",
        "solvedCount": 283
      },
      {
        "contestId": 1764,
        "index": "G2",
        "solvedCount": 341
      },
      {
        "contestId": 1764,
        "index": "G1",
        "solvedCount": 391
      },
      {
        "contestId": 1764,
        "index": "F",
        "solvedCount": 792
      },
      {
        "contestId": 1764,
        "index": "E",
        "solvedCount": 1062
      },
      {
        "contestId": 1764,
        "index": "D",
        "solvedCount": 2365
      },
      {
        "contestId": 1764,
        "index": "C",
        "solvedCount": 7775
      },
      {
        "contestId": 1764,
        "index": "B",
        "solvedCount": 13439
      },
      {
        "contestId": 1764,
        "index": "A",
        "solvedCount": 15084
      },
      {
        "contestId": 1763,
        "index": "F",
        "solvedCount": 321
      },
      {
        "contestId": 1763,
        "index": "E",
        "solvedCount": 1426
      },
      {
        "contestId": 1763,
        "index": "D",
        "solvedCount": 1754
      },
      {
        "contestId": 1763,
        "index": "C",
        "solvedCount": 5527
      },
      {
        "contestId": 1763,
        "index": "B",
        "solvedCount": 12103
      },
      {
        "contestId": 1763,
        "index": "A",
        "solvedCount": 14263
      },
      {
        "contestId": 1762,
        "index": "G",
        "solvedCount": 75
      },
      {
        "contestId": 1762,
        "index": "F",
        "solvedCount": 365
      },
      {
        "contestId": 1762,
        "index": "E",
        "solvedCount": 447
      },
      {
        "contestId": 1762,
        "index": "D",
        "solvedCount": 2784
      },
      {
        "contestId": 1762,
        "index": "C",
        "solvedCount": 7820
      },
      {
        "contestId": 1762,
        "index": "B",
        "solvedCount": 14597
      },
      {
        "contestId": 1762,
        "index": "A",
        "solvedCount": 17388
      },
      {
        "contestId": 1761,
        "index": "G",
        "solvedCount": 83
      },
      {
        "contestId": 1761,
        "index": "F2",
        "solvedCount": 61
      },
      {
        "contestId": 1761,
        "index": "F1",
        "solvedCount": 161
      },
      {
        "contestId": 1761,
        "index": "E",
        "solvedCount": 1428
      },
      {
        "contestId": 1761,
        "index": "D",
        "solvedCount": 2038
      },
      {
        "contestId": 1761,
        "index": "C",
        "solvedCount": 7943
      },
      {
        "contestId": 1761,
        "index": "B",
        "solvedCount": 11691
      },
      {
        "contestId": 1761,
        "index": "A",
        "solvedCount": 14263
      },
      {
        "contestId": 1760,
        "index": "G",
        "solvedCount": 1331
      },
      {
        "contestId": 1760,
        "index": "F",
        "solvedCount": 2899
      },
      {
        "contestId": 1760,
        "index": "E",
        "solvedCount": 7413
      },
      {
        "contestId": 1760,
        "index": "D",
        "solvedCount": 10027
      },
      {
        "contestId": 1760,
        "index": "C",
        "solvedCount": 17678
      },
      {
        "contestId": 1760,
        "index": "B",
        "solvedCount": 21281
      },
      {
        "contestId": 1760,
        "index": "A",
        "solvedCount": 23158
      },
      {
        "contestId": 1759,
        "index": "G",
        "solvedCount": 702
      },
      {
        "contestId": 1759,
        "index": "F",
        "solvedCount": 673
      },
      {
        "contestId": 1759,
        "index": "E",
        "solvedCount": 2556
      },
      {
        "contestId": 1759,
        "index": "D",
        "solvedCount": 3419
      },
      {
        "contestId": 1759,
        "index": "C",
        "solvedCount": 7944
      },
      {
        "contestId": 1759,
        "index": "B",
        "solvedCount": 11826
      },
      {
        "contestId": 1759,
        "index": "A",
        "solvedCount": 14788
      },
      {
        "contestId": 1758,
        "index": "F",
        "solvedCount": 123
      },
      {
        "contestId": 1758,
        "index": "E",
        "solvedCount": 663
      },
      {
        "contestId": 1758,
        "index": "D",
        "solvedCount": 5725
      },
      {
        "contestId": 1758,
        "index": "C",
        "solvedCount": 10711
      },
      {
        "contestId": 1758,
        "index": "B",
        "solvedCount": 17934
      },
      {
        "contestId": 1758,
        "index": "A",
        "solvedCount": 22201
      },
      {
        "contestId": 1754,
        "index": "B",
        "solvedCount": 17776
      },
      {
        "contestId": 1754,
        "index": "A",
        "solvedCount": 21430
      },
      {
        "contestId": 1753,
        "index": "F",
        "solvedCount": 142
      },
      {
        "contestId": 1753,
        "index": "E",
        "solvedCount": 256
      },
      {
        "contestId": 1753,
        "index": "D",
        "solvedCount": 1133
      },
      {
        "contestId": 1753,
        "index": "C",
        "solvedCount": 2316
      },
      {
        "contestId": 1753,
        "index": "B",
        "solvedCount": 4812
      },
      {
        "contestId": 1753,
        "index": "A2",
        "solvedCount": 3644
      },
      {
        "contestId": 1753,
        "index": "A1",
        "solvedCount": 5043
      },
      {
        "contestId": 1750,
        "index": "H",
        "solvedCount": 59
      },
      {
        "contestId": 1750,
        "index": "G",
        "solvedCount": 166
      },
      {
        "contestId": 1750,
        "index": "F",
        "solvedCount": 561
      },
      {
        "contestId": 1750,
        "index": "E",
        "solvedCount": 1199
      },
      {
        "contestId": 1750,
        "index": "D",
        "solvedCount": 4849
      },
      {
        "contestId": 1750,
        "index": "C",
        "solvedCount": 8439
      },
      {
        "contestId": 1750,
        "index": "B",
        "solvedCount": 15375
      },
      {
        "contestId": 1750,
        "index": "A",
        "solvedCount": 16013
      },
      {
        "contestId": 1749,
        "index": "F",
        "solvedCount": 37
      },
      {
        "contestId": 1749,
        "index": "E",
        "solvedCount": 175
      },
      {
        "contestId": 1749,
        "index": "D",
        "solvedCount": 1301
      },
      {
        "contestId": 1749,
        "index": "C",
        "solvedCount": 4768
      },
      {
        "contestId": 1749,
        "index": "B",
        "solvedCount": 10250
      },
      {
        "contestId": 1749,
        "index": "A",
        "solvedCount": 12892
      },
      {
        "contestId": 1748,
        "index": "F",
        "solvedCount": 280
      },
      {
        "contestId": 1748,
        "index": "E",
        "solvedCount": 1443
      },
      {
        "contestId": 1748,
        "index": "D",
        "solvedCount": 2404
      },
      {
        "contestId": 1748,
        "index": "C",
        "solvedCount": 8887
      },
      {
        "contestId": 1748,
        "index": "B",
        "solvedCount": 12452
      },
      {
        "contestId": 1748,
        "index": "A",
        "solvedCount": 22072
      },
      {
        "contestId": 1747,
        "index": "E",
        "solvedCount": 427
      },
      {
        "contestId": 1747,
        "index": "D",
        "solvedCount": 4041
      },
      {
        "contestId": 1747,
        "index": "C",
        "solvedCount": 17382
      },
      {
        "contestId": 1747,
        "index": "B",
        "solvedCount": 19583
      },
      {
        "contestId": 1747,
        "index": "A",
        "solvedCount": 22971
      },
      {
        "contestId": 1746,
        "index": "G",
        "solvedCount": 79
      },
      {
        "contestId": 1746,
        "index": "F",
        "solvedCount": 1181
      },
      {
        "contestId": 1746,
        "index": "E2",
        "solvedCount": 286
      },
      {
        "contestId": 1746,
        "index": "E1",
        "solvedCount": 1194
      },
      {
        "contestId": 1746,
        "index": "D",
        "solvedCount": 4062
      },
      {
        "contestId": 1746,
        "index": "C",
        "solvedCount": 11019
      },
      {
        "contestId": 1746,
        "index": "B",
        "solvedCount": 15884
      },
      {
        "contestId": 1746,
        "index": "A",
        "solvedCount": 18747
      },
      {
        "contestId": 1744,
        "index": "F",
        "solvedCount": 477
      },
      {
        "contestId": 1744,
        "index": "E2",
        "solvedCount": 810
      },
      {
        "contestId": 1744,
        "index": "E1",
        "solvedCount": 2760
      },
      {
        "contestId": 1744,
        "index": "D",
        "solvedCount": 6799
      },
      {
        "contestId": 1744,
        "index": "C",
        "solvedCount": 9946
      },
      {
        "contestId": 1744,
        "index": "B",
        "solvedCount": 13296
      },
      {
        "contestId": 1744,
        "index": "A",
        "solvedCount": 15472
      },
      {
        "contestId": 1743,
        "index": "G",
        "solvedCount": 15
      },
      {
        "contestId": 1743,
        "index": "F",
        "solvedCount": 260
      },
      {
        "contestId": 1743,
        "index": "E",
        "solvedCount": 204
      },
      {
        "contestId": 1743,
        "index": "D",
        "solvedCount": 2190
      },
      {
        "contestId": 1743,
        "index": "C",
        "solvedCount": 8837
      },
      {
        "contestId": 1743,
        "index": "B",
        "solvedCount": 14106
      },
      {
        "contestId": 1743,
        "index": "A",
        "solvedCount": 15380
      },
      {
        "contestId": 1742,
        "index": "G",
        "solvedCount": 1886
      },
      {
        "contestId": 1742,
        "index": "F",
        "solvedCount": 2424
      },
      {
        "contestId": 1742,
        "index": "E",
        "solvedCount": 7064
      },
      {
        "contestId": 1742,
        "index": "D",
        "solvedCount": 6604
      },
      {
        "contestId": 1742,
        "index": "C",
        "solvedCount": 13795
      },
      {
        "contestId": 1742,
        "index": "B",
        "solvedCount": 21842
      },
      {
        "contestId": 1742,
        "index": "A",
        "solvedCount": 24886
      },
      {
        "contestId": 1741,
        "index": "G",
        "solvedCount": 175
      },
      {
        "contestId": 1741,
        "index": "F",
        "solvedCount": 409
      },
      {
        "contestId": 1741,
        "index": "E",
        "solvedCount": 2468
      },
      {
        "contestId": 1741,
        "index": "D",
        "solvedCount": 5969
      },
      {
        "contestId": 1741,
        "index": "C",
        "solvedCount": 8203
      },
      {
        "contestId": 1741,
        "index": "B",
        "solvedCount": 15866
      },
      {
        "contestId": 1741,
        "index": "A",
        "solvedCount": 17744
      },
      {
        "contestId": 1740,
        "index": "I",
        "solvedCount": 85
      },
      {
        "contestId": 1740,
        "index": "H",
        "solvedCount": 145
      },
      {
        "contestId": 1740,
        "index": "G",
        "solvedCount": 154
      },
      {
        "contestId": 1740,
        "index": "F",
        "solvedCount": 629
      },
      {
        "contestId": 1740,
        "index": "E",
        "solvedCount": 3580
      },
      {
        "contestId": 1740,
        "index": "D",
        "solvedCount": 6826
      },
      {
        "contestId": 1740,
        "index": "C",
        "solvedCount": 9324
      },
      {
        "contestId": 1740,
        "index": "B",
        "solvedCount": 13028
      },
      {
        "contestId": 1740,
        "index": "A",
        "solvedCount": 17731
      },
      {
        "contestId": 1739,
        "index": "F",
        "solvedCount": 41
      },
      {
        "contestId": 1739,
        "index": "E",
        "solvedCount": 172
      },
      {
        "contestId": 1739,
        "index": "D",
        "solvedCount": 1100
      },
      {
        "contestId": 1739,
        "index": "C",
        "solvedCount": 3645
      },
      {
        "contestId": 1739,
        "index": "B",
        "solvedCount": 8454
      },
      {
        "contestId": 1739,
        "index": "A",
        "solvedCount": 13783
      },
      {
        "contestId": 1738,
        "index": "H",
        "solvedCount": 195
      },
      {
        "contestId": 1738,
        "index": "G",
        "solvedCount": 317
      },
      {
        "contestId": 1738,
        "index": "F",
        "solvedCount": 1031
      },
      {
        "contestId": 1738,
        "index": "E",
        "solvedCount": 1300
      },
      {
        "contestId": 1738,
        "index": "D",
        "solvedCount": 3073
      },
      {
        "contestId": 1738,
        "index": "C",
        "solvedCount": 9264
      },
      {
        "contestId": 1738,
        "index": "B",
        "solvedCount": 12520
      },
      {
        "contestId": 1738,
        "index": "A",
        "solvedCount": 12987
      },
      {
        "contestId": 1737,
        "index": "G",
        "solvedCount": 86
      },
      {
        "contestId": 1737,
        "index": "F",
        "solvedCount": 98
      },
      {
        "contestId": 1737,
        "index": "E",
        "solvedCount": 813
      },
      {
        "contestId": 1737,
        "index": "D",
        "solvedCount": 1724
      },
      {
        "contestId": 1737,
        "index": "C",
        "solvedCount": 5075
      },
      {
        "contestId": 1737,
        "index": "B",
        "solvedCount": 8564
      },
      {
        "contestId": 1737,
        "index": "A",
        "solvedCount": 9441
      },
      {
        "contestId": 1736,
        "index": "E",
        "solvedCount": 496
      },
      {
        "contestId": 1736,
        "index": "D",
        "solvedCount": 2093
      },
      {
        "contestId": 1736,
        "index": "C2",
        "solvedCount": 1095
      },
      {
        "contestId": 1736,
        "index": "C1",
        "solvedCount": 12946
      },
      {
        "contestId": 1736,
        "index": "B",
        "solvedCount": 14593
      },
      {
        "contestId": 1736,
        "index": "A",
        "solvedCount": 21220
      },
      {
        "contestId": 1735,
        "index": "F",
        "solvedCount": 180
      },
      {
        "contestId": 1735,
        "index": "E",
        "solvedCount": 937
      },
      {
        "contestId": 1735,
        "index": "D",
        "solvedCount": 4830
      },
      {
        "contestId": 1735,
        "index": "C",
        "solvedCount": 8664
      },
      {
        "contestId": 1735,
        "index": "B",
        "solvedCount": 16404
      },
      {
        "contestId": 1735,
        "index": "A",
        "solvedCount": 19110
      },
      {
        "contestId": 1734,
        "index": "F",
        "solvedCount": 636
      },
      {
        "contestId": 1734,
        "index": "E",
        "solvedCount": 2421
      },
      {
        "contestId": 1734,
        "index": "D",
        "solvedCount": 5351
      },
      {
        "contestId": 1734,
        "index": "C",
        "solvedCount": 14606
      },
      {
        "contestId": 1734,
        "index": "B",
        "solvedCount": 15033
      },
      {
        "contestId": 1734,
        "index": "A",
        "solvedCount": 19693
      },
      {
        "contestId": 1733,
        "index": "E",
        "solvedCount": 947
      },
      {
        "contestId": 1733,
        "index": "D2",
        "solvedCount": 3555
      },
      {
        "contestId": 1733,
        "index": "D1",
        "solvedCount": 11220
      },
      {
        "contestId": 1733,
        "index": "C",
        "solvedCount": 13149
      },
      {
        "contestId": 1733,
        "index": "B",
        "solvedCount": 17896
      },
      {
        "contestId": 1733,
        "index": "A",
        "solvedCount": 19859
      },
      {
        "contestId": 1732,
        "index": "E",
        "solvedCount": 337
      },
      {
        "contestId": 1732,
        "index": "D2",
        "solvedCount": 1198
      },
      {
        "contestId": 1732,
        "index": "D1",
        "solvedCount": 7172
      },
      {
        "contestId": 1732,
        "index": "C2",
        "solvedCount": 2172
      },
      {
        "contestId": 1732,
        "index": "C1",
        "solvedCount": 4757
      },
      {
        "contestId": 1732,
        "index": "B",
        "solvedCount": 12503
      },
      {
        "contestId": 1732,
        "index": "A",
        "solvedCount": 12905
      },
      {
        "contestId": 1731,
        "index": "F",
        "solvedCount": 573
      },
      {
        "contestId": 1731,
        "index": "E",
        "solvedCount": 2290
      },
      {
        "contestId": 1731,
        "index": "D",
        "solvedCount": 5787
      },
      {
        "contestId": 1731,
        "index": "C",
        "solvedCount": 7812
      },
      {
        "contestId": 1731,
        "index": "B",
        "solvedCount": 15265
      },
      {
        "contestId": 1731,
        "index": "A",
        "solvedCount": 21225
      },
      {
        "contestId": 1730,
        "index": "F",
        "solvedCount": 318
      },
      {
        "contestId": 1730,
        "index": "E",
        "solvedCount": 513
      },
      {
        "contestId": 1730,
        "index": "D",
        "solvedCount": 2393
      },
      {
        "contestId": 1730,
        "index": "C",
        "solvedCount": 14332
      },
      {
        "contestId": 1730,
        "index": "B",
        "solvedCount": 10355
      },
      {
        "contestId": 1730,
        "index": "A",
        "solvedCount": 21030
      },
      {
        "contestId": 1729,
        "index": "G",
        "solvedCount": 314
      },
      {
        "contestId": 1729,
        "index": "F",
        "solvedCount": 962
      },
      {
        "contestId": 1729,
        "index": "E",
        "solvedCount": 1576
      },
      {
        "contestId": 1729,
        "index": "D",
        "solvedCount": 6698
      },
      {
        "contestId": 1729,
        "index": "C",
        "solvedCount": 8600
      },
      {
        "contestId": 1729,
        "index": "B",
        "solvedCount": 16273
      },
      {
        "contestId": 1729,
        "index": "A",
        "solvedCount": 20503
      },
      {
        "contestId": 1728,
        "index": "G",
        "solvedCount": 49
      },
      {
        "contestId": 1728,
        "index": "F",
        "solvedCount": 10
      },
      {
        "contestId": 1728,
        "index": "E",
        "solvedCount": 306
      },
      {
        "contestId": 1728,
        "index": "D",
        "solvedCount": 1550
      },
      {
        "contestId": 1728,
        "index": "C",
        "solvedCount": 5016
      },
      {
        "contestId": 1728,
        "index": "B",
        "solvedCount": 12027
      },
      {
        "contestId": 1728,
        "index": "A",
        "solvedCount": 15343
      },
      {
        "contestId": 1726,
        "index": "H",
        "solvedCount": 65
      },
      {
        "contestId": 1726,
        "index": "G",
        "solvedCount": 253
      },
      {
        "contestId": 1726,
        "index": "F",
        "solvedCount": 133
      },
      {
        "contestId": 1726,
        "index": "E",
        "solvedCount": 1219
      },
      {
        "contestId": 1726,
        "index": "D",
        "solvedCount": 3266
      },
      {
        "contestId": 1726,
        "index": "C",
        "solvedCount": 11051
      },
      {
        "contestId": 1726,
        "index": "B",
        "solvedCount": 13820
      },
      {
        "contestId": 1726,
        "index": "A",
        "solvedCount": 17541
      },
      {
        "contestId": 1725,
        "index": "M",
        "solvedCount": 406
      },
      {
        "contestId": 1725,
        "index": "L",
        "solvedCount": 129
      },
      {
        "contestId": 1725,
        "index": "K",
        "solvedCount": 92
      },
      {
        "contestId": 1725,
        "index": "J",
        "solvedCount": 59
      },
      {
        "contestId": 1725,
        "index": "I",
        "solvedCount": 30
      },
      {
        "contestId": 1725,
        "index": "H",
        "solvedCount": 435
      },
      {
        "contestId": 1725,
        "index": "G",
        "solvedCount": 844
      },
      {
        "contestId": 1725,
        "index": "F",
        "solvedCount": 200
      },
      {
        "contestId": 1725,
        "index": "E",
        "solvedCount": 60
      },
      {
        "contestId": 1725,
        "index": "D",
        "solvedCount": 21
      },
      {
        "contestId": 1725,
        "index": "C",
        "solvedCount": 264
      },
      {
        "contestId": 1725,
        "index": "B",
        "solvedCount": 1619
      },
      {
        "contestId": 1725,
        "index": "A",
        "solvedCount": 2370
      },
      {
        "contestId": 1722,
        "index": "G",
        "solvedCount": 1983
      },
      {
        "contestId": 1722,
        "index": "F",
        "solvedCount": 1799
      },
      {
        "contestId": 1722,
        "index": "E",
        "solvedCount": 2031
      },
      {
        "contestId": 1722,
        "index": "D",
        "solvedCount": 9773
      },
      {
        "contestId": 1722,
        "index": "C",
        "solvedCount": 15465
      },
      {
        "contestId": 1722,
        "index": "B",
        "solvedCount": 22177
      },
      {
        "contestId": 1722,
        "index": "A",
        "solvedCount": 21292
      },
      {
        "contestId": 1721,
        "index": "F",
        "solvedCount": 36
      },
      {
        "contestId": 1721,
        "index": "E",
        "solvedCount": 403
      },
      {
        "contestId": 1721,
        "index": "D",
        "solvedCount": 1614
      },
      {
        "contestId": 1721,
        "index": "C",
        "solvedCount": 5194
      },
      {
        "contestId": 1721,
        "index": "B",
        "solvedCount": 10467
      },
      {
        "contestId": 1721,
        "index": "A",
        "solvedCount": 15825
      },
      {
        "contestId": 1720,
        "index": "E",
        "solvedCount": 675
      },
      {
        "contestId": 1720,
        "index": "D2",
        "solvedCount": 1560
      },
      {
        "contestId": 1720,
        "index": "D1",
        "solvedCount": 5220
      },
      {
        "contestId": 1720,
        "index": "C",
        "solvedCount": 14977
      },
      {
        "contestId": 1720,
        "index": "B",
        "solvedCount": 19389
      },
      {
        "contestId": 1720,
        "index": "A",
        "solvedCount": 19888
      },
      {
        "contestId": 1719,
        "index": "C",
        "solvedCount": 11771
      },
      {
        "contestId": 1719,
        "index": "B",
        "solvedCount": 17918
      },
      {
        "contestId": 1719,
        "index": "A",
        "solvedCount": 23623
      },
      {
        "contestId": 1718,
        "index": "F",
        "solvedCount": 118
      },
      {
        "contestId": 1718,
        "index": "E",
        "solvedCount": 90
      },
      {
        "contestId": 1718,
        "index": "D",
        "solvedCount": 204
      },
      {
        "contestId": 1718,
        "index": "C",
        "solvedCount": 1109
      },
      {
        "contestId": 1718,
        "index": "B",
        "solvedCount": 1924
      },
      {
        "contestId": 1718,
        "index": "A2",
        "solvedCount": 2457
      },
      {
        "contestId": 1718,
        "index": "A1",
        "solvedCount": 2480
      },
      {
        "contestId": 1717,
        "index": "F",
        "solvedCount": 463
      },
      {
        "contestId": 1717,
        "index": "E",
        "solvedCount": 2159
      },
      {
        "contestId": 1717,
        "index": "D",
        "solvedCount": 3940
      },
      {
        "contestId": 1717,
        "index": "C",
        "solvedCount": 12779
      },
      {
        "contestId": 1717,
        "index": "B",
        "solvedCount": 13902
      },
      {
        "contestId": 1717,
        "index": "A",
        "solvedCount": 18382
      },
      {
        "contestId": 1716,
        "index": "F",
        "solvedCount": 123
      },
      {
        "contestId": 1716,
        "index": "E",
        "solvedCount": 137
      },
      {
        "contestId": 1716,
        "index": "D",
        "solvedCount": 1062
      },
      {
        "contestId": 1716,
        "index": "C",
        "solvedCount": 1159
      },
      {
        "contestId": 1716,
        "index": "B",
        "solvedCount": 14009
      },
      {
        "contestId": 1716,
        "index": "A",
        "solvedCount": 15943
      },
      {
        "contestId": 1715,
        "index": "F",
        "solvedCount": 449
      },
      {
        "contestId": 1715,
        "index": "E",
        "solvedCount": 1318
      },
      {
        "contestId": 1715,
        "index": "D",
        "solvedCount": 4405
      },
      {
        "contestId": 1715,
        "index": "C",
        "solvedCount": 7743
      },
      {
        "contestId": 1715,
        "index": "B",
        "solvedCount": 18186
      },
      {
        "contestId": 1715,
        "index": "A",
        "solvedCount": 22405
      },
      {
        "contestId": 1714,
        "index": "G",
        "solvedCount": 1432
      },
      {
        "contestId": 1714,
        "index": "F",
        "solvedCount": 541
      },
      {
        "contestId": 1714,
        "index": "E",
        "solvedCount": 4097
      },
      {
        "contestId": 1714,
        "index": "D",
        "solvedCount": 2451
      },
      {
        "contestId": 1714,
        "index": "C",
        "solvedCount": 15034
      },
      {
        "contestId": 1714,
        "index": "B",
        "solvedCount": 15144
      },
      {
        "contestId": 1714,
        "index": "A",
        "solvedCount": 13582
      },
      {
        "contestId": 1713,
        "index": "F",
        "solvedCount": 409
      },
      {
        "contestId": 1713,
        "index": "E",
        "solvedCount": 1362
      },
      {
        "contestId": 1713,
        "index": "D",
        "solvedCount": 5105
      },
      {
        "contestId": 1713,
        "index": "C",
        "solvedCount": 15389
      },
      {
        "contestId": 1713,
        "index": "B",
        "solvedCount": 19390
      },
      {
        "contestId": 1713,
        "index": "A",
        "solvedCount": 20947
      },
      {
        "contestId": 1712,
        "index": "F",
        "solvedCount": 240
      },
      {
        "contestId": 1712,
        "index": "E2",
        "solvedCount": 1012
      },
      {
        "contestId": 1712,
        "index": "E1",
        "solvedCount": 1808
      },
      {
        "contestId": 1712,
        "index": "D",
        "solvedCount": 3899
      },
      {
        "contestId": 1712,
        "index": "C",
        "solvedCount": 18004
      },
      {
        "contestId": 1712,
        "index": "B",
        "solvedCount": 20669
      },
      {
        "contestId": 1712,
        "index": "A",
        "solvedCount": 22980
      },
      {
        "contestId": 1711,
        "index": "B",
        "solvedCount": 12303
      },
      {
        "contestId": 1711,
        "index": "A",
        "solvedCount": 23739
      },
      {
        "contestId": 1710,
        "index": "E",
        "solvedCount": 411
      },
      {
        "contestId": 1710,
        "index": "D",
        "solvedCount": 357
      },
      {
        "contestId": 1710,
        "index": "C",
        "solvedCount": 974
      },
      {
        "contestId": 1710,
        "index": "B",
        "solvedCount": 1550
      },
      {
        "contestId": 1710,
        "index": "A",
        "solvedCount": 3394
      },
      {
        "contestId": 1709,
        "index": "F",
        "solvedCount": 96
      },
      {
        "contestId": 1709,
        "index": "E",
        "solvedCount": 230
      },
      {
        "contestId": 1709,
        "index": "D",
        "solvedCount": 2522
      },
      {
        "contestId": 1709,
        "index": "C",
        "solvedCount": 2071
      },
      {
        "contestId": 1709,
        "index": "B",
        "solvedCount": 12297
      },
      {
        "contestId": 1709,
        "index": "A",
        "solvedCount": 16458
      },
      {
        "contestId": 1708,
        "index": "B",
        "solvedCount": 17922
      },
      {
        "contestId": 1708,
        "index": "A",
        "solvedCount": 20751
      },
      {
        "contestId": 1707,
        "index": "F",
        "solvedCount": 120
      },
      {
        "contestId": 1707,
        "index": "E",
        "solvedCount": 417
      },
      {
        "contestId": 1707,
        "index": "D",
        "solvedCount": 442
      },
      {
        "contestId": 1707,
        "index": "C",
        "solvedCount": 1024
      },
      {
        "contestId": 1707,
        "index": "B",
        "solvedCount": 2406
      },
      {
        "contestId": 1707,
        "index": "A",
        "solvedCount": 4503
      },
      {
        "contestId": 1706,
        "index": "E",
        "solvedCount": 1974
      },
      {
        "contestId": 1706,
        "index": "D2",
        "solvedCount": 1509
      },
      {
        "contestId": 1706,
        "index": "D1",
        "solvedCount": 6236
      },
      {
        "contestId": 1706,
        "index": "C",
        "solvedCount": 13217
      },
      {
        "contestId": 1706,
        "index": "B",
        "solvedCount": 15501
      },
      {
        "contestId": 1706,
        "index": "A",
        "solvedCount": 21769
      },
      {
        "contestId": 1705,
        "index": "F",
        "solvedCount": 495
      },
      {
        "contestId": 1705,
        "index": "E",
        "solvedCount": 1783
      },
      {
        "contestId": 1705,
        "index": "D",
        "solvedCount": 5622
      },
      {
        "contestId": 1705,
        "index": "C",
        "solvedCount": 12064
      },
      {
        "contestId": 1705,
        "index": "B",
        "solvedCount": 20525
      },
      {
        "contestId": 1705,
        "index": "A",
        "solvedCount": 23433
      },
      {
        "contestId": 1704,
        "index": "H2",
        "solvedCount": 61
      },
      {
        "contestId": 1704,
        "index": "H1",
        "solvedCount": 143
      },
      {
        "contestId": 1704,
        "index": "G",
        "solvedCount": 81
      },
      {
        "contestId": 1704,
        "index": "F",
        "solvedCount": 783
      },
      {
        "contestId": 1704,
        "index": "E",
        "solvedCount": 2038
      },
      {
        "contestId": 1704,
        "index": "D",
        "solvedCount": 4507
      },
      {
        "contestId": 1704,
        "index": "C",
        "solvedCount": 12398
      },
      {
        "contestId": 1704,
        "index": "B",
        "solvedCount": 14474
      },
      {
        "contestId": 1704,
        "index": "A",
        "solvedCount": 15311
      },
      {
        "contestId": 1703,
        "index": "G",
        "solvedCount": 1888
      },
      {
        "contestId": 1703,
        "index": "F",
        "solvedCount": 6248
      },
      {
        "contestId": 1703,
        "index": "E",
        "solvedCount": 6743
      },
      {
        "contestId": 1703,
        "index": "D",
        "solvedCount": 10578
      },
      {
        "contestId": 1703,
        "index": "C",
        "solvedCount": 19728
      },
      {
        "contestId": 1703,
        "index": "B",
        "solvedCount": 21975
      },
      {
        "contestId": 1703,
        "index": "A",
        "solvedCount": 23600
      },
      {
        "contestId": 1702,
        "index": "G2",
        "solvedCount": 634
      },
      {
        "contestId": 1702,
        "index": "G1",
        "solvedCount": 1151
      },
      {
        "contestId": 1702,
        "index": "F",
        "solvedCount": 1819
      },
      {
        "contestId": 1702,
        "index": "E",
        "solvedCount": 3098
      },
      {
        "contestId": 1702,
        "index": "D",
        "solvedCount": 10987
      },
      {
        "contestId": 1702,
        "index": "C",
        "solvedCount": 9065
      },
      {
        "contestId": 1702,
        "index": "B",
        "solvedCount": 15918
      },
      {
        "contestId": 1702,
        "index": "A",
        "solvedCount": 18846
      },
      {
        "contestId": 1701,
        "index": "F",
        "solvedCount": 105
      },
      {
        "contestId": 1701,
        "index": "E",
        "solvedCount": 167
      },
      {
        "contestId": 1701,
        "index": "D",
        "solvedCount": 1435
      },
      {
        "contestId": 1701,
        "index": "C",
        "solvedCount": 5791
      },
      {
        "contestId": 1701,
        "index": "B",
        "solvedCount": 13108
      },
      {
        "contestId": 1701,
        "index": "A",
        "solvedCount": 16147
      },
      {
        "contestId": 1700,
        "index": "F",
        "solvedCount": 725
      },
      {
        "contestId": 1700,
        "index": "E",
        "solvedCount": 719
      },
      {
        "contestId": 1700,
        "index": "D",
        "solvedCount": 5281
      },
      {
        "contestId": 1700,
        "index": "C",
        "solvedCount": 9567
      },
      {
        "contestId": 1700,
        "index": "B",
        "solvedCount": 17048
      },
      {
        "contestId": 1700,
        "index": "A",
        "solvedCount": 21371
      },
      {
        "contestId": 1699,
        "index": "E",
        "solvedCount": 931
      },
      {
        "contestId": 1699,
        "index": "D",
        "solvedCount": 2790
      },
      {
        "contestId": 1699,
        "index": "C",
        "solvedCount": 8629
      },
      {
        "contestId": 1699,
        "index": "B",
        "solvedCount": 17886
      },
      {
        "contestId": 1699,
        "index": "A",
        "solvedCount": 22827
      },
      {
        "contestId": 1698,
        "index": "G",
        "solvedCount": 250
      },
      {
        "contestId": 1698,
        "index": "F",
        "solvedCount": 478
      },
      {
        "contestId": 1698,
        "index": "E",
        "solvedCount": 1465
      },
      {
        "contestId": 1698,
        "index": "D",
        "solvedCount": 7828
      },
      {
        "contestId": 1698,
        "index": "C",
        "solvedCount": 16253
      },
      {
        "contestId": 1698,
        "index": "B",
        "solvedCount": 20030
      },
      {
        "contestId": 1698,
        "index": "A",
        "solvedCount": 24961
      },
      {
        "contestId": 1697,
        "index": "F",
        "solvedCount": 23
      },
      {
        "contestId": 1697,
        "index": "E",
        "solvedCount": 191
      },
      {
        "contestId": 1697,
        "index": "D",
        "solvedCount": 1157
      },
      {
        "contestId": 1697,
        "index": "C",
        "solvedCount": 4902
      },
      {
        "contestId": 1697,
        "index": "B",
        "solvedCount": 12009
      },
      {
        "contestId": 1697,
        "index": "A",
        "solvedCount": 15450
      },
      {
        "contestId": 1696,
        "index": "H",
        "solvedCount": 116
      },
      {
        "contestId": 1696,
        "index": "G",
        "solvedCount": 232
      },
      {
        "contestId": 1696,
        "index": "F",
        "solvedCount": 780
      },
      {
        "contestId": 1696,
        "index": "E",
        "solvedCount": 3495
      },
      {
        "contestId": 1696,
        "index": "D",
        "solvedCount": 4857
      },
      {
        "contestId": 1696,
        "index": "C",
        "solvedCount": 10661
      },
      {
        "contestId": 1696,
        "index": "B",
        "solvedCount": 17161
      },
      {
        "contestId": 1696,
        "index": "A",
        "solvedCount": 17315
      },
      {
        "contestId": 1695,
        "index": "E",
        "solvedCount": 376
      },
      {
        "contestId": 1695,
        "index": "D2",
        "solvedCount": 1708
      },
      {
        "contestId": 1695,
        "index": "D1",
        "solvedCount": 1873
      },
      {
        "contestId": 1695,
        "index": "C",
        "solvedCount": 9208
      },
      {
        "contestId": 1695,
        "index": "B",
        "solvedCount": 16776
      },
      {
        "contestId": 1695,
        "index": "A",
        "solvedCount": 15560
      },
      {
        "contestId": 1694,
        "index": "B",
        "solvedCount": 16937
      },
      {
        "contestId": 1694,
        "index": "A",
        "solvedCount": 21211
      },
      {
        "contestId": 1693,
        "index": "F",
        "solvedCount": 222
      },
      {
        "contestId": 1693,
        "index": "E",
        "solvedCount": 293
      },
      {
        "contestId": 1693,
        "index": "D",
        "solvedCount": 590
      },
      {
        "contestId": 1693,
        "index": "C",
        "solvedCount": 1400
      },
      {
        "contestId": 1693,
        "index": "B",
        "solvedCount": 3114
      },
      {
        "contestId": 1693,
        "index": "A",
        "solvedCount": 4398
      },
      {
        "contestId": 1692,
        "index": "H",
        "solvedCount": 1441
      },
      {
        "contestId": 1692,
        "index": "G",
        "solvedCount": 4467
      },
      {
        "contestId": 1692,
        "index": "F",
        "solvedCount": 6573
      },
      {
        "contestId": 1692,
        "index": "E",
        "solvedCount": 7030
      },
      {
        "contestId": 1692,
        "index": "D",
        "solvedCount": 9049
      },
      {
        "contestId": 1692,
        "index": "C",
        "solvedCount": 18138
      },
      {
        "contestId": 1692,
        "index": "B",
        "solvedCount": 17189
      },
      {
        "contestId": 1692,
        "index": "A",
        "solvedCount": 25065
      },
      {
        "contestId": 1691,
        "index": "F",
        "solvedCount": 779
      },
      {
        "contestId": 1691,
        "index": "E",
        "solvedCount": 1564
      },
      {
        "contestId": 1691,
        "index": "D",
        "solvedCount": 4852
      },
      {
        "contestId": 1691,
        "index": "C",
        "solvedCount": 13883
      },
      {
        "contestId": 1691,
        "index": "B",
        "solvedCount": 19240
      },
      {
        "contestId": 1691,
        "index": "A",
        "solvedCount": 27160
      },
      {
        "contestId": 1690,
        "index": "G",
        "solvedCount": 534
      },
      {
        "contestId": 1690,
        "index": "F",
        "solvedCount": 1581
      },
      {
        "contestId": 1690,
        "index": "E",
        "solvedCount": 4002
      },
      {
        "contestId": 1690,
        "index": "D",
        "solvedCount": 11355
      },
      {
        "contestId": 1690,
        "index": "C",
        "solvedCount": 16125
      },
      {
        "contestId": 1690,
        "index": "B",
        "solvedCount": 14359
      },
      {
        "contestId": 1690,
        "index": "A",
        "solvedCount": 20288
      },
      {
        "contestId": 1689,
        "index": "E",
        "solvedCount": 1046
      },
      {
        "contestId": 1689,
        "index": "D",
        "solvedCount": 3651
      },
      {
        "contestId": 1689,
        "index": "C",
        "solvedCount": 9017
      },
      {
        "contestId": 1689,
        "index": "B",
        "solvedCount": 15882
      },
      {
        "contestId": 1689,
        "index": "A",
        "solvedCount": 15561
      },
      {
        "contestId": 1688,
        "index": "C",
        "solvedCount": 7325
      },
      {
        "contestId": 1688,
        "index": "B",
        "solvedCount": 17253
      },
      {
        "contestId": 1688,
        "index": "A",
        "solvedCount": 19198
      },
      {
        "contestId": 1687,
        "index": "F",
        "solvedCount": 66
      },
      {
        "contestId": 1687,
        "index": "E",
        "solvedCount": 183
      },
      {
        "contestId": 1687,
        "index": "D",
        "solvedCount": 483
      },
      {
        "contestId": 1687,
        "index": "C",
        "solvedCount": 1019
      },
      {
        "contestId": 1687,
        "index": "B",
        "solvedCount": 2000
      },
      {
        "contestId": 1687,
        "index": "A",
        "solvedCount": 3363
      },
      {
        "contestId": 1686,
        "index": "B",
        "solvedCount": 17079
      },
      {
        "contestId": 1686,
        "index": "A",
        "solvedCount": 19568
      },
      {
        "contestId": 1685,
        "index": "E",
        "solvedCount": 106
      },
      {
        "contestId": 1685,
        "index": "D2",
        "solvedCount": 84
      },
      {
        "contestId": 1685,
        "index": "D1",
        "solvedCount": 326
      },
      {
        "contestId": 1685,
        "index": "C",
        "solvedCount": 663
      },
      {
        "contestId": 1685,
        "index": "B",
        "solvedCount": 1474
      },
      {
        "contestId": 1685,
        "index": "A",
        "solvedCount": 4309
      },
      {
        "contestId": 1684,
        "index": "H",
        "solvedCount": 203
      },
      {
        "contestId": 1684,
        "index": "G",
        "solvedCount": 490
      },
      {
        "contestId": 1684,
        "index": "F",
        "solvedCount": 757
      },
      {
        "contestId": 1684,
        "index": "E",
        "solvedCount": 2790
      },
      {
        "contestId": 1684,
        "index": "D",
        "solvedCount": 8451
      },
      {
        "contestId": 1684,
        "index": "C",
        "solvedCount": 11177
      },
      {
        "contestId": 1684,
        "index": "B",
        "solvedCount": 19639
      },
      {
        "contestId": 1684,
        "index": "A",
        "solvedCount": 22186
      },
      {
        "contestId": 1682,
        "index": "F",
        "solvedCount": 246
      },
      {
        "contestId": 1682,
        "index": "E",
        "solvedCount": 481
      },
      {
        "contestId": 1682,
        "index": "D",
        "solvedCount": 2876
      },
      {
        "contestId": 1682,
        "index": "C",
        "solvedCount": 12888
      },
      {
        "contestId": 1682,
        "index": "B",
        "solvedCount": 15478
      },
      {
        "contestId": 1682,
        "index": "A",
        "solvedCount": 18185
      },
      {
        "contestId": 1681,
        "index": "F",
        "solvedCount": 229
      },
      {
        "contestId": 1681,
        "index": "E",
        "solvedCount": 92
      },
      {
        "contestId": 1681,
        "index": "D",
        "solvedCount": 2182
      },
      {
        "contestId": 1681,
        "index": "C",
        "solvedCount": 7426
      },
      {
        "contestId": 1681,
        "index": "B",
        "solvedCount": 12523
      },
      {
        "contestId": 1681,
        "index": "A",
        "solvedCount": 13999
      },
      {
        "contestId": 1680,
        "index": "F",
        "solvedCount": 52
      },
      {
        "contestId": 1680,
        "index": "E",
        "solvedCount": 870
      },
      {
        "contestId": 1680,
        "index": "D",
        "solvedCount": 231
      },
      {
        "contestId": 1680,
        "index": "C",
        "solvedCount": 2765
      },
      {
        "contestId": 1680,
        "index": "B",
        "solvedCount": 11225
      },
      {
        "contestId": 1680,
        "index": "A",
        "solvedCount": 12766
      },
      {
        "contestId": 1679,
        "index": "F",
        "solvedCount": 402
      },
      {
        "contestId": 1679,
        "index": "E",
        "solvedCount": 957
      },
      {
        "contestId": 1679,
        "index": "D",
        "solvedCount": 3859
      },
      {
        "contestId": 1679,
        "index": "C",
        "solvedCount": 9006
      },
      {
        "contestId": 1679,
        "index": "B",
        "solvedCount": 14948
      },
      {
        "contestId": 1679,
        "index": "A",
        "solvedCount": 19123
      },
      {
        "contestId": 1678,
        "index": "B2",
        "solvedCount": 5874
      },
      {
        "contestId": 1678,
        "index": "B1",
        "solvedCount": 15440
      },
      {
        "contestId": 1678,
        "index": "A",
        "solvedCount": 17390
      },
      {
        "contestId": 1677,
        "index": "F",
        "solvedCount": 79
      },
      {
        "contestId": 1677,
        "index": "E",
        "solvedCount": 396
      },
      {
        "contestId": 1677,
        "index": "D",
        "solvedCount": 878
      },
      {
        "contestId": 1677,
        "index": "C",
        "solvedCount": 2062
      },
      {
        "contestId": 1677,
        "index": "B",
        "solvedCount": 2168
      },
      {
        "contestId": 1677,
        "index": "A",
        "solvedCount": 3080
      },
      {
        "contestId": 1676,
        "index": "H2",
        "solvedCount": 2527
      },
      {
        "contestId": 1676,
        "index": "H1",
        "solvedCount": 4215
      },
      {
        "contestId": 1676,
        "index": "G",
        "solvedCount": 3993
      },
      {
        "contestId": 1676,
        "index": "F",
        "solvedCount": 4775
      },
      {
        "contestId": 1676,
        "index": "E",
        "solvedCount": 9828
      },
      {
        "contestId": 1676,
        "index": "D",
        "solvedCount": 10583
      },
      {
        "contestId": 1676,
        "index": "C",
        "solvedCount": 15953
      },
      {
        "contestId": 1676,
        "index": "B",
        "solvedCount": 21605
      },
      {
        "contestId": 1676,
        "index": "A",
        "solvedCount": 22496
      },
      {
        "contestId": 1675,
        "index": "G",
        "solvedCount": 193
      },
      {
        "contestId": 1675,
        "index": "F",
        "solvedCount": 982
      },
      {
        "contestId": 1675,
        "index": "E",
        "solvedCount": 3074
      },
      {
        "contestId": 1675,
        "index": "D",
        "solvedCount": 5186
      },
      {
        "contestId": 1675,
        "index": "C",
        "solvedCount": 8743
      },
      {
        "contestId": 1675,
        "index": "B",
        "solvedCount": 11641
      },
      {
        "contestId": 1675,
        "index": "A",
        "solvedCount": 16622
      },
      {
        "contestId": 1674,
        "index": "G",
        "solvedCount": 336
      },
      {
        "contestId": 1674,
        "index": "F",
        "solvedCount": 1300
      },
      {
        "contestId": 1674,
        "index": "E",
        "solvedCount": 826
      },
      {
        "contestId": 1674,
        "index": "D",
        "solvedCount": 6230
      },
      {
        "contestId": 1674,
        "index": "C",
        "solvedCount": 10215
      },
      {
        "contestId": 1674,
        "index": "B",
        "solvedCount": 14727
      },
      {
        "contestId": 1674,
        "index": "A",
        "solvedCount": 14746
      },
      {
        "contestId": 1673,
        "index": "F",
        "solvedCount": 682
      },
      {
        "contestId": 1673,
        "index": "E",
        "solvedCount": 588
      },
      {
        "contestId": 1673,
        "index": "D",
        "solvedCount": 2939
      },
      {
        "contestId": 1673,
        "index": "C",
        "solvedCount": 10129
      },
      {
        "contestId": 1673,
        "index": "B",
        "solvedCount": 13304
      },
      {
        "contestId": 1673,
        "index": "A",
        "solvedCount": 17566
      },
      {
        "contestId": 1672,
        "index": "I",
        "solvedCount": 115
      },
      {
        "contestId": 1672,
        "index": "H",
        "solvedCount": 806
      },
      {
        "contestId": 1672,
        "index": "G",
        "solvedCount": 268
      },
      {
        "contestId": 1672,
        "index": "F2",
        "solvedCount": 666
      },
      {
        "contestId": 1672,
        "index": "F1",
        "solvedCount": 2711
      },
      {
        "contestId": 1672,
        "index": "E",
        "solvedCount": 1940
      },
      {
        "contestId": 1672,
        "index": "D",
        "solvedCount": 5526
      },
      {
        "contestId": 1672,
        "index": "C",
        "solvedCount": 12255
      },
      {
        "contestId": 1672,
        "index": "B",
        "solvedCount": 14742
      },
      {
        "contestId": 1672,
        "index": "A",
        "solvedCount": 15169
      },
      {
        "contestId": 1671,
        "index": "F",
        "solvedCount": 37
      },
      {
        "contestId": 1671,
        "index": "E",
        "solvedCount": 666
      },
      {
        "contestId": 1671,
        "index": "D",
        "solvedCount": 2415
      },
      {
        "contestId": 1671,
        "index": "C",
        "solvedCount": 6226
      },
      {
        "contestId": 1671,
        "index": "B",
        "solvedCount": 9167
      },
      {
        "contestId": 1671,
        "index": "A",
        "solvedCount": 11824
      },
      {
        "contestId": 1670,
        "index": "F",
        "solvedCount": 816
      },
      {
        "contestId": 1670,
        "index": "E",
        "solvedCount": 1483
      },
      {
        "contestId": 1670,
        "index": "D",
        "solvedCount": 4519
      },
      {
        "contestId": 1670,
        "index": "C",
        "solvedCount": 8616
      },
      {
        "contestId": 1670,
        "index": "B",
        "solvedCount": 11817
      },
      {
        "contestId": 1670,
        "index": "A",
        "solvedCount": 14783
      },
      {
        "contestId": 1669,
        "index": "H",
        "solvedCount": 5198
      },
      {
        "contestId": 1669,
        "index": "G",
        "solvedCount": 6599
      },
      {
        "contestId": 1669,
        "index": "F",
        "solvedCount": 8423
      },
      {
        "contestId": 1669,
        "index": "E",
        "solvedCount": 6545
      },
      {
        "contestId": 1669,
        "index": "D",
        "solvedCount": 9593
      },
      {
        "contestId": 1669,
        "index": "C",
        "solvedCount": 17582
      },
      {
        "contestId": 1669,
        "index": "B",
        "solvedCount": 18657
      },
      {
        "contestId": 1669,
        "index": "A",
        "solvedCount": 23121
      },
      {
        "contestId": 1668,
        "index": "B",
        "solvedCount": 15298
      },
      {
        "contestId": 1668,
        "index": "A",
        "solvedCount": 15666
      },
      {
        "contestId": 1667,
        "index": "F",
        "solvedCount": 69
      },
      {
        "contestId": 1667,
        "index": "E",
        "solvedCount": 416
      },
      {
        "contestId": 1667,
        "index": "D",
        "solvedCount": 411
      },
      {
        "contestId": 1667,
        "index": "C",
        "solvedCount": 910
      },
      {
        "contestId": 1667,
        "index": "B",
        "solvedCount": 1751
      },
      {
        "contestId": 1667,
        "index": "A",
        "solvedCount": 4302
      },
      {
        "contestId": 1666,
        "index": "L",
        "solvedCount": 557
      },
      {
        "contestId": 1666,
        "index": "K",
        "solvedCount": 6
      },
      {
        "contestId": 1666,
        "index": "J",
        "solvedCount": 298
      },
      {
        "contestId": 1666,
        "index": "I",
        "solvedCount": 317
      },
      {
        "contestId": 1666,
        "index": "H",
        "solvedCount": 2
      },
      {
        "contestId": 1666,
        "index": "G",
        "solvedCount": 25
      },
      {
        "contestId": 1666,
        "index": "F",
        "solvedCount": 224
      },
      {
        "contestId": 1666,
        "index": "E",
        "solvedCount": 129
      },
      {
        "contestId": 1666,
        "index": "D",
        "solvedCount": 1295
      },
      {
        "contestId": 1666,
        "index": "C",
        "solvedCount": 706
      },
      {
        "contestId": 1666,
        "index": "B",
        "solvedCount": 7
      },
      {
        "contestId": 1666,
        "index": "A",
        "solvedCount": 6
      },
      {
        "contestId": 1665,
        "index": "E",
        "solvedCount": 1234
      },
      {
        "contestId": 1665,
        "index": "D",
        "solvedCount": 3228
      },
      {
        "contestId": 1665,
        "index": "C",
        "solvedCount": 7312
      },
      {
        "contestId": 1665,
        "index": "B",
        "solvedCount": 17008
      },
      {
        "contestId": 1665,
        "index": "A",
        "solvedCount": 21406
      },
      {
        "contestId": 1663,
        "index": "H",
        "solvedCount": 338
      },
      {
        "contestId": 1663,
        "index": "G",
        "solvedCount": 5
      },
      {
        "contestId": 1663,
        "index": "F",
        "solvedCount": 43
      },
      {
        "contestId": 1663,
        "index": "E",
        "solvedCount": 126
      },
      {
        "contestId": 1663,
        "index": "D",
        "solvedCount": 432
      },
      {
        "contestId": 1663,
        "index": "C",
        "solvedCount": 3458
      },
      {
        "contestId": 1663,
        "index": "B",
        "solvedCount": 1266
      },
      {
        "contestId": 1663,
        "index": "A",
        "solvedCount": 6113
      },
      {
        "contestId": 1662,
        "index": "O",
        "solvedCount": 267
      },
      {
        "contestId": 1662,
        "index": "N",
        "solvedCount": 84
      },
      {
        "contestId": 1662,
        "index": "M",
        "solvedCount": 894
      },
      {
        "contestId": 1662,
        "index": "L",
        "solvedCount": 188
      },
      {
        "contestId": 1662,
        "index": "K",
        "solvedCount": 42
      },
      {
        "contestId": 1662,
        "index": "J",
        "solvedCount": 7
      },
      {
        "contestId": 1662,
        "index": "I",
        "solvedCount": 426
      },
      {
        "contestId": 1662,
        "index": "H",
        "solvedCount": 687
      },
      {
        "contestId": 1662,
        "index": "G",
        "solvedCount": 77
      },
      {
        "contestId": 1662,
        "index": "F",
        "solvedCount": 150
      },
      {
        "contestId": 1662,
        "index": "E",
        "solvedCount": 15
      },
      {
        "contestId": 1662,
        "index": "D",
        "solvedCount": 308
      },
      {
        "contestId": 1662,
        "index": "C",
        "solvedCount": 42
      },
      {
        "contestId": 1662,
        "index": "B",
        "solvedCount": 22
      },
      {
        "contestId": 1662,
        "index": "A",
        "solvedCount": 1303
      },
      {
        "contestId": 1661,
        "index": "F",
        "solvedCount": 47
      },
      {
        "contestId": 1661,
        "index": "E",
        "solvedCount": 149
      },
      {
        "contestId": 1661,
        "index": "D",
        "solvedCount": 1109
      },
      {
        "contestId": 1661,
        "index": "C",
        "solvedCount": 2413
      },
      {
        "contestId": 1661,
        "index": "B",
        "solvedCount": 5759
      },
      {
        "contestId": 1661,
        "index": "A",
        "solvedCount": 10468
      },
      {
        "contestId": 1660,
        "index": "F2",
        "solvedCount": 428
      },
      {
        "contestId": 1660,
        "index": "F1",
        "solvedCount": 2096
      },
      {
        "contestId": 1660,
        "index": "E",
        "solvedCount": 1937
      },
      {
        "contestId": 1660,
        "index": "D",
        "solvedCount": 2189
      },
      {
        "contestId": 1660,
        "index": "C",
        "solvedCount": 5862
      },
      {
        "contestId": 1660,
        "index": "B",
        "solvedCount": 15316
      },
      {
        "contestId": 1660,
        "index": "A",
        "solvedCount": 19336
      },
      {
        "contestId": 1659,
        "index": "F",
        "solvedCount": 150
      },
      {
        "contestId": 1659,
        "index": "E",
        "solvedCount": 1265
      },
      {
        "contestId": 1659,
        "index": "D",
        "solvedCount": 3521
      },
      {
        "contestId": 1659,
        "index": "C",
        "solvedCount": 8589
      },
      {
        "contestId": 1659,
        "index": "B",
        "solvedCount": 9850
      },
      {
        "contestId": 1659,
        "index": "A",
        "solvedCount": 15341
      },
      {
        "contestId": 1658,
        "index": "F",
        "solvedCount": 632
      },
      {
        "contestId": 1658,
        "index": "E",
        "solvedCount": 893
      },
      {
        "contestId": 1658,
        "index": "D2",
        "solvedCount": 2145
      },
      {
        "contestId": 1658,
        "index": "D1",
        "solvedCount": 8081
      },
      {
        "contestId": 1658,
        "index": "C",
        "solvedCount": 8568
      },
      {
        "contestId": 1658,
        "index": "B",
        "solvedCount": 17517
      },
      {
        "contestId": 1658,
        "index": "A",
        "solvedCount": 19587
      },
      {
        "contestId": 1657,
        "index": "F",
        "solvedCount": 63
      },
      {
        "contestId": 1657,
        "index": "E",
        "solvedCount": 331
      },
      {
        "contestId": 1657,
        "index": "D",
        "solvedCount": 975
      },
      {
        "contestId": 1657,
        "index": "C",
        "solvedCount": 7626
      },
      {
        "contestId": 1657,
        "index": "B",
        "solvedCount": 13999
      },
      {
        "contestId": 1657,
        "index": "A",
        "solvedCount": 14088
      },
      {
        "contestId": 1656,
        "index": "I",
        "solvedCount": 69
      },
      {
        "contestId": 1656,
        "index": "H",
        "solvedCount": 285
      },
      {
        "contestId": 1656,
        "index": "G",
        "solvedCount": 237
      },
      {
        "contestId": 1656,
        "index": "F",
        "solvedCount": 856
      },
      {
        "contestId": 1656,
        "index": "E",
        "solvedCount": 2956
      },
      {
        "contestId": 1656,
        "index": "D",
        "solvedCount": 6087
      },
      {
        "contestId": 1656,
        "index": "C",
        "solvedCount": 16685
      },
      {
        "contestId": 1656,
        "index": "B",
        "solvedCount": 16147
      },
      {
        "contestId": 1656,
        "index": "A",
        "solvedCount": 18449
      },
      {
        "contestId": 1654,
        "index": "H",
        "solvedCount": 62
      },
      {
        "contestId": 1654,
        "index": "G",
        "solvedCount": 302
      },
      {
        "contestId": 1654,
        "index": "F",
        "solvedCount": 868
      },
      {
        "contestId": 1654,
        "index": "E",
        "solvedCount": 1767
      },
      {
        "contestId": 1654,
        "index": "D",
        "solvedCount": 2480
      },
      {
        "contestId": 1654,
        "index": "C",
        "solvedCount": 11848
      },
      {
        "contestId": 1654,
        "index": "B",
        "solvedCount": 14309
      },
      {
        "contestId": 1654,
        "index": "A",
        "solvedCount": 16806
      },
      {
        "contestId": 1651,
        "index": "F",
        "solvedCount": 18
      },
      {
        "contestId": 1651,
        "index": "E",
        "solvedCount": 71
      },
      {
        "contestId": 1651,
        "index": "D",
        "solvedCount": 1010
      },
      {
        "contestId": 1651,
        "index": "C",
        "solvedCount": 3927
      },
      {
        "contestId": 1651,
        "index": "B",
        "solvedCount": 12747
      },
      {
        "contestId": 1651,
        "index": "A",
        "solvedCount": 15790
      },
      {
        "contestId": 1650,
        "index": "G",
        "solvedCount": 326
      },
      {
        "contestId": 1650,
        "index": "F",
        "solvedCount": 198
      },
      {
        "contestId": 1650,
        "index": "E",
        "solvedCount": 1019
      },
      {
        "contestId": 1650,
        "index": "D",
        "solvedCount": 5074
      },
      {
        "contestId": 1650,
        "index": "C",
        "solvedCount": 7919
      },
      {
        "contestId": 1650,
        "index": "B",
        "solvedCount": 12786
      },
      {
        "contestId": 1650,
        "index": "A",
        "solvedCount": 18967
      },
      {
        "contestId": 1649,
        "index": "B",
        "solvedCount": 11877
      },
      {
        "contestId": 1649,
        "index": "A",
        "solvedCount": 14746
      },
      {
        "contestId": 1648,
        "index": "F",
        "solvedCount": 86
      },
      {
        "contestId": 1648,
        "index": "E",
        "solvedCount": 279
      },
      {
        "contestId": 1648,
        "index": "D",
        "solvedCount": 630
      },
      {
        "contestId": 1648,
        "index": "C",
        "solvedCount": 1785
      },
      {
        "contestId": 1648,
        "index": "B",
        "solvedCount": 2727
      },
      {
        "contestId": 1648,
        "index": "A",
        "solvedCount": 4092
      },
      {
        "contestId": 1647,
        "index": "F",
        "solvedCount": 322
      },
      {
        "contestId": 1647,
        "index": "E",
        "solvedCount": 854
      },
      {
        "contestId": 1647,
        "index": "D",
        "solvedCount": 4791
      },
      {
        "contestId": 1647,
        "index": "C",
        "solvedCount": 11729
      },
      {
        "contestId": 1647,
        "index": "B",
        "solvedCount": 14304
      },
      {
        "contestId": 1647,
        "index": "A",
        "solvedCount": 21539
      },
      {
        "contestId": 1646,
        "index": "F",
        "solvedCount": 340
      },
      {
        "contestId": 1646,
        "index": "E",
        "solvedCount": 2054
      },
      {
        "contestId": 1646,
        "index": "D",
        "solvedCount": 3131
      },
      {
        "contestId": 1646,
        "index": "C",
        "solvedCount": 11651
      },
      {
        "contestId": 1646,
        "index": "B",
        "solvedCount": 19629
      },
      {
        "contestId": 1646,
        "index": "A",
        "solvedCount": 22721
      },
      {
        "contestId": 1644,
        "index": "F",
        "solvedCount": 24
      },
      {
        "contestId": 1644,
        "index": "E",
        "solvedCount": 943
      },
      {
        "contestId": 1644,
        "index": "D",
        "solvedCount": 2202
      },
      {
        "contestId": 1644,
        "index": "C",
        "solvedCount": 4850
      },
      {
        "contestId": 1644,
        "index": "B",
        "solvedCount": 13462
      },
      {
        "contestId": 1644,
        "index": "A",
        "solvedCount": 16273
      },
      {
        "contestId": 1642,
        "index": "B",
        "solvedCount": 15606
      },
      {
        "contestId": 1642,
        "index": "A",
        "solvedCount": 15295
      },
      {
        "contestId": 1641,
        "index": "F",
        "solvedCount": 78
      },
      {
        "contestId": 1641,
        "index": "E",
        "solvedCount": 177
      },
      {
        "contestId": 1641,
        "index": "D",
        "solvedCount": 768
      },
      {
        "contestId": 1641,
        "index": "C",
        "solvedCount": 1517
      },
      {
        "contestId": 1641,
        "index": "B",
        "solvedCount": 1646
      },
      {
        "contestId": 1641,
        "index": "A",
        "solvedCount": 5332
      },
      {
        "contestId": 1639,
        "index": "K",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "J",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "I",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "H",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "G",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "F",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "E",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "D",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "C",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "B",
        "solvedCount": 0
      },
      {
        "contestId": 1639,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1638,
        "index": "F",
        "solvedCount": 162
      },
      {
        "contestId": 1638,
        "index": "E",
        "solvedCount": 1586
      },
      {
        "contestId": 1638,
        "index": "D",
        "solvedCount": 3805
      },
      {
        "contestId": 1638,
        "index": "C",
        "solvedCount": 13568
      },
      {
        "contestId": 1638,
        "index": "B",
        "solvedCount": 18805
      },
      {
        "contestId": 1638,
        "index": "A",
        "solvedCount": 20691
      },
      {
        "contestId": 1637,
        "index": "H",
        "solvedCount": 257
      },
      {
        "contestId": 1637,
        "index": "G",
        "solvedCount": 390
      },
      {
        "contestId": 1637,
        "index": "F",
        "solvedCount": 1517
      },
      {
        "contestId": 1637,
        "index": "E",
        "solvedCount": 3021
      },
      {
        "contestId": 1637,
        "index": "D",
        "solvedCount": 6739
      },
      {
        "contestId": 1637,
        "index": "C",
        "solvedCount": 16353
      },
      {
        "contestId": 1637,
        "index": "B",
        "solvedCount": 14370
      },
      {
        "contestId": 1637,
        "index": "A",
        "solvedCount": 21528
      },
      {
        "contestId": 1635,
        "index": "F",
        "solvedCount": 831
      },
      {
        "contestId": 1635,
        "index": "E",
        "solvedCount": 1886
      },
      {
        "contestId": 1635,
        "index": "D",
        "solvedCount": 5441
      },
      {
        "contestId": 1635,
        "index": "C",
        "solvedCount": 15003
      },
      {
        "contestId": 1635,
        "index": "B",
        "solvedCount": 17396
      },
      {
        "contestId": 1635,
        "index": "A",
        "solvedCount": 20204
      },
      {
        "contestId": 1634,
        "index": "F",
        "solvedCount": 1297
      },
      {
        "contestId": 1634,
        "index": "E",
        "solvedCount": 1422
      },
      {
        "contestId": 1634,
        "index": "D",
        "solvedCount": 3971
      },
      {
        "contestId": 1634,
        "index": "C",
        "solvedCount": 17286
      },
      {
        "contestId": 1634,
        "index": "B",
        "solvedCount": 14476
      },
      {
        "contestId": 1634,
        "index": "A",
        "solvedCount": 22952
      },
      {
        "contestId": 1633,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 1633,
        "index": "E",
        "solvedCount": 235
      },
      {
        "contestId": 1633,
        "index": "D",
        "solvedCount": 2773
      },
      {
        "contestId": 1633,
        "index": "C",
        "solvedCount": 7690
      },
      {
        "contestId": 1633,
        "index": "B",
        "solvedCount": 14755
      },
      {
        "contestId": 1633,
        "index": "A",
        "solvedCount": 15955
      },
      {
        "contestId": 1632,
        "index": "E2",
        "solvedCount": 811
      },
      {
        "contestId": 1632,
        "index": "E1",
        "solvedCount": 1004
      },
      {
        "contestId": 1632,
        "index": "D",
        "solvedCount": 4085
      },
      {
        "contestId": 1632,
        "index": "C",
        "solvedCount": 11278
      },
      {
        "contestId": 1632,
        "index": "B",
        "solvedCount": 19100
      },
      {
        "contestId": 1632,
        "index": "A",
        "solvedCount": 26997
      },
      {
        "contestId": 1631,
        "index": "B",
        "solvedCount": 18094
      },
      {
        "contestId": 1631,
        "index": "A",
        "solvedCount": 26849
      },
      {
        "contestId": 1630,
        "index": "F",
        "solvedCount": 346
      },
      {
        "contestId": 1630,
        "index": "E",
        "solvedCount": 353
      },
      {
        "contestId": 1630,
        "index": "D",
        "solvedCount": 1150
      },
      {
        "contestId": 1630,
        "index": "C",
        "solvedCount": 1647
      },
      {
        "contestId": 1630,
        "index": "B",
        "solvedCount": 2535
      },
      {
        "contestId": 1630,
        "index": "A",
        "solvedCount": 4361
      },
      {
        "contestId": 1629,
        "index": "B",
        "solvedCount": 21984
      },
      {
        "contestId": 1629,
        "index": "A",
        "solvedCount": 26527
      },
      {
        "contestId": 1628,
        "index": "F",
        "solvedCount": 72
      },
      {
        "contestId": 1628,
        "index": "E",
        "solvedCount": 653
      },
      {
        "contestId": 1628,
        "index": "D2",
        "solvedCount": 1353
      },
      {
        "contestId": 1628,
        "index": "D1",
        "solvedCount": 1953
      },
      {
        "contestId": 1628,
        "index": "C",
        "solvedCount": 1517
      },
      {
        "contestId": 1628,
        "index": "B",
        "solvedCount": 3531
      },
      {
        "contestId": 1628,
        "index": "A",
        "solvedCount": 4509
      },
      {
        "contestId": 1627,
        "index": "F",
        "solvedCount": 511
      },
      {
        "contestId": 1627,
        "index": "E",
        "solvedCount": 1975
      },
      {
        "contestId": 1627,
        "index": "D",
        "solvedCount": 7091
      },
      {
        "contestId": 1627,
        "index": "C",
        "solvedCount": 12911
      },
      {
        "contestId": 1627,
        "index": "B",
        "solvedCount": 15444
      },
      {
        "contestId": 1627,
        "index": "A",
        "solvedCount": 22959
      },
      {
        "contestId": 1626,
        "index": "F",
        "solvedCount": 24
      },
      {
        "contestId": 1626,
        "index": "E",
        "solvedCount": 104
      },
      {
        "contestId": 1626,
        "index": "D",
        "solvedCount": 551
      },
      {
        "contestId": 1626,
        "index": "C",
        "solvedCount": 2806
      },
      {
        "contestId": 1626,
        "index": "B",
        "solvedCount": 9685
      },
      {
        "contestId": 1626,
        "index": "A",
        "solvedCount": 16159
      },
      {
        "contestId": 1625,
        "index": "E2",
        "solvedCount": 488
      },
      {
        "contestId": 1625,
        "index": "E1",
        "solvedCount": 882
      },
      {
        "contestId": 1625,
        "index": "D",
        "solvedCount": 1806
      },
      {
        "contestId": 1625,
        "index": "C",
        "solvedCount": 8791
      },
      {
        "contestId": 1625,
        "index": "B",
        "solvedCount": 15322
      },
      {
        "contestId": 1625,
        "index": "A",
        "solvedCount": 16439
      },
      {
        "contestId": 1624,
        "index": "G",
        "solvedCount": 963
      },
      {
        "contestId": 1624,
        "index": "F",
        "solvedCount": 683
      },
      {
        "contestId": 1624,
        "index": "E",
        "solvedCount": 837
      },
      {
        "contestId": 1624,
        "index": "D",
        "solvedCount": 5380
      },
      {
        "contestId": 1624,
        "index": "C",
        "solvedCount": 10496
      },
      {
        "contestId": 1624,
        "index": "B",
        "solvedCount": 15246
      },
      {
        "contestId": 1624,
        "index": "A",
        "solvedCount": 23926
      },
      {
        "contestId": 1623,
        "index": "E",
        "solvedCount": 954
      },
      {
        "contestId": 1623,
        "index": "D",
        "solvedCount": 1278
      },
      {
        "contestId": 1623,
        "index": "C",
        "solvedCount": 10014
      },
      {
        "contestId": 1623,
        "index": "B",
        "solvedCount": 13481
      },
      {
        "contestId": 1623,
        "index": "A",
        "solvedCount": 19354
      },
      {
        "contestId": 1622,
        "index": "F",
        "solvedCount": 27
      },
      {
        "contestId": 1622,
        "index": "E",
        "solvedCount": 380
      },
      {
        "contestId": 1622,
        "index": "D",
        "solvedCount": 940
      },
      {
        "contestId": 1622,
        "index": "C",
        "solvedCount": 3416
      },
      {
        "contestId": 1622,
        "index": "B",
        "solvedCount": 11009
      },
      {
        "contestId": 1622,
        "index": "A",
        "solvedCount": 16052
      },
      {
        "contestId": 1621,
        "index": "I",
        "solvedCount": 93
      },
      {
        "contestId": 1621,
        "index": "H",
        "solvedCount": 136
      },
      {
        "contestId": 1621,
        "index": "G",
        "solvedCount": 529
      },
      {
        "contestId": 1621,
        "index": "F",
        "solvedCount": 492
      },
      {
        "contestId": 1621,
        "index": "E",
        "solvedCount": 1633
      },
      {
        "contestId": 1621,
        "index": "D",
        "solvedCount": 3736
      },
      {
        "contestId": 1621,
        "index": "C",
        "solvedCount": 6392
      },
      {
        "contestId": 1621,
        "index": "B",
        "solvedCount": 12312
      },
      {
        "contestId": 1621,
        "index": "A",
        "solvedCount": 22957
      },
      {
        "contestId": 1620,
        "index": "G",
        "solvedCount": 125
      },
      {
        "contestId": 1620,
        "index": "F",
        "solvedCount": 30
      },
      {
        "contestId": 1620,
        "index": "E",
        "solvedCount": 1367
      },
      {
        "contestId": 1620,
        "index": "D",
        "solvedCount": 835
      },
      {
        "contestId": 1620,
        "index": "C",
        "solvedCount": 1719
      },
      {
        "contestId": 1620,
        "index": "B",
        "solvedCount": 9011
      },
      {
        "contestId": 1620,
        "index": "A",
        "solvedCount": 10602
      },
      {
        "contestId": 1619,
        "index": "H",
        "solvedCount": 93
      },
      {
        "contestId": 1619,
        "index": "G",
        "solvedCount": 311
      },
      {
        "contestId": 1619,
        "index": "F",
        "solvedCount": 452
      },
      {
        "contestId": 1619,
        "index": "E",
        "solvedCount": 1914
      },
      {
        "contestId": 1619,
        "index": "D",
        "solvedCount": 1495
      },
      {
        "contestId": 1619,
        "index": "C",
        "solvedCount": 7360
      },
      {
        "contestId": 1619,
        "index": "B",
        "solvedCount": 14525
      },
      {
        "contestId": 1619,
        "index": "A",
        "solvedCount": 18494
      },
      {
        "contestId": 1618,
        "index": "G",
        "solvedCount": 181
      },
      {
        "contestId": 1618,
        "index": "F",
        "solvedCount": 604
      },
      {
        "contestId": 1618,
        "index": "E",
        "solvedCount": 1821
      },
      {
        "contestId": 1618,
        "index": "D",
        "solvedCount": 5392
      },
      {
        "contestId": 1618,
        "index": "C",
        "solvedCount": 8489
      },
      {
        "contestId": 1618,
        "index": "B",
        "solvedCount": 12834
      },
      {
        "contestId": 1618,
        "index": "A",
        "solvedCount": 17139
      },
      {
        "contestId": 1617,
        "index": "E",
        "solvedCount": 712
      },
      {
        "contestId": 1617,
        "index": "D2",
        "solvedCount": 1547
      },
      {
        "contestId": 1617,
        "index": "D1",
        "solvedCount": 4271
      },
      {
        "contestId": 1617,
        "index": "C",
        "solvedCount": 13362
      },
      {
        "contestId": 1617,
        "index": "B",
        "solvedCount": 20025
      },
      {
        "contestId": 1617,
        "index": "A",
        "solvedCount": 15651
      },
      {
        "contestId": 1616,
        "index": "H",
        "solvedCount": 613
      },
      {
        "contestId": 1616,
        "index": "G",
        "solvedCount": 215
      },
      {
        "contestId": 1616,
        "index": "F",
        "solvedCount": 515
      },
      {
        "contestId": 1616,
        "index": "E",
        "solvedCount": 2258
      },
      {
        "contestId": 1616,
        "index": "D",
        "solvedCount": 4310
      },
      {
        "contestId": 1616,
        "index": "C",
        "solvedCount": 11298
      },
      {
        "contestId": 1616,
        "index": "B",
        "solvedCount": 17877
      },
      {
        "contestId": 1616,
        "index": "A",
        "solvedCount": 21646
      },
      {
        "contestId": 1615,
        "index": "H",
        "solvedCount": 248
      },
      {
        "contestId": 1615,
        "index": "G",
        "solvedCount": 133
      },
      {
        "contestId": 1615,
        "index": "F",
        "solvedCount": 612
      },
      {
        "contestId": 1615,
        "index": "E",
        "solvedCount": 1284
      },
      {
        "contestId": 1615,
        "index": "D",
        "solvedCount": 1694
      },
      {
        "contestId": 1615,
        "index": "C",
        "solvedCount": 7521
      },
      {
        "contestId": 1615,
        "index": "B",
        "solvedCount": 13821
      },
      {
        "contestId": 1615,
        "index": "A",
        "solvedCount": 19604
      },
      {
        "contestId": 1614,
        "index": "E",
        "solvedCount": 718
      },
      {
        "contestId": 1614,
        "index": "D2",
        "solvedCount": 1963
      },
      {
        "contestId": 1614,
        "index": "D1",
        "solvedCount": 3286
      },
      {
        "contestId": 1614,
        "index": "C",
        "solvedCount": 9235
      },
      {
        "contestId": 1614,
        "index": "B",
        "solvedCount": 16564
      },
      {
        "contestId": 1614,
        "index": "A",
        "solvedCount": 22041
      },
      {
        "contestId": 1613,
        "index": "F",
        "solvedCount": 80
      },
      {
        "contestId": 1613,
        "index": "E",
        "solvedCount": 1045
      },
      {
        "contestId": 1613,
        "index": "D",
        "solvedCount": 971
      },
      {
        "contestId": 1613,
        "index": "C",
        "solvedCount": 6701
      },
      {
        "contestId": 1613,
        "index": "B",
        "solvedCount": 8757
      },
      {
        "contestId": 1613,
        "index": "A",
        "solvedCount": 10011
      },
      {
        "contestId": 1612,
        "index": "G",
        "solvedCount": 98
      },
      {
        "contestId": 1612,
        "index": "F",
        "solvedCount": 42
      },
      {
        "contestId": 1612,
        "index": "E",
        "solvedCount": 539
      },
      {
        "contestId": 1612,
        "index": "D",
        "solvedCount": 2149
      },
      {
        "contestId": 1612,
        "index": "C",
        "solvedCount": 4439
      },
      {
        "contestId": 1612,
        "index": "B",
        "solvedCount": 7173
      },
      {
        "contestId": 1612,
        "index": "A",
        "solvedCount": 9117
      },
      {
        "contestId": 1611,
        "index": "G",
        "solvedCount": 70
      },
      {
        "contestId": 1611,
        "index": "F",
        "solvedCount": 1314
      },
      {
        "contestId": 1611,
        "index": "E2",
        "solvedCount": 624
      },
      {
        "contestId": 1611,
        "index": "E1",
        "solvedCount": 1703
      },
      {
        "contestId": 1611,
        "index": "D",
        "solvedCount": 2968
      },
      {
        "contestId": 1611,
        "index": "C",
        "solvedCount": 8536
      },
      {
        "contestId": 1611,
        "index": "B",
        "solvedCount": 13002
      },
      {
        "contestId": 1611,
        "index": "A",
        "solvedCount": 16366
      },
      {
        "contestId": 1610,
        "index": "I",
        "solvedCount": 235
      },
      {
        "contestId": 1610,
        "index": "H",
        "solvedCount": 228
      },
      {
        "contestId": 1610,
        "index": "G",
        "solvedCount": 187
      },
      {
        "contestId": 1610,
        "index": "F",
        "solvedCount": 415
      },
      {
        "contestId": 1610,
        "index": "E",
        "solvedCount": 1524
      },
      {
        "contestId": 1610,
        "index": "D",
        "solvedCount": 2410
      },
      {
        "contestId": 1610,
        "index": "C",
        "solvedCount": 9010
      },
      {
        "contestId": 1610,
        "index": "B",
        "solvedCount": 13406
      },
      {
        "contestId": 1610,
        "index": "A",
        "solvedCount": 15043
      },
      {
        "contestId": 1609,
        "index": "H",
        "solvedCount": 82
      },
      {
        "contestId": 1609,
        "index": "G",
        "solvedCount": 329
      },
      {
        "contestId": 1609,
        "index": "F",
        "solvedCount": 615
      },
      {
        "contestId": 1609,
        "index": "E",
        "solvedCount": 1659
      },
      {
        "contestId": 1609,
        "index": "D",
        "solvedCount": 6212
      },
      {
        "contestId": 1609,
        "index": "C",
        "solvedCount": 8908
      },
      {
        "contestId": 1609,
        "index": "B",
        "solvedCount": 11096
      },
      {
        "contestId": 1609,
        "index": "A",
        "solvedCount": 15191
      },
      {
        "contestId": 1608,
        "index": "G",
        "solvedCount": 115
      },
      {
        "contestId": 1608,
        "index": "F",
        "solvedCount": 339
      },
      {
        "contestId": 1608,
        "index": "E",
        "solvedCount": 397
      },
      {
        "contestId": 1608,
        "index": "D",
        "solvedCount": 1254
      },
      {
        "contestId": 1608,
        "index": "C",
        "solvedCount": 5911
      },
      {
        "contestId": 1608,
        "index": "B",
        "solvedCount": 10847
      },
      {
        "contestId": 1608,
        "index": "A",
        "solvedCount": 17619
      },
      {
        "contestId": 1607,
        "index": "H",
        "solvedCount": 147
      },
      {
        "contestId": 1607,
        "index": "G",
        "solvedCount": 226
      },
      {
        "contestId": 1607,
        "index": "F",
        "solvedCount": 225
      },
      {
        "contestId": 1607,
        "index": "E",
        "solvedCount": 2557
      },
      {
        "contestId": 1607,
        "index": "D",
        "solvedCount": 4996
      },
      {
        "contestId": 1607,
        "index": "C",
        "solvedCount": 9754
      },
      {
        "contestId": 1607,
        "index": "B",
        "solvedCount": 11349
      },
      {
        "contestId": 1607,
        "index": "A",
        "solvedCount": 17246
      },
      {
        "contestId": 1606,
        "index": "F",
        "solvedCount": 32
      },
      {
        "contestId": 1606,
        "index": "E",
        "solvedCount": 708
      },
      {
        "contestId": 1606,
        "index": "D",
        "solvedCount": 277
      },
      {
        "contestId": 1606,
        "index": "C",
        "solvedCount": 4727
      },
      {
        "contestId": 1606,
        "index": "B",
        "solvedCount": 7462
      },
      {
        "contestId": 1606,
        "index": "A",
        "solvedCount": 9320
      },
      {
        "contestId": 1605,
        "index": "F",
        "solvedCount": 242
      },
      {
        "contestId": 1605,
        "index": "E",
        "solvedCount": 910
      },
      {
        "contestId": 1605,
        "index": "D",
        "solvedCount": 2606
      },
      {
        "contestId": 1605,
        "index": "C",
        "solvedCount": 14816
      },
      {
        "contestId": 1605,
        "index": "B",
        "solvedCount": 16479
      },
      {
        "contestId": 1605,
        "index": "A",
        "solvedCount": 19652
      },
      {
        "contestId": 1604,
        "index": "B",
        "solvedCount": 14625
      },
      {
        "contestId": 1604,
        "index": "A",
        "solvedCount": 19796
      },
      {
        "contestId": 1603,
        "index": "F",
        "solvedCount": 160
      },
      {
        "contestId": 1603,
        "index": "E",
        "solvedCount": 223
      },
      {
        "contestId": 1603,
        "index": "D",
        "solvedCount": 430
      },
      {
        "contestId": 1603,
        "index": "C",
        "solvedCount": 1409
      },
      {
        "contestId": 1603,
        "index": "B",
        "solvedCount": 5256
      },
      {
        "contestId": 1603,
        "index": "A",
        "solvedCount": 5623
      },
      {
        "contestId": 1602,
        "index": "B",
        "solvedCount": 13134
      },
      {
        "contestId": 1602,
        "index": "A",
        "solvedCount": 17877
      },
      {
        "contestId": 1601,
        "index": "F",
        "solvedCount": 150
      },
      {
        "contestId": 1601,
        "index": "E",
        "solvedCount": 392
      },
      {
        "contestId": 1601,
        "index": "D",
        "solvedCount": 982
      },
      {
        "contestId": 1601,
        "index": "C",
        "solvedCount": 1352
      },
      {
        "contestId": 1601,
        "index": "B",
        "solvedCount": 2287
      },
      {
        "contestId": 1601,
        "index": "A",
        "solvedCount": 4278
      },
      {
        "contestId": 1600,
        "index": "J",
        "solvedCount": 227
      },
      {
        "contestId": 1600,
        "index": "F",
        "solvedCount": 27
      },
      {
        "contestId": 1600,
        "index": "E",
        "solvedCount": 119
      },
      {
        "contestId": 1599,
        "index": "J",
        "solvedCount": 41
      },
      {
        "contestId": 1599,
        "index": "I",
        "solvedCount": 12
      },
      {
        "contestId": 1599,
        "index": "H",
        "solvedCount": 162
      },
      {
        "contestId": 1599,
        "index": "G",
        "solvedCount": 79
      },
      {
        "contestId": 1599,
        "index": "F",
        "solvedCount": 38
      },
      {
        "contestId": 1599,
        "index": "E",
        "solvedCount": 4
      },
      {
        "contestId": 1599,
        "index": "D",
        "solvedCount": 4
      },
      {
        "contestId": 1599,
        "index": "C",
        "solvedCount": 195
      },
      {
        "contestId": 1599,
        "index": "B",
        "solvedCount": 10
      },
      {
        "contestId": 1599,
        "index": "A",
        "solvedCount": 63
      },
      {
        "contestId": 1598,
        "index": "G",
        "solvedCount": 5
      },
      {
        "contestId": 1598,
        "index": "F",
        "solvedCount": 192
      },
      {
        "contestId": 1598,
        "index": "E",
        "solvedCount": 539
      },
      {
        "contestId": 1598,
        "index": "D",
        "solvedCount": 1950
      },
      {
        "contestId": 1598,
        "index": "C",
        "solvedCount": 5228
      },
      {
        "contestId": 1598,
        "index": "B",
        "solvedCount": 6897
      },
      {
        "contestId": 1598,
        "index": "A",
        "solvedCount": 10134
      },
      {
        "contestId": 1594,
        "index": "F",
        "solvedCount": 1158
      },
      {
        "contestId": 1594,
        "index": "E2",
        "solvedCount": 1356
      },
      {
        "contestId": 1594,
        "index": "E1",
        "solvedCount": 10238
      },
      {
        "contestId": 1594,
        "index": "D",
        "solvedCount": 6475
      },
      {
        "contestId": 1594,
        "index": "C",
        "solvedCount": 15858
      },
      {
        "contestId": 1594,
        "index": "B",
        "solvedCount": 16821
      },
      {
        "contestId": 1594,
        "index": "A",
        "solvedCount": 21750
      },
      {
        "contestId": 1593,
        "index": "G",
        "solvedCount": 217
      },
      {
        "contestId": 1593,
        "index": "F",
        "solvedCount": 367
      },
      {
        "contestId": 1593,
        "index": "E",
        "solvedCount": 2432
      },
      {
        "contestId": 1593,
        "index": "D2",
        "solvedCount": 883
      },
      {
        "contestId": 1593,
        "index": "D1",
        "solvedCount": 7520
      },
      {
        "contestId": 1593,
        "index": "C",
        "solvedCount": 9515
      },
      {
        "contestId": 1593,
        "index": "B",
        "solvedCount": 10942
      },
      {
        "contestId": 1593,
        "index": "A",
        "solvedCount": 15680
      },
      {
        "contestId": 1592,
        "index": "F2",
        "solvedCount": 424
      },
      {
        "contestId": 1592,
        "index": "F1",
        "solvedCount": 632
      },
      {
        "contestId": 1592,
        "index": "E",
        "solvedCount": 1423
      },
      {
        "contestId": 1592,
        "index": "D",
        "solvedCount": 2000
      },
      {
        "contestId": 1592,
        "index": "C",
        "solvedCount": 6837
      },
      {
        "contestId": 1592,
        "index": "B",
        "solvedCount": 14586
      },
      {
        "contestId": 1592,
        "index": "A",
        "solvedCount": 19450
      },
      {
        "contestId": 1588,
        "index": "F",
        "solvedCount": 212
      },
      {
        "contestId": 1586,
        "index": "I",
        "solvedCount": 104
      },
      {
        "contestId": 1585,
        "index": "G",
        "solvedCount": 121
      },
      {
        "contestId": 1585,
        "index": "F",
        "solvedCount": 292
      },
      {
        "contestId": 1585,
        "index": "E",
        "solvedCount": 176
      },
      {
        "contestId": 1585,
        "index": "D",
        "solvedCount": 684
      },
      {
        "contestId": 1585,
        "index": "C",
        "solvedCount": 3011
      },
      {
        "contestId": 1585,
        "index": "B",
        "solvedCount": 3280
      },
      {
        "contestId": 1585,
        "index": "A",
        "solvedCount": 4046
      },
      {
        "contestId": 1584,
        "index": "G",
        "solvedCount": 75
      },
      {
        "contestId": 1584,
        "index": "F",
        "solvedCount": 274
      },
      {
        "contestId": 1584,
        "index": "E",
        "solvedCount": 298
      },
      {
        "contestId": 1584,
        "index": "D",
        "solvedCount": 774
      },
      {
        "contestId": 1584,
        "index": "C",
        "solvedCount": 5186
      },
      {
        "contestId": 1584,
        "index": "B",
        "solvedCount": 4515
      },
      {
        "contestId": 1584,
        "index": "A",
        "solvedCount": 4430
      },
      {
        "contestId": 1583,
        "index": "H",
        "solvedCount": 122
      },
      {
        "contestId": 1583,
        "index": "G",
        "solvedCount": 158
      },
      {
        "contestId": 1583,
        "index": "F",
        "solvedCount": 402
      },
      {
        "contestId": 1583,
        "index": "E",
        "solvedCount": 528
      },
      {
        "contestId": 1583,
        "index": "D",
        "solvedCount": 1495
      },
      {
        "contestId": 1583,
        "index": "C",
        "solvedCount": 1870
      },
      {
        "contestId": 1583,
        "index": "B",
        "solvedCount": 3668
      },
      {
        "contestId": 1583,
        "index": "A",
        "solvedCount": 3415
      },
      {
        "contestId": 1582,
        "index": "G",
        "solvedCount": 490
      },
      {
        "contestId": 1582,
        "index": "F2",
        "solvedCount": 1430
      },
      {
        "contestId": 1582,
        "index": "F1",
        "solvedCount": 4540
      },
      {
        "contestId": 1582,
        "index": "E",
        "solvedCount": 3243
      },
      {
        "contestId": 1582,
        "index": "D",
        "solvedCount": 9250
      },
      {
        "contestId": 1582,
        "index": "C",
        "solvedCount": 12787
      },
      {
        "contestId": 1582,
        "index": "B",
        "solvedCount": 16644
      },
      {
        "contestId": 1582,
        "index": "A",
        "solvedCount": 17316
      },
      {
        "contestId": 1581,
        "index": "B",
        "solvedCount": 10212
      },
      {
        "contestId": 1581,
        "index": "A",
        "solvedCount": 12649
      },
      {
        "contestId": 1580,
        "index": "F",
        "solvedCount": 118
      },
      {
        "contestId": 1580,
        "index": "E",
        "solvedCount": 55
      },
      {
        "contestId": 1580,
        "index": "D",
        "solvedCount": 608
      },
      {
        "contestId": 1580,
        "index": "C",
        "solvedCount": 1290
      },
      {
        "contestId": 1580,
        "index": "B",
        "solvedCount": 743
      },
      {
        "contestId": 1580,
        "index": "A",
        "solvedCount": 1771
      },
      {
        "contestId": 1579,
        "index": "G",
        "solvedCount": 229
      },
      {
        "contestId": 1579,
        "index": "F",
        "solvedCount": 1028
      },
      {
        "contestId": 1579,
        "index": "E2",
        "solvedCount": 1685
      },
      {
        "contestId": 1579,
        "index": "E1",
        "solvedCount": 11054
      },
      {
        "contestId": 1579,
        "index": "D",
        "solvedCount": 4612
      },
      {
        "contestId": 1579,
        "index": "C",
        "solvedCount": 3647
      },
      {
        "contestId": 1579,
        "index": "B",
        "solvedCount": 9832
      },
      {
        "contestId": 1579,
        "index": "A",
        "solvedCount": 20248
      },
      {
        "contestId": 1578,
        "index": "M",
        "solvedCount": 95
      },
      {
        "contestId": 1578,
        "index": "L",
        "solvedCount": 192
      },
      {
        "contestId": 1578,
        "index": "K",
        "solvedCount": 67
      },
      {
        "contestId": 1578,
        "index": "J",
        "solvedCount": 19
      },
      {
        "contestId": 1578,
        "index": "I",
        "solvedCount": 7
      },
      {
        "contestId": 1578,
        "index": "H",
        "solvedCount": 568
      },
      {
        "contestId": 1578,
        "index": "G",
        "solvedCount": 3
      },
      {
        "contestId": 1578,
        "index": "F",
        "solvedCount": 34
      },
      {
        "contestId": 1578,
        "index": "E",
        "solvedCount": 825
      },
      {
        "contestId": 1578,
        "index": "D",
        "solvedCount": 9
      },
      {
        "contestId": 1578,
        "index": "C",
        "solvedCount": 9
      },
      {
        "contestId": 1578,
        "index": "B",
        "solvedCount": 58
      },
      {
        "contestId": 1578,
        "index": "A",
        "solvedCount": 84
      },
      {
        "contestId": 1576,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1575,
        "index": "M",
        "solvedCount": 18
      },
      {
        "contestId": 1575,
        "index": "L",
        "solvedCount": 169
      },
      {
        "contestId": 1575,
        "index": "K",
        "solvedCount": 129
      },
      {
        "contestId": 1575,
        "index": "J",
        "solvedCount": 423
      },
      {
        "contestId": 1575,
        "index": "I",
        "solvedCount": 166
      },
      {
        "contestId": 1575,
        "index": "H",
        "solvedCount": 131
      },
      {
        "contestId": 1575,
        "index": "G",
        "solvedCount": 107
      },
      {
        "contestId": 1575,
        "index": "F",
        "solvedCount": 8
      },
      {
        "contestId": 1575,
        "index": "E",
        "solvedCount": 51
      },
      {
        "contestId": 1575,
        "index": "D",
        "solvedCount": 345
      },
      {
        "contestId": 1575,
        "index": "C",
        "solvedCount": 22
      },
      {
        "contestId": 1575,
        "index": "B",
        "solvedCount": 97
      },
      {
        "contestId": 1575,
        "index": "A",
        "solvedCount": 584
      },
      {
        "contestId": 1574,
        "index": "F",
        "solvedCount": 42
      },
      {
        "contestId": 1574,
        "index": "E",
        "solvedCount": 158
      },
      {
        "contestId": 1574,
        "index": "D",
        "solvedCount": 957
      },
      {
        "contestId": 1574,
        "index": "C",
        "solvedCount": 5767
      },
      {
        "contestId": 1574,
        "index": "B",
        "solvedCount": 7753
      },
      {
        "contestId": 1574,
        "index": "A",
        "solvedCount": 12697
      },
      {
        "contestId": 1573,
        "index": "B",
        "solvedCount": 13124
      },
      {
        "contestId": 1573,
        "index": "A",
        "solvedCount": 20209
      },
      {
        "contestId": 1572,
        "index": "F",
        "solvedCount": 172
      },
      {
        "contestId": 1572,
        "index": "E",
        "solvedCount": 222
      },
      {
        "contestId": 1572,
        "index": "D",
        "solvedCount": 289
      },
      {
        "contestId": 1572,
        "index": "C",
        "solvedCount": 965
      },
      {
        "contestId": 1572,
        "index": "B",
        "solvedCount": 1092
      },
      {
        "contestId": 1572,
        "index": "A",
        "solvedCount": 3484
      },
      {
        "contestId": 1571,
        "index": "J",
        "solvedCount": 2
      },
      {
        "contestId": 1571,
        "index": "I",
        "solvedCount": 3
      },
      {
        "contestId": 1571,
        "index": "H",
        "solvedCount": 13
      },
      {
        "contestId": 1571,
        "index": "G",
        "solvedCount": 33
      },
      {
        "contestId": 1571,
        "index": "F",
        "solvedCount": 87
      },
      {
        "contestId": 1571,
        "index": "E",
        "solvedCount": 143
      },
      {
        "contestId": 1571,
        "index": "D",
        "solvedCount": 169
      },
      {
        "contestId": 1571,
        "index": "C",
        "solvedCount": 223
      },
      {
        "contestId": 1571,
        "index": "B",
        "solvedCount": 378
      },
      {
        "contestId": 1571,
        "index": "A",
        "solvedCount": 591
      },
      {
        "contestId": 1569,
        "index": "F",
        "solvedCount": 13
      },
      {
        "contestId": 1569,
        "index": "E",
        "solvedCount": 99
      },
      {
        "contestId": 1569,
        "index": "D",
        "solvedCount": 1419
      },
      {
        "contestId": 1569,
        "index": "C",
        "solvedCount": 3765
      },
      {
        "contestId": 1569,
        "index": "B",
        "solvedCount": 10152
      },
      {
        "contestId": 1569,
        "index": "A",
        "solvedCount": 14854
      },
      {
        "contestId": 1567,
        "index": "F",
        "solvedCount": 649
      },
      {
        "contestId": 1567,
        "index": "E",
        "solvedCount": 3190
      },
      {
        "contestId": 1567,
        "index": "D",
        "solvedCount": 4224
      },
      {
        "contestId": 1567,
        "index": "C",
        "solvedCount": 11254
      },
      {
        "contestId": 1567,
        "index": "B",
        "solvedCount": 19601
      },
      {
        "contestId": 1567,
        "index": "A",
        "solvedCount": 27169
      },
      {
        "contestId": 1566,
        "index": "H",
        "solvedCount": 98
      },
      {
        "contestId": 1566,
        "index": "G",
        "solvedCount": 295
      },
      {
        "contestId": 1566,
        "index": "F",
        "solvedCount": 849
      },
      {
        "contestId": 1566,
        "index": "E",
        "solvedCount": 3829
      },
      {
        "contestId": 1566,
        "index": "D2",
        "solvedCount": 7483
      },
      {
        "contestId": 1566,
        "index": "D1",
        "solvedCount": 13272
      },
      {
        "contestId": 1566,
        "index": "C",
        "solvedCount": 15975
      },
      {
        "contestId": 1566,
        "index": "B",
        "solvedCount": 18073
      },
      {
        "contestId": 1566,
        "index": "A",
        "solvedCount": 20348
      },
      {
        "contestId": 1562,
        "index": "F",
        "solvedCount": 297
      },
      {
        "contestId": 1562,
        "index": "E",
        "solvedCount": 1232
      },
      {
        "contestId": 1562,
        "index": "D2",
        "solvedCount": 1990
      },
      {
        "contestId": 1562,
        "index": "D1",
        "solvedCount": 5914
      },
      {
        "contestId": 1562,
        "index": "C",
        "solvedCount": 12115
      },
      {
        "contestId": 1562,
        "index": "B",
        "solvedCount": 18430
      },
      {
        "contestId": 1562,
        "index": "A",
        "solvedCount": 24472
      },
      {
        "contestId": 1561,
        "index": "D1",
        "solvedCount": 5151
      },
      {
        "contestId": 1561,
        "index": "C",
        "solvedCount": 12393
      },
      {
        "contestId": 1561,
        "index": "A",
        "solvedCount": 16150
      },
      {
        "contestId": 1560,
        "index": "F2",
        "solvedCount": 668
      },
      {
        "contestId": 1560,
        "index": "F1",
        "solvedCount": 1248
      },
      {
        "contestId": 1560,
        "index": "E",
        "solvedCount": 1685
      },
      {
        "contestId": 1560,
        "index": "D",
        "solvedCount": 5942
      },
      {
        "contestId": 1560,
        "index": "C",
        "solvedCount": 14683
      },
      {
        "contestId": 1560,
        "index": "B",
        "solvedCount": 17140
      },
      {
        "contestId": 1560,
        "index": "A",
        "solvedCount": 20665
      },
      {
        "contestId": 1559,
        "index": "E",
        "solvedCount": 2085
      },
      {
        "contestId": 1559,
        "index": "D2",
        "solvedCount": 2325
      },
      {
        "contestId": 1559,
        "index": "D1",
        "solvedCount": 12320
      },
      {
        "contestId": 1559,
        "index": "C",
        "solvedCount": 17963
      },
      {
        "contestId": 1559,
        "index": "B",
        "solvedCount": 20752
      },
      {
        "contestId": 1559,
        "index": "A",
        "solvedCount": 23531
      },
      {
        "contestId": 1558,
        "index": "F",
        "solvedCount": 228
      },
      {
        "contestId": 1558,
        "index": "E",
        "solvedCount": 350
      },
      {
        "contestId": 1558,
        "index": "D",
        "solvedCount": 802
      },
      {
        "contestId": 1558,
        "index": "C",
        "solvedCount": 2040
      },
      {
        "contestId": 1558,
        "index": "B",
        "solvedCount": 2181
      },
      {
        "contestId": 1558,
        "index": "A",
        "solvedCount": 3265
      },
      {
        "contestId": 1557,
        "index": "E",
        "solvedCount": 636
      },
      {
        "contestId": 1557,
        "index": "D",
        "solvedCount": 2341
      },
      {
        "contestId": 1557,
        "index": "C",
        "solvedCount": 7859
      },
      {
        "contestId": 1557,
        "index": "B",
        "solvedCount": 21517
      },
      {
        "contestId": 1557,
        "index": "A",
        "solvedCount": 26365
      },
      {
        "contestId": 1556,
        "index": "H",
        "solvedCount": 252
      },
      {
        "contestId": 1556,
        "index": "G",
        "solvedCount": 242
      },
      {
        "contestId": 1556,
        "index": "F",
        "solvedCount": 1057
      },
      {
        "contestId": 1556,
        "index": "E",
        "solvedCount": 2464
      },
      {
        "contestId": 1556,
        "index": "D",
        "solvedCount": 5709
      },
      {
        "contestId": 1556,
        "index": "C",
        "solvedCount": 5437
      },
      {
        "contestId": 1556,
        "index": "B",
        "solvedCount": 12036
      },
      {
        "contestId": 1556,
        "index": "A",
        "solvedCount": 17532
      },
      {
        "contestId": 1555,
        "index": "F",
        "solvedCount": 82
      },
      {
        "contestId": 1555,
        "index": "E",
        "solvedCount": 776
      },
      {
        "contestId": 1555,
        "index": "D",
        "solvedCount": 3158
      },
      {
        "contestId": 1555,
        "index": "C",
        "solvedCount": 7069
      },
      {
        "contestId": 1555,
        "index": "B",
        "solvedCount": 6072
      },
      {
        "contestId": 1555,
        "index": "A",
        "solvedCount": 10753
      },
      {
        "contestId": 1554,
        "index": "E",
        "solvedCount": 1077
      },
      {
        "contestId": 1554,
        "index": "D",
        "solvedCount": 8283
      },
      {
        "contestId": 1554,
        "index": "C",
        "solvedCount": 7888
      },
      {
        "contestId": 1554,
        "index": "B",
        "solvedCount": 11719
      },
      {
        "contestId": 1554,
        "index": "A",
        "solvedCount": 26453
      },
      {
        "contestId": 1553,
        "index": "I",
        "solvedCount": 153
      },
      {
        "contestId": 1553,
        "index": "H",
        "solvedCount": 583
      },
      {
        "contestId": 1553,
        "index": "G",
        "solvedCount": 856
      },
      {
        "contestId": 1553,
        "index": "F",
        "solvedCount": 1942
      },
      {
        "contestId": 1553,
        "index": "E",
        "solvedCount": 3029
      },
      {
        "contestId": 1553,
        "index": "D",
        "solvedCount": 12270
      },
      {
        "contestId": 1553,
        "index": "C",
        "solvedCount": 15969
      },
      {
        "contestId": 1553,
        "index": "B",
        "solvedCount": 12906
      },
      {
        "contestId": 1553,
        "index": "A",
        "solvedCount": 26896
      },
      {
        "contestId": 1552,
        "index": "I",
        "solvedCount": 111
      },
      {
        "contestId": 1552,
        "index": "H",
        "solvedCount": 240
      },
      {
        "contestId": 1552,
        "index": "G",
        "solvedCount": 402
      },
      {
        "contestId": 1552,
        "index": "F",
        "solvedCount": 2531
      },
      {
        "contestId": 1552,
        "index": "E",
        "solvedCount": 1649
      },
      {
        "contestId": 1552,
        "index": "D",
        "solvedCount": 6175
      },
      {
        "contestId": 1552,
        "index": "C",
        "solvedCount": 5520
      },
      {
        "contestId": 1552,
        "index": "B",
        "solvedCount": 13962
      },
      {
        "contestId": 1552,
        "index": "A",
        "solvedCount": 22043
      },
      {
        "contestId": 1551,
        "index": "F",
        "solvedCount": 207
      },
      {
        "contestId": 1551,
        "index": "E",
        "solvedCount": 527
      },
      {
        "contestId": 1551,
        "index": "D2",
        "solvedCount": 603
      },
      {
        "contestId": 1551,
        "index": "D1",
        "solvedCount": 1806
      },
      {
        "contestId": 1551,
        "index": "C",
        "solvedCount": 3937
      },
      {
        "contestId": 1551,
        "index": "B2",
        "solvedCount": 5385
      },
      {
        "contestId": 1551,
        "index": "B1",
        "solvedCount": 16777
      },
      {
        "contestId": 1551,
        "index": "A",
        "solvedCount": 20642
      },
      {
        "contestId": 1550,
        "index": "F",
        "solvedCount": 40
      },
      {
        "contestId": 1550,
        "index": "E",
        "solvedCount": 183
      },
      {
        "contestId": 1550,
        "index": "D",
        "solvedCount": 395
      },
      {
        "contestId": 1550,
        "index": "C",
        "solvedCount": 3246
      },
      {
        "contestId": 1550,
        "index": "B",
        "solvedCount": 10883
      },
      {
        "contestId": 1550,
        "index": "A",
        "solvedCount": 15130
      },
      {
        "contestId": 1549,
        "index": "B",
        "solvedCount": 22247
      },
      {
        "contestId": 1549,
        "index": "A",
        "solvedCount": 28158
      },
      {
        "contestId": 1548,
        "index": "E",
        "solvedCount": 183
      },
      {
        "contestId": 1548,
        "index": "D2",
        "solvedCount": 202
      },
      {
        "contestId": 1548,
        "index": "D1",
        "solvedCount": 1079
      },
      {
        "contestId": 1548,
        "index": "C",
        "solvedCount": 1160
      },
      {
        "contestId": 1548,
        "index": "B",
        "solvedCount": 3242
      },
      {
        "contestId": 1548,
        "index": "A",
        "solvedCount": 4378
      },
      {
        "contestId": 1547,
        "index": "G",
        "solvedCount": 489
      },
      {
        "contestId": 1547,
        "index": "F",
        "solvedCount": 1287
      },
      {
        "contestId": 1547,
        "index": "E",
        "solvedCount": 3905
      },
      {
        "contestId": 1547,
        "index": "D",
        "solvedCount": 7026
      },
      {
        "contestId": 1547,
        "index": "C",
        "solvedCount": 10835
      },
      {
        "contestId": 1547,
        "index": "B",
        "solvedCount": 14570
      },
      {
        "contestId": 1547,
        "index": "A",
        "solvedCount": 16806
      },
      {
        "contestId": 1546,
        "index": "B",
        "solvedCount": 12318
      },
      {
        "contestId": 1546,
        "index": "A",
        "solvedCount": 17775
      },
      {
        "contestId": 1545,
        "index": "F",
        "solvedCount": 77
      },
      {
        "contestId": 1545,
        "index": "E2",
        "solvedCount": 70
      },
      {
        "contestId": 1545,
        "index": "E1",
        "solvedCount": 63
      },
      {
        "contestId": 1545,
        "index": "D",
        "solvedCount": 335
      },
      {
        "contestId": 1545,
        "index": "C",
        "solvedCount": 431
      },
      {
        "contestId": 1545,
        "index": "B",
        "solvedCount": 2456
      },
      {
        "contestId": 1545,
        "index": "A",
        "solvedCount": 4427
      },
      {
        "contestId": 1543,
        "index": "E",
        "solvedCount": 367
      },
      {
        "contestId": 1543,
        "index": "D2",
        "solvedCount": 1860
      },
      {
        "contestId": 1543,
        "index": "D1",
        "solvedCount": 7285
      },
      {
        "contestId": 1543,
        "index": "C",
        "solvedCount": 4953
      },
      {
        "contestId": 1543,
        "index": "B",
        "solvedCount": 21448
      },
      {
        "contestId": 1543,
        "index": "A",
        "solvedCount": 23738
      },
      {
        "contestId": 1542,
        "index": "E2",
        "solvedCount": 698
      },
      {
        "contestId": 1542,
        "index": "E1",
        "solvedCount": 1074
      },
      {
        "contestId": 1542,
        "index": "D",
        "solvedCount": 2397
      },
      {
        "contestId": 1542,
        "index": "C",
        "solvedCount": 12316
      },
      {
        "contestId": 1542,
        "index": "B",
        "solvedCount": 19653
      },
      {
        "contestId": 1542,
        "index": "A",
        "solvedCount": 36117
      },
      {
        "contestId": 1541,
        "index": "B",
        "solvedCount": 23404
      },
      {
        "contestId": 1541,
        "index": "A",
        "solvedCount": 27342
      },
      {
        "contestId": 1540,
        "index": "E",
        "solvedCount": 73
      },
      {
        "contestId": 1540,
        "index": "D",
        "solvedCount": 224
      },
      {
        "contestId": 1540,
        "index": "C2",
        "solvedCount": 344
      },
      {
        "contestId": 1540,
        "index": "C1",
        "solvedCount": 481
      },
      {
        "contestId": 1540,
        "index": "B",
        "solvedCount": 1704
      },
      {
        "contestId": 1540,
        "index": "A",
        "solvedCount": 4286
      },
      {
        "contestId": 1539,
        "index": "F",
        "solvedCount": 747
      },
      {
        "contestId": 1539,
        "index": "E",
        "solvedCount": 825
      },
      {
        "contestId": 1539,
        "index": "D",
        "solvedCount": 10503
      },
      {
        "contestId": 1539,
        "index": "C",
        "solvedCount": 19072
      },
      {
        "contestId": 1539,
        "index": "B",
        "solvedCount": 21743
      },
      {
        "contestId": 1539,
        "index": "A",
        "solvedCount": 18563
      },
      {
        "contestId": 1538,
        "index": "G",
        "solvedCount": 726
      },
      {
        "contestId": 1538,
        "index": "F",
        "solvedCount": 4903
      },
      {
        "contestId": 1538,
        "index": "E",
        "solvedCount": 522
      },
      {
        "contestId": 1538,
        "index": "D",
        "solvedCount": 2800
      },
      {
        "contestId": 1538,
        "index": "C",
        "solvedCount": 7981
      },
      {
        "contestId": 1538,
        "index": "B",
        "solvedCount": 16730
      },
      {
        "contestId": 1538,
        "index": "A",
        "solvedCount": 17121
      },
      {
        "contestId": 1537,
        "index": "F",
        "solvedCount": 2179
      },
      {
        "contestId": 1537,
        "index": "E2",
        "solvedCount": 4509
      },
      {
        "contestId": 1537,
        "index": "E1",
        "solvedCount": 11216
      },
      {
        "contestId": 1537,
        "index": "D",
        "solvedCount": 10952
      },
      {
        "contestId": 1537,
        "index": "C",
        "solvedCount": 23469
      },
      {
        "contestId": 1537,
        "index": "B",
        "solvedCount": 25405
      },
      {
        "contestId": 1537,
        "index": "A",
        "solvedCount": 32141
      },
      {
        "contestId": 1536,
        "index": "F",
        "solvedCount": 831
      },
      {
        "contestId": 1536,
        "index": "E",
        "solvedCount": 2184
      },
      {
        "contestId": 1536,
        "index": "D",
        "solvedCount": 4317
      },
      {
        "contestId": 1536,
        "index": "C",
        "solvedCount": 12538
      },
      {
        "contestId": 1536,
        "index": "B",
        "solvedCount": 16758
      },
      {
        "contestId": 1536,
        "index": "A",
        "solvedCount": 19842
      },
      {
        "contestId": 1535,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 1535,
        "index": "E",
        "solvedCount": 575
      },
      {
        "contestId": 1535,
        "index": "D",
        "solvedCount": 2223
      },
      {
        "contestId": 1535,
        "index": "C",
        "solvedCount": 5505
      },
      {
        "contestId": 1535,
        "index": "B",
        "solvedCount": 14027
      },
      {
        "contestId": 1535,
        "index": "A",
        "solvedCount": 19256
      },
      {
        "contestId": 1534,
        "index": "H",
        "solvedCount": 134
      },
      {
        "contestId": 1534,
        "index": "G",
        "solvedCount": 397
      },
      {
        "contestId": 1534,
        "index": "F2",
        "solvedCount": 419
      },
      {
        "contestId": 1534,
        "index": "F1",
        "solvedCount": 1089
      },
      {
        "contestId": 1534,
        "index": "E",
        "solvedCount": 1687
      },
      {
        "contestId": 1534,
        "index": "D",
        "solvedCount": 5328
      },
      {
        "contestId": 1534,
        "index": "C",
        "solvedCount": 11585
      },
      {
        "contestId": 1534,
        "index": "B",
        "solvedCount": 11969
      },
      {
        "contestId": 1534,
        "index": "A",
        "solvedCount": 12322
      },
      {
        "contestId": 1533,
        "index": "J",
        "solvedCount": 3
      },
      {
        "contestId": 1533,
        "index": "I",
        "solvedCount": 9
      },
      {
        "contestId": 1533,
        "index": "H",
        "solvedCount": 30
      },
      {
        "contestId": 1533,
        "index": "G",
        "solvedCount": 29
      },
      {
        "contestId": 1533,
        "index": "F",
        "solvedCount": 107
      },
      {
        "contestId": 1533,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 1533,
        "index": "D",
        "solvedCount": 237
      },
      {
        "contestId": 1533,
        "index": "C",
        "solvedCount": 349
      },
      {
        "contestId": 1533,
        "index": "B",
        "solvedCount": 571
      },
      {
        "contestId": 1533,
        "index": "A",
        "solvedCount": 799
      },
      {
        "contestId": 1532,
        "index": "F",
        "solvedCount": 183
      },
      {
        "contestId": 1532,
        "index": "E",
        "solvedCount": 335
      },
      {
        "contestId": 1532,
        "index": "D",
        "solvedCount": 511
      },
      {
        "contestId": 1532,
        "index": "C",
        "solvedCount": 553
      },
      {
        "contestId": 1532,
        "index": "B",
        "solvedCount": 719
      },
      {
        "contestId": 1532,
        "index": "A",
        "solvedCount": 931
      },
      {
        "contestId": 1531,
        "index": "E3",
        "solvedCount": 230
      },
      {
        "contestId": 1531,
        "index": "E2",
        "solvedCount": 305
      },
      {
        "contestId": 1531,
        "index": "E1",
        "solvedCount": 328
      },
      {
        "contestId": 1531,
        "index": "D",
        "solvedCount": 302
      },
      {
        "contestId": 1531,
        "index": "C",
        "solvedCount": 564
      },
      {
        "contestId": 1531,
        "index": "B2",
        "solvedCount": 609
      },
      {
        "contestId": 1531,
        "index": "B1",
        "solvedCount": 855
      },
      {
        "contestId": 1531,
        "index": "A",
        "solvedCount": 961
      },
      {
        "contestId": 1530,
        "index": "H",
        "solvedCount": 94
      },
      {
        "contestId": 1530,
        "index": "G",
        "solvedCount": 97
      },
      {
        "contestId": 1530,
        "index": "F",
        "solvedCount": 609
      },
      {
        "contestId": 1530,
        "index": "E",
        "solvedCount": 2582
      },
      {
        "contestId": 1530,
        "index": "D",
        "solvedCount": 8263
      },
      {
        "contestId": 1530,
        "index": "C",
        "solvedCount": 13302
      },
      {
        "contestId": 1530,
        "index": "B",
        "solvedCount": 15161
      },
      {
        "contestId": 1530,
        "index": "A",
        "solvedCount": 19587
      },
      {
        "contestId": 1529,
        "index": "B",
        "solvedCount": 19587
      },
      {
        "contestId": 1529,
        "index": "A",
        "solvedCount": 28099
      },
      {
        "contestId": 1528,
        "index": "F",
        "solvedCount": 225
      },
      {
        "contestId": 1528,
        "index": "E",
        "solvedCount": 428
      },
      {
        "contestId": 1528,
        "index": "D",
        "solvedCount": 1112
      },
      {
        "contestId": 1528,
        "index": "C",
        "solvedCount": 1853
      },
      {
        "contestId": 1528,
        "index": "B",
        "solvedCount": 3917
      },
      {
        "contestId": 1528,
        "index": "A",
        "solvedCount": 5590
      },
      {
        "contestId": 1527,
        "index": "E",
        "solvedCount": 1760
      },
      {
        "contestId": 1527,
        "index": "D",
        "solvedCount": 1605
      },
      {
        "contestId": 1527,
        "index": "C",
        "solvedCount": 12070
      },
      {
        "contestId": 1527,
        "index": "B2",
        "solvedCount": 7026
      },
      {
        "contestId": 1527,
        "index": "B1",
        "solvedCount": 21850
      },
      {
        "contestId": 1527,
        "index": "A",
        "solvedCount": 29851
      },
      {
        "contestId": 1526,
        "index": "F",
        "solvedCount": 226
      },
      {
        "contestId": 1526,
        "index": "E",
        "solvedCount": 918
      },
      {
        "contestId": 1526,
        "index": "D",
        "solvedCount": 2243
      },
      {
        "contestId": 1526,
        "index": "C2",
        "solvedCount": 17703
      },
      {
        "contestId": 1526,
        "index": "C1",
        "solvedCount": 18275
      },
      {
        "contestId": 1526,
        "index": "B",
        "solvedCount": 24300
      },
      {
        "contestId": 1526,
        "index": "A",
        "solvedCount": 23053
      },
      {
        "contestId": 1525,
        "index": "F",
        "solvedCount": 21
      },
      {
        "contestId": 1525,
        "index": "E",
        "solvedCount": 351
      },
      {
        "contestId": 1525,
        "index": "D",
        "solvedCount": 1669
      },
      {
        "contestId": 1525,
        "index": "C",
        "solvedCount": 1094
      },
      {
        "contestId": 1525,
        "index": "B",
        "solvedCount": 10382
      },
      {
        "contestId": 1525,
        "index": "A",
        "solvedCount": 12844
      },
      {
        "contestId": 1523,
        "index": "H",
        "solvedCount": 174
      },
      {
        "contestId": 1523,
        "index": "G",
        "solvedCount": 353
      },
      {
        "contestId": 1523,
        "index": "F",
        "solvedCount": 326
      },
      {
        "contestId": 1523,
        "index": "E",
        "solvedCount": 1335
      },
      {
        "contestId": 1523,
        "index": "D",
        "solvedCount": 1956
      },
      {
        "contestId": 1523,
        "index": "C",
        "solvedCount": 8213
      },
      {
        "contestId": 1523,
        "index": "B",
        "solvedCount": 11453
      },
      {
        "contestId": 1523,
        "index": "A",
        "solvedCount": 13146
      },
      {
        "contestId": 1521,
        "index": "E",
        "solvedCount": 590
      },
      {
        "contestId": 1521,
        "index": "D",
        "solvedCount": 1600
      },
      {
        "contestId": 1521,
        "index": "C",
        "solvedCount": 4128
      },
      {
        "contestId": 1521,
        "index": "B",
        "solvedCount": 19137
      },
      {
        "contestId": 1521,
        "index": "A",
        "solvedCount": 31026
      },
      {
        "contestId": 1520,
        "index": "G",
        "solvedCount": 343
      },
      {
        "contestId": 1520,
        "index": "F2",
        "solvedCount": 464
      },
      {
        "contestId": 1520,
        "index": "F1",
        "solvedCount": 2821
      },
      {
        "contestId": 1520,
        "index": "E",
        "solvedCount": 4996
      },
      {
        "contestId": 1520,
        "index": "D",
        "solvedCount": 9089
      },
      {
        "contestId": 1520,
        "index": "C",
        "solvedCount": 12632
      },
      {
        "contestId": 1520,
        "index": "B",
        "solvedCount": 16234
      },
      {
        "contestId": 1520,
        "index": "A",
        "solvedCount": 21220
      },
      {
        "contestId": 1519,
        "index": "F",
        "solvedCount": 6
      },
      {
        "contestId": 1519,
        "index": "E",
        "solvedCount": 80
      },
      {
        "contestId": 1519,
        "index": "D",
        "solvedCount": 3265
      },
      {
        "contestId": 1519,
        "index": "C",
        "solvedCount": 4961
      },
      {
        "contestId": 1519,
        "index": "B",
        "solvedCount": 13435
      },
      {
        "contestId": 1519,
        "index": "A",
        "solvedCount": 14034
      },
      {
        "contestId": 1517,
        "index": "H",
        "solvedCount": 55
      },
      {
        "contestId": 1517,
        "index": "G",
        "solvedCount": 346
      },
      {
        "contestId": 1517,
        "index": "F",
        "solvedCount": 328
      },
      {
        "contestId": 1517,
        "index": "E",
        "solvedCount": 908
      },
      {
        "contestId": 1517,
        "index": "D",
        "solvedCount": 6787
      },
      {
        "contestId": 1517,
        "index": "C",
        "solvedCount": 12239
      },
      {
        "contestId": 1517,
        "index": "B",
        "solvedCount": 12597
      },
      {
        "contestId": 1517,
        "index": "A",
        "solvedCount": 23398
      },
      {
        "contestId": 1516,
        "index": "E",
        "solvedCount": 748
      },
      {
        "contestId": 1516,
        "index": "D",
        "solvedCount": 3598
      },
      {
        "contestId": 1516,
        "index": "C",
        "solvedCount": 10733
      },
      {
        "contestId": 1516,
        "index": "B",
        "solvedCount": 16273
      },
      {
        "contestId": 1516,
        "index": "A",
        "solvedCount": 22406
      },
      {
        "contestId": 1515,
        "index": "I",
        "solvedCount": 189
      },
      {
        "contestId": 1515,
        "index": "H",
        "solvedCount": 187
      },
      {
        "contestId": 1515,
        "index": "G",
        "solvedCount": 770
      },
      {
        "contestId": 1515,
        "index": "F",
        "solvedCount": 1444
      },
      {
        "contestId": 1515,
        "index": "E",
        "solvedCount": 2995
      },
      {
        "contestId": 1515,
        "index": "D",
        "solvedCount": 10577
      },
      {
        "contestId": 1515,
        "index": "C",
        "solvedCount": 15195
      },
      {
        "contestId": 1515,
        "index": "B",
        "solvedCount": 21874
      },
      {
        "contestId": 1515,
        "index": "A",
        "solvedCount": 19558
      },
      {
        "contestId": 1514,
        "index": "E",
        "solvedCount": 493
      },
      {
        "contestId": 1514,
        "index": "D",
        "solvedCount": 3897
      },
      {
        "contestId": 1514,
        "index": "C",
        "solvedCount": 12546
      },
      {
        "contestId": 1514,
        "index": "B",
        "solvedCount": 18686
      },
      {
        "contestId": 1514,
        "index": "A",
        "solvedCount": 22493
      },
      {
        "contestId": 1513,
        "index": "F",
        "solvedCount": 990
      },
      {
        "contestId": 1513,
        "index": "E",
        "solvedCount": 1312
      },
      {
        "contestId": 1513,
        "index": "D",
        "solvedCount": 4385
      },
      {
        "contestId": 1513,
        "index": "C",
        "solvedCount": 11668
      },
      {
        "contestId": 1513,
        "index": "B",
        "solvedCount": 12382
      },
      {
        "contestId": 1513,
        "index": "A",
        "solvedCount": 18430
      },
      {
        "contestId": 1512,
        "index": "G",
        "solvedCount": 885
      },
      {
        "contestId": 1512,
        "index": "F",
        "solvedCount": 1081
      },
      {
        "contestId": 1512,
        "index": "E",
        "solvedCount": 2180
      },
      {
        "contestId": 1512,
        "index": "D",
        "solvedCount": 6298
      },
      {
        "contestId": 1512,
        "index": "C",
        "solvedCount": 6844
      },
      {
        "contestId": 1512,
        "index": "B",
        "solvedCount": 14106
      },
      {
        "contestId": 1512,
        "index": "A",
        "solvedCount": 19153
      },
      {
        "contestId": 1511,
        "index": "G",
        "solvedCount": 36
      },
      {
        "contestId": 1511,
        "index": "F",
        "solvedCount": 36
      },
      {
        "contestId": 1511,
        "index": "E",
        "solvedCount": 624
      },
      {
        "contestId": 1511,
        "index": "D",
        "solvedCount": 3322
      },
      {
        "contestId": 1511,
        "index": "C",
        "solvedCount": 9134
      },
      {
        "contestId": 1511,
        "index": "B",
        "solvedCount": 9414
      },
      {
        "contestId": 1511,
        "index": "A",
        "solvedCount": 14883
      },
      {
        "contestId": 1510,
        "index": "K",
        "solvedCount": 883
      },
      {
        "contestId": 1510,
        "index": "J",
        "solvedCount": 67
      },
      {
        "contestId": 1510,
        "index": "I",
        "solvedCount": 68
      },
      {
        "contestId": 1510,
        "index": "H",
        "solvedCount": 5
      },
      {
        "contestId": 1510,
        "index": "G",
        "solvedCount": 343
      },
      {
        "contestId": 1510,
        "index": "F",
        "solvedCount": 5
      },
      {
        "contestId": 1510,
        "index": "E",
        "solvedCount": 46
      },
      {
        "contestId": 1510,
        "index": "D",
        "solvedCount": 351
      },
      {
        "contestId": 1510,
        "index": "C",
        "solvedCount": 37
      },
      {
        "contestId": 1510,
        "index": "B",
        "solvedCount": 134
      },
      {
        "contestId": 1510,
        "index": "A",
        "solvedCount": 19
      },
      {
        "contestId": 1509,
        "index": "C",
        "solvedCount": 10477
      },
      {
        "contestId": 1509,
        "index": "B",
        "solvedCount": 19787
      },
      {
        "contestId": 1509,
        "index": "A",
        "solvedCount": 24221
      },
      {
        "contestId": 1508,
        "index": "F",
        "solvedCount": 94
      },
      {
        "contestId": 1508,
        "index": "E",
        "solvedCount": 300
      },
      {
        "contestId": 1508,
        "index": "D",
        "solvedCount": 442
      },
      {
        "contestId": 1508,
        "index": "C",
        "solvedCount": 1145
      },
      {
        "contestId": 1508,
        "index": "B",
        "solvedCount": 2620
      },
      {
        "contestId": 1508,
        "index": "A",
        "solvedCount": 2710
      },
      {
        "contestId": 1506,
        "index": "G",
        "solvedCount": 693
      },
      {
        "contestId": 1506,
        "index": "F",
        "solvedCount": 627
      },
      {
        "contestId": 1506,
        "index": "E",
        "solvedCount": 3068
      },
      {
        "contestId": 1506,
        "index": "D",
        "solvedCount": 4768
      },
      {
        "contestId": 1506,
        "index": "C",
        "solvedCount": 9498
      },
      {
        "contestId": 1506,
        "index": "B",
        "solvedCount": 8733
      },
      {
        "contestId": 1506,
        "index": "A",
        "solvedCount": 14863
      },
      {
        "contestId": 1505,
        "index": "I",
        "solvedCount": 10
      },
      {
        "contestId": 1505,
        "index": "H",
        "solvedCount": 57
      },
      {
        "contestId": 1505,
        "index": "G",
        "solvedCount": 77
      },
      {
        "contestId": 1505,
        "index": "F",
        "solvedCount": 345
      },
      {
        "contestId": 1505,
        "index": "E",
        "solvedCount": 987
      },
      {
        "contestId": 1505,
        "index": "D",
        "solvedCount": 29
      },
      {
        "contestId": 1505,
        "index": "C",
        "solvedCount": 2781
      },
      {
        "contestId": 1505,
        "index": "B",
        "solvedCount": 1625
      },
      {
        "contestId": 1505,
        "index": "A",
        "solvedCount": 6570
      },
      {
        "contestId": 1504,
        "index": "B",
        "solvedCount": 15973
      },
      {
        "contestId": 1504,
        "index": "A",
        "solvedCount": 20195
      },
      {
        "contestId": 1503,
        "index": "F",
        "solvedCount": 117
      },
      {
        "contestId": 1503,
        "index": "E",
        "solvedCount": 495
      },
      {
        "contestId": 1503,
        "index": "D",
        "solvedCount": 799
      },
      {
        "contestId": 1503,
        "index": "C",
        "solvedCount": 1981
      },
      {
        "contestId": 1503,
        "index": "B",
        "solvedCount": 2870
      },
      {
        "contestId": 1503,
        "index": "A",
        "solvedCount": 4360
      },
      {
        "contestId": 1501,
        "index": "B",
        "solvedCount": 16997
      },
      {
        "contestId": 1501,
        "index": "A",
        "solvedCount": 11302
      },
      {
        "contestId": 1500,
        "index": "F",
        "solvedCount": 213
      },
      {
        "contestId": 1500,
        "index": "E",
        "solvedCount": 164
      },
      {
        "contestId": 1500,
        "index": "D",
        "solvedCount": 322
      },
      {
        "contestId": 1500,
        "index": "C",
        "solvedCount": 650
      },
      {
        "contestId": 1500,
        "index": "B",
        "solvedCount": 1426
      },
      {
        "contestId": 1500,
        "index": "A",
        "solvedCount": 3575
      },
      {
        "contestId": 1499,
        "index": "G",
        "solvedCount": 3
      },
      {
        "contestId": 1499,
        "index": "F",
        "solvedCount": 138
      },
      {
        "contestId": 1499,
        "index": "E",
        "solvedCount": 262
      },
      {
        "contestId": 1499,
        "index": "D",
        "solvedCount": 840
      },
      {
        "contestId": 1499,
        "index": "C",
        "solvedCount": 4395
      },
      {
        "contestId": 1499,
        "index": "B",
        "solvedCount": 9281
      },
      {
        "contestId": 1499,
        "index": "A",
        "solvedCount": 12919
      },
      {
        "contestId": 1498,
        "index": "F",
        "solvedCount": 668
      },
      {
        "contestId": 1498,
        "index": "E",
        "solvedCount": 1716
      },
      {
        "contestId": 1498,
        "index": "D",
        "solvedCount": 2136
      },
      {
        "contestId": 1498,
        "index": "C",
        "solvedCount": 8482
      },
      {
        "contestId": 1498,
        "index": "B",
        "solvedCount": 14768
      },
      {
        "contestId": 1498,
        "index": "A",
        "solvedCount": 21282
      },
      {
        "contestId": 1497,
        "index": "E2",
        "solvedCount": 1364
      },
      {
        "contestId": 1497,
        "index": "E1",
        "solvedCount": 7527
      },
      {
        "contestId": 1497,
        "index": "D",
        "solvedCount": 1351
      },
      {
        "contestId": 1497,
        "index": "C2",
        "solvedCount": 14833
      },
      {
        "contestId": 1497,
        "index": "C1",
        "solvedCount": 21518
      },
      {
        "contestId": 1497,
        "index": "B",
        "solvedCount": 16957
      },
      {
        "contestId": 1497,
        "index": "A",
        "solvedCount": 22412
      },
      {
        "contestId": 1496,
        "index": "B",
        "solvedCount": 16402
      },
      {
        "contestId": 1496,
        "index": "A",
        "solvedCount": 19199
      },
      {
        "contestId": 1495,
        "index": "F",
        "solvedCount": 207
      },
      {
        "contestId": 1495,
        "index": "E",
        "solvedCount": 354
      },
      {
        "contestId": 1495,
        "index": "D",
        "solvedCount": 912
      },
      {
        "contestId": 1495,
        "index": "C",
        "solvedCount": 1644
      },
      {
        "contestId": 1495,
        "index": "B",
        "solvedCount": 2587
      },
      {
        "contestId": 1495,
        "index": "A",
        "solvedCount": 5413
      },
      {
        "contestId": 1494,
        "index": "F",
        "solvedCount": 14
      },
      {
        "contestId": 1494,
        "index": "E",
        "solvedCount": 253
      },
      {
        "contestId": 1494,
        "index": "D",
        "solvedCount": 476
      },
      {
        "contestId": 1494,
        "index": "C",
        "solvedCount": 1668
      },
      {
        "contestId": 1494,
        "index": "B",
        "solvedCount": 5013
      },
      {
        "contestId": 1494,
        "index": "A",
        "solvedCount": 10452
      },
      {
        "contestId": 1493,
        "index": "F",
        "solvedCount": 338
      },
      {
        "contestId": 1493,
        "index": "E",
        "solvedCount": 762
      },
      {
        "contestId": 1493,
        "index": "D",
        "solvedCount": 4322
      },
      {
        "contestId": 1493,
        "index": "C",
        "solvedCount": 4237
      },
      {
        "contestId": 1493,
        "index": "B",
        "solvedCount": 11231
      },
      {
        "contestId": 1493,
        "index": "A",
        "solvedCount": 18517
      },
      {
        "contestId": 1492,
        "index": "E",
        "solvedCount": 1121
      },
      {
        "contestId": 1492,
        "index": "D",
        "solvedCount": 5611
      },
      {
        "contestId": 1492,
        "index": "C",
        "solvedCount": 14427
      },
      {
        "contestId": 1492,
        "index": "B",
        "solvedCount": 17284
      },
      {
        "contestId": 1492,
        "index": "A",
        "solvedCount": 21586
      },
      {
        "contestId": 1491,
        "index": "I",
        "solvedCount": 61
      },
      {
        "contestId": 1491,
        "index": "H",
        "solvedCount": 570
      },
      {
        "contestId": 1491,
        "index": "G",
        "solvedCount": 622
      },
      {
        "contestId": 1491,
        "index": "F",
        "solvedCount": 816
      },
      {
        "contestId": 1491,
        "index": "E",
        "solvedCount": 1891
      },
      {
        "contestId": 1491,
        "index": "D",
        "solvedCount": 6377
      },
      {
        "contestId": 1491,
        "index": "C",
        "solvedCount": 7232
      },
      {
        "contestId": 1491,
        "index": "B",
        "solvedCount": 13027
      },
      {
        "contestId": 1491,
        "index": "A",
        "solvedCount": 17301
      },
      {
        "contestId": 1490,
        "index": "G",
        "solvedCount": 1011
      },
      {
        "contestId": 1490,
        "index": "F",
        "solvedCount": 3199
      },
      {
        "contestId": 1490,
        "index": "E",
        "solvedCount": 4645
      },
      {
        "contestId": 1490,
        "index": "D",
        "solvedCount": 6946
      },
      {
        "contestId": 1490,
        "index": "C",
        "solvedCount": 9681
      },
      {
        "contestId": 1490,
        "index": "B",
        "solvedCount": 10877
      },
      {
        "contestId": 1490,
        "index": "A",
        "solvedCount": 14978
      },
      {
        "contestId": 1488,
        "index": "J",
        "solvedCount": 1
      },
      {
        "contestId": 1488,
        "index": "I",
        "solvedCount": 5
      },
      {
        "contestId": 1488,
        "index": "H",
        "solvedCount": 13
      },
      {
        "contestId": 1488,
        "index": "G",
        "solvedCount": 49
      },
      {
        "contestId": 1488,
        "index": "F",
        "solvedCount": 65
      },
      {
        "contestId": 1488,
        "index": "E",
        "solvedCount": 99
      },
      {
        "contestId": 1488,
        "index": "D",
        "solvedCount": 163
      },
      {
        "contestId": 1488,
        "index": "C",
        "solvedCount": 219
      },
      {
        "contestId": 1488,
        "index": "B",
        "solvedCount": 294
      },
      {
        "contestId": 1488,
        "index": "A",
        "solvedCount": 560
      },
      {
        "contestId": 1487,
        "index": "G",
        "solvedCount": 51
      },
      {
        "contestId": 1487,
        "index": "F",
        "solvedCount": 24
      },
      {
        "contestId": 1487,
        "index": "E",
        "solvedCount": 1207
      },
      {
        "contestId": 1487,
        "index": "D",
        "solvedCount": 4998
      },
      {
        "contestId": 1487,
        "index": "C",
        "solvedCount": 4723
      },
      {
        "contestId": 1487,
        "index": "B",
        "solvedCount": 7624
      },
      {
        "contestId": 1487,
        "index": "A",
        "solvedCount": 14365
      },
      {
        "contestId": 1486,
        "index": "F",
        "solvedCount": 537
      },
      {
        "contestId": 1486,
        "index": "E",
        "solvedCount": 2572
      },
      {
        "contestId": 1486,
        "index": "D",
        "solvedCount": 5592
      },
      {
        "contestId": 1486,
        "index": "C2",
        "solvedCount": 7349
      },
      {
        "contestId": 1486,
        "index": "C1",
        "solvedCount": 10604
      },
      {
        "contestId": 1486,
        "index": "B",
        "solvedCount": 14140
      },
      {
        "contestId": 1486,
        "index": "A",
        "solvedCount": 23341
      },
      {
        "contestId": 1485,
        "index": "F",
        "solvedCount": 1634
      },
      {
        "contestId": 1485,
        "index": "E",
        "solvedCount": 1122
      },
      {
        "contestId": 1485,
        "index": "D",
        "solvedCount": 4539
      },
      {
        "contestId": 1485,
        "index": "C",
        "solvedCount": 8703
      },
      {
        "contestId": 1485,
        "index": "B",
        "solvedCount": 15550
      },
      {
        "contestId": 1485,
        "index": "A",
        "solvedCount": 18953
      },
      {
        "contestId": 1482,
        "index": "H",
        "solvedCount": 28
      },
      {
        "contestId": 1482,
        "index": "G",
        "solvedCount": 17
      },
      {
        "contestId": 1482,
        "index": "F",
        "solvedCount": 280
      },
      {
        "contestId": 1482,
        "index": "E",
        "solvedCount": 702
      },
      {
        "contestId": 1482,
        "index": "D",
        "solvedCount": 860
      },
      {
        "contestId": 1482,
        "index": "C",
        "solvedCount": 2430
      },
      {
        "contestId": 1482,
        "index": "B",
        "solvedCount": 2141
      },
      {
        "contestId": 1482,
        "index": "A",
        "solvedCount": 4058
      },
      {
        "contestId": 1481,
        "index": "F",
        "solvedCount": 332
      },
      {
        "contestId": 1481,
        "index": "E",
        "solvedCount": 1774
      },
      {
        "contestId": 1481,
        "index": "D",
        "solvedCount": 4132
      },
      {
        "contestId": 1481,
        "index": "C",
        "solvedCount": 10611
      },
      {
        "contestId": 1481,
        "index": "B",
        "solvedCount": 18405
      },
      {
        "contestId": 1481,
        "index": "A",
        "solvedCount": 23529
      },
      {
        "contestId": 1480,
        "index": "B",
        "solvedCount": 16655
      },
      {
        "contestId": 1480,
        "index": "A",
        "solvedCount": 24010
      },
      {
        "contestId": 1479,
        "index": "E",
        "solvedCount": 120
      },
      {
        "contestId": 1479,
        "index": "D",
        "solvedCount": 761
      },
      {
        "contestId": 1479,
        "index": "C",
        "solvedCount": 968
      },
      {
        "contestId": 1479,
        "index": "B2",
        "solvedCount": 2099
      },
      {
        "contestId": 1479,
        "index": "B1",
        "solvedCount": 2943
      },
      {
        "contestId": 1479,
        "index": "A",
        "solvedCount": 3689
      },
      {
        "contestId": 1478,
        "index": "C",
        "solvedCount": 8918
      },
      {
        "contestId": 1478,
        "index": "B",
        "solvedCount": 17573
      },
      {
        "contestId": 1478,
        "index": "A",
        "solvedCount": 24001
      },
      {
        "contestId": 1477,
        "index": "F",
        "solvedCount": 99
      },
      {
        "contestId": 1477,
        "index": "E",
        "solvedCount": 106
      },
      {
        "contestId": 1477,
        "index": "D",
        "solvedCount": 415
      },
      {
        "contestId": 1477,
        "index": "C",
        "solvedCount": 1543
      },
      {
        "contestId": 1477,
        "index": "B",
        "solvedCount": 2117
      },
      {
        "contestId": 1477,
        "index": "A",
        "solvedCount": 2844
      },
      {
        "contestId": 1476,
        "index": "G",
        "solvedCount": 13
      },
      {
        "contestId": 1476,
        "index": "F",
        "solvedCount": 5
      },
      {
        "contestId": 1476,
        "index": "E",
        "solvedCount": 434
      },
      {
        "contestId": 1476,
        "index": "D",
        "solvedCount": 2711
      },
      {
        "contestId": 1476,
        "index": "C",
        "solvedCount": 3800
      },
      {
        "contestId": 1476,
        "index": "B",
        "solvedCount": 8079
      },
      {
        "contestId": 1476,
        "index": "A",
        "solvedCount": 11031
      },
      {
        "contestId": 1475,
        "index": "G",
        "solvedCount": 897
      },
      {
        "contestId": 1475,
        "index": "F",
        "solvedCount": 1085
      },
      {
        "contestId": 1475,
        "index": "E",
        "solvedCount": 3598
      },
      {
        "contestId": 1475,
        "index": "D",
        "solvedCount": 1961
      },
      {
        "contestId": 1475,
        "index": "C",
        "solvedCount": 6704
      },
      {
        "contestId": 1475,
        "index": "B",
        "solvedCount": 16681
      },
      {
        "contestId": 1475,
        "index": "A",
        "solvedCount": 17218
      },
      {
        "contestId": 1474,
        "index": "F",
        "solvedCount": 174
      },
      {
        "contestId": 1474,
        "index": "E",
        "solvedCount": 1219
      },
      {
        "contestId": 1474,
        "index": "D",
        "solvedCount": 3651
      },
      {
        "contestId": 1474,
        "index": "C",
        "solvedCount": 11202
      },
      {
        "contestId": 1474,
        "index": "B",
        "solvedCount": 23204
      },
      {
        "contestId": 1474,
        "index": "A",
        "solvedCount": 21615
      },
      {
        "contestId": 1473,
        "index": "G",
        "solvedCount": 20
      },
      {
        "contestId": 1473,
        "index": "F",
        "solvedCount": 68
      },
      {
        "contestId": 1473,
        "index": "E",
        "solvedCount": 310
      },
      {
        "contestId": 1473,
        "index": "D",
        "solvedCount": 2562
      },
      {
        "contestId": 1473,
        "index": "C",
        "solvedCount": 5085
      },
      {
        "contestId": 1473,
        "index": "B",
        "solvedCount": 11866
      },
      {
        "contestId": 1473,
        "index": "A",
        "solvedCount": 15921
      },
      {
        "contestId": 1472,
        "index": "G",
        "solvedCount": 698
      },
      {
        "contestId": 1472,
        "index": "F",
        "solvedCount": 554
      },
      {
        "contestId": 1472,
        "index": "E",
        "solvedCount": 2026
      },
      {
        "contestId": 1472,
        "index": "D",
        "solvedCount": 8238
      },
      {
        "contestId": 1472,
        "index": "C",
        "solvedCount": 10880
      },
      {
        "contestId": 1472,
        "index": "B",
        "solvedCount": 16618
      },
      {
        "contestId": 1472,
        "index": "A",
        "solvedCount": 17251
      },
      {
        "contestId": 1471,
        "index": "B",
        "solvedCount": 18325
      },
      {
        "contestId": 1471,
        "index": "A",
        "solvedCount": 22613
      },
      {
        "contestId": 1470,
        "index": "F",
        "solvedCount": 100
      },
      {
        "contestId": 1470,
        "index": "E",
        "solvedCount": 246
      },
      {
        "contestId": 1470,
        "index": "D",
        "solvedCount": 2105
      },
      {
        "contestId": 1470,
        "index": "C",
        "solvedCount": 934
      },
      {
        "contestId": 1470,
        "index": "B",
        "solvedCount": 2709
      },
      {
        "contestId": 1470,
        "index": "A",
        "solvedCount": 7932
      },
      {
        "contestId": 1469,
        "index": "F",
        "solvedCount": 99
      },
      {
        "contestId": 1469,
        "index": "E",
        "solvedCount": 259
      },
      {
        "contestId": 1469,
        "index": "D",
        "solvedCount": 2532
      },
      {
        "contestId": 1469,
        "index": "C",
        "solvedCount": 3413
      },
      {
        "contestId": 1469,
        "index": "B",
        "solvedCount": 10091
      },
      {
        "contestId": 1469,
        "index": "A",
        "solvedCount": 10966
      },
      {
        "contestId": 1468,
        "index": "N",
        "solvedCount": 1900
      },
      {
        "contestId": 1468,
        "index": "M",
        "solvedCount": 97
      },
      {
        "contestId": 1468,
        "index": "L",
        "solvedCount": 45
      },
      {
        "contestId": 1468,
        "index": "K",
        "solvedCount": 1072
      },
      {
        "contestId": 1468,
        "index": "J",
        "solvedCount": 648
      },
      {
        "contestId": 1468,
        "index": "I",
        "solvedCount": 115
      },
      {
        "contestId": 1468,
        "index": "H",
        "solvedCount": 365
      },
      {
        "contestId": 1468,
        "index": "G",
        "solvedCount": 173
      },
      {
        "contestId": 1468,
        "index": "F",
        "solvedCount": 817
      },
      {
        "contestId": 1468,
        "index": "E",
        "solvedCount": 2165
      },
      {
        "contestId": 1468,
        "index": "D",
        "solvedCount": 901
      },
      {
        "contestId": 1468,
        "index": "C",
        "solvedCount": 1296
      },
      {
        "contestId": 1468,
        "index": "B",
        "solvedCount": 22
      },
      {
        "contestId": 1468,
        "index": "A",
        "solvedCount": 317
      },
      {
        "contestId": 1467,
        "index": "E",
        "solvedCount": 1176
      },
      {
        "contestId": 1467,
        "index": "D",
        "solvedCount": 3317
      },
      {
        "contestId": 1467,
        "index": "C",
        "solvedCount": 5886
      },
      {
        "contestId": 1467,
        "index": "B",
        "solvedCount": 10238
      },
      {
        "contestId": 1467,
        "index": "A",
        "solvedCount": 22845
      },
      {
        "contestId": 1466,
        "index": "I",
        "solvedCount": 145
      },
      {
        "contestId": 1466,
        "index": "H",
        "solvedCount": 187
      },
      {
        "contestId": 1466,
        "index": "G",
        "solvedCount": 785
      },
      {
        "contestId": 1466,
        "index": "F",
        "solvedCount": 2717
      },
      {
        "contestId": 1466,
        "index": "E",
        "solvedCount": 6439
      },
      {
        "contestId": 1466,
        "index": "D",
        "solvedCount": 10274
      },
      {
        "contestId": 1466,
        "index": "C",
        "solvedCount": 16322
      },
      {
        "contestId": 1466,
        "index": "B",
        "solvedCount": 21604
      },
      {
        "contestId": 1466,
        "index": "A",
        "solvedCount": 21548
      },
      {
        "contestId": 1464,
        "index": "F",
        "solvedCount": 220
      },
      {
        "contestId": 1463,
        "index": "F",
        "solvedCount": 11
      },
      {
        "contestId": 1463,
        "index": "E",
        "solvedCount": 214
      },
      {
        "contestId": 1463,
        "index": "D",
        "solvedCount": 1170
      },
      {
        "contestId": 1463,
        "index": "C",
        "solvedCount": 1953
      },
      {
        "contestId": 1463,
        "index": "B",
        "solvedCount": 5153
      },
      {
        "contestId": 1463,
        "index": "A",
        "solvedCount": 8609
      },
      {
        "contestId": 1462,
        "index": "F",
        "solvedCount": 1170
      },
      {
        "contestId": 1462,
        "index": "E2",
        "solvedCount": 2057
      },
      {
        "contestId": 1462,
        "index": "E1",
        "solvedCount": 3659
      },
      {
        "contestId": 1462,
        "index": "D",
        "solvedCount": 4717
      },
      {
        "contestId": 1462,
        "index": "C",
        "solvedCount": 12014
      },
      {
        "contestId": 1462,
        "index": "B",
        "solvedCount": 12999
      },
      {
        "contestId": 1462,
        "index": "A",
        "solvedCount": 16843
      },
      {
        "contestId": 1461,
        "index": "F",
        "solvedCount": 450
      },
      {
        "contestId": 1461,
        "index": "E",
        "solvedCount": 1976
      },
      {
        "contestId": 1461,
        "index": "D",
        "solvedCount": 8208
      },
      {
        "contestId": 1461,
        "index": "C",
        "solvedCount": 10016
      },
      {
        "contestId": 1461,
        "index": "B",
        "solvedCount": 11778
      },
      {
        "contestId": 1461,
        "index": "A",
        "solvedCount": 17915
      },
      {
        "contestId": 1459,
        "index": "B",
        "solvedCount": 12687
      },
      {
        "contestId": 1459,
        "index": "A",
        "solvedCount": 15912
      },
      {
        "contestId": 1458,
        "index": "F",
        "solvedCount": 179
      },
      {
        "contestId": 1458,
        "index": "E",
        "solvedCount": 318
      },
      {
        "contestId": 1458,
        "index": "D",
        "solvedCount": 674
      },
      {
        "contestId": 1458,
        "index": "C",
        "solvedCount": 943
      },
      {
        "contestId": 1458,
        "index": "B",
        "solvedCount": 1996
      },
      {
        "contestId": 1458,
        "index": "A",
        "solvedCount": 6261
      },
      {
        "contestId": 1456,
        "index": "E",
        "solvedCount": 200
      },
      {
        "contestId": 1455,
        "index": "G",
        "solvedCount": 11
      },
      {
        "contestId": 1455,
        "index": "F",
        "solvedCount": 41
      },
      {
        "contestId": 1455,
        "index": "E",
        "solvedCount": 244
      },
      {
        "contestId": 1455,
        "index": "D",
        "solvedCount": 3377
      },
      {
        "contestId": 1455,
        "index": "C",
        "solvedCount": 8583
      },
      {
        "contestId": 1455,
        "index": "B",
        "solvedCount": 7613
      },
      {
        "contestId": 1455,
        "index": "A",
        "solvedCount": 13261
      },
      {
        "contestId": 1454,
        "index": "F",
        "solvedCount": 564
      },
      {
        "contestId": 1454,
        "index": "E",
        "solvedCount": 865
      },
      {
        "contestId": 1454,
        "index": "D",
        "solvedCount": 6901
      },
      {
        "contestId": 1454,
        "index": "C",
        "solvedCount": 9024
      },
      {
        "contestId": 1454,
        "index": "B",
        "solvedCount": 14208
      },
      {
        "contestId": 1454,
        "index": "A",
        "solvedCount": 18048
      },
      {
        "contestId": 1453,
        "index": "F",
        "solvedCount": 705
      },
      {
        "contestId": 1453,
        "index": "E",
        "solvedCount": 1839
      },
      {
        "contestId": 1453,
        "index": "D",
        "solvedCount": 3881
      },
      {
        "contestId": 1453,
        "index": "C",
        "solvedCount": 5791
      },
      {
        "contestId": 1453,
        "index": "B",
        "solvedCount": 12388
      },
      {
        "contestId": 1453,
        "index": "A",
        "solvedCount": 21119
      },
      {
        "contestId": 1452,
        "index": "G",
        "solvedCount": 10
      },
      {
        "contestId": 1452,
        "index": "F",
        "solvedCount": 24
      },
      {
        "contestId": 1452,
        "index": "E",
        "solvedCount": 200
      },
      {
        "contestId": 1452,
        "index": "D",
        "solvedCount": 2930
      },
      {
        "contestId": 1452,
        "index": "C",
        "solvedCount": 10024
      },
      {
        "contestId": 1452,
        "index": "B",
        "solvedCount": 4486
      },
      {
        "contestId": 1452,
        "index": "A",
        "solvedCount": 11679
      },
      {
        "contestId": 1451,
        "index": "F",
        "solvedCount": 798
      },
      {
        "contestId": 1451,
        "index": "E2",
        "solvedCount": 2565
      },
      {
        "contestId": 1451,
        "index": "E1",
        "solvedCount": 3903
      },
      {
        "contestId": 1451,
        "index": "D",
        "solvedCount": 8697
      },
      {
        "contestId": 1451,
        "index": "C",
        "solvedCount": 14266
      },
      {
        "contestId": 1451,
        "index": "B",
        "solvedCount": 18287
      },
      {
        "contestId": 1451,
        "index": "A",
        "solvedCount": 22871
      },
      {
        "contestId": 1450,
        "index": "H2",
        "solvedCount": 102
      },
      {
        "contestId": 1450,
        "index": "H1",
        "solvedCount": 310
      },
      {
        "contestId": 1450,
        "index": "G",
        "solvedCount": 179
      },
      {
        "contestId": 1450,
        "index": "F",
        "solvedCount": 1210
      },
      {
        "contestId": 1450,
        "index": "E",
        "solvedCount": 885
      },
      {
        "contestId": 1450,
        "index": "D",
        "solvedCount": 4989
      },
      {
        "contestId": 1450,
        "index": "C2",
        "solvedCount": 3237
      },
      {
        "contestId": 1450,
        "index": "C1",
        "solvedCount": 5047
      },
      {
        "contestId": 1450,
        "index": "B",
        "solvedCount": 14049
      },
      {
        "contestId": 1450,
        "index": "A",
        "solvedCount": 16868
      },
      {
        "contestId": 1447,
        "index": "B",
        "solvedCount": 13702
      },
      {
        "contestId": 1447,
        "index": "A",
        "solvedCount": 13177
      },
      {
        "contestId": 1446,
        "index": "F",
        "solvedCount": 215
      },
      {
        "contestId": 1446,
        "index": "E",
        "solvedCount": 67
      },
      {
        "contestId": 1446,
        "index": "D2",
        "solvedCount": 836
      },
      {
        "contestId": 1446,
        "index": "D1",
        "solvedCount": 1104
      },
      {
        "contestId": 1446,
        "index": "C",
        "solvedCount": 2134
      },
      {
        "contestId": 1446,
        "index": "B",
        "solvedCount": 3496
      },
      {
        "contestId": 1446,
        "index": "A",
        "solvedCount": 5827
      },
      {
        "contestId": 1445,
        "index": "B",
        "solvedCount": 14461
      },
      {
        "contestId": 1445,
        "index": "A",
        "solvedCount": 17403
      },
      {
        "contestId": 1444,
        "index": "E",
        "solvedCount": 109
      },
      {
        "contestId": 1444,
        "index": "D",
        "solvedCount": 436
      },
      {
        "contestId": 1444,
        "index": "C",
        "solvedCount": 1112
      },
      {
        "contestId": 1444,
        "index": "B",
        "solvedCount": 3049
      },
      {
        "contestId": 1444,
        "index": "A",
        "solvedCount": 5679
      },
      {
        "contestId": 1443,
        "index": "E",
        "solvedCount": 1130
      },
      {
        "contestId": 1443,
        "index": "C",
        "solvedCount": 13425
      },
      {
        "contestId": 1443,
        "index": "B",
        "solvedCount": 14364
      },
      {
        "contestId": 1443,
        "index": "A",
        "solvedCount": 15707
      },
      {
        "contestId": 1442,
        "index": "F",
        "solvedCount": 105
      },
      {
        "contestId": 1442,
        "index": "E",
        "solvedCount": 432
      },
      {
        "contestId": 1442,
        "index": "D",
        "solvedCount": 1494
      },
      {
        "contestId": 1442,
        "index": "C",
        "solvedCount": 1378
      },
      {
        "contestId": 1442,
        "index": "B",
        "solvedCount": 2688
      },
      {
        "contestId": 1442,
        "index": "A",
        "solvedCount": 3806
      },
      {
        "contestId": 1440,
        "index": "B",
        "solvedCount": 15969
      },
      {
        "contestId": 1440,
        "index": "A",
        "solvedCount": 18974
      },
      {
        "contestId": 1439,
        "index": "E",
        "solvedCount": 185
      },
      {
        "contestId": 1439,
        "index": "D",
        "solvedCount": 282
      },
      {
        "contestId": 1439,
        "index": "C",
        "solvedCount": 1032
      },
      {
        "contestId": 1439,
        "index": "B",
        "solvedCount": 1045
      },
      {
        "contestId": 1439,
        "index": "A2",
        "solvedCount": 2173
      },
      {
        "contestId": 1439,
        "index": "A1",
        "solvedCount": 3029
      },
      {
        "contestId": 1438,
        "index": "F",
        "solvedCount": 435
      },
      {
        "contestId": 1438,
        "index": "E",
        "solvedCount": 1161
      },
      {
        "contestId": 1438,
        "index": "D",
        "solvedCount": 3817
      },
      {
        "contestId": 1438,
        "index": "C",
        "solvedCount": 9237
      },
      {
        "contestId": 1438,
        "index": "B",
        "solvedCount": 16677
      },
      {
        "contestId": 1438,
        "index": "A",
        "solvedCount": 18605
      },
      {
        "contestId": 1437,
        "index": "G",
        "solvedCount": 55
      },
      {
        "contestId": 1437,
        "index": "F",
        "solvedCount": 78
      },
      {
        "contestId": 1437,
        "index": "E",
        "solvedCount": 522
      },
      {
        "contestId": 1437,
        "index": "D",
        "solvedCount": 3305
      },
      {
        "contestId": 1437,
        "index": "C",
        "solvedCount": 2600
      },
      {
        "contestId": 1437,
        "index": "B",
        "solvedCount": 6772
      },
      {
        "contestId": 1437,
        "index": "A",
        "solvedCount": 10358
      },
      {
        "contestId": 1436,
        "index": "F",
        "solvedCount": 440
      },
      {
        "contestId": 1436,
        "index": "E",
        "solvedCount": 1730
      },
      {
        "contestId": 1436,
        "index": "D",
        "solvedCount": 5386
      },
      {
        "contestId": 1436,
        "index": "C",
        "solvedCount": 9934
      },
      {
        "contestId": 1436,
        "index": "B",
        "solvedCount": 18817
      },
      {
        "contestId": 1436,
        "index": "A",
        "solvedCount": 21308
      },
      {
        "contestId": 1434,
        "index": "E",
        "solvedCount": 127
      },
      {
        "contestId": 1433,
        "index": "G",
        "solvedCount": 547
      },
      {
        "contestId": 1433,
        "index": "F",
        "solvedCount": 805
      },
      {
        "contestId": 1433,
        "index": "E",
        "solvedCount": 6716
      },
      {
        "contestId": 1433,
        "index": "D",
        "solvedCount": 8066
      },
      {
        "contestId": 1433,
        "index": "C",
        "solvedCount": 12475
      },
      {
        "contestId": 1433,
        "index": "B",
        "solvedCount": 15282
      },
      {
        "contestId": 1433,
        "index": "A",
        "solvedCount": 18122
      },
      {
        "contestId": 1431,
        "index": "J",
        "solvedCount": 2
      },
      {
        "contestId": 1431,
        "index": "I",
        "solvedCount": 7
      },
      {
        "contestId": 1431,
        "index": "H",
        "solvedCount": 23
      },
      {
        "contestId": 1431,
        "index": "G",
        "solvedCount": 64
      },
      {
        "contestId": 1431,
        "index": "F",
        "solvedCount": 87
      },
      {
        "contestId": 1431,
        "index": "E",
        "solvedCount": 125
      },
      {
        "contestId": 1431,
        "index": "D",
        "solvedCount": 252
      },
      {
        "contestId": 1431,
        "index": "C",
        "solvedCount": 401
      },
      {
        "contestId": 1431,
        "index": "B",
        "solvedCount": 495
      },
      {
        "contestId": 1431,
        "index": "A",
        "solvedCount": 715
      },
      {
        "contestId": 1430,
        "index": "G",
        "solvedCount": 34
      },
      {
        "contestId": 1430,
        "index": "F",
        "solvedCount": 91
      },
      {
        "contestId": 1430,
        "index": "E",
        "solvedCount": 1326
      },
      {
        "contestId": 1430,
        "index": "D",
        "solvedCount": 2659
      },
      {
        "contestId": 1430,
        "index": "C",
        "solvedCount": 7422
      },
      {
        "contestId": 1430,
        "index": "B",
        "solvedCount": 9025
      },
      {
        "contestId": 1430,
        "index": "A",
        "solvedCount": 8674
      },
      {
        "contestId": 1428,
        "index": "H",
        "solvedCount": 75
      },
      {
        "contestId": 1428,
        "index": "G2",
        "solvedCount": 517
      },
      {
        "contestId": 1428,
        "index": "G1",
        "solvedCount": 492
      },
      {
        "contestId": 1428,
        "index": "F",
        "solvedCount": 2005
      },
      {
        "contestId": 1428,
        "index": "E",
        "solvedCount": 3282
      },
      {
        "contestId": 1428,
        "index": "D",
        "solvedCount": 4221
      },
      {
        "contestId": 1428,
        "index": "C",
        "solvedCount": 17439
      },
      {
        "contestId": 1428,
        "index": "B",
        "solvedCount": 13250
      },
      {
        "contestId": 1428,
        "index": "A",
        "solvedCount": 15675
      },
      {
        "contestId": 1427,
        "index": "H",
        "solvedCount": 60
      },
      {
        "contestId": 1427,
        "index": "G",
        "solvedCount": 185
      },
      {
        "contestId": 1427,
        "index": "F",
        "solvedCount": 208
      },
      {
        "contestId": 1427,
        "index": "E",
        "solvedCount": 1166
      },
      {
        "contestId": 1427,
        "index": "D",
        "solvedCount": 3244
      },
      {
        "contestId": 1427,
        "index": "C",
        "solvedCount": 5063
      },
      {
        "contestId": 1427,
        "index": "B",
        "solvedCount": 10160
      },
      {
        "contestId": 1427,
        "index": "A",
        "solvedCount": 15778
      },
      {
        "contestId": 1426,
        "index": "F",
        "solvedCount": 641
      },
      {
        "contestId": 1426,
        "index": "E",
        "solvedCount": 1552
      },
      {
        "contestId": 1426,
        "index": "D",
        "solvedCount": 3120
      },
      {
        "contestId": 1426,
        "index": "C",
        "solvedCount": 7280
      },
      {
        "contestId": 1426,
        "index": "B",
        "solvedCount": 9929
      },
      {
        "contestId": 1426,
        "index": "A",
        "solvedCount": 13644
      },
      {
        "contestId": 1425,
        "index": "I",
        "solvedCount": 33
      },
      {
        "contestId": 1425,
        "index": "H",
        "solvedCount": 679
      },
      {
        "contestId": 1425,
        "index": "F",
        "solvedCount": 749
      },
      {
        "contestId": 1425,
        "index": "E",
        "solvedCount": 186
      },
      {
        "contestId": 1425,
        "index": "D",
        "solvedCount": 166
      },
      {
        "contestId": 1425,
        "index": "C",
        "solvedCount": 3
      },
      {
        "contestId": 1425,
        "index": "B",
        "solvedCount": 40
      },
      {
        "contestId": 1425,
        "index": "A",
        "solvedCount": 795
      },
      {
        "contestId": 1424,
        "index": "M",
        "solvedCount": 71
      },
      {
        "contestId": 1424,
        "index": "G",
        "solvedCount": 601
      },
      {
        "contestId": 1423,
        "index": "N",
        "solvedCount": 0
      },
      {
        "contestId": 1423,
        "index": "M",
        "solvedCount": 21
      },
      {
        "contestId": 1423,
        "index": "L",
        "solvedCount": 60
      },
      {
        "contestId": 1423,
        "index": "K",
        "solvedCount": 281
      },
      {
        "contestId": 1423,
        "index": "J",
        "solvedCount": 124
      },
      {
        "contestId": 1423,
        "index": "I",
        "solvedCount": 10
      },
      {
        "contestId": 1423,
        "index": "H",
        "solvedCount": 86
      },
      {
        "contestId": 1423,
        "index": "G",
        "solvedCount": 2
      },
      {
        "contestId": 1423,
        "index": "F",
        "solvedCount": 41
      },
      {
        "contestId": 1423,
        "index": "E",
        "solvedCount": 8
      },
      {
        "contestId": 1423,
        "index": "D",
        "solvedCount": 1
      },
      {
        "contestId": 1423,
        "index": "C",
        "solvedCount": 5
      },
      {
        "contestId": 1423,
        "index": "B",
        "solvedCount": 254
      },
      {
        "contestId": 1423,
        "index": "A",
        "solvedCount": 2
      },
      {
        "contestId": 1422,
        "index": "F",
        "solvedCount": 835
      },
      {
        "contestId": 1422,
        "index": "E",
        "solvedCount": 676
      },
      {
        "contestId": 1422,
        "index": "D",
        "solvedCount": 2414
      },
      {
        "contestId": 1422,
        "index": "C",
        "solvedCount": 7607
      },
      {
        "contestId": 1422,
        "index": "B",
        "solvedCount": 13582
      },
      {
        "contestId": 1422,
        "index": "A",
        "solvedCount": 19743
      },
      {
        "contestId": 1421,
        "index": "E",
        "solvedCount": 627
      },
      {
        "contestId": 1421,
        "index": "D",
        "solvedCount": 3909
      },
      {
        "contestId": 1421,
        "index": "C",
        "solvedCount": 11634
      },
      {
        "contestId": 1421,
        "index": "B",
        "solvedCount": 12532
      },
      {
        "contestId": 1421,
        "index": "A",
        "solvedCount": 23110
      },
      {
        "contestId": 1420,
        "index": "E",
        "solvedCount": 786
      },
      {
        "contestId": 1420,
        "index": "D",
        "solvedCount": 6772
      },
      {
        "contestId": 1420,
        "index": "C2",
        "solvedCount": 4170
      },
      {
        "contestId": 1420,
        "index": "C1",
        "solvedCount": 16266
      },
      {
        "contestId": 1420,
        "index": "B",
        "solvedCount": 19687
      },
      {
        "contestId": 1420,
        "index": "A",
        "solvedCount": 21451
      },
      {
        "contestId": 1419,
        "index": "F",
        "solvedCount": 446
      },
      {
        "contestId": 1419,
        "index": "E",
        "solvedCount": 2997
      },
      {
        "contestId": 1419,
        "index": "D2",
        "solvedCount": 13360
      },
      {
        "contestId": 1419,
        "index": "D1",
        "solvedCount": 21098
      },
      {
        "contestId": 1419,
        "index": "C",
        "solvedCount": 13872
      },
      {
        "contestId": 1419,
        "index": "B",
        "solvedCount": 15107
      },
      {
        "contestId": 1419,
        "index": "A",
        "solvedCount": 18289
      },
      {
        "contestId": 1418,
        "index": "G",
        "solvedCount": 106
      },
      {
        "contestId": 1418,
        "index": "F",
        "solvedCount": 12
      },
      {
        "contestId": 1418,
        "index": "E",
        "solvedCount": 213
      },
      {
        "contestId": 1418,
        "index": "D",
        "solvedCount": 941
      },
      {
        "contestId": 1418,
        "index": "C",
        "solvedCount": 4172
      },
      {
        "contestId": 1418,
        "index": "B",
        "solvedCount": 6501
      },
      {
        "contestId": 1418,
        "index": "A",
        "solvedCount": 8817
      },
      {
        "contestId": 1417,
        "index": "B",
        "solvedCount": 13594
      },
      {
        "contestId": 1417,
        "index": "A",
        "solvedCount": 17341
      },
      {
        "contestId": 1416,
        "index": "F",
        "solvedCount": 211
      },
      {
        "contestId": 1416,
        "index": "E",
        "solvedCount": 212
      },
      {
        "contestId": 1416,
        "index": "D",
        "solvedCount": 1319
      },
      {
        "contestId": 1416,
        "index": "C",
        "solvedCount": 2723
      },
      {
        "contestId": 1416,
        "index": "B",
        "solvedCount": 2740
      },
      {
        "contestId": 1416,
        "index": "A",
        "solvedCount": 4361
      },
      {
        "contestId": 1415,
        "index": "F",
        "solvedCount": 123
      },
      {
        "contestId": 1415,
        "index": "E",
        "solvedCount": 715
      },
      {
        "contestId": 1415,
        "index": "D",
        "solvedCount": 1630
      },
      {
        "contestId": 1415,
        "index": "C",
        "solvedCount": 3550
      },
      {
        "contestId": 1415,
        "index": "B",
        "solvedCount": 3427
      },
      {
        "contestId": 1415,
        "index": "A",
        "solvedCount": 4081
      },
      {
        "contestId": 1413,
        "index": "F",
        "solvedCount": 255
      },
      {
        "contestId": 1413,
        "index": "E",
        "solvedCount": 535
      },
      {
        "contestId": 1413,
        "index": "D",
        "solvedCount": 2223
      },
      {
        "contestId": 1413,
        "index": "C",
        "solvedCount": 1777
      },
      {
        "contestId": 1413,
        "index": "B",
        "solvedCount": 3338
      },
      {
        "contestId": 1413,
        "index": "A",
        "solvedCount": 4273
      },
      {
        "contestId": 1411,
        "index": "G",
        "solvedCount": 167
      },
      {
        "contestId": 1411,
        "index": "F",
        "solvedCount": 91
      },
      {
        "contestId": 1411,
        "index": "E",
        "solvedCount": 329
      },
      {
        "contestId": 1411,
        "index": "D",
        "solvedCount": 447
      },
      {
        "contestId": 1411,
        "index": "C",
        "solvedCount": 2020
      },
      {
        "contestId": 1411,
        "index": "B",
        "solvedCount": 5150
      },
      {
        "contestId": 1411,
        "index": "A",
        "solvedCount": 5006
      },
      {
        "contestId": 1409,
        "index": "F",
        "solvedCount": 715
      },
      {
        "contestId": 1409,
        "index": "E",
        "solvedCount": 1845
      },
      {
        "contestId": 1409,
        "index": "D",
        "solvedCount": 5215
      },
      {
        "contestId": 1409,
        "index": "C",
        "solvedCount": 10052
      },
      {
        "contestId": 1409,
        "index": "B",
        "solvedCount": 12461
      },
      {
        "contestId": 1409,
        "index": "A",
        "solvedCount": 20626
      },
      {
        "contestId": 1408,
        "index": "I",
        "solvedCount": 152
      },
      {
        "contestId": 1408,
        "index": "H",
        "solvedCount": 286
      },
      {
        "contestId": 1408,
        "index": "G",
        "solvedCount": 704
      },
      {
        "contestId": 1408,
        "index": "F",
        "solvedCount": 2099
      },
      {
        "contestId": 1408,
        "index": "E",
        "solvedCount": 1735
      },
      {
        "contestId": 1408,
        "index": "D",
        "solvedCount": 3992
      },
      {
        "contestId": 1408,
        "index": "C",
        "solvedCount": 8190
      },
      {
        "contestId": 1408,
        "index": "B",
        "solvedCount": 9235
      },
      {
        "contestId": 1408,
        "index": "A",
        "solvedCount": 12090
      },
      {
        "contestId": 1407,
        "index": "E",
        "solvedCount": 1468
      },
      {
        "contestId": 1407,
        "index": "D",
        "solvedCount": 4237
      },
      {
        "contestId": 1407,
        "index": "C",
        "solvedCount": 10489
      },
      {
        "contestId": 1407,
        "index": "B",
        "solvedCount": 15794
      },
      {
        "contestId": 1407,
        "index": "A",
        "solvedCount": 19136
      },
      {
        "contestId": 1406,
        "index": "E",
        "solvedCount": 1324
      },
      {
        "contestId": 1406,
        "index": "D",
        "solvedCount": 3195
      },
      {
        "contestId": 1406,
        "index": "C",
        "solvedCount": 9051
      },
      {
        "contestId": 1406,
        "index": "B",
        "solvedCount": 20211
      },
      {
        "contestId": 1406,
        "index": "A",
        "solvedCount": 19822
      },
      {
        "contestId": 1405,
        "index": "B",
        "solvedCount": 19600
      },
      {
        "contestId": 1405,
        "index": "A",
        "solvedCount": 20781
      },
      {
        "contestId": 1404,
        "index": "E",
        "solvedCount": 895
      },
      {
        "contestId": 1404,
        "index": "D",
        "solvedCount": 866
      },
      {
        "contestId": 1404,
        "index": "C",
        "solvedCount": 1840
      },
      {
        "contestId": 1404,
        "index": "B",
        "solvedCount": 3204
      },
      {
        "contestId": 1404,
        "index": "A",
        "solvedCount": 5042
      },
      {
        "contestId": 1403,
        "index": "C",
        "solvedCount": 40
      },
      {
        "contestId": 1403,
        "index": "B",
        "solvedCount": 340
      },
      {
        "contestId": 1403,
        "index": "A",
        "solvedCount": 280
      },
      {
        "contestId": 1402,
        "index": "C",
        "solvedCount": 184
      },
      {
        "contestId": 1402,
        "index": "B",
        "solvedCount": 97
      },
      {
        "contestId": 1402,
        "index": "A",
        "solvedCount": 1024
      },
      {
        "contestId": 1401,
        "index": "F",
        "solvedCount": 1328
      },
      {
        "contestId": 1401,
        "index": "E",
        "solvedCount": 2001
      },
      {
        "contestId": 1401,
        "index": "D",
        "solvedCount": 8283
      },
      {
        "contestId": 1401,
        "index": "C",
        "solvedCount": 21729
      },
      {
        "contestId": 1401,
        "index": "B",
        "solvedCount": 20305
      },
      {
        "contestId": 1401,
        "index": "A",
        "solvedCount": 25476
      },
      {
        "contestId": 1400,
        "index": "G",
        "solvedCount": 105
      },
      {
        "contestId": 1400,
        "index": "F",
        "solvedCount": 47
      },
      {
        "contestId": 1400,
        "index": "E",
        "solvedCount": 864
      },
      {
        "contestId": 1400,
        "index": "D",
        "solvedCount": 2370
      },
      {
        "contestId": 1400,
        "index": "C",
        "solvedCount": 6161
      },
      {
        "contestId": 1400,
        "index": "B",
        "solvedCount": 3524
      },
      {
        "contestId": 1400,
        "index": "A",
        "solvedCount": 15262
      },
      {
        "contestId": 1399,
        "index": "F",
        "solvedCount": 186
      },
      {
        "contestId": 1399,
        "index": "E2",
        "solvedCount": 317
      },
      {
        "contestId": 1399,
        "index": "E1",
        "solvedCount": 1185
      },
      {
        "contestId": 1399,
        "index": "D",
        "solvedCount": 5721
      },
      {
        "contestId": 1399,
        "index": "C",
        "solvedCount": 10797
      },
      {
        "contestId": 1399,
        "index": "B",
        "solvedCount": 18927
      },
      {
        "contestId": 1399,
        "index": "A",
        "solvedCount": 20143
      },
      {
        "contestId": 1398,
        "index": "G",
        "solvedCount": 83
      },
      {
        "contestId": 1398,
        "index": "F",
        "solvedCount": 169
      },
      {
        "contestId": 1398,
        "index": "E",
        "solvedCount": 558
      },
      {
        "contestId": 1398,
        "index": "D",
        "solvedCount": 2923
      },
      {
        "contestId": 1398,
        "index": "C",
        "solvedCount": 4527
      },
      {
        "contestId": 1398,
        "index": "B",
        "solvedCount": 14030
      },
      {
        "contestId": 1398,
        "index": "A",
        "solvedCount": 14696
      },
      {
        "contestId": 1397,
        "index": "B",
        "solvedCount": 13719
      },
      {
        "contestId": 1397,
        "index": "A",
        "solvedCount": 26133
      },
      {
        "contestId": 1396,
        "index": "E",
        "solvedCount": 273
      },
      {
        "contestId": 1396,
        "index": "D",
        "solvedCount": 260
      },
      {
        "contestId": 1396,
        "index": "C",
        "solvedCount": 1740
      },
      {
        "contestId": 1396,
        "index": "B",
        "solvedCount": 4566
      },
      {
        "contestId": 1396,
        "index": "A",
        "solvedCount": 5794
      },
      {
        "contestId": 1395,
        "index": "C",
        "solvedCount": 12585
      },
      {
        "contestId": 1395,
        "index": "B",
        "solvedCount": 15546
      },
      {
        "contestId": 1395,
        "index": "A",
        "solvedCount": 21932
      },
      {
        "contestId": 1394,
        "index": "E",
        "solvedCount": 108
      },
      {
        "contestId": 1394,
        "index": "D",
        "solvedCount": 647
      },
      {
        "contestId": 1394,
        "index": "C",
        "solvedCount": 731
      },
      {
        "contestId": 1394,
        "index": "B",
        "solvedCount": 1430
      },
      {
        "contestId": 1394,
        "index": "A",
        "solvedCount": 3147
      },
      {
        "contestId": 1393,
        "index": "E2",
        "solvedCount": 287
      },
      {
        "contestId": 1393,
        "index": "E1",
        "solvedCount": 315
      },
      {
        "contestId": 1393,
        "index": "D",
        "solvedCount": 3623
      },
      {
        "contestId": 1393,
        "index": "C",
        "solvedCount": 9821
      },
      {
        "contestId": 1393,
        "index": "B",
        "solvedCount": 15485
      },
      {
        "contestId": 1393,
        "index": "A",
        "solvedCount": 19887
      },
      {
        "contestId": 1392,
        "index": "I",
        "solvedCount": 133
      },
      {
        "contestId": 1392,
        "index": "H",
        "solvedCount": 529
      },
      {
        "contestId": 1392,
        "index": "G",
        "solvedCount": 403
      },
      {
        "contestId": 1392,
        "index": "F",
        "solvedCount": 1799
      },
      {
        "contestId": 1392,
        "index": "E",
        "solvedCount": 3021
      },
      {
        "contestId": 1392,
        "index": "D",
        "solvedCount": 7961
      },
      {
        "contestId": 1392,
        "index": "C",
        "solvedCount": 17288
      },
      {
        "contestId": 1392,
        "index": "B",
        "solvedCount": 17479
      },
      {
        "contestId": 1392,
        "index": "A",
        "solvedCount": 19297
      },
      {
        "contestId": 1391,
        "index": "E",
        "solvedCount": 1259
      },
      {
        "contestId": 1391,
        "index": "D",
        "solvedCount": 4567
      },
      {
        "contestId": 1391,
        "index": "C",
        "solvedCount": 13770
      },
      {
        "contestId": 1391,
        "index": "B",
        "solvedCount": 23939
      },
      {
        "contestId": 1391,
        "index": "A",
        "solvedCount": 23065
      },
      {
        "contestId": 1389,
        "index": "G",
        "solvedCount": 24
      },
      {
        "contestId": 1389,
        "index": "F",
        "solvedCount": 113
      },
      {
        "contestId": 1389,
        "index": "E",
        "solvedCount": 790
      },
      {
        "contestId": 1389,
        "index": "D",
        "solvedCount": 1191
      },
      {
        "contestId": 1389,
        "index": "C",
        "solvedCount": 6459
      },
      {
        "contestId": 1389,
        "index": "B",
        "solvedCount": 5003
      },
      {
        "contestId": 1389,
        "index": "A",
        "solvedCount": 15237
      },
      {
        "contestId": 1388,
        "index": "E",
        "solvedCount": 366
      },
      {
        "contestId": 1388,
        "index": "D",
        "solvedCount": 5739
      },
      {
        "contestId": 1388,
        "index": "C",
        "solvedCount": 8897
      },
      {
        "contestId": 1388,
        "index": "B",
        "solvedCount": 21253
      },
      {
        "contestId": 1388,
        "index": "A",
        "solvedCount": 23791
      },
      {
        "contestId": 1387,
        "index": "C",
        "solvedCount": 114
      },
      {
        "contestId": 1387,
        "index": "B2",
        "solvedCount": 641
      },
      {
        "contestId": 1387,
        "index": "B1",
        "solvedCount": 1051
      },
      {
        "contestId": 1387,
        "index": "A",
        "solvedCount": 594
      },
      {
        "contestId": 1386,
        "index": "C",
        "solvedCount": 340
      },
      {
        "contestId": 1386,
        "index": "B",
        "solvedCount": 109
      },
      {
        "contestId": 1386,
        "index": "A",
        "solvedCount": 224
      },
      {
        "contestId": 1385,
        "index": "G",
        "solvedCount": 212
      },
      {
        "contestId": 1385,
        "index": "F",
        "solvedCount": 358
      },
      {
        "contestId": 1385,
        "index": "E",
        "solvedCount": 1072
      },
      {
        "contestId": 1385,
        "index": "D",
        "solvedCount": 4964
      },
      {
        "contestId": 1385,
        "index": "C",
        "solvedCount": 10639
      },
      {
        "contestId": 1385,
        "index": "B",
        "solvedCount": 18233
      },
      {
        "contestId": 1385,
        "index": "A",
        "solvedCount": 16677
      },
      {
        "contestId": 1384,
        "index": "B2",
        "solvedCount": 2328
      },
      {
        "contestId": 1384,
        "index": "B1",
        "solvedCount": 3699
      },
      {
        "contestId": 1384,
        "index": "A",
        "solvedCount": 17613
      },
      {
        "contestId": 1383,
        "index": "F",
        "solvedCount": 208
      },
      {
        "contestId": 1383,
        "index": "E",
        "solvedCount": 679
      },
      {
        "contestId": 1383,
        "index": "D",
        "solvedCount": 517
      },
      {
        "contestId": 1383,
        "index": "C",
        "solvedCount": 403
      },
      {
        "contestId": 1383,
        "index": "B",
        "solvedCount": 3022
      },
      {
        "contestId": 1383,
        "index": "A",
        "solvedCount": 4169
      },
      {
        "contestId": 1382,
        "index": "B",
        "solvedCount": 22369
      },
      {
        "contestId": 1382,
        "index": "A",
        "solvedCount": 25248
      },
      {
        "contestId": 1381,
        "index": "E",
        "solvedCount": 91
      },
      {
        "contestId": 1381,
        "index": "D",
        "solvedCount": 381
      },
      {
        "contestId": 1381,
        "index": "C",
        "solvedCount": 1108
      },
      {
        "contestId": 1381,
        "index": "B",
        "solvedCount": 4294
      },
      {
        "contestId": 1381,
        "index": "A2",
        "solvedCount": 4836
      },
      {
        "contestId": 1381,
        "index": "A1",
        "solvedCount": 6789
      },
      {
        "contestId": 1380,
        "index": "G",
        "solvedCount": 74
      },
      {
        "contestId": 1380,
        "index": "F",
        "solvedCount": 95
      },
      {
        "contestId": 1380,
        "index": "E",
        "solvedCount": 364
      },
      {
        "contestId": 1380,
        "index": "D",
        "solvedCount": 1017
      },
      {
        "contestId": 1380,
        "index": "C",
        "solvedCount": 4716
      },
      {
        "contestId": 1380,
        "index": "B",
        "solvedCount": 4317
      },
      {
        "contestId": 1380,
        "index": "A",
        "solvedCount": 7397
      },
      {
        "contestId": 1379,
        "index": "F2",
        "solvedCount": 373
      },
      {
        "contestId": 1379,
        "index": "F1",
        "solvedCount": 452
      },
      {
        "contestId": 1379,
        "index": "E",
        "solvedCount": 311
      },
      {
        "contestId": 1379,
        "index": "D",
        "solvedCount": 1008
      },
      {
        "contestId": 1379,
        "index": "C",
        "solvedCount": 4956
      },
      {
        "contestId": 1379,
        "index": "B",
        "solvedCount": 11761
      },
      {
        "contestId": 1379,
        "index": "A",
        "solvedCount": 11081
      },
      {
        "contestId": 1375,
        "index": "I",
        "solvedCount": 73
      },
      {
        "contestId": 1375,
        "index": "H",
        "solvedCount": 324
      },
      {
        "contestId": 1375,
        "index": "G",
        "solvedCount": 1420
      },
      {
        "contestId": 1375,
        "index": "F",
        "solvedCount": 1763
      },
      {
        "contestId": 1375,
        "index": "E",
        "solvedCount": 2508
      },
      {
        "contestId": 1375,
        "index": "D",
        "solvedCount": 8159
      },
      {
        "contestId": 1375,
        "index": "C",
        "solvedCount": 18806
      },
      {
        "contestId": 1375,
        "index": "B",
        "solvedCount": 16241
      },
      {
        "contestId": 1375,
        "index": "A",
        "solvedCount": 17551
      },
      {
        "contestId": 1374,
        "index": "F",
        "solvedCount": 177
      },
      {
        "contestId": 1374,
        "index": "E2",
        "solvedCount": 100
      },
      {
        "contestId": 1374,
        "index": "E1",
        "solvedCount": 3594
      },
      {
        "contestId": 1374,
        "index": "D",
        "solvedCount": 6702
      },
      {
        "contestId": 1374,
        "index": "C",
        "solvedCount": 14283
      },
      {
        "contestId": 1374,
        "index": "B",
        "solvedCount": 15149
      },
      {
        "contestId": 1374,
        "index": "A",
        "solvedCount": 17037
      },
      {
        "contestId": 1373,
        "index": "G",
        "solvedCount": 78
      },
      {
        "contestId": 1373,
        "index": "F",
        "solvedCount": 276
      },
      {
        "contestId": 1373,
        "index": "E",
        "solvedCount": 623
      },
      {
        "contestId": 1373,
        "index": "D",
        "solvedCount": 4520
      },
      {
        "contestId": 1373,
        "index": "C",
        "solvedCount": 8339
      },
      {
        "contestId": 1373,
        "index": "B",
        "solvedCount": 12434
      },
      {
        "contestId": 1373,
        "index": "A",
        "solvedCount": 10773
      },
      {
        "contestId": 1372,
        "index": "F",
        "solvedCount": 353
      },
      {
        "contestId": 1372,
        "index": "E",
        "solvedCount": 828
      },
      {
        "contestId": 1372,
        "index": "D",
        "solvedCount": 5025
      },
      {
        "contestId": 1372,
        "index": "C",
        "solvedCount": 16262
      },
      {
        "contestId": 1372,
        "index": "B",
        "solvedCount": 23474
      },
      {
        "contestId": 1372,
        "index": "A",
        "solvedCount": 29577
      },
      {
        "contestId": 1371,
        "index": "F",
        "solvedCount": 415
      },
      {
        "contestId": 1371,
        "index": "E2",
        "solvedCount": 2215
      },
      {
        "contestId": 1371,
        "index": "E1",
        "solvedCount": 4836
      },
      {
        "contestId": 1371,
        "index": "D",
        "solvedCount": 12352
      },
      {
        "contestId": 1371,
        "index": "C",
        "solvedCount": 19173
      },
      {
        "contestId": 1371,
        "index": "B",
        "solvedCount": 18435
      },
      {
        "contestId": 1371,
        "index": "A",
        "solvedCount": 38576
      },
      {
        "contestId": 1370,
        "index": "F2",
        "solvedCount": 1109
      },
      {
        "contestId": 1370,
        "index": "F1",
        "solvedCount": 1242
      },
      {
        "contestId": 1370,
        "index": "E",
        "solvedCount": 4405
      },
      {
        "contestId": 1370,
        "index": "D",
        "solvedCount": 8290
      },
      {
        "contestId": 1370,
        "index": "C",
        "solvedCount": 21453
      },
      {
        "contestId": 1370,
        "index": "B",
        "solvedCount": 21941
      },
      {
        "contestId": 1370,
        "index": "A",
        "solvedCount": 39998
      },
      {
        "contestId": 1369,
        "index": "F",
        "solvedCount": 532
      },
      {
        "contestId": 1369,
        "index": "E",
        "solvedCount": 1938
      },
      {
        "contestId": 1369,
        "index": "D",
        "solvedCount": 7876
      },
      {
        "contestId": 1369,
        "index": "C",
        "solvedCount": 17945
      },
      {
        "contestId": 1369,
        "index": "B",
        "solvedCount": 22555
      },
      {
        "contestId": 1369,
        "index": "A",
        "solvedCount": 33127
      },
      {
        "contestId": 1368,
        "index": "H2",
        "solvedCount": 170
      },
      {
        "contestId": 1368,
        "index": "H1",
        "solvedCount": 250
      },
      {
        "contestId": 1368,
        "index": "G",
        "solvedCount": 286
      },
      {
        "contestId": 1368,
        "index": "F",
        "solvedCount": 789
      },
      {
        "contestId": 1368,
        "index": "E",
        "solvedCount": 1811
      },
      {
        "contestId": 1368,
        "index": "D",
        "solvedCount": 10290
      },
      {
        "contestId": 1368,
        "index": "C",
        "solvedCount": 12399
      },
      {
        "contestId": 1368,
        "index": "B",
        "solvedCount": 17742
      },
      {
        "contestId": 1368,
        "index": "A",
        "solvedCount": 31617
      },
      {
        "contestId": 1367,
        "index": "F2",
        "solvedCount": 146
      },
      {
        "contestId": 1367,
        "index": "F1",
        "solvedCount": 681
      },
      {
        "contestId": 1367,
        "index": "E",
        "solvedCount": 1377
      },
      {
        "contestId": 1367,
        "index": "D",
        "solvedCount": 2130
      },
      {
        "contestId": 1367,
        "index": "C",
        "solvedCount": 9841
      },
      {
        "contestId": 1367,
        "index": "B",
        "solvedCount": 18329
      },
      {
        "contestId": 1367,
        "index": "A",
        "solvedCount": 20248
      },
      {
        "contestId": 1366,
        "index": "G",
        "solvedCount": 33
      },
      {
        "contestId": 1366,
        "index": "F",
        "solvedCount": 49
      },
      {
        "contestId": 1366,
        "index": "E",
        "solvedCount": 739
      },
      {
        "contestId": 1366,
        "index": "D",
        "solvedCount": 1575
      },
      {
        "contestId": 1366,
        "index": "C",
        "solvedCount": 5363
      },
      {
        "contestId": 1366,
        "index": "B",
        "solvedCount": 8657
      },
      {
        "contestId": 1366,
        "index": "A",
        "solvedCount": 10273
      },
      {
        "contestId": 1365,
        "index": "G",
        "solvedCount": 774
      },
      {
        "contestId": 1365,
        "index": "F",
        "solvedCount": 4071
      },
      {
        "contestId": 1365,
        "index": "E",
        "solvedCount": 7064
      },
      {
        "contestId": 1365,
        "index": "D",
        "solvedCount": 14214
      },
      {
        "contestId": 1365,
        "index": "C",
        "solvedCount": 20499
      },
      {
        "contestId": 1365,
        "index": "B",
        "solvedCount": 23912
      },
      {
        "contestId": 1365,
        "index": "A",
        "solvedCount": 22380
      },
      {
        "contestId": 1364,
        "index": "E",
        "solvedCount": 979
      },
      {
        "contestId": 1364,
        "index": "D",
        "solvedCount": 3692
      },
      {
        "contestId": 1364,
        "index": "C",
        "solvedCount": 11955
      },
      {
        "contestId": 1364,
        "index": "B",
        "solvedCount": 17163
      },
      {
        "contestId": 1364,
        "index": "A",
        "solvedCount": 23885
      },
      {
        "contestId": 1363,
        "index": "F",
        "solvedCount": 1117
      },
      {
        "contestId": 1363,
        "index": "E",
        "solvedCount": 6030
      },
      {
        "contestId": 1363,
        "index": "D",
        "solvedCount": 3602
      },
      {
        "contestId": 1363,
        "index": "C",
        "solvedCount": 16122
      },
      {
        "contestId": 1363,
        "index": "B",
        "solvedCount": 20824
      },
      {
        "contestId": 1363,
        "index": "A",
        "solvedCount": 30835
      },
      {
        "contestId": 1362,
        "index": "C",
        "solvedCount": 15947
      },
      {
        "contestId": 1362,
        "index": "B",
        "solvedCount": 17299
      },
      {
        "contestId": 1362,
        "index": "A",
        "solvedCount": 20786
      },
      {
        "contestId": 1361,
        "index": "F",
        "solvedCount": 125
      },
      {
        "contestId": 1361,
        "index": "E",
        "solvedCount": 498
      },
      {
        "contestId": 1361,
        "index": "D",
        "solvedCount": 292
      },
      {
        "contestId": 1361,
        "index": "C",
        "solvedCount": 1190
      },
      {
        "contestId": 1361,
        "index": "B",
        "solvedCount": 2237
      },
      {
        "contestId": 1361,
        "index": "A",
        "solvedCount": 3354
      },
      {
        "contestId": 1360,
        "index": "H",
        "solvedCount": 912
      },
      {
        "contestId": 1360,
        "index": "G",
        "solvedCount": 1393
      },
      {
        "contestId": 1360,
        "index": "F",
        "solvedCount": 2995
      },
      {
        "contestId": 1360,
        "index": "E",
        "solvedCount": 9049
      },
      {
        "contestId": 1360,
        "index": "D",
        "solvedCount": 9430
      },
      {
        "contestId": 1360,
        "index": "C",
        "solvedCount": 12935
      },
      {
        "contestId": 1360,
        "index": "B",
        "solvedCount": 16496
      },
      {
        "contestId": 1360,
        "index": "A",
        "solvedCount": 16520
      },
      {
        "contestId": 1359,
        "index": "F",
        "solvedCount": 29
      },
      {
        "contestId": 1359,
        "index": "E",
        "solvedCount": 1401
      },
      {
        "contestId": 1359,
        "index": "D",
        "solvedCount": 1611
      },
      {
        "contestId": 1359,
        "index": "C",
        "solvedCount": 3576
      },
      {
        "contestId": 1359,
        "index": "B",
        "solvedCount": 12875
      },
      {
        "contestId": 1359,
        "index": "A",
        "solvedCount": 13725
      },
      {
        "contestId": 1358,
        "index": "F",
        "solvedCount": 407
      },
      {
        "contestId": 1358,
        "index": "E",
        "solvedCount": 1925
      },
      {
        "contestId": 1358,
        "index": "D",
        "solvedCount": 7607
      },
      {
        "contestId": 1358,
        "index": "C",
        "solvedCount": 15965
      },
      {
        "contestId": 1358,
        "index": "B",
        "solvedCount": 23484
      },
      {
        "contestId": 1358,
        "index": "A",
        "solvedCount": 35065
      },
      {
        "contestId": 1357,
        "index": "E2",
        "solvedCount": 31
      },
      {
        "contestId": 1357,
        "index": "E1",
        "solvedCount": 170
      },
      {
        "contestId": 1357,
        "index": "D5",
        "solvedCount": 64
      },
      {
        "contestId": 1357,
        "index": "D4",
        "solvedCount": 69
      },
      {
        "contestId": 1357,
        "index": "D3",
        "solvedCount": 89
      },
      {
        "contestId": 1357,
        "index": "D2",
        "solvedCount": 96
      },
      {
        "contestId": 1357,
        "index": "D1",
        "solvedCount": 109
      },
      {
        "contestId": 1357,
        "index": "C2",
        "solvedCount": 280
      },
      {
        "contestId": 1357,
        "index": "C1",
        "solvedCount": 325
      },
      {
        "contestId": 1357,
        "index": "B2",
        "solvedCount": 191
      },
      {
        "contestId": 1357,
        "index": "B1",
        "solvedCount": 192
      },
      {
        "contestId": 1357,
        "index": "A7",
        "solvedCount": 159
      },
      {
        "contestId": 1357,
        "index": "A6",
        "solvedCount": 138
      },
      {
        "contestId": 1357,
        "index": "A5",
        "solvedCount": 210
      },
      {
        "contestId": 1357,
        "index": "A4",
        "solvedCount": 313
      },
      {
        "contestId": 1357,
        "index": "A3",
        "solvedCount": 437
      },
      {
        "contestId": 1357,
        "index": "A2",
        "solvedCount": 473
      },
      {
        "contestId": 1357,
        "index": "A1",
        "solvedCount": 581
      },
      {
        "contestId": 1356,
        "index": "D2",
        "solvedCount": 79
      },
      {
        "contestId": 1356,
        "index": "D1",
        "solvedCount": 80
      },
      {
        "contestId": 1356,
        "index": "C",
        "solvedCount": 231
      },
      {
        "contestId": 1356,
        "index": "B2",
        "solvedCount": 209
      },
      {
        "contestId": 1356,
        "index": "B1",
        "solvedCount": 208
      },
      {
        "contestId": 1356,
        "index": "A5",
        "solvedCount": 236
      },
      {
        "contestId": 1356,
        "index": "A4",
        "solvedCount": 351
      },
      {
        "contestId": 1356,
        "index": "A3",
        "solvedCount": 362
      },
      {
        "contestId": 1356,
        "index": "A2",
        "solvedCount": 372
      },
      {
        "contestId": 1356,
        "index": "A1",
        "solvedCount": 460
      },
      {
        "contestId": 1355,
        "index": "F",
        "solvedCount": 717
      },
      {
        "contestId": 1355,
        "index": "E",
        "solvedCount": 4254
      },
      {
        "contestId": 1355,
        "index": "D",
        "solvedCount": 16211
      },
      {
        "contestId": 1355,
        "index": "C",
        "solvedCount": 9469
      },
      {
        "contestId": 1355,
        "index": "B",
        "solvedCount": 22705
      },
      {
        "contestId": 1355,
        "index": "A",
        "solvedCount": 23461
      },
      {
        "contestId": 1354,
        "index": "G",
        "solvedCount": 24
      },
      {
        "contestId": 1354,
        "index": "F",
        "solvedCount": 84
      },
      {
        "contestId": 1354,
        "index": "E",
        "solvedCount": 396
      },
      {
        "contestId": 1354,
        "index": "D",
        "solvedCount": 1659
      },
      {
        "contestId": 1354,
        "index": "C2",
        "solvedCount": 1555
      },
      {
        "contestId": 1354,
        "index": "C1",
        "solvedCount": 7009
      },
      {
        "contestId": 1354,
        "index": "B",
        "solvedCount": 9761
      },
      {
        "contestId": 1354,
        "index": "A",
        "solvedCount": 12186
      },
      {
        "contestId": 1353,
        "index": "F",
        "solvedCount": 384
      },
      {
        "contestId": 1353,
        "index": "E",
        "solvedCount": 1280
      },
      {
        "contestId": 1353,
        "index": "D",
        "solvedCount": 5246
      },
      {
        "contestId": 1353,
        "index": "C",
        "solvedCount": 14939
      },
      {
        "contestId": 1353,
        "index": "B",
        "solvedCount": 17998
      },
      {
        "contestId": 1353,
        "index": "A",
        "solvedCount": 17467
      },
      {
        "contestId": 1352,
        "index": "G",
        "solvedCount": 3677
      },
      {
        "contestId": 1352,
        "index": "F",
        "solvedCount": 3199
      },
      {
        "contestId": 1352,
        "index": "E",
        "solvedCount": 4006
      },
      {
        "contestId": 1352,
        "index": "D",
        "solvedCount": 9238
      },
      {
        "contestId": 1352,
        "index": "C",
        "solvedCount": 12868
      },
      {
        "contestId": 1352,
        "index": "B",
        "solvedCount": 12124
      },
      {
        "contestId": 1352,
        "index": "A",
        "solvedCount": 20778
      },
      {
        "contestId": 1351,
        "index": "C",
        "solvedCount": 7481
      },
      {
        "contestId": 1351,
        "index": "B",
        "solvedCount": 13407
      },
      {
        "contestId": 1351,
        "index": "A",
        "solvedCount": 15856
      },
      {
        "contestId": 1350,
        "index": "B",
        "solvedCount": 18526
      },
      {
        "contestId": 1350,
        "index": "A",
        "solvedCount": 24298
      },
      {
        "contestId": 1349,
        "index": "F2",
        "solvedCount": 95
      },
      {
        "contestId": 1349,
        "index": "F1",
        "solvedCount": 323
      },
      {
        "contestId": 1349,
        "index": "E",
        "solvedCount": 71
      },
      {
        "contestId": 1349,
        "index": "D",
        "solvedCount": 618
      },
      {
        "contestId": 1349,
        "index": "C",
        "solvedCount": 2690
      },
      {
        "contestId": 1349,
        "index": "B",
        "solvedCount": 3713
      },
      {
        "contestId": 1349,
        "index": "A",
        "solvedCount": 6857
      },
      {
        "contestId": 1348,
        "index": "F",
        "solvedCount": 688
      },
      {
        "contestId": 1348,
        "index": "E",
        "solvedCount": 1862
      },
      {
        "contestId": 1348,
        "index": "D",
        "solvedCount": 8014
      },
      {
        "contestId": 1348,
        "index": "C",
        "solvedCount": 13633
      },
      {
        "contestId": 1348,
        "index": "B",
        "solvedCount": 22965
      },
      {
        "contestId": 1348,
        "index": "A",
        "solvedCount": 35921
      },
      {
        "contestId": 1346,
        "index": "I",
        "solvedCount": 5
      },
      {
        "contestId": 1346,
        "index": "H",
        "solvedCount": 10
      },
      {
        "contestId": 1346,
        "index": "G",
        "solvedCount": 48
      },
      {
        "contestId": 1346,
        "index": "F",
        "solvedCount": 110
      },
      {
        "contestId": 1346,
        "index": "E",
        "solvedCount": 169
      },
      {
        "contestId": 1346,
        "index": "D",
        "solvedCount": 259
      },
      {
        "contestId": 1346,
        "index": "C",
        "solvedCount": 311
      },
      {
        "contestId": 1346,
        "index": "B",
        "solvedCount": 675
      },
      {
        "contestId": 1346,
        "index": "A",
        "solvedCount": 1085
      },
      {
        "contestId": 1345,
        "index": "B",
        "solvedCount": 23210
      },
      {
        "contestId": 1345,
        "index": "A",
        "solvedCount": 22926
      },
      {
        "contestId": 1344,
        "index": "F",
        "solvedCount": 192
      },
      {
        "contestId": 1344,
        "index": "E",
        "solvedCount": 216
      },
      {
        "contestId": 1344,
        "index": "D",
        "solvedCount": 723
      },
      {
        "contestId": 1344,
        "index": "C",
        "solvedCount": 1175
      },
      {
        "contestId": 1344,
        "index": "B",
        "solvedCount": 2620
      },
      {
        "contestId": 1344,
        "index": "A",
        "solvedCount": 5603
      },
      {
        "contestId": 1343,
        "index": "F",
        "solvedCount": 127
      },
      {
        "contestId": 1343,
        "index": "E",
        "solvedCount": 656
      },
      {
        "contestId": 1343,
        "index": "D",
        "solvedCount": 2745
      },
      {
        "contestId": 1343,
        "index": "C",
        "solvedCount": 13178
      },
      {
        "contestId": 1343,
        "index": "B",
        "solvedCount": 18605
      },
      {
        "contestId": 1343,
        "index": "A",
        "solvedCount": 18171
      },
      {
        "contestId": 1342,
        "index": "F",
        "solvedCount": 27
      },
      {
        "contestId": 1342,
        "index": "E",
        "solvedCount": 360
      },
      {
        "contestId": 1342,
        "index": "D",
        "solvedCount": 1869
      },
      {
        "contestId": 1342,
        "index": "C",
        "solvedCount": 4400
      },
      {
        "contestId": 1342,
        "index": "B",
        "solvedCount": 12419
      },
      {
        "contestId": 1342,
        "index": "A",
        "solvedCount": 14070
      },
      {
        "contestId": 1341,
        "index": "B",
        "solvedCount": 18291
      },
      {
        "contestId": 1341,
        "index": "A",
        "solvedCount": 26594
      },
      {
        "contestId": 1340,
        "index": "F",
        "solvedCount": 352
      },
      {
        "contestId": 1340,
        "index": "E",
        "solvedCount": 46
      },
      {
        "contestId": 1340,
        "index": "D",
        "solvedCount": 607
      },
      {
        "contestId": 1340,
        "index": "C",
        "solvedCount": 1434
      },
      {
        "contestId": 1340,
        "index": "B",
        "solvedCount": 3151
      },
      {
        "contestId": 1340,
        "index": "A",
        "solvedCount": 3618
      },
      {
        "contestId": 1339,
        "index": "B",
        "solvedCount": 23691
      },
      {
        "contestId": 1339,
        "index": "A",
        "solvedCount": 28478
      },
      {
        "contestId": 1338,
        "index": "E",
        "solvedCount": 179
      },
      {
        "contestId": 1338,
        "index": "D",
        "solvedCount": 717
      },
      {
        "contestId": 1338,
        "index": "C",
        "solvedCount": 2040
      },
      {
        "contestId": 1338,
        "index": "B",
        "solvedCount": 3868
      },
      {
        "contestId": 1338,
        "index": "A",
        "solvedCount": 9654
      },
      {
        "contestId": 1337,
        "index": "B",
        "solvedCount": 30319
      },
      {
        "contestId": 1337,
        "index": "A",
        "solvedCount": 32384
      },
      {
        "contestId": 1336,
        "index": "F",
        "solvedCount": 151
      },
      {
        "contestId": 1336,
        "index": "E2",
        "solvedCount": 255
      },
      {
        "contestId": 1336,
        "index": "E1",
        "solvedCount": 606
      },
      {
        "contestId": 1336,
        "index": "D",
        "solvedCount": 344
      },
      {
        "contestId": 1336,
        "index": "C",
        "solvedCount": 2277
      },
      {
        "contestId": 1336,
        "index": "B",
        "solvedCount": 4753
      },
      {
        "contestId": 1336,
        "index": "A",
        "solvedCount": 8600
      },
      {
        "contestId": 1335,
        "index": "F",
        "solvedCount": 299
      },
      {
        "contestId": 1335,
        "index": "E2",
        "solvedCount": 1690
      },
      {
        "contestId": 1335,
        "index": "E1",
        "solvedCount": 3491
      },
      {
        "contestId": 1335,
        "index": "D",
        "solvedCount": 10540
      },
      {
        "contestId": 1335,
        "index": "C",
        "solvedCount": 14052
      },
      {
        "contestId": 1335,
        "index": "B",
        "solvedCount": 16256
      },
      {
        "contestId": 1335,
        "index": "A",
        "solvedCount": 21384
      },
      {
        "contestId": 1334,
        "index": "G",
        "solvedCount": 26
      },
      {
        "contestId": 1334,
        "index": "F",
        "solvedCount": 132
      },
      {
        "contestId": 1334,
        "index": "E",
        "solvedCount": 542
      },
      {
        "contestId": 1334,
        "index": "D",
        "solvedCount": 2546
      },
      {
        "contestId": 1334,
        "index": "C",
        "solvedCount": 5739
      },
      {
        "contestId": 1334,
        "index": "B",
        "solvedCount": 12188
      },
      {
        "contestId": 1334,
        "index": "A",
        "solvedCount": 11226
      },
      {
        "contestId": 1333,
        "index": "F",
        "solvedCount": 3756
      },
      {
        "contestId": 1333,
        "index": "E",
        "solvedCount": 1245
      },
      {
        "contestId": 1333,
        "index": "D",
        "solvedCount": 3530
      },
      {
        "contestId": 1333,
        "index": "C",
        "solvedCount": 11510
      },
      {
        "contestId": 1333,
        "index": "B",
        "solvedCount": 20505
      },
      {
        "contestId": 1333,
        "index": "A",
        "solvedCount": 23047
      },
      {
        "contestId": 1332,
        "index": "G",
        "solvedCount": 257
      },
      {
        "contestId": 1332,
        "index": "F",
        "solvedCount": 928
      },
      {
        "contestId": 1332,
        "index": "E",
        "solvedCount": 3313
      },
      {
        "contestId": 1332,
        "index": "D",
        "solvedCount": 7605
      },
      {
        "contestId": 1332,
        "index": "C",
        "solvedCount": 14690
      },
      {
        "contestId": 1332,
        "index": "B",
        "solvedCount": 16117
      },
      {
        "contestId": 1332,
        "index": "A",
        "solvedCount": 18680
      },
      {
        "contestId": 1331,
        "index": "H",
        "solvedCount": 219
      },
      {
        "contestId": 1331,
        "index": "G",
        "solvedCount": 223
      },
      {
        "contestId": 1331,
        "index": "F",
        "solvedCount": 214
      },
      {
        "contestId": 1331,
        "index": "E",
        "solvedCount": 643
      },
      {
        "contestId": 1331,
        "index": "D",
        "solvedCount": 8436
      },
      {
        "contestId": 1331,
        "index": "C",
        "solvedCount": 1821
      },
      {
        "contestId": 1331,
        "index": "B",
        "solvedCount": 3995
      },
      {
        "contestId": 1331,
        "index": "A",
        "solvedCount": 10071
      },
      {
        "contestId": 1330,
        "index": "B",
        "solvedCount": 13474
      },
      {
        "contestId": 1330,
        "index": "A",
        "solvedCount": 17876
      },
      {
        "contestId": 1329,
        "index": "E",
        "solvedCount": 156
      },
      {
        "contestId": 1329,
        "index": "D",
        "solvedCount": 285
      },
      {
        "contestId": 1329,
        "index": "C",
        "solvedCount": 1194
      },
      {
        "contestId": 1329,
        "index": "B",
        "solvedCount": 3414
      },
      {
        "contestId": 1329,
        "index": "A",
        "solvedCount": 3668
      },
      {
        "contestId": 1328,
        "index": "F",
        "solvedCount": 427
      },
      {
        "contestId": 1328,
        "index": "E",
        "solvedCount": 1138
      },
      {
        "contestId": 1328,
        "index": "D",
        "solvedCount": 2653
      },
      {
        "contestId": 1328,
        "index": "C",
        "solvedCount": 11342
      },
      {
        "contestId": 1328,
        "index": "B",
        "solvedCount": 10319
      },
      {
        "contestId": 1328,
        "index": "A",
        "solvedCount": 19532
      },
      {
        "contestId": 1327,
        "index": "G",
        "solvedCount": 24
      },
      {
        "contestId": 1327,
        "index": "F",
        "solvedCount": 105
      },
      {
        "contestId": 1327,
        "index": "E",
        "solvedCount": 2482
      },
      {
        "contestId": 1327,
        "index": "D",
        "solvedCount": 710
      },
      {
        "contestId": 1327,
        "index": "C",
        "solvedCount": 4739
      },
      {
        "contestId": 1327,
        "index": "B",
        "solvedCount": 9088
      },
      {
        "contestId": 1327,
        "index": "A",
        "solvedCount": 11452
      },
      {
        "contestId": 1326,
        "index": "G",
        "solvedCount": 56
      },
      {
        "contestId": 1326,
        "index": "F2",
        "solvedCount": 389
      },
      {
        "contestId": 1326,
        "index": "F1",
        "solvedCount": 738
      },
      {
        "contestId": 1326,
        "index": "E",
        "solvedCount": 1799
      },
      {
        "contestId": 1326,
        "index": "D2",
        "solvedCount": 8834
      },
      {
        "contestId": 1326,
        "index": "D1",
        "solvedCount": 11091
      },
      {
        "contestId": 1326,
        "index": "C",
        "solvedCount": 14556
      },
      {
        "contestId": 1326,
        "index": "B",
        "solvedCount": 22114
      },
      {
        "contestId": 1326,
        "index": "A",
        "solvedCount": 26579
      },
      {
        "contestId": 1325,
        "index": "F",
        "solvedCount": 1465
      },
      {
        "contestId": 1325,
        "index": "E",
        "solvedCount": 1619
      },
      {
        "contestId": 1325,
        "index": "D",
        "solvedCount": 10634
      },
      {
        "contestId": 1325,
        "index": "C",
        "solvedCount": 12270
      },
      {
        "contestId": 1325,
        "index": "B",
        "solvedCount": 31792
      },
      {
        "contestId": 1325,
        "index": "A",
        "solvedCount": 31551
      },
      {
        "contestId": 1324,
        "index": "F",
        "solvedCount": 1024
      },
      {
        "contestId": 1324,
        "index": "E",
        "solvedCount": 2189
      },
      {
        "contestId": 1324,
        "index": "D",
        "solvedCount": 5226
      },
      {
        "contestId": 1324,
        "index": "C",
        "solvedCount": 9176
      },
      {
        "contestId": 1324,
        "index": "B",
        "solvedCount": 9205
      },
      {
        "contestId": 1324,
        "index": "A",
        "solvedCount": 11202
      },
      {
        "contestId": 1323,
        "index": "B",
        "solvedCount": 7943
      },
      {
        "contestId": 1323,
        "index": "A",
        "solvedCount": 17682
      },
      {
        "contestId": 1322,
        "index": "F",
        "solvedCount": 80
      },
      {
        "contestId": 1322,
        "index": "E",
        "solvedCount": 258
      },
      {
        "contestId": 1322,
        "index": "D",
        "solvedCount": 603
      },
      {
        "contestId": 1322,
        "index": "C",
        "solvedCount": 1557
      },
      {
        "contestId": 1322,
        "index": "B",
        "solvedCount": 2337
      },
      {
        "contestId": 1322,
        "index": "A",
        "solvedCount": 4737
      },
      {
        "contestId": 1321,
        "index": "C",
        "solvedCount": 8914
      },
      {
        "contestId": 1321,
        "index": "A",
        "solvedCount": 13188
      },
      {
        "contestId": 1320,
        "index": "F",
        "solvedCount": 114
      },
      {
        "contestId": 1320,
        "index": "E",
        "solvedCount": 538
      },
      {
        "contestId": 1320,
        "index": "D",
        "solvedCount": 1009
      },
      {
        "contestId": 1320,
        "index": "C",
        "solvedCount": 1939
      },
      {
        "contestId": 1320,
        "index": "B",
        "solvedCount": 2807
      },
      {
        "contestId": 1320,
        "index": "A",
        "solvedCount": 7454
      },
      {
        "contestId": 1316,
        "index": "F",
        "solvedCount": 413
      },
      {
        "contestId": 1316,
        "index": "E",
        "solvedCount": 2879
      },
      {
        "contestId": 1316,
        "index": "D",
        "solvedCount": 3036
      },
      {
        "contestId": 1316,
        "index": "C",
        "solvedCount": 6667
      },
      {
        "contestId": 1316,
        "index": "B",
        "solvedCount": 10388
      },
      {
        "contestId": 1316,
        "index": "A",
        "solvedCount": 17180
      },
      {
        "contestId": 1315,
        "index": "C",
        "solvedCount": 9109
      },
      {
        "contestId": 1315,
        "index": "B",
        "solvedCount": 8383
      },
      {
        "contestId": 1315,
        "index": "A",
        "solvedCount": 10770
      },
      {
        "contestId": 1313,
        "index": "E",
        "solvedCount": 426
      },
      {
        "contestId": 1313,
        "index": "D",
        "solvedCount": 930
      },
      {
        "contestId": 1313,
        "index": "C2",
        "solvedCount": 5622
      },
      {
        "contestId": 1313,
        "index": "C1",
        "solvedCount": 9482
      },
      {
        "contestId": 1313,
        "index": "B",
        "solvedCount": 6200
      },
      {
        "contestId": 1313,
        "index": "A",
        "solvedCount": 14191
      },
      {
        "contestId": 1312,
        "index": "G",
        "solvedCount": 96
      },
      {
        "contestId": 1312,
        "index": "F",
        "solvedCount": 118
      },
      {
        "contestId": 1312,
        "index": "E",
        "solvedCount": 847
      },
      {
        "contestId": 1312,
        "index": "D",
        "solvedCount": 2571
      },
      {
        "contestId": 1312,
        "index": "C",
        "solvedCount": 5310
      },
      {
        "contestId": 1312,
        "index": "B",
        "solvedCount": 9297
      },
      {
        "contestId": 1312,
        "index": "A",
        "solvedCount": 10369
      },
      {
        "contestId": 1311,
        "index": "F",
        "solvedCount": 667
      },
      {
        "contestId": 1311,
        "index": "E",
        "solvedCount": 247
      },
      {
        "contestId": 1311,
        "index": "D",
        "solvedCount": 1335
      },
      {
        "contestId": 1311,
        "index": "C",
        "solvedCount": 6612
      },
      {
        "contestId": 1311,
        "index": "B",
        "solvedCount": 7541
      },
      {
        "contestId": 1311,
        "index": "A",
        "solvedCount": 12243
      },
      {
        "contestId": 1310,
        "index": "F",
        "solvedCount": 33
      },
      {
        "contestId": 1310,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 1310,
        "index": "D",
        "solvedCount": 509
      },
      {
        "contestId": 1310,
        "index": "C",
        "solvedCount": 240
      },
      {
        "contestId": 1310,
        "index": "B",
        "solvedCount": 189
      },
      {
        "contestId": 1310,
        "index": "A",
        "solvedCount": 1540
      },
      {
        "contestId": 1307,
        "index": "G",
        "solvedCount": 358
      },
      {
        "contestId": 1307,
        "index": "F",
        "solvedCount": 480
      },
      {
        "contestId": 1307,
        "index": "E",
        "solvedCount": 1016
      },
      {
        "contestId": 1307,
        "index": "D",
        "solvedCount": 5528
      },
      {
        "contestId": 1307,
        "index": "C",
        "solvedCount": 10963
      },
      {
        "contestId": 1307,
        "index": "B",
        "solvedCount": 12164
      },
      {
        "contestId": 1307,
        "index": "A",
        "solvedCount": 14236
      },
      {
        "contestId": 1305,
        "index": "H",
        "solvedCount": 79
      },
      {
        "contestId": 1305,
        "index": "G",
        "solvedCount": 689
      },
      {
        "contestId": 1305,
        "index": "F",
        "solvedCount": 2045
      },
      {
        "contestId": 1305,
        "index": "E",
        "solvedCount": 2706
      },
      {
        "contestId": 1305,
        "index": "D",
        "solvedCount": 4407
      },
      {
        "contestId": 1305,
        "index": "C",
        "solvedCount": 11944
      },
      {
        "contestId": 1305,
        "index": "B",
        "solvedCount": 10550
      },
      {
        "contestId": 1305,
        "index": "A",
        "solvedCount": 13164
      },
      {
        "contestId": 1304,
        "index": "F2",
        "solvedCount": 1159
      },
      {
        "contestId": 1304,
        "index": "F1",
        "solvedCount": 1404
      },
      {
        "contestId": 1304,
        "index": "E",
        "solvedCount": 4445
      },
      {
        "contestId": 1304,
        "index": "D",
        "solvedCount": 5756
      },
      {
        "contestId": 1304,
        "index": "C",
        "solvedCount": 14477
      },
      {
        "contestId": 1304,
        "index": "B",
        "solvedCount": 16597
      },
      {
        "contestId": 1304,
        "index": "A",
        "solvedCount": 23081
      },
      {
        "contestId": 1303,
        "index": "G",
        "solvedCount": 37
      },
      {
        "contestId": 1303,
        "index": "F",
        "solvedCount": 25
      },
      {
        "contestId": 1303,
        "index": "E",
        "solvedCount": 426
      },
      {
        "contestId": 1303,
        "index": "D",
        "solvedCount": 1652
      },
      {
        "contestId": 1303,
        "index": "C",
        "solvedCount": 4174
      },
      {
        "contestId": 1303,
        "index": "B",
        "solvedCount": 6526
      },
      {
        "contestId": 1303,
        "index": "A",
        "solvedCount": 10693
      },
      {
        "contestId": 1302,
        "index": "J",
        "solvedCount": 2
      },
      {
        "contestId": 1302,
        "index": "I",
        "solvedCount": 2
      },
      {
        "contestId": 1302,
        "index": "H",
        "solvedCount": 2
      },
      {
        "contestId": 1302,
        "index": "G",
        "solvedCount": 7
      },
      {
        "contestId": 1302,
        "index": "F",
        "solvedCount": 21
      },
      {
        "contestId": 1302,
        "index": "E",
        "solvedCount": 13
      },
      {
        "contestId": 1302,
        "index": "D",
        "solvedCount": 22
      },
      {
        "contestId": 1302,
        "index": "C",
        "solvedCount": 152
      },
      {
        "contestId": 1302,
        "index": "B",
        "solvedCount": 53
      },
      {
        "contestId": 1302,
        "index": "A",
        "solvedCount": 116
      },
      {
        "contestId": 1301,
        "index": "F",
        "solvedCount": 924
      },
      {
        "contestId": 1301,
        "index": "E",
        "solvedCount": 1103
      },
      {
        "contestId": 1301,
        "index": "D",
        "solvedCount": 3642
      },
      {
        "contestId": 1301,
        "index": "C",
        "solvedCount": 8661
      },
      {
        "contestId": 1301,
        "index": "B",
        "solvedCount": 13087
      },
      {
        "contestId": 1301,
        "index": "A",
        "solvedCount": 18096
      },
      {
        "contestId": 1300,
        "index": "B",
        "solvedCount": 19817
      },
      {
        "contestId": 1300,
        "index": "A",
        "solvedCount": 19679
      },
      {
        "contestId": 1299,
        "index": "E",
        "solvedCount": 141
      },
      {
        "contestId": 1299,
        "index": "D",
        "solvedCount": 372
      },
      {
        "contestId": 1299,
        "index": "C",
        "solvedCount": 2236
      },
      {
        "contestId": 1299,
        "index": "B",
        "solvedCount": 2074
      },
      {
        "contestId": 1299,
        "index": "A",
        "solvedCount": 4289
      },
      {
        "contestId": 1297,
        "index": "I",
        "solvedCount": 2
      },
      {
        "contestId": 1297,
        "index": "H",
        "solvedCount": 4
      },
      {
        "contestId": 1297,
        "index": "G",
        "solvedCount": 18
      },
      {
        "contestId": 1297,
        "index": "F",
        "solvedCount": 63
      },
      {
        "contestId": 1297,
        "index": "E",
        "solvedCount": 102
      },
      {
        "contestId": 1297,
        "index": "D",
        "solvedCount": 181
      },
      {
        "contestId": 1297,
        "index": "C",
        "solvedCount": 281
      },
      {
        "contestId": 1297,
        "index": "B",
        "solvedCount": 252
      },
      {
        "contestId": 1297,
        "index": "A",
        "solvedCount": 639
      },
      {
        "contestId": 1296,
        "index": "F",
        "solvedCount": 339
      },
      {
        "contestId": 1296,
        "index": "E2",
        "solvedCount": 742
      },
      {
        "contestId": 1296,
        "index": "E1",
        "solvedCount": 1580
      },
      {
        "contestId": 1296,
        "index": "D",
        "solvedCount": 4366
      },
      {
        "contestId": 1296,
        "index": "C",
        "solvedCount": 4813
      },
      {
        "contestId": 1296,
        "index": "B",
        "solvedCount": 11895
      },
      {
        "contestId": 1296,
        "index": "A",
        "solvedCount": 13090
      },
      {
        "contestId": 1295,
        "index": "F",
        "solvedCount": 52
      },
      {
        "contestId": 1295,
        "index": "E",
        "solvedCount": 405
      },
      {
        "contestId": 1295,
        "index": "D",
        "solvedCount": 1784
      },
      {
        "contestId": 1295,
        "index": "C",
        "solvedCount": 3677
      },
      {
        "contestId": 1295,
        "index": "B",
        "solvedCount": 3040
      },
      {
        "contestId": 1295,
        "index": "A",
        "solvedCount": 9937
      },
      {
        "contestId": 1294,
        "index": "F",
        "solvedCount": 693
      },
      {
        "contestId": 1294,
        "index": "E",
        "solvedCount": 890
      },
      {
        "contestId": 1294,
        "index": "D",
        "solvedCount": 2998
      },
      {
        "contestId": 1294,
        "index": "C",
        "solvedCount": 7376
      },
      {
        "contestId": 1294,
        "index": "B",
        "solvedCount": 8828
      },
      {
        "contestId": 1294,
        "index": "A",
        "solvedCount": 12519
      },
      {
        "contestId": 1293,
        "index": "B",
        "solvedCount": 18993
      },
      {
        "contestId": 1293,
        "index": "A",
        "solvedCount": 14298
      },
      {
        "contestId": 1292,
        "index": "F",
        "solvedCount": 252
      },
      {
        "contestId": 1292,
        "index": "E",
        "solvedCount": 283
      },
      {
        "contestId": 1292,
        "index": "D",
        "solvedCount": 665
      },
      {
        "contestId": 1292,
        "index": "C",
        "solvedCount": 1422
      },
      {
        "contestId": 1292,
        "index": "B",
        "solvedCount": 2855
      },
      {
        "contestId": 1292,
        "index": "A",
        "solvedCount": 4938
      },
      {
        "contestId": 1291,
        "index": "F",
        "solvedCount": 348
      },
      {
        "contestId": 1291,
        "index": "B",
        "solvedCount": 13116
      },
      {
        "contestId": 1291,
        "index": "A",
        "solvedCount": 17606
      },
      {
        "contestId": 1290,
        "index": "F",
        "solvedCount": 295
      },
      {
        "contestId": 1290,
        "index": "E",
        "solvedCount": 395
      },
      {
        "contestId": 1290,
        "index": "D",
        "solvedCount": 484
      },
      {
        "contestId": 1290,
        "index": "C",
        "solvedCount": 1167
      },
      {
        "contestId": 1290,
        "index": "B",
        "solvedCount": 2287
      },
      {
        "contestId": 1290,
        "index": "A",
        "solvedCount": 3087
      },
      {
        "contestId": 1288,
        "index": "F",
        "solvedCount": 18
      },
      {
        "contestId": 1288,
        "index": "E",
        "solvedCount": 514
      },
      {
        "contestId": 1288,
        "index": "D",
        "solvedCount": 929
      },
      {
        "contestId": 1288,
        "index": "C",
        "solvedCount": 2832
      },
      {
        "contestId": 1288,
        "index": "B",
        "solvedCount": 6835
      },
      {
        "contestId": 1288,
        "index": "A",
        "solvedCount": 7250
      },
      {
        "contestId": 1287,
        "index": "B",
        "solvedCount": 8705
      },
      {
        "contestId": 1287,
        "index": "A",
        "solvedCount": 18523
      },
      {
        "contestId": 1286,
        "index": "F",
        "solvedCount": 192
      },
      {
        "contestId": 1286,
        "index": "E",
        "solvedCount": 409
      },
      {
        "contestId": 1286,
        "index": "D",
        "solvedCount": 463
      },
      {
        "contestId": 1286,
        "index": "C2",
        "solvedCount": 489
      },
      {
        "contestId": 1286,
        "index": "C1",
        "solvedCount": 936
      },
      {
        "contestId": 1286,
        "index": "B",
        "solvedCount": 2529
      },
      {
        "contestId": 1286,
        "index": "A",
        "solvedCount": 3835
      },
      {
        "contestId": 1285,
        "index": "F",
        "solvedCount": 927
      },
      {
        "contestId": 1285,
        "index": "E",
        "solvedCount": 1522
      },
      {
        "contestId": 1285,
        "index": "D",
        "solvedCount": 6663
      },
      {
        "contestId": 1285,
        "index": "C",
        "solvedCount": 18950
      },
      {
        "contestId": 1285,
        "index": "B",
        "solvedCount": 18695
      },
      {
        "contestId": 1285,
        "index": "A",
        "solvedCount": 25325
      },
      {
        "contestId": 1284,
        "index": "G",
        "solvedCount": 132
      },
      {
        "contestId": 1284,
        "index": "F",
        "solvedCount": 280
      },
      {
        "contestId": 1284,
        "index": "E",
        "solvedCount": 995
      },
      {
        "contestId": 1284,
        "index": "D",
        "solvedCount": 2788
      },
      {
        "contestId": 1284,
        "index": "C",
        "solvedCount": 7104
      },
      {
        "contestId": 1284,
        "index": "B",
        "solvedCount": 10060
      },
      {
        "contestId": 1284,
        "index": "A",
        "solvedCount": 17167
      },
      {
        "contestId": 1283,
        "index": "F",
        "solvedCount": 232
      },
      {
        "contestId": 1283,
        "index": "E",
        "solvedCount": 1192
      },
      {
        "contestId": 1283,
        "index": "D",
        "solvedCount": 1433
      },
      {
        "contestId": 1283,
        "index": "C",
        "solvedCount": 3426
      },
      {
        "contestId": 1283,
        "index": "B",
        "solvedCount": 8868
      },
      {
        "contestId": 1283,
        "index": "A",
        "solvedCount": 10884
      },
      {
        "contestId": 1282,
        "index": "E",
        "solvedCount": 885
      },
      {
        "contestId": 1282,
        "index": "D",
        "solvedCount": 1862
      },
      {
        "contestId": 1282,
        "index": "C",
        "solvedCount": 3914
      },
      {
        "contestId": 1282,
        "index": "B2",
        "solvedCount": 9379
      },
      {
        "contestId": 1282,
        "index": "B1",
        "solvedCount": 10807
      },
      {
        "contestId": 1282,
        "index": "A",
        "solvedCount": 13460
      },
      {
        "contestId": 1281,
        "index": "B",
        "solvedCount": 7601
      },
      {
        "contestId": 1281,
        "index": "A",
        "solvedCount": 16352
      },
      {
        "contestId": 1280,
        "index": "F",
        "solvedCount": 49
      },
      {
        "contestId": 1280,
        "index": "E",
        "solvedCount": 179
      },
      {
        "contestId": 1280,
        "index": "D",
        "solvedCount": 691
      },
      {
        "contestId": 1280,
        "index": "C",
        "solvedCount": 1756
      },
      {
        "contestId": 1280,
        "index": "B",
        "solvedCount": 1865
      },
      {
        "contestId": 1280,
        "index": "A",
        "solvedCount": 2092
      },
      {
        "contestId": 1279,
        "index": "F",
        "solvedCount": 46
      },
      {
        "contestId": 1279,
        "index": "E",
        "solvedCount": 36
      },
      {
        "contestId": 1279,
        "index": "D",
        "solvedCount": 1942
      },
      {
        "contestId": 1279,
        "index": "C",
        "solvedCount": 4307
      },
      {
        "contestId": 1279,
        "index": "B",
        "solvedCount": 5256
      },
      {
        "contestId": 1279,
        "index": "A",
        "solvedCount": 7780
      },
      {
        "contestId": 1278,
        "index": "F",
        "solvedCount": 91
      },
      {
        "contestId": 1278,
        "index": "E",
        "solvedCount": 337
      },
      {
        "contestId": 1278,
        "index": "D",
        "solvedCount": 604
      },
      {
        "contestId": 1278,
        "index": "C",
        "solvedCount": 2336
      },
      {
        "contestId": 1278,
        "index": "B",
        "solvedCount": 3818
      },
      {
        "contestId": 1278,
        "index": "A",
        "solvedCount": 6608
      },
      {
        "contestId": 1277,
        "index": "D",
        "solvedCount": 2719
      },
      {
        "contestId": 1277,
        "index": "B",
        "solvedCount": 12055
      },
      {
        "contestId": 1277,
        "index": "A",
        "solvedCount": 10951
      },
      {
        "contestId": 1276,
        "index": "F",
        "solvedCount": 236
      },
      {
        "contestId": 1276,
        "index": "E",
        "solvedCount": 67
      },
      {
        "contestId": 1276,
        "index": "D",
        "solvedCount": 386
      },
      {
        "contestId": 1276,
        "index": "C",
        "solvedCount": 1088
      },
      {
        "contestId": 1276,
        "index": "B",
        "solvedCount": 2399
      },
      {
        "contestId": 1276,
        "index": "A",
        "solvedCount": 5475
      },
      {
        "contestId": 1275,
        "index": "F",
        "solvedCount": 89
      },
      {
        "contestId": 1275,
        "index": "E3",
        "solvedCount": 56
      },
      {
        "contestId": 1275,
        "index": "E2",
        "solvedCount": 129
      },
      {
        "contestId": 1275,
        "index": "E1",
        "solvedCount": 252
      },
      {
        "contestId": 1275,
        "index": "D",
        "solvedCount": 418
      },
      {
        "contestId": 1275,
        "index": "C",
        "solvedCount": 636
      },
      {
        "contestId": 1275,
        "index": "B",
        "solvedCount": 760
      },
      {
        "contestId": 1275,
        "index": "A",
        "solvedCount": 791
      },
      {
        "contestId": 1272,
        "index": "F",
        "solvedCount": 241
      },
      {
        "contestId": 1272,
        "index": "E",
        "solvedCount": 776
      },
      {
        "contestId": 1272,
        "index": "D",
        "solvedCount": 3138
      },
      {
        "contestId": 1272,
        "index": "C",
        "solvedCount": 6464
      },
      {
        "contestId": 1272,
        "index": "B",
        "solvedCount": 5792
      },
      {
        "contestId": 1272,
        "index": "A",
        "solvedCount": 8777
      },
      {
        "contestId": 1271,
        "index": "F",
        "solvedCount": 168
      },
      {
        "contestId": 1271,
        "index": "E",
        "solvedCount": 2806
      },
      {
        "contestId": 1271,
        "index": "D",
        "solvedCount": 2450
      },
      {
        "contestId": 1271,
        "index": "C",
        "solvedCount": 9497
      },
      {
        "contestId": 1271,
        "index": "B",
        "solvedCount": 10532
      },
      {
        "contestId": 1271,
        "index": "A",
        "solvedCount": 13974
      },
      {
        "contestId": 1270,
        "index": "I",
        "solvedCount": 193
      },
      {
        "contestId": 1270,
        "index": "H",
        "solvedCount": 468
      },
      {
        "contestId": 1270,
        "index": "G",
        "solvedCount": 1577
      },
      {
        "contestId": 1270,
        "index": "F",
        "solvedCount": 943
      },
      {
        "contestId": 1270,
        "index": "E",
        "solvedCount": 2009
      },
      {
        "contestId": 1270,
        "index": "D",
        "solvedCount": 4083
      },
      {
        "contestId": 1270,
        "index": "C",
        "solvedCount": 12475
      },
      {
        "contestId": 1270,
        "index": "B",
        "solvedCount": 14747
      },
      {
        "contestId": 1270,
        "index": "A",
        "solvedCount": 15785
      },
      {
        "contestId": 1269,
        "index": "B",
        "solvedCount": 8522
      },
      {
        "contestId": 1269,
        "index": "A",
        "solvedCount": 18092
      },
      {
        "contestId": 1268,
        "index": "E",
        "solvedCount": 186
      },
      {
        "contestId": 1268,
        "index": "D",
        "solvedCount": 309
      },
      {
        "contestId": 1268,
        "index": "C",
        "solvedCount": 1177
      },
      {
        "contestId": 1268,
        "index": "B",
        "solvedCount": 2615
      },
      {
        "contestId": 1268,
        "index": "A",
        "solvedCount": 3141
      },
      {
        "contestId": 1267,
        "index": "L",
        "solvedCount": 771
      },
      {
        "contestId": 1267,
        "index": "K",
        "solvedCount": 463
      },
      {
        "contestId": 1267,
        "index": "J",
        "solvedCount": 649
      },
      {
        "contestId": 1267,
        "index": "I",
        "solvedCount": 155
      },
      {
        "contestId": 1267,
        "index": "H",
        "solvedCount": 7
      },
      {
        "contestId": 1267,
        "index": "G",
        "solvedCount": 24
      },
      {
        "contestId": 1267,
        "index": "F",
        "solvedCount": 112
      },
      {
        "contestId": 1267,
        "index": "E",
        "solvedCount": 825
      },
      {
        "contestId": 1267,
        "index": "D",
        "solvedCount": 55
      },
      {
        "contestId": 1267,
        "index": "C",
        "solvedCount": 7
      },
      {
        "contestId": 1267,
        "index": "B",
        "solvedCount": 1060
      },
      {
        "contestId": 1267,
        "index": "A",
        "solvedCount": 208
      },
      {
        "contestId": 1266,
        "index": "H",
        "solvedCount": 89
      },
      {
        "contestId": 1266,
        "index": "G",
        "solvedCount": 110
      },
      {
        "contestId": 1266,
        "index": "F",
        "solvedCount": 303
      },
      {
        "contestId": 1266,
        "index": "E",
        "solvedCount": 1942
      },
      {
        "contestId": 1266,
        "index": "D",
        "solvedCount": 3255
      },
      {
        "contestId": 1266,
        "index": "C",
        "solvedCount": 8855
      },
      {
        "contestId": 1266,
        "index": "B",
        "solvedCount": 13056
      },
      {
        "contestId": 1266,
        "index": "A",
        "solvedCount": 13207
      },
      {
        "contestId": 1265,
        "index": "E",
        "solvedCount": 2834
      },
      {
        "contestId": 1265,
        "index": "B",
        "solvedCount": 11695
      },
      {
        "contestId": 1265,
        "index": "A",
        "solvedCount": 13755
      },
      {
        "contestId": 1264,
        "index": "F",
        "solvedCount": 549
      },
      {
        "contestId": 1264,
        "index": "E",
        "solvedCount": 560
      },
      {
        "contestId": 1264,
        "index": "D2",
        "solvedCount": 598
      },
      {
        "contestId": 1264,
        "index": "D1",
        "solvedCount": 790
      },
      {
        "contestId": 1264,
        "index": "C",
        "solvedCount": 1061
      },
      {
        "contestId": 1264,
        "index": "B",
        "solvedCount": 2113
      },
      {
        "contestId": 1264,
        "index": "A",
        "solvedCount": 3228
      },
      {
        "contestId": 1263,
        "index": "F",
        "solvedCount": 748
      },
      {
        "contestId": 1263,
        "index": "E",
        "solvedCount": 2454
      },
      {
        "contestId": 1263,
        "index": "D",
        "solvedCount": 11593
      },
      {
        "contestId": 1263,
        "index": "C",
        "solvedCount": 12107
      },
      {
        "contestId": 1263,
        "index": "B",
        "solvedCount": 10532
      },
      {
        "contestId": 1263,
        "index": "A",
        "solvedCount": 14978
      },
      {
        "contestId": 1261,
        "index": "F",
        "solvedCount": 300
      },
      {
        "contestId": 1260,
        "index": "F",
        "solvedCount": 23
      },
      {
        "contestId": 1260,
        "index": "E",
        "solvedCount": 243
      },
      {
        "contestId": 1260,
        "index": "D",
        "solvedCount": 921
      },
      {
        "contestId": 1260,
        "index": "C",
        "solvedCount": 2477
      },
      {
        "contestId": 1260,
        "index": "B",
        "solvedCount": 5198
      },
      {
        "contestId": 1260,
        "index": "A",
        "solvedCount": 6371
      },
      {
        "contestId": 1257,
        "index": "G",
        "solvedCount": 40
      },
      {
        "contestId": 1257,
        "index": "F",
        "solvedCount": 172
      },
      {
        "contestId": 1257,
        "index": "E",
        "solvedCount": 877
      },
      {
        "contestId": 1257,
        "index": "D",
        "solvedCount": 2060
      },
      {
        "contestId": 1257,
        "index": "C",
        "solvedCount": 6039
      },
      {
        "contestId": 1257,
        "index": "B",
        "solvedCount": 7520
      },
      {
        "contestId": 1257,
        "index": "A",
        "solvedCount": 8558
      },
      {
        "contestId": 1256,
        "index": "F",
        "solvedCount": 423
      },
      {
        "contestId": 1256,
        "index": "E",
        "solvedCount": 510
      },
      {
        "contestId": 1256,
        "index": "D",
        "solvedCount": 3296
      },
      {
        "contestId": 1256,
        "index": "C",
        "solvedCount": 1758
      },
      {
        "contestId": 1256,
        "index": "B",
        "solvedCount": 4799
      },
      {
        "contestId": 1256,
        "index": "A",
        "solvedCount": 9369
      },
      {
        "contestId": 1255,
        "index": "C",
        "solvedCount": 6264
      },
      {
        "contestId": 1255,
        "index": "B",
        "solvedCount": 10840
      },
      {
        "contestId": 1255,
        "index": "A",
        "solvedCount": 15756
      },
      {
        "contestId": 1254,
        "index": "E",
        "solvedCount": 228
      },
      {
        "contestId": 1254,
        "index": "D",
        "solvedCount": 966
      },
      {
        "contestId": 1254,
        "index": "C",
        "solvedCount": 926
      },
      {
        "contestId": 1254,
        "index": "B2",
        "solvedCount": 1864
      },
      {
        "contestId": 1254,
        "index": "B1",
        "solvedCount": 2437
      },
      {
        "contestId": 1254,
        "index": "A",
        "solvedCount": 2305
      },
      {
        "contestId": 1253,
        "index": "F",
        "solvedCount": 1223
      },
      {
        "contestId": 1253,
        "index": "E",
        "solvedCount": 2425
      },
      {
        "contestId": 1253,
        "index": "D",
        "solvedCount": 8079
      },
      {
        "contestId": 1253,
        "index": "C",
        "solvedCount": 12638
      },
      {
        "contestId": 1253,
        "index": "B",
        "solvedCount": 10365
      },
      {
        "contestId": 1253,
        "index": "A",
        "solvedCount": 16305
      },
      {
        "contestId": 1252,
        "index": "L",
        "solvedCount": 103
      },
      {
        "contestId": 1252,
        "index": "K",
        "solvedCount": 413
      },
      {
        "contestId": 1252,
        "index": "J",
        "solvedCount": 133
      },
      {
        "contestId": 1252,
        "index": "I",
        "solvedCount": 5
      },
      {
        "contestId": 1252,
        "index": "H",
        "solvedCount": 645
      },
      {
        "contestId": 1252,
        "index": "G",
        "solvedCount": 329
      },
      {
        "contestId": 1252,
        "index": "F",
        "solvedCount": 180
      },
      {
        "contestId": 1252,
        "index": "E",
        "solvedCount": 294
      },
      {
        "contestId": 1252,
        "index": "D",
        "solvedCount": 22
      },
      {
        "contestId": 1252,
        "index": "C",
        "solvedCount": 834
      },
      {
        "contestId": 1252,
        "index": "B",
        "solvedCount": 117
      },
      {
        "contestId": 1252,
        "index": "A",
        "solvedCount": 1229
      },
      {
        "contestId": 1251,
        "index": "F",
        "solvedCount": 42
      },
      {
        "contestId": 1251,
        "index": "E2",
        "solvedCount": 259
      },
      {
        "contestId": 1251,
        "index": "E1",
        "solvedCount": 313
      },
      {
        "contestId": 1251,
        "index": "D",
        "solvedCount": 1233
      },
      {
        "contestId": 1251,
        "index": "C",
        "solvedCount": 3208
      },
      {
        "contestId": 1251,
        "index": "B",
        "solvedCount": 4330
      },
      {
        "contestId": 1251,
        "index": "A",
        "solvedCount": 6954
      },
      {
        "contestId": 1250,
        "index": "N",
        "solvedCount": 403
      },
      {
        "contestId": 1250,
        "index": "M",
        "solvedCount": 76
      },
      {
        "contestId": 1250,
        "index": "L",
        "solvedCount": 805
      },
      {
        "contestId": 1250,
        "index": "K",
        "solvedCount": 8
      },
      {
        "contestId": 1250,
        "index": "J",
        "solvedCount": 605
      },
      {
        "contestId": 1250,
        "index": "I",
        "solvedCount": 19
      },
      {
        "contestId": 1250,
        "index": "H",
        "solvedCount": 883
      },
      {
        "contestId": 1250,
        "index": "G",
        "solvedCount": 169
      },
      {
        "contestId": 1250,
        "index": "F",
        "solvedCount": 1184
      },
      {
        "contestId": 1250,
        "index": "E",
        "solvedCount": 165
      },
      {
        "contestId": 1250,
        "index": "D",
        "solvedCount": 17
      },
      {
        "contestId": 1250,
        "index": "C",
        "solvedCount": 311
      },
      {
        "contestId": 1250,
        "index": "B",
        "solvedCount": 605
      },
      {
        "contestId": 1250,
        "index": "A",
        "solvedCount": 960
      },
      {
        "contestId": 1249,
        "index": "F",
        "solvedCount": 191
      },
      {
        "contestId": 1249,
        "index": "E",
        "solvedCount": 1833
      },
      {
        "contestId": 1249,
        "index": "D2",
        "solvedCount": 913
      },
      {
        "contestId": 1249,
        "index": "D1",
        "solvedCount": 1135
      },
      {
        "contestId": 1249,
        "index": "C2",
        "solvedCount": 3487
      },
      {
        "contestId": 1249,
        "index": "C1",
        "solvedCount": 5592
      },
      {
        "contestId": 1249,
        "index": "B2",
        "solvedCount": 5707
      },
      {
        "contestId": 1249,
        "index": "B1",
        "solvedCount": 8712
      },
      {
        "contestId": 1249,
        "index": "A",
        "solvedCount": 10303
      },
      {
        "contestId": 1248,
        "index": "D1",
        "solvedCount": 2213
      },
      {
        "contestId": 1248,
        "index": "B",
        "solvedCount": 14610
      },
      {
        "contestId": 1248,
        "index": "A",
        "solvedCount": 12622
      },
      {
        "contestId": 1246,
        "index": "F",
        "solvedCount": 106
      },
      {
        "contestId": 1245,
        "index": "F",
        "solvedCount": 1554
      },
      {
        "contestId": 1245,
        "index": "E",
        "solvedCount": 998
      },
      {
        "contestId": 1245,
        "index": "D",
        "solvedCount": 5803
      },
      {
        "contestId": 1245,
        "index": "C",
        "solvedCount": 14353
      },
      {
        "contestId": 1245,
        "index": "B",
        "solvedCount": 12613
      },
      {
        "contestId": 1245,
        "index": "A",
        "solvedCount": 13074
      },
      {
        "contestId": 1244,
        "index": "G",
        "solvedCount": 1177
      },
      {
        "contestId": 1244,
        "index": "F",
        "solvedCount": 1204
      },
      {
        "contestId": 1244,
        "index": "E",
        "solvedCount": 4168
      },
      {
        "contestId": 1244,
        "index": "D",
        "solvedCount": 6635
      },
      {
        "contestId": 1244,
        "index": "C",
        "solvedCount": 6904
      },
      {
        "contestId": 1244,
        "index": "B",
        "solvedCount": 13791
      },
      {
        "contestId": 1244,
        "index": "A",
        "solvedCount": 17522
      },
      {
        "contestId": 1243,
        "index": "B2",
        "solvedCount": 6547
      },
      {
        "contestId": 1243,
        "index": "B1",
        "solvedCount": 13598
      },
      {
        "contestId": 1243,
        "index": "A",
        "solvedCount": 14463
      },
      {
        "contestId": 1242,
        "index": "E",
        "solvedCount": 121
      },
      {
        "contestId": 1242,
        "index": "D",
        "solvedCount": 158
      },
      {
        "contestId": 1242,
        "index": "C",
        "solvedCount": 1105
      },
      {
        "contestId": 1242,
        "index": "B",
        "solvedCount": 3624
      },
      {
        "contestId": 1242,
        "index": "A",
        "solvedCount": 4755
      },
      {
        "contestId": 1240,
        "index": "F",
        "solvedCount": 154
      },
      {
        "contestId": 1239,
        "index": "F",
        "solvedCount": 201
      },
      {
        "contestId": 1239,
        "index": "E",
        "solvedCount": 694
      },
      {
        "contestId": 1239,
        "index": "D",
        "solvedCount": 1225
      },
      {
        "contestId": 1239,
        "index": "C",
        "solvedCount": 914
      },
      {
        "contestId": 1239,
        "index": "B",
        "solvedCount": 627
      },
      {
        "contestId": 1239,
        "index": "A",
        "solvedCount": 2792
      },
      {
        "contestId": 1238,
        "index": "G",
        "solvedCount": 22
      },
      {
        "contestId": 1238,
        "index": "F",
        "solvedCount": 211
      },
      {
        "contestId": 1238,
        "index": "E",
        "solvedCount": 341
      },
      {
        "contestId": 1238,
        "index": "D",
        "solvedCount": 1385
      },
      {
        "contestId": 1238,
        "index": "C",
        "solvedCount": 2794
      },
      {
        "contestId": 1238,
        "index": "B",
        "solvedCount": 5332
      },
      {
        "contestId": 1238,
        "index": "A",
        "solvedCount": 7643
      },
      {
        "contestId": 1237,
        "index": "H",
        "solvedCount": 255
      },
      {
        "contestId": 1237,
        "index": "G",
        "solvedCount": 82
      },
      {
        "contestId": 1237,
        "index": "F",
        "solvedCount": 727
      },
      {
        "contestId": 1237,
        "index": "E",
        "solvedCount": 1194
      },
      {
        "contestId": 1237,
        "index": "D",
        "solvedCount": 3527
      },
      {
        "contestId": 1237,
        "index": "C2",
        "solvedCount": 3953
      },
      {
        "contestId": 1237,
        "index": "C1",
        "solvedCount": 5642
      },
      {
        "contestId": 1237,
        "index": "B",
        "solvedCount": 12788
      },
      {
        "contestId": 1237,
        "index": "A",
        "solvedCount": 16147
      },
      {
        "contestId": 1236,
        "index": "F",
        "solvedCount": 124
      },
      {
        "contestId": 1236,
        "index": "E",
        "solvedCount": 579
      },
      {
        "contestId": 1236,
        "index": "D",
        "solvedCount": 1602
      },
      {
        "contestId": 1236,
        "index": "C",
        "solvedCount": 9332
      },
      {
        "contestId": 1236,
        "index": "B",
        "solvedCount": 9735
      },
      {
        "contestId": 1236,
        "index": "A",
        "solvedCount": 14802
      },
      {
        "contestId": 1234,
        "index": "F",
        "solvedCount": 237
      },
      {
        "contestId": 1234,
        "index": "E",
        "solvedCount": 632
      },
      {
        "contestId": 1234,
        "index": "D",
        "solvedCount": 2710
      },
      {
        "contestId": 1234,
        "index": "C",
        "solvedCount": 3841
      },
      {
        "contestId": 1234,
        "index": "B2",
        "solvedCount": 6249
      },
      {
        "contestId": 1234,
        "index": "B1",
        "solvedCount": 8710
      },
      {
        "contestId": 1234,
        "index": "A",
        "solvedCount": 10614
      },
      {
        "contestId": 1231,
        "index": "E",
        "solvedCount": 559
      },
      {
        "contestId": 1231,
        "index": "C",
        "solvedCount": 2944
      },
      {
        "contestId": 1230,
        "index": "B",
        "solvedCount": 16741
      },
      {
        "contestId": 1230,
        "index": "A",
        "solvedCount": 19006
      },
      {
        "contestId": 1228,
        "index": "F",
        "solvedCount": 396
      },
      {
        "contestId": 1228,
        "index": "E",
        "solvedCount": 2192
      },
      {
        "contestId": 1228,
        "index": "D",
        "solvedCount": 4748
      },
      {
        "contestId": 1228,
        "index": "C",
        "solvedCount": 8196
      },
      {
        "contestId": 1228,
        "index": "B",
        "solvedCount": 10866
      },
      {
        "contestId": 1228,
        "index": "A",
        "solvedCount": 19185
      },
      {
        "contestId": 1227,
        "index": "G",
        "solvedCount": 390
      },
      {
        "contestId": 1227,
        "index": "F2",
        "solvedCount": 487
      },
      {
        "contestId": 1227,
        "index": "F1",
        "solvedCount": 554
      },
      {
        "contestId": 1227,
        "index": "E",
        "solvedCount": 338
      },
      {
        "contestId": 1227,
        "index": "D2",
        "solvedCount": 1263
      },
      {
        "contestId": 1227,
        "index": "D1",
        "solvedCount": 2170
      },
      {
        "contestId": 1227,
        "index": "C",
        "solvedCount": 1490
      },
      {
        "contestId": 1227,
        "index": "B",
        "solvedCount": 3527
      },
      {
        "contestId": 1227,
        "index": "A",
        "solvedCount": 3245
      },
      {
        "contestId": 1225,
        "index": "G",
        "solvedCount": 259
      },
      {
        "contestId": 1225,
        "index": "F",
        "solvedCount": 255
      },
      {
        "contestId": 1225,
        "index": "E",
        "solvedCount": 600
      },
      {
        "contestId": 1225,
        "index": "D",
        "solvedCount": 3183
      },
      {
        "contestId": 1225,
        "index": "C",
        "solvedCount": 3383
      },
      {
        "contestId": 1225,
        "index": "B2",
        "solvedCount": 3626
      },
      {
        "contestId": 1225,
        "index": "B1",
        "solvedCount": 4347
      },
      {
        "contestId": 1225,
        "index": "A",
        "solvedCount": 6546
      },
      {
        "contestId": 1223,
        "index": "G",
        "solvedCount": 115
      },
      {
        "contestId": 1223,
        "index": "F",
        "solvedCount": 388
      },
      {
        "contestId": 1223,
        "index": "E",
        "solvedCount": 999
      },
      {
        "contestId": 1223,
        "index": "D",
        "solvedCount": 1627
      },
      {
        "contestId": 1223,
        "index": "C",
        "solvedCount": 2991
      },
      {
        "contestId": 1223,
        "index": "B",
        "solvedCount": 6811
      },
      {
        "contestId": 1223,
        "index": "A",
        "solvedCount": 12425
      },
      {
        "contestId": 1221,
        "index": "G",
        "solvedCount": 18
      },
      {
        "contestId": 1221,
        "index": "F",
        "solvedCount": 103
      },
      {
        "contestId": 1221,
        "index": "E",
        "solvedCount": 151
      },
      {
        "contestId": 1221,
        "index": "D",
        "solvedCount": 1744
      },
      {
        "contestId": 1221,
        "index": "C",
        "solvedCount": 5506
      },
      {
        "contestId": 1221,
        "index": "B",
        "solvedCount": 4901
      },
      {
        "contestId": 1221,
        "index": "A",
        "solvedCount": 6499
      },
      {
        "contestId": 1220,
        "index": "G",
        "solvedCount": 38
      },
      {
        "contestId": 1220,
        "index": "F",
        "solvedCount": 588
      },
      {
        "contestId": 1220,
        "index": "E",
        "solvedCount": 2266
      },
      {
        "contestId": 1220,
        "index": "D",
        "solvedCount": 3404
      },
      {
        "contestId": 1220,
        "index": "C",
        "solvedCount": 9273
      },
      {
        "contestId": 1220,
        "index": "B",
        "solvedCount": 10687
      },
      {
        "contestId": 1220,
        "index": "A",
        "solvedCount": 25384
      },
      {
        "contestId": 1219,
        "index": "G",
        "solvedCount": 60
      },
      {
        "contestId": 1219,
        "index": "C",
        "solvedCount": 150
      },
      {
        "contestId": 1218,
        "index": "I",
        "solvedCount": 89
      },
      {
        "contestId": 1218,
        "index": "H",
        "solvedCount": 16
      },
      {
        "contestId": 1218,
        "index": "G",
        "solvedCount": 3
      },
      {
        "contestId": 1218,
        "index": "F",
        "solvedCount": 136
      },
      {
        "contestId": 1218,
        "index": "E",
        "solvedCount": 53
      },
      {
        "contestId": 1218,
        "index": "D",
        "solvedCount": 45
      },
      {
        "contestId": 1218,
        "index": "C",
        "solvedCount": 17
      },
      {
        "contestId": 1218,
        "index": "B",
        "solvedCount": 4
      },
      {
        "contestId": 1218,
        "index": "A",
        "solvedCount": 9
      },
      {
        "contestId": 1217,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 1217,
        "index": "E",
        "solvedCount": 195
      },
      {
        "contestId": 1217,
        "index": "D",
        "solvedCount": 775
      },
      {
        "contestId": 1217,
        "index": "C",
        "solvedCount": 2360
      },
      {
        "contestId": 1217,
        "index": "B",
        "solvedCount": 3161
      },
      {
        "contestId": 1217,
        "index": "A",
        "solvedCount": 5416
      },
      {
        "contestId": 1216,
        "index": "F",
        "solvedCount": 256
      },
      {
        "contestId": 1216,
        "index": "E2",
        "solvedCount": 180
      },
      {
        "contestId": 1216,
        "index": "E1",
        "solvedCount": 863
      },
      {
        "contestId": 1216,
        "index": "D",
        "solvedCount": 4501
      },
      {
        "contestId": 1216,
        "index": "C",
        "solvedCount": 1879
      },
      {
        "contestId": 1216,
        "index": "B",
        "solvedCount": 7362
      },
      {
        "contestId": 1216,
        "index": "A",
        "solvedCount": 7862
      },
      {
        "contestId": 1215,
        "index": "F",
        "solvedCount": 649
      },
      {
        "contestId": 1215,
        "index": "E",
        "solvedCount": 2333
      },
      {
        "contestId": 1215,
        "index": "D",
        "solvedCount": 5046
      },
      {
        "contestId": 1215,
        "index": "C",
        "solvedCount": 9043
      },
      {
        "contestId": 1215,
        "index": "B",
        "solvedCount": 10762
      },
      {
        "contestId": 1215,
        "index": "A",
        "solvedCount": 10553
      },
      {
        "contestId": 1214,
        "index": "H",
        "solvedCount": 344
      },
      {
        "contestId": 1214,
        "index": "G",
        "solvedCount": 252
      },
      {
        "contestId": 1214,
        "index": "F",
        "solvedCount": 409
      },
      {
        "contestId": 1214,
        "index": "E",
        "solvedCount": 2356
      },
      {
        "contestId": 1214,
        "index": "D",
        "solvedCount": 4619
      },
      {
        "contestId": 1214,
        "index": "C",
        "solvedCount": 11247
      },
      {
        "contestId": 1214,
        "index": "B",
        "solvedCount": 9682
      },
      {
        "contestId": 1214,
        "index": "A",
        "solvedCount": 8215
      },
      {
        "contestId": 1213,
        "index": "G",
        "solvedCount": 905
      },
      {
        "contestId": 1213,
        "index": "F",
        "solvedCount": 327
      },
      {
        "contestId": 1213,
        "index": "E",
        "solvedCount": 967
      },
      {
        "contestId": 1213,
        "index": "D2",
        "solvedCount": 2837
      },
      {
        "contestId": 1213,
        "index": "D1",
        "solvedCount": 3512
      },
      {
        "contestId": 1213,
        "index": "C",
        "solvedCount": 7032
      },
      {
        "contestId": 1213,
        "index": "B",
        "solvedCount": 8296
      },
      {
        "contestId": 1213,
        "index": "A",
        "solvedCount": 9769
      },
      {
        "contestId": 1211,
        "index": "I",
        "solvedCount": 5
      },
      {
        "contestId": 1211,
        "index": "H",
        "solvedCount": 6
      },
      {
        "contestId": 1211,
        "index": "G",
        "solvedCount": 22
      },
      {
        "contestId": 1211,
        "index": "F",
        "solvedCount": 45
      },
      {
        "contestId": 1211,
        "index": "E",
        "solvedCount": 81
      },
      {
        "contestId": 1211,
        "index": "D",
        "solvedCount": 101
      },
      {
        "contestId": 1211,
        "index": "C",
        "solvedCount": 244
      },
      {
        "contestId": 1211,
        "index": "B",
        "solvedCount": 435
      },
      {
        "contestId": 1211,
        "index": "A",
        "solvedCount": 539
      },
      {
        "contestId": 1210,
        "index": "G",
        "solvedCount": 46
      },
      {
        "contestId": 1210,
        "index": "F2",
        "solvedCount": 37
      },
      {
        "contestId": 1210,
        "index": "F1",
        "solvedCount": 31
      },
      {
        "contestId": 1210,
        "index": "E",
        "solvedCount": 50
      },
      {
        "contestId": 1210,
        "index": "D",
        "solvedCount": 185
      },
      {
        "contestId": 1210,
        "index": "C",
        "solvedCount": 542
      },
      {
        "contestId": 1210,
        "index": "B",
        "solvedCount": 867
      },
      {
        "contestId": 1210,
        "index": "A",
        "solvedCount": 573
      },
      {
        "contestId": 1209,
        "index": "H",
        "solvedCount": 123
      },
      {
        "contestId": 1209,
        "index": "G2",
        "solvedCount": 270
      },
      {
        "contestId": 1209,
        "index": "G1",
        "solvedCount": 2485
      },
      {
        "contestId": 1209,
        "index": "F",
        "solvedCount": 883
      },
      {
        "contestId": 1209,
        "index": "E2",
        "solvedCount": 1534
      },
      {
        "contestId": 1209,
        "index": "E1",
        "solvedCount": 2466
      },
      {
        "contestId": 1209,
        "index": "D",
        "solvedCount": 7576
      },
      {
        "contestId": 1209,
        "index": "C",
        "solvedCount": 6862
      },
      {
        "contestId": 1209,
        "index": "B",
        "solvedCount": 7674
      },
      {
        "contestId": 1209,
        "index": "A",
        "solvedCount": 11199
      },
      {
        "contestId": 1208,
        "index": "H",
        "solvedCount": 110
      },
      {
        "contestId": 1208,
        "index": "G",
        "solvedCount": 649
      },
      {
        "contestId": 1208,
        "index": "F",
        "solvedCount": 1749
      },
      {
        "contestId": 1208,
        "index": "E",
        "solvedCount": 1827
      },
      {
        "contestId": 1208,
        "index": "D",
        "solvedCount": 4305
      },
      {
        "contestId": 1208,
        "index": "C",
        "solvedCount": 5497
      },
      {
        "contestId": 1208,
        "index": "B",
        "solvedCount": 9222
      },
      {
        "contestId": 1208,
        "index": "A",
        "solvedCount": 14479
      },
      {
        "contestId": 1207,
        "index": "G",
        "solvedCount": 37
      },
      {
        "contestId": 1207,
        "index": "F",
        "solvedCount": 623
      },
      {
        "contestId": 1207,
        "index": "E",
        "solvedCount": 1399
      },
      {
        "contestId": 1207,
        "index": "D",
        "solvedCount": 1716
      },
      {
        "contestId": 1207,
        "index": "C",
        "solvedCount": 3512
      },
      {
        "contestId": 1207,
        "index": "B",
        "solvedCount": 6298
      },
      {
        "contestId": 1207,
        "index": "A",
        "solvedCount": 8934
      },
      {
        "contestId": 1206,
        "index": "B",
        "solvedCount": 22611
      },
      {
        "contestId": 1206,
        "index": "A",
        "solvedCount": 21310
      },
      {
        "contestId": 1205,
        "index": "F",
        "solvedCount": 113
      },
      {
        "contestId": 1205,
        "index": "E",
        "solvedCount": 199
      },
      {
        "contestId": 1205,
        "index": "D",
        "solvedCount": 506
      },
      {
        "contestId": 1205,
        "index": "C",
        "solvedCount": 840
      },
      {
        "contestId": 1205,
        "index": "B",
        "solvedCount": 3065
      },
      {
        "contestId": 1205,
        "index": "A",
        "solvedCount": 4388
      },
      {
        "contestId": 1204,
        "index": "E",
        "solvedCount": 1442
      },
      {
        "contestId": 1204,
        "index": "D2",
        "solvedCount": 2845
      },
      {
        "contestId": 1204,
        "index": "D1",
        "solvedCount": 2745
      },
      {
        "contestId": 1204,
        "index": "C",
        "solvedCount": 6101
      },
      {
        "contestId": 1204,
        "index": "B",
        "solvedCount": 16109
      },
      {
        "contestId": 1204,
        "index": "A",
        "solvedCount": 18222
      },
      {
        "contestId": 1203,
        "index": "F2",
        "solvedCount": 210
      },
      {
        "contestId": 1203,
        "index": "F1",
        "solvedCount": 330
      },
      {
        "contestId": 1203,
        "index": "E",
        "solvedCount": 3439
      },
      {
        "contestId": 1203,
        "index": "D2",
        "solvedCount": 1572
      },
      {
        "contestId": 1203,
        "index": "D1",
        "solvedCount": 2546
      },
      {
        "contestId": 1203,
        "index": "C",
        "solvedCount": 5182
      },
      {
        "contestId": 1203,
        "index": "B",
        "solvedCount": 5851
      },
      {
        "contestId": 1203,
        "index": "A",
        "solvedCount": 7876
      },
      {
        "contestId": 1202,
        "index": "F",
        "solvedCount": 14
      },
      {
        "contestId": 1202,
        "index": "E",
        "solvedCount": 97
      },
      {
        "contestId": 1202,
        "index": "D",
        "solvedCount": 1100
      },
      {
        "contestId": 1202,
        "index": "C",
        "solvedCount": 491
      },
      {
        "contestId": 1202,
        "index": "B",
        "solvedCount": 1685
      },
      {
        "contestId": 1202,
        "index": "A",
        "solvedCount": 4225
      },
      {
        "contestId": 1201,
        "index": "E2",
        "solvedCount": 110
      },
      {
        "contestId": 1201,
        "index": "E1",
        "solvedCount": 105
      },
      {
        "contestId": 1201,
        "index": "D",
        "solvedCount": 1961
      },
      {
        "contestId": 1201,
        "index": "C",
        "solvedCount": 16796
      },
      {
        "contestId": 1201,
        "index": "B",
        "solvedCount": 15678
      },
      {
        "contestId": 1201,
        "index": "A",
        "solvedCount": 13775
      },
      {
        "contestId": 1200,
        "index": "F",
        "solvedCount": 825
      },
      {
        "contestId": 1200,
        "index": "E",
        "solvedCount": 5698
      },
      {
        "contestId": 1200,
        "index": "D",
        "solvedCount": 3712
      },
      {
        "contestId": 1200,
        "index": "C",
        "solvedCount": 9007
      },
      {
        "contestId": 1200,
        "index": "B",
        "solvedCount": 12704
      },
      {
        "contestId": 1200,
        "index": "A",
        "solvedCount": 17584
      },
      {
        "contestId": 1199,
        "index": "B",
        "solvedCount": 16902
      },
      {
        "contestId": 1199,
        "index": "A",
        "solvedCount": 12846
      },
      {
        "contestId": 1198,
        "index": "F",
        "solvedCount": 625
      },
      {
        "contestId": 1198,
        "index": "E",
        "solvedCount": 801
      },
      {
        "contestId": 1198,
        "index": "D",
        "solvedCount": 1736
      },
      {
        "contestId": 1198,
        "index": "C",
        "solvedCount": 1907
      },
      {
        "contestId": 1198,
        "index": "B",
        "solvedCount": 4073
      },
      {
        "contestId": 1198,
        "index": "A",
        "solvedCount": 3161
      },
      {
        "contestId": 1197,
        "index": "F",
        "solvedCount": 14
      },
      {
        "contestId": 1197,
        "index": "E",
        "solvedCount": 244
      },
      {
        "contestId": 1197,
        "index": "D",
        "solvedCount": 1293
      },
      {
        "contestId": 1197,
        "index": "C",
        "solvedCount": 4667
      },
      {
        "contestId": 1197,
        "index": "B",
        "solvedCount": 6716
      },
      {
        "contestId": 1197,
        "index": "A",
        "solvedCount": 7188
      },
      {
        "contestId": 1196,
        "index": "F",
        "solvedCount": 173
      },
      {
        "contestId": 1196,
        "index": "E",
        "solvedCount": 899
      },
      {
        "contestId": 1196,
        "index": "D2",
        "solvedCount": 2361
      },
      {
        "contestId": 1196,
        "index": "D1",
        "solvedCount": 3726
      },
      {
        "contestId": 1196,
        "index": "C",
        "solvedCount": 3696
      },
      {
        "contestId": 1196,
        "index": "B",
        "solvedCount": 6388
      },
      {
        "contestId": 1196,
        "index": "A",
        "solvedCount": 10665
      },
      {
        "contestId": 1195,
        "index": "F",
        "solvedCount": 604
      },
      {
        "contestId": 1195,
        "index": "E",
        "solvedCount": 2492
      },
      {
        "contestId": 1195,
        "index": "D2",
        "solvedCount": 4209
      },
      {
        "contestId": 1195,
        "index": "D1",
        "solvedCount": 7356
      },
      {
        "contestId": 1195,
        "index": "C",
        "solvedCount": 18948
      },
      {
        "contestId": 1195,
        "index": "B",
        "solvedCount": 16105
      },
      {
        "contestId": 1195,
        "index": "A",
        "solvedCount": 11548
      },
      {
        "contestId": 1194,
        "index": "G",
        "solvedCount": 8
      },
      {
        "contestId": 1194,
        "index": "F",
        "solvedCount": 92
      },
      {
        "contestId": 1194,
        "index": "E",
        "solvedCount": 272
      },
      {
        "contestId": 1194,
        "index": "D",
        "solvedCount": 1942
      },
      {
        "contestId": 1194,
        "index": "C",
        "solvedCount": 4963
      },
      {
        "contestId": 1194,
        "index": "B",
        "solvedCount": 4911
      },
      {
        "contestId": 1194,
        "index": "A",
        "solvedCount": 7231
      },
      {
        "contestId": 1193,
        "index": "C",
        "solvedCount": 32
      },
      {
        "contestId": 1193,
        "index": "B",
        "solvedCount": 337
      },
      {
        "contestId": 1193,
        "index": "A",
        "solvedCount": 201
      },
      {
        "contestId": 1192,
        "index": "C",
        "solvedCount": 293
      },
      {
        "contestId": 1192,
        "index": "B",
        "solvedCount": 736
      },
      {
        "contestId": 1192,
        "index": "A",
        "solvedCount": 53
      },
      {
        "contestId": 1191,
        "index": "B",
        "solvedCount": 9001
      },
      {
        "contestId": 1191,
        "index": "A",
        "solvedCount": 16689
      },
      {
        "contestId": 1190,
        "index": "F",
        "solvedCount": 81
      },
      {
        "contestId": 1190,
        "index": "E",
        "solvedCount": 204
      },
      {
        "contestId": 1190,
        "index": "D",
        "solvedCount": 1452
      },
      {
        "contestId": 1190,
        "index": "C",
        "solvedCount": 1079
      },
      {
        "contestId": 1190,
        "index": "B",
        "solvedCount": 2479
      },
      {
        "contestId": 1190,
        "index": "A",
        "solvedCount": 2890
      },
      {
        "contestId": 1189,
        "index": "C",
        "solvedCount": 9513
      },
      {
        "contestId": 1189,
        "index": "B",
        "solvedCount": 12198
      },
      {
        "contestId": 1189,
        "index": "A",
        "solvedCount": 13883
      },
      {
        "contestId": 1188,
        "index": "E",
        "solvedCount": 199
      },
      {
        "contestId": 1188,
        "index": "D",
        "solvedCount": 546
      },
      {
        "contestId": 1188,
        "index": "C",
        "solvedCount": 1200
      },
      {
        "contestId": 1188,
        "index": "B",
        "solvedCount": 2047
      },
      {
        "contestId": 1188,
        "index": "A2",
        "solvedCount": 620
      },
      {
        "contestId": 1188,
        "index": "A1",
        "solvedCount": 3227
      },
      {
        "contestId": 1187,
        "index": "G",
        "solvedCount": 28
      },
      {
        "contestId": 1187,
        "index": "F",
        "solvedCount": 45
      },
      {
        "contestId": 1187,
        "index": "E",
        "solvedCount": 659
      },
      {
        "contestId": 1187,
        "index": "D",
        "solvedCount": 204
      },
      {
        "contestId": 1187,
        "index": "C",
        "solvedCount": 1494
      },
      {
        "contestId": 1187,
        "index": "B",
        "solvedCount": 4515
      },
      {
        "contestId": 1187,
        "index": "A",
        "solvedCount": 6270
      },
      {
        "contestId": 1186,
        "index": "F",
        "solvedCount": 702
      },
      {
        "contestId": 1186,
        "index": "E",
        "solvedCount": 519
      },
      {
        "contestId": 1186,
        "index": "D",
        "solvedCount": 8108
      },
      {
        "contestId": 1186,
        "index": "C",
        "solvedCount": 5489
      },
      {
        "contestId": 1186,
        "index": "A",
        "solvedCount": 30367
      },
      {
        "contestId": 1185,
        "index": "G2",
        "solvedCount": 605
      },
      {
        "contestId": 1185,
        "index": "G1",
        "solvedCount": 2250
      },
      {
        "contestId": 1185,
        "index": "F",
        "solvedCount": 1635
      },
      {
        "contestId": 1185,
        "index": "E",
        "solvedCount": 2322
      },
      {
        "contestId": 1185,
        "index": "D",
        "solvedCount": 6044
      },
      {
        "contestId": 1185,
        "index": "C2",
        "solvedCount": 6754
      },
      {
        "contestId": 1185,
        "index": "C1",
        "solvedCount": 10520
      },
      {
        "contestId": 1185,
        "index": "B",
        "solvedCount": 11786
      },
      {
        "contestId": 1185,
        "index": "A",
        "solvedCount": 13632
      },
      {
        "contestId": 1184,
        "index": "E3",
        "solvedCount": 90
      },
      {
        "contestId": 1184,
        "index": "E2",
        "solvedCount": 218
      },
      {
        "contestId": 1184,
        "index": "E1",
        "solvedCount": 340
      },
      {
        "contestId": 1184,
        "index": "D2",
        "solvedCount": 5
      },
      {
        "contestId": 1184,
        "index": "D1",
        "solvedCount": 677
      },
      {
        "contestId": 1184,
        "index": "C3",
        "solvedCount": 7
      },
      {
        "contestId": 1184,
        "index": "C2",
        "solvedCount": 148
      },
      {
        "contestId": 1184,
        "index": "C1",
        "solvedCount": 591
      },
      {
        "contestId": 1184,
        "index": "B3",
        "solvedCount": 39
      },
      {
        "contestId": 1184,
        "index": "B2",
        "solvedCount": 139
      },
      {
        "contestId": 1184,
        "index": "B1",
        "solvedCount": 929
      },
      {
        "contestId": 1184,
        "index": "A3",
        "solvedCount": 11
      },
      {
        "contestId": 1184,
        "index": "A2",
        "solvedCount": 250
      },
      {
        "contestId": 1184,
        "index": "A1",
        "solvedCount": 1184
      },
      {
        "contestId": 1183,
        "index": "H",
        "solvedCount": 400
      },
      {
        "contestId": 1183,
        "index": "G",
        "solvedCount": 559
      },
      {
        "contestId": 1183,
        "index": "F",
        "solvedCount": 222
      },
      {
        "contestId": 1183,
        "index": "E",
        "solvedCount": 819
      },
      {
        "contestId": 1183,
        "index": "D",
        "solvedCount": 4809
      },
      {
        "contestId": 1183,
        "index": "C",
        "solvedCount": 4565
      },
      {
        "contestId": 1183,
        "index": "B",
        "solvedCount": 8262
      },
      {
        "contestId": 1183,
        "index": "A",
        "solvedCount": 9454
      },
      {
        "contestId": 1182,
        "index": "F",
        "solvedCount": 307
      },
      {
        "contestId": 1182,
        "index": "E",
        "solvedCount": 2244
      },
      {
        "contestId": 1182,
        "index": "D",
        "solvedCount": 722
      },
      {
        "contestId": 1182,
        "index": "C",
        "solvedCount": 4284
      },
      {
        "contestId": 1182,
        "index": "B",
        "solvedCount": 9884
      },
      {
        "contestId": 1182,
        "index": "A",
        "solvedCount": 20914
      },
      {
        "contestId": 1181,
        "index": "E2",
        "solvedCount": 212
      },
      {
        "contestId": 1181,
        "index": "E1",
        "solvedCount": 387
      },
      {
        "contestId": 1181,
        "index": "D",
        "solvedCount": 1766
      },
      {
        "contestId": 1181,
        "index": "C",
        "solvedCount": 2897
      },
      {
        "contestId": 1181,
        "index": "B",
        "solvedCount": 5786
      },
      {
        "contestId": 1181,
        "index": "A",
        "solvedCount": 11934
      },
      {
        "contestId": 1180,
        "index": "B",
        "solvedCount": 8654
      },
      {
        "contestId": 1180,
        "index": "A",
        "solvedCount": 20985
      },
      {
        "contestId": 1179,
        "index": "E",
        "solvedCount": 147
      },
      {
        "contestId": 1179,
        "index": "D",
        "solvedCount": 684
      },
      {
        "contestId": 1179,
        "index": "C",
        "solvedCount": 1349
      },
      {
        "contestId": 1179,
        "index": "B",
        "solvedCount": 2059
      },
      {
        "contestId": 1179,
        "index": "A",
        "solvedCount": 3507
      },
      {
        "contestId": 1178,
        "index": "H",
        "solvedCount": 133
      },
      {
        "contestId": 1178,
        "index": "G",
        "solvedCount": 310
      },
      {
        "contestId": 1178,
        "index": "F2",
        "solvedCount": 722
      },
      {
        "contestId": 1178,
        "index": "F1",
        "solvedCount": 1639
      },
      {
        "contestId": 1178,
        "index": "E",
        "solvedCount": 3945
      },
      {
        "contestId": 1178,
        "index": "D",
        "solvedCount": 6622
      },
      {
        "contestId": 1178,
        "index": "C",
        "solvedCount": 9896
      },
      {
        "contestId": 1178,
        "index": "B",
        "solvedCount": 11715
      },
      {
        "contestId": 1178,
        "index": "A",
        "solvedCount": 9785
      },
      {
        "contestId": 1177,
        "index": "B",
        "solvedCount": 2145
      },
      {
        "contestId": 1177,
        "index": "A",
        "solvedCount": 4418
      },
      {
        "contestId": 1176,
        "index": "F",
        "solvedCount": 244
      },
      {
        "contestId": 1176,
        "index": "E",
        "solvedCount": 1441
      },
      {
        "contestId": 1176,
        "index": "D",
        "solvedCount": 988
      },
      {
        "contestId": 1176,
        "index": "C",
        "solvedCount": 4471
      },
      {
        "contestId": 1176,
        "index": "B",
        "solvedCount": 6455
      },
      {
        "contestId": 1176,
        "index": "A",
        "solvedCount": 7870
      },
      {
        "contestId": 1175,
        "index": "G",
        "solvedCount": 4
      },
      {
        "contestId": 1175,
        "index": "F",
        "solvedCount": 59
      },
      {
        "contestId": 1175,
        "index": "E",
        "solvedCount": 295
      },
      {
        "contestId": 1175,
        "index": "D",
        "solvedCount": 994
      },
      {
        "contestId": 1175,
        "index": "C",
        "solvedCount": 2267
      },
      {
        "contestId": 1175,
        "index": "B",
        "solvedCount": 2728
      },
      {
        "contestId": 1175,
        "index": "A",
        "solvedCount": 6449
      },
      {
        "contestId": 1174,
        "index": "F",
        "solvedCount": 1246
      },
      {
        "contestId": 1174,
        "index": "E",
        "solvedCount": 1184
      },
      {
        "contestId": 1174,
        "index": "D",
        "solvedCount": 4286
      },
      {
        "contestId": 1174,
        "index": "C",
        "solvedCount": 11016
      },
      {
        "contestId": 1174,
        "index": "B",
        "solvedCount": 13414
      },
      {
        "contestId": 1174,
        "index": "A",
        "solvedCount": 14671
      },
      {
        "contestId": 1173,
        "index": "B",
        "solvedCount": 8364
      },
      {
        "contestId": 1173,
        "index": "A",
        "solvedCount": 14466
      },
      {
        "contestId": 1172,
        "index": "F",
        "solvedCount": 292
      },
      {
        "contestId": 1172,
        "index": "E",
        "solvedCount": 230
      },
      {
        "contestId": 1172,
        "index": "D",
        "solvedCount": 372
      },
      {
        "contestId": 1172,
        "index": "C2",
        "solvedCount": 580
      },
      {
        "contestId": 1172,
        "index": "C1",
        "solvedCount": 779
      },
      {
        "contestId": 1172,
        "index": "B",
        "solvedCount": 2034
      },
      {
        "contestId": 1172,
        "index": "A",
        "solvedCount": 1857
      },
      {
        "contestId": 1170,
        "index": "I",
        "solvedCount": 7
      },
      {
        "contestId": 1170,
        "index": "H",
        "solvedCount": 12
      },
      {
        "contestId": 1170,
        "index": "G",
        "solvedCount": 24
      },
      {
        "contestId": 1170,
        "index": "F",
        "solvedCount": 41
      },
      {
        "contestId": 1170,
        "index": "E",
        "solvedCount": 144
      },
      {
        "contestId": 1170,
        "index": "D",
        "solvedCount": 227
      },
      {
        "contestId": 1170,
        "index": "C",
        "solvedCount": 463
      },
      {
        "contestId": 1170,
        "index": "B",
        "solvedCount": 584
      },
      {
        "contestId": 1170,
        "index": "A",
        "solvedCount": 860
      },
      {
        "contestId": 1169,
        "index": "B",
        "solvedCount": 8452
      },
      {
        "contestId": 1169,
        "index": "A",
        "solvedCount": 10784
      },
      {
        "contestId": 1168,
        "index": "E",
        "solvedCount": 306
      },
      {
        "contestId": 1168,
        "index": "D",
        "solvedCount": 251
      },
      {
        "contestId": 1168,
        "index": "C",
        "solvedCount": 1499
      },
      {
        "contestId": 1168,
        "index": "B",
        "solvedCount": 1706
      },
      {
        "contestId": 1168,
        "index": "A",
        "solvedCount": 2391
      },
      {
        "contestId": 1167,
        "index": "G",
        "solvedCount": 7
      },
      {
        "contestId": 1167,
        "index": "F",
        "solvedCount": 169
      },
      {
        "contestId": 1167,
        "index": "E",
        "solvedCount": 377
      },
      {
        "contestId": 1167,
        "index": "D",
        "solvedCount": 2610
      },
      {
        "contestId": 1167,
        "index": "C",
        "solvedCount": 3323
      },
      {
        "contestId": 1167,
        "index": "B",
        "solvedCount": 3114
      },
      {
        "contestId": 1167,
        "index": "A",
        "solvedCount": 6255
      },
      {
        "contestId": 1166,
        "index": "F",
        "solvedCount": 611
      },
      {
        "contestId": 1166,
        "index": "E",
        "solvedCount": 2451
      },
      {
        "contestId": 1166,
        "index": "D",
        "solvedCount": 1898
      },
      {
        "contestId": 1166,
        "index": "C",
        "solvedCount": 7992
      },
      {
        "contestId": 1166,
        "index": "B",
        "solvedCount": 10561
      },
      {
        "contestId": 1166,
        "index": "A",
        "solvedCount": 12650
      },
      {
        "contestId": 1165,
        "index": "F2",
        "solvedCount": 276
      },
      {
        "contestId": 1165,
        "index": "F1",
        "solvedCount": 283
      },
      {
        "contestId": 1165,
        "index": "E",
        "solvedCount": 1204
      },
      {
        "contestId": 1165,
        "index": "D",
        "solvedCount": 2177
      },
      {
        "contestId": 1165,
        "index": "C",
        "solvedCount": 4026
      },
      {
        "contestId": 1165,
        "index": "B",
        "solvedCount": 6154
      },
      {
        "contestId": 1165,
        "index": "A",
        "solvedCount": 5390
      },
      {
        "contestId": 1163,
        "index": "F",
        "solvedCount": 570
      },
      {
        "contestId": 1163,
        "index": "E",
        "solvedCount": 573
      },
      {
        "contestId": 1163,
        "index": "D",
        "solvedCount": 1132
      },
      {
        "contestId": 1163,
        "index": "C2",
        "solvedCount": 2994
      },
      {
        "contestId": 1163,
        "index": "C1",
        "solvedCount": 2805
      },
      {
        "contestId": 1163,
        "index": "B2",
        "solvedCount": 5927
      },
      {
        "contestId": 1163,
        "index": "B1",
        "solvedCount": 6185
      },
      {
        "contestId": 1163,
        "index": "A",
        "solvedCount": 11337
      },
      {
        "contestId": 1162,
        "index": "B",
        "solvedCount": 5091
      },
      {
        "contestId": 1162,
        "index": "A",
        "solvedCount": 7164
      },
      {
        "contestId": 1160,
        "index": "A2",
        "solvedCount": 0
      },
      {
        "contestId": 1159,
        "index": "B",
        "solvedCount": 6512
      },
      {
        "contestId": 1159,
        "index": "A",
        "solvedCount": 10975
      },
      {
        "contestId": 1158,
        "index": "F",
        "solvedCount": 291
      },
      {
        "contestId": 1158,
        "index": "E",
        "solvedCount": 132
      },
      {
        "contestId": 1158,
        "index": "D",
        "solvedCount": 486
      },
      {
        "contestId": 1158,
        "index": "C",
        "solvedCount": 1205
      },
      {
        "contestId": 1158,
        "index": "B",
        "solvedCount": 1071
      },
      {
        "contestId": 1158,
        "index": "A",
        "solvedCount": 2741
      },
      {
        "contestId": 1157,
        "index": "G",
        "solvedCount": 98
      },
      {
        "contestId": 1157,
        "index": "F",
        "solvedCount": 299
      },
      {
        "contestId": 1157,
        "index": "E",
        "solvedCount": 1579
      },
      {
        "contestId": 1157,
        "index": "D",
        "solvedCount": 507
      },
      {
        "contestId": 1157,
        "index": "C2",
        "solvedCount": 1667
      },
      {
        "contestId": 1157,
        "index": "C1",
        "solvedCount": 4213
      },
      {
        "contestId": 1157,
        "index": "B",
        "solvedCount": 4614
      },
      {
        "contestId": 1157,
        "index": "A",
        "solvedCount": 5832
      },
      {
        "contestId": 1156,
        "index": "G",
        "solvedCount": 5
      },
      {
        "contestId": 1156,
        "index": "F",
        "solvedCount": 92
      },
      {
        "contestId": 1156,
        "index": "E",
        "solvedCount": 200
      },
      {
        "contestId": 1156,
        "index": "D",
        "solvedCount": 312
      },
      {
        "contestId": 1156,
        "index": "C",
        "solvedCount": 853
      },
      {
        "contestId": 1156,
        "index": "B",
        "solvedCount": 1616
      },
      {
        "contestId": 1156,
        "index": "A",
        "solvedCount": 3326
      },
      {
        "contestId": 1155,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 1155,
        "index": "E",
        "solvedCount": 312
      },
      {
        "contestId": 1155,
        "index": "D",
        "solvedCount": 1066
      },
      {
        "contestId": 1155,
        "index": "C",
        "solvedCount": 4011
      },
      {
        "contestId": 1155,
        "index": "B",
        "solvedCount": 4786
      },
      {
        "contestId": 1155,
        "index": "A",
        "solvedCount": 5541
      },
      {
        "contestId": 1154,
        "index": "G",
        "solvedCount": 179
      },
      {
        "contestId": 1154,
        "index": "F",
        "solvedCount": 302
      },
      {
        "contestId": 1154,
        "index": "E",
        "solvedCount": 1012
      },
      {
        "contestId": 1154,
        "index": "D",
        "solvedCount": 3359
      },
      {
        "contestId": 1154,
        "index": "C",
        "solvedCount": 3769
      },
      {
        "contestId": 1154,
        "index": "B",
        "solvedCount": 5610
      },
      {
        "contestId": 1154,
        "index": "A",
        "solvedCount": 8864
      },
      {
        "contestId": 1153,
        "index": "F",
        "solvedCount": 649
      },
      {
        "contestId": 1153,
        "index": "E",
        "solvedCount": 1343
      },
      {
        "contestId": 1153,
        "index": "D",
        "solvedCount": 4110
      },
      {
        "contestId": 1153,
        "index": "C",
        "solvedCount": 6547
      },
      {
        "contestId": 1153,
        "index": "B",
        "solvedCount": 8287
      },
      {
        "contestId": 1153,
        "index": "A",
        "solvedCount": 10298
      },
      {
        "contestId": 1152,
        "index": "F2",
        "solvedCount": 488
      },
      {
        "contestId": 1152,
        "index": "F1",
        "solvedCount": 419
      },
      {
        "contestId": 1152,
        "index": "E",
        "solvedCount": 889
      },
      {
        "contestId": 1152,
        "index": "D",
        "solvedCount": 2086
      },
      {
        "contestId": 1152,
        "index": "C",
        "solvedCount": 5697
      },
      {
        "contestId": 1152,
        "index": "B",
        "solvedCount": 8012
      },
      {
        "contestId": 1152,
        "index": "A",
        "solvedCount": 13393
      },
      {
        "contestId": 1151,
        "index": "F",
        "solvedCount": 1019
      },
      {
        "contestId": 1151,
        "index": "E",
        "solvedCount": 2753
      },
      {
        "contestId": 1151,
        "index": "D",
        "solvedCount": 7319
      },
      {
        "contestId": 1151,
        "index": "C",
        "solvedCount": 4648
      },
      {
        "contestId": 1151,
        "index": "B",
        "solvedCount": 9159
      },
      {
        "contestId": 1151,
        "index": "A",
        "solvedCount": 10008
      },
      {
        "contestId": 1150,
        "index": "B",
        "solvedCount": 9708
      },
      {
        "contestId": 1150,
        "index": "A",
        "solvedCount": 10553
      },
      {
        "contestId": 1149,
        "index": "E",
        "solvedCount": 393
      },
      {
        "contestId": 1149,
        "index": "D",
        "solvedCount": 512
      },
      {
        "contestId": 1149,
        "index": "C",
        "solvedCount": 949
      },
      {
        "contestId": 1149,
        "index": "B",
        "solvedCount": 1196
      },
      {
        "contestId": 1149,
        "index": "A",
        "solvedCount": 5564
      },
      {
        "contestId": 1148,
        "index": "H",
        "solvedCount": 177
      },
      {
        "contestId": 1148,
        "index": "G",
        "solvedCount": 229
      },
      {
        "contestId": 1148,
        "index": "F",
        "solvedCount": 845
      },
      {
        "contestId": 1148,
        "index": "E",
        "solvedCount": 1577
      },
      {
        "contestId": 1148,
        "index": "D",
        "solvedCount": 4470
      },
      {
        "contestId": 1148,
        "index": "C",
        "solvedCount": 4745
      },
      {
        "contestId": 1148,
        "index": "B",
        "solvedCount": 6643
      },
      {
        "contestId": 1148,
        "index": "A",
        "solvedCount": 13288
      },
      {
        "contestId": 1147,
        "index": "F",
        "solvedCount": 160
      },
      {
        "contestId": 1147,
        "index": "E",
        "solvedCount": 141
      },
      {
        "contestId": 1147,
        "index": "D",
        "solvedCount": 222
      },
      {
        "contestId": 1147,
        "index": "C",
        "solvedCount": 984
      },
      {
        "contestId": 1147,
        "index": "B",
        "solvedCount": 521
      },
      {
        "contestId": 1147,
        "index": "A",
        "solvedCount": 1061
      },
      {
        "contestId": 1146,
        "index": "H",
        "solvedCount": 360
      },
      {
        "contestId": 1146,
        "index": "G",
        "solvedCount": 657
      },
      {
        "contestId": 1146,
        "index": "F",
        "solvedCount": 896
      },
      {
        "contestId": 1146,
        "index": "E",
        "solvedCount": 760
      },
      {
        "contestId": 1146,
        "index": "D",
        "solvedCount": 1009
      },
      {
        "contestId": 1146,
        "index": "C",
        "solvedCount": 2969
      },
      {
        "contestId": 1146,
        "index": "B",
        "solvedCount": 6741
      },
      {
        "contestId": 1146,
        "index": "A",
        "solvedCount": 17751
      },
      {
        "contestId": 1145,
        "index": "G",
        "solvedCount": 9
      },
      {
        "contestId": 1145,
        "index": "F",
        "solvedCount": 90
      },
      {
        "contestId": 1145,
        "index": "E",
        "solvedCount": 29
      },
      {
        "contestId": 1145,
        "index": "D",
        "solvedCount": 386
      },
      {
        "contestId": 1145,
        "index": "C",
        "solvedCount": 198
      },
      {
        "contestId": 1145,
        "index": "B",
        "solvedCount": 155
      },
      {
        "contestId": 1145,
        "index": "A",
        "solvedCount": 2515
      },
      {
        "contestId": 1144,
        "index": "G",
        "solvedCount": 74
      },
      {
        "contestId": 1144,
        "index": "F",
        "solvedCount": 1519
      },
      {
        "contestId": 1144,
        "index": "E",
        "solvedCount": 636
      },
      {
        "contestId": 1144,
        "index": "D",
        "solvedCount": 3510
      },
      {
        "contestId": 1144,
        "index": "C",
        "solvedCount": 5842
      },
      {
        "contestId": 1144,
        "index": "B",
        "solvedCount": 6681
      },
      {
        "contestId": 1144,
        "index": "A",
        "solvedCount": 7322
      },
      {
        "contestId": 1143,
        "index": "C",
        "solvedCount": 9022
      },
      {
        "contestId": 1143,
        "index": "B",
        "solvedCount": 9001
      },
      {
        "contestId": 1143,
        "index": "A",
        "solvedCount": 12044
      },
      {
        "contestId": 1142,
        "index": "E",
        "solvedCount": 371
      },
      {
        "contestId": 1142,
        "index": "D",
        "solvedCount": 364
      },
      {
        "contestId": 1142,
        "index": "C",
        "solvedCount": 836
      },
      {
        "contestId": 1142,
        "index": "B",
        "solvedCount": 1748
      },
      {
        "contestId": 1142,
        "index": "A",
        "solvedCount": 1432
      },
      {
        "contestId": 1141,
        "index": "G",
        "solvedCount": 246
      },
      {
        "contestId": 1141,
        "index": "F2",
        "solvedCount": 451
      },
      {
        "contestId": 1141,
        "index": "F1",
        "solvedCount": 608
      },
      {
        "contestId": 1141,
        "index": "E",
        "solvedCount": 1361
      },
      {
        "contestId": 1141,
        "index": "D",
        "solvedCount": 2923
      },
      {
        "contestId": 1141,
        "index": "C",
        "solvedCount": 3148
      },
      {
        "contestId": 1141,
        "index": "B",
        "solvedCount": 7754
      },
      {
        "contestId": 1141,
        "index": "A",
        "solvedCount": 7511
      },
      {
        "contestId": 1140,
        "index": "G",
        "solvedCount": 14
      },
      {
        "contestId": 1140,
        "index": "F",
        "solvedCount": 42
      },
      {
        "contestId": 1140,
        "index": "E",
        "solvedCount": 357
      },
      {
        "contestId": 1140,
        "index": "D",
        "solvedCount": 4468
      },
      {
        "contestId": 1140,
        "index": "C",
        "solvedCount": 2233
      },
      {
        "contestId": 1140,
        "index": "B",
        "solvedCount": 4578
      },
      {
        "contestId": 1140,
        "index": "A",
        "solvedCount": 5877
      },
      {
        "contestId": 1139,
        "index": "F",
        "solvedCount": 326
      },
      {
        "contestId": 1139,
        "index": "E",
        "solvedCount": 1340
      },
      {
        "contestId": 1139,
        "index": "D",
        "solvedCount": 1784
      },
      {
        "contestId": 1139,
        "index": "C",
        "solvedCount": 10502
      },
      {
        "contestId": 1139,
        "index": "B",
        "solvedCount": 13698
      },
      {
        "contestId": 1139,
        "index": "A",
        "solvedCount": 14924
      },
      {
        "contestId": 1138,
        "index": "B",
        "solvedCount": 3350
      },
      {
        "contestId": 1138,
        "index": "A",
        "solvedCount": 13943
      },
      {
        "contestId": 1137,
        "index": "F",
        "solvedCount": 393
      },
      {
        "contestId": 1137,
        "index": "E",
        "solvedCount": 448
      },
      {
        "contestId": 1137,
        "index": "D",
        "solvedCount": 1005
      },
      {
        "contestId": 1137,
        "index": "C",
        "solvedCount": 925
      },
      {
        "contestId": 1137,
        "index": "B",
        "solvedCount": 2695
      },
      {
        "contestId": 1137,
        "index": "A",
        "solvedCount": 1825
      },
      {
        "contestId": 1136,
        "index": "E",
        "solvedCount": 991
      },
      {
        "contestId": 1136,
        "index": "D",
        "solvedCount": 3478
      },
      {
        "contestId": 1136,
        "index": "C",
        "solvedCount": 6967
      },
      {
        "contestId": 1136,
        "index": "B",
        "solvedCount": 10695
      },
      {
        "contestId": 1136,
        "index": "A",
        "solvedCount": 15069
      },
      {
        "contestId": 1133,
        "index": "F2",
        "solvedCount": 364
      },
      {
        "contestId": 1133,
        "index": "F1",
        "solvedCount": 1685
      },
      {
        "contestId": 1133,
        "index": "E",
        "solvedCount": 656
      },
      {
        "contestId": 1133,
        "index": "D",
        "solvedCount": 2087
      },
      {
        "contestId": 1133,
        "index": "C",
        "solvedCount": 4342
      },
      {
        "contestId": 1133,
        "index": "B",
        "solvedCount": 4433
      },
      {
        "contestId": 1133,
        "index": "A",
        "solvedCount": 6189
      },
      {
        "contestId": 1132,
        "index": "G",
        "solvedCount": 37
      },
      {
        "contestId": 1132,
        "index": "F",
        "solvedCount": 717
      },
      {
        "contestId": 1132,
        "index": "E",
        "solvedCount": 116
      },
      {
        "contestId": 1132,
        "index": "D",
        "solvedCount": 204
      },
      {
        "contestId": 1132,
        "index": "C",
        "solvedCount": 1442
      },
      {
        "contestId": 1132,
        "index": "B",
        "solvedCount": 5120
      },
      {
        "contestId": 1132,
        "index": "A",
        "solvedCount": 4347
      },
      {
        "contestId": 1131,
        "index": "G",
        "solvedCount": 354
      },
      {
        "contestId": 1131,
        "index": "F",
        "solvedCount": 5322
      },
      {
        "contestId": 1131,
        "index": "E",
        "solvedCount": 1072
      },
      {
        "contestId": 1131,
        "index": "D",
        "solvedCount": 2811
      },
      {
        "contestId": 1131,
        "index": "C",
        "solvedCount": 12722
      },
      {
        "contestId": 1131,
        "index": "B",
        "solvedCount": 8883
      },
      {
        "contestId": 1131,
        "index": "A",
        "solvedCount": 11492
      },
      {
        "contestId": 1130,
        "index": "C",
        "solvedCount": 7538
      },
      {
        "contestId": 1130,
        "index": "B",
        "solvedCount": 7373
      },
      {
        "contestId": 1130,
        "index": "A",
        "solvedCount": 10707
      },
      {
        "contestId": 1129,
        "index": "E",
        "solvedCount": 339
      },
      {
        "contestId": 1129,
        "index": "D",
        "solvedCount": 786
      },
      {
        "contestId": 1129,
        "index": "C",
        "solvedCount": 814
      },
      {
        "contestId": 1129,
        "index": "B",
        "solvedCount": 1329
      },
      {
        "contestId": 1129,
        "index": "A2",
        "solvedCount": 1713
      },
      {
        "contestId": 1129,
        "index": "A1",
        "solvedCount": 1468
      },
      {
        "contestId": 1121,
        "index": "C",
        "solvedCount": 1471
      },
      {
        "contestId": 1121,
        "index": "B",
        "solvedCount": 6878
      },
      {
        "contestId": 1121,
        "index": "A",
        "solvedCount": 6071
      },
      {
        "contestId": 1120,
        "index": "F",
        "solvedCount": 210
      },
      {
        "contestId": 1120,
        "index": "E",
        "solvedCount": 93
      },
      {
        "contestId": 1120,
        "index": "D",
        "solvedCount": 955
      },
      {
        "contestId": 1120,
        "index": "C",
        "solvedCount": 1104
      },
      {
        "contestId": 1120,
        "index": "B",
        "solvedCount": 334
      },
      {
        "contestId": 1120,
        "index": "A",
        "solvedCount": 838
      },
      {
        "contestId": 1119,
        "index": "H",
        "solvedCount": 439
      },
      {
        "contestId": 1119,
        "index": "G",
        "solvedCount": 368
      },
      {
        "contestId": 1119,
        "index": "F",
        "solvedCount": 564
      },
      {
        "contestId": 1119,
        "index": "E",
        "solvedCount": 4221
      },
      {
        "contestId": 1119,
        "index": "D",
        "solvedCount": 4334
      },
      {
        "contestId": 1119,
        "index": "C",
        "solvedCount": 6247
      },
      {
        "contestId": 1119,
        "index": "B",
        "solvedCount": 8569
      },
      {
        "contestId": 1119,
        "index": "A",
        "solvedCount": 9631
      },
      {
        "contestId": 1118,
        "index": "F2",
        "solvedCount": 22
      },
      {
        "contestId": 1118,
        "index": "F1",
        "solvedCount": 1234
      },
      {
        "contestId": 1118,
        "index": "E",
        "solvedCount": 896
      },
      {
        "contestId": 1118,
        "index": "D2",
        "solvedCount": 1181
      },
      {
        "contestId": 1118,
        "index": "D1",
        "solvedCount": 1354
      },
      {
        "contestId": 1118,
        "index": "C",
        "solvedCount": 1757
      },
      {
        "contestId": 1118,
        "index": "B",
        "solvedCount": 5220
      },
      {
        "contestId": 1118,
        "index": "A",
        "solvedCount": 7955
      },
      {
        "contestId": 1117,
        "index": "G",
        "solvedCount": 37
      },
      {
        "contestId": 1117,
        "index": "F",
        "solvedCount": 33
      },
      {
        "contestId": 1117,
        "index": "E",
        "solvedCount": 335
      },
      {
        "contestId": 1117,
        "index": "D",
        "solvedCount": 635
      },
      {
        "contestId": 1117,
        "index": "C",
        "solvedCount": 1191
      },
      {
        "contestId": 1117,
        "index": "B",
        "solvedCount": 5506
      },
      {
        "contestId": 1117,
        "index": "A",
        "solvedCount": 5225
      },
      {
        "contestId": 1116,
        "index": "D6",
        "solvedCount": 55
      },
      {
        "contestId": 1116,
        "index": "D5",
        "solvedCount": 113
      },
      {
        "contestId": 1116,
        "index": "D4",
        "solvedCount": 134
      },
      {
        "contestId": 1116,
        "index": "D3",
        "solvedCount": 160
      },
      {
        "contestId": 1116,
        "index": "D2",
        "solvedCount": 186
      },
      {
        "contestId": 1116,
        "index": "D1",
        "solvedCount": 219
      },
      {
        "contestId": 1116,
        "index": "C3",
        "solvedCount": 138
      },
      {
        "contestId": 1116,
        "index": "C2",
        "solvedCount": 142
      },
      {
        "contestId": 1116,
        "index": "C1",
        "solvedCount": 209
      },
      {
        "contestId": 1116,
        "index": "B2",
        "solvedCount": 27
      },
      {
        "contestId": 1116,
        "index": "B1",
        "solvedCount": 88
      },
      {
        "contestId": 1116,
        "index": "A2",
        "solvedCount": 120
      },
      {
        "contestId": 1116,
        "index": "A1",
        "solvedCount": 206
      },
      {
        "contestId": 1115,
        "index": "U3",
        "solvedCount": 109
      },
      {
        "contestId": 1115,
        "index": "U2",
        "solvedCount": 124
      },
      {
        "contestId": 1115,
        "index": "U1",
        "solvedCount": 145
      },
      {
        "contestId": 1115,
        "index": "G3",
        "solvedCount": 120
      },
      {
        "contestId": 1115,
        "index": "G2",
        "solvedCount": 165
      },
      {
        "contestId": 1115,
        "index": "G1",
        "solvedCount": 189
      },
      {
        "contestId": 1114,
        "index": "F",
        "solvedCount": 1559
      },
      {
        "contestId": 1114,
        "index": "E",
        "solvedCount": 2504
      },
      {
        "contestId": 1114,
        "index": "D",
        "solvedCount": 5652
      },
      {
        "contestId": 1114,
        "index": "C",
        "solvedCount": 6792
      },
      {
        "contestId": 1114,
        "index": "B",
        "solvedCount": 8421
      },
      {
        "contestId": 1114,
        "index": "A",
        "solvedCount": 16812
      },
      {
        "contestId": 1113,
        "index": "B",
        "solvedCount": 7318
      },
      {
        "contestId": 1113,
        "index": "A",
        "solvedCount": 15015
      },
      {
        "contestId": 1111,
        "index": "E",
        "solvedCount": 707
      },
      {
        "contestId": 1111,
        "index": "D",
        "solvedCount": 821
      },
      {
        "contestId": 1111,
        "index": "C",
        "solvedCount": 5824
      },
      {
        "contestId": 1111,
        "index": "B",
        "solvedCount": 5733
      },
      {
        "contestId": 1111,
        "index": "A",
        "solvedCount": 15096
      },
      {
        "contestId": 1110,
        "index": "H",
        "solvedCount": 237
      },
      {
        "contestId": 1110,
        "index": "G",
        "solvedCount": 483
      },
      {
        "contestId": 1110,
        "index": "F",
        "solvedCount": 1410
      },
      {
        "contestId": 1110,
        "index": "E",
        "solvedCount": 3461
      },
      {
        "contestId": 1110,
        "index": "D",
        "solvedCount": 3067
      },
      {
        "contestId": 1110,
        "index": "C",
        "solvedCount": 8106
      },
      {
        "contestId": 1110,
        "index": "B",
        "solvedCount": 9700
      },
      {
        "contestId": 1110,
        "index": "A",
        "solvedCount": 13525
      },
      {
        "contestId": 1109,
        "index": "F",
        "solvedCount": 232
      },
      {
        "contestId": 1109,
        "index": "E",
        "solvedCount": 451
      },
      {
        "contestId": 1109,
        "index": "D",
        "solvedCount": 953
      },
      {
        "contestId": 1109,
        "index": "C",
        "solvedCount": 212
      },
      {
        "contestId": 1109,
        "index": "B",
        "solvedCount": 1935
      },
      {
        "contestId": 1109,
        "index": "A",
        "solvedCount": 4023
      },
      {
        "contestId": 1108,
        "index": "F",
        "solvedCount": 283
      },
      {
        "contestId": 1108,
        "index": "E2",
        "solvedCount": 247
      },
      {
        "contestId": 1108,
        "index": "E1",
        "solvedCount": 1206
      },
      {
        "contestId": 1108,
        "index": "D",
        "solvedCount": 4432
      },
      {
        "contestId": 1108,
        "index": "C",
        "solvedCount": 4789
      },
      {
        "contestId": 1108,
        "index": "B",
        "solvedCount": 6894
      },
      {
        "contestId": 1108,
        "index": "A",
        "solvedCount": 9192
      },
      {
        "contestId": 1107,
        "index": "G",
        "solvedCount": 106
      },
      {
        "contestId": 1107,
        "index": "F",
        "solvedCount": 34
      },
      {
        "contestId": 1107,
        "index": "E",
        "solvedCount": 139
      },
      {
        "contestId": 1107,
        "index": "D",
        "solvedCount": 1134
      },
      {
        "contestId": 1107,
        "index": "C",
        "solvedCount": 4003
      },
      {
        "contestId": 1107,
        "index": "B",
        "solvedCount": 5223
      },
      {
        "contestId": 1107,
        "index": "A",
        "solvedCount": 5698
      },
      {
        "contestId": 1106,
        "index": "F",
        "solvedCount": 841
      },
      {
        "contestId": 1106,
        "index": "E",
        "solvedCount": 2151
      },
      {
        "contestId": 1106,
        "index": "D",
        "solvedCount": 11747
      },
      {
        "contestId": 1106,
        "index": "C",
        "solvedCount": 13337
      },
      {
        "contestId": 1106,
        "index": "B",
        "solvedCount": 6394
      },
      {
        "contestId": 1106,
        "index": "A",
        "solvedCount": 11968
      },
      {
        "contestId": 1105,
        "index": "E",
        "solvedCount": 1444
      },
      {
        "contestId": 1105,
        "index": "D",
        "solvedCount": 3669
      },
      {
        "contestId": 1105,
        "index": "C",
        "solvedCount": 9171
      },
      {
        "contestId": 1105,
        "index": "B",
        "solvedCount": 9366
      },
      {
        "contestId": 1105,
        "index": "A",
        "solvedCount": 10245
      },
      {
        "contestId": 1104,
        "index": "B",
        "solvedCount": 12594
      },
      {
        "contestId": 1104,
        "index": "A",
        "solvedCount": 14323
      },
      {
        "contestId": 1103,
        "index": "E",
        "solvedCount": 203
      },
      {
        "contestId": 1103,
        "index": "D",
        "solvedCount": 354
      },
      {
        "contestId": 1103,
        "index": "C",
        "solvedCount": 558
      },
      {
        "contestId": 1103,
        "index": "B",
        "solvedCount": 1532
      },
      {
        "contestId": 1103,
        "index": "A",
        "solvedCount": 2777
      },
      {
        "contestId": 1102,
        "index": "F",
        "solvedCount": 249
      },
      {
        "contestId": 1102,
        "index": "E",
        "solvedCount": 1089
      },
      {
        "contestId": 1102,
        "index": "D",
        "solvedCount": 2500
      },
      {
        "contestId": 1102,
        "index": "C",
        "solvedCount": 5155
      },
      {
        "contestId": 1102,
        "index": "B",
        "solvedCount": 3544
      },
      {
        "contestId": 1102,
        "index": "A",
        "solvedCount": 7596
      },
      {
        "contestId": 1101,
        "index": "G",
        "solvedCount": 142
      },
      {
        "contestId": 1101,
        "index": "F",
        "solvedCount": 81
      },
      {
        "contestId": 1101,
        "index": "E",
        "solvedCount": 3244
      },
      {
        "contestId": 1101,
        "index": "D",
        "solvedCount": 658
      },
      {
        "contestId": 1101,
        "index": "C",
        "solvedCount": 2678
      },
      {
        "contestId": 1101,
        "index": "B",
        "solvedCount": 4156
      },
      {
        "contestId": 1101,
        "index": "A",
        "solvedCount": 6273
      },
      {
        "contestId": 1100,
        "index": "F",
        "solvedCount": 1599
      },
      {
        "contestId": 1100,
        "index": "E",
        "solvedCount": 2040
      },
      {
        "contestId": 1100,
        "index": "D",
        "solvedCount": 772
      },
      {
        "contestId": 1100,
        "index": "C",
        "solvedCount": 8918
      },
      {
        "contestId": 1100,
        "index": "B",
        "solvedCount": 9918
      },
      {
        "contestId": 1100,
        "index": "A",
        "solvedCount": 9548
      },
      {
        "contestId": 1099,
        "index": "F",
        "solvedCount": 781
      },
      {
        "contestId": 1099,
        "index": "C",
        "solvedCount": 8125
      },
      {
        "contestId": 1099,
        "index": "B",
        "solvedCount": 9922
      },
      {
        "contestId": 1099,
        "index": "A",
        "solvedCount": 11654
      },
      {
        "contestId": 1098,
        "index": "F",
        "solvedCount": 173
      },
      {
        "contestId": 1098,
        "index": "E",
        "solvedCount": 191
      },
      {
        "contestId": 1098,
        "index": "D",
        "solvedCount": 615
      },
      {
        "contestId": 1098,
        "index": "C",
        "solvedCount": 788
      },
      {
        "contestId": 1098,
        "index": "B",
        "solvedCount": 1004
      },
      {
        "contestId": 1098,
        "index": "A",
        "solvedCount": 3613
      },
      {
        "contestId": 1097,
        "index": "H",
        "solvedCount": 86
      },
      {
        "contestId": 1097,
        "index": "G",
        "solvedCount": 519
      },
      {
        "contestId": 1097,
        "index": "F",
        "solvedCount": 1123
      },
      {
        "contestId": 1097,
        "index": "E",
        "solvedCount": 406
      },
      {
        "contestId": 1097,
        "index": "D",
        "solvedCount": 2367
      },
      {
        "contestId": 1097,
        "index": "C",
        "solvedCount": 7477
      },
      {
        "contestId": 1097,
        "index": "B",
        "solvedCount": 20708
      },
      {
        "contestId": 1097,
        "index": "A",
        "solvedCount": 31477
      },
      {
        "contestId": 1096,
        "index": "G",
        "solvedCount": 148
      },
      {
        "contestId": 1096,
        "index": "F",
        "solvedCount": 230
      },
      {
        "contestId": 1096,
        "index": "E",
        "solvedCount": 43
      },
      {
        "contestId": 1096,
        "index": "D",
        "solvedCount": 1200
      },
      {
        "contestId": 1096,
        "index": "C",
        "solvedCount": 2537
      },
      {
        "contestId": 1096,
        "index": "B",
        "solvedCount": 3970
      },
      {
        "contestId": 1096,
        "index": "A",
        "solvedCount": 6584
      },
      {
        "contestId": 1095,
        "index": "F",
        "solvedCount": 595
      },
      {
        "contestId": 1095,
        "index": "E",
        "solvedCount": 823
      },
      {
        "contestId": 1095,
        "index": "D",
        "solvedCount": 2259
      },
      {
        "contestId": 1095,
        "index": "C",
        "solvedCount": 3527
      },
      {
        "contestId": 1095,
        "index": "B",
        "solvedCount": 6861
      },
      {
        "contestId": 1095,
        "index": "A",
        "solvedCount": 7945
      },
      {
        "contestId": 1093,
        "index": "G",
        "solvedCount": 234
      },
      {
        "contestId": 1093,
        "index": "F",
        "solvedCount": 59
      },
      {
        "contestId": 1093,
        "index": "E",
        "solvedCount": 115
      },
      {
        "contestId": 1093,
        "index": "D",
        "solvedCount": 1535
      },
      {
        "contestId": 1093,
        "index": "C",
        "solvedCount": 3995
      },
      {
        "contestId": 1093,
        "index": "B",
        "solvedCount": 5130
      },
      {
        "contestId": 1093,
        "index": "A",
        "solvedCount": 5723
      },
      {
        "contestId": 1092,
        "index": "F",
        "solvedCount": 478
      },
      {
        "contestId": 1092,
        "index": "E",
        "solvedCount": 99
      },
      {
        "contestId": 1092,
        "index": "D2",
        "solvedCount": 222
      },
      {
        "contestId": 1092,
        "index": "D1",
        "solvedCount": 352
      },
      {
        "contestId": 1092,
        "index": "C",
        "solvedCount": 1433
      },
      {
        "contestId": 1092,
        "index": "B",
        "solvedCount": 7397
      },
      {
        "contestId": 1092,
        "index": "A",
        "solvedCount": 7117
      },
      {
        "contestId": 1091,
        "index": "H",
        "solvedCount": 337
      },
      {
        "contestId": 1091,
        "index": "G",
        "solvedCount": 166
      },
      {
        "contestId": 1091,
        "index": "F",
        "solvedCount": 718
      },
      {
        "contestId": 1091,
        "index": "E",
        "solvedCount": 956
      },
      {
        "contestId": 1091,
        "index": "D",
        "solvedCount": 6109
      },
      {
        "contestId": 1091,
        "index": "C",
        "solvedCount": 8484
      },
      {
        "contestId": 1091,
        "index": "B",
        "solvedCount": 9711
      },
      {
        "contestId": 1091,
        "index": "A",
        "solvedCount": 15571
      },
      {
        "contestId": 1090,
        "index": "M",
        "solvedCount": 1127
      },
      {
        "contestId": 1090,
        "index": "L",
        "solvedCount": 295
      },
      {
        "contestId": 1090,
        "index": "K",
        "solvedCount": 263
      },
      {
        "contestId": 1090,
        "index": "J",
        "solvedCount": 27
      },
      {
        "contestId": 1090,
        "index": "I",
        "solvedCount": 224
      },
      {
        "contestId": 1090,
        "index": "H",
        "solvedCount": 9
      },
      {
        "contestId": 1090,
        "index": "G",
        "solvedCount": 2
      },
      {
        "contestId": 1090,
        "index": "F",
        "solvedCount": 36
      },
      {
        "contestId": 1090,
        "index": "E",
        "solvedCount": 115
      },
      {
        "contestId": 1090,
        "index": "D",
        "solvedCount": 530
      },
      {
        "contestId": 1090,
        "index": "C",
        "solvedCount": 82
      },
      {
        "contestId": 1090,
        "index": "B",
        "solvedCount": 475
      },
      {
        "contestId": 1090,
        "index": "A",
        "solvedCount": 1013
      },
      {
        "contestId": 1089,
        "index": "M",
        "solvedCount": 205
      },
      {
        "contestId": 1089,
        "index": "L",
        "solvedCount": 1079
      },
      {
        "contestId": 1089,
        "index": "K",
        "solvedCount": 205
      },
      {
        "contestId": 1089,
        "index": "J",
        "solvedCount": 22
      },
      {
        "contestId": 1089,
        "index": "I",
        "solvedCount": 35
      },
      {
        "contestId": 1089,
        "index": "H",
        "solvedCount": 6
      },
      {
        "contestId": 1089,
        "index": "G",
        "solvedCount": 909
      },
      {
        "contestId": 1089,
        "index": "F",
        "solvedCount": 601
      },
      {
        "contestId": 1089,
        "index": "E",
        "solvedCount": 839
      },
      {
        "contestId": 1089,
        "index": "D",
        "solvedCount": 6
      },
      {
        "contestId": 1089,
        "index": "C",
        "solvedCount": 105
      },
      {
        "contestId": 1089,
        "index": "B",
        "solvedCount": 22
      },
      {
        "contestId": 1089,
        "index": "A",
        "solvedCount": 348
      },
      {
        "contestId": 1088,
        "index": "F",
        "solvedCount": 421
      },
      {
        "contestId": 1088,
        "index": "E",
        "solvedCount": 1273
      },
      {
        "contestId": 1088,
        "index": "D",
        "solvedCount": 2461
      },
      {
        "contestId": 1088,
        "index": "C",
        "solvedCount": 7553
      },
      {
        "contestId": 1088,
        "index": "B",
        "solvedCount": 11338
      },
      {
        "contestId": 1088,
        "index": "A",
        "solvedCount": 14999
      },
      {
        "contestId": 1086,
        "index": "F",
        "solvedCount": 175
      },
      {
        "contestId": 1085,
        "index": "G",
        "solvedCount": 202
      },
      {
        "contestId": 1085,
        "index": "F",
        "solvedCount": 109
      },
      {
        "contestId": 1085,
        "index": "E",
        "solvedCount": 149
      },
      {
        "contestId": 1085,
        "index": "D",
        "solvedCount": 1680
      },
      {
        "contestId": 1085,
        "index": "C",
        "solvedCount": 1419
      },
      {
        "contestId": 1085,
        "index": "B",
        "solvedCount": 3243
      },
      {
        "contestId": 1085,
        "index": "A",
        "solvedCount": 4898
      },
      {
        "contestId": 1084,
        "index": "C",
        "solvedCount": 6843
      },
      {
        "contestId": 1084,
        "index": "B",
        "solvedCount": 7096
      },
      {
        "contestId": 1084,
        "index": "A",
        "solvedCount": 7389
      },
      {
        "contestId": 1083,
        "index": "F",
        "solvedCount": 215
      },
      {
        "contestId": 1083,
        "index": "E",
        "solvedCount": 2683
      },
      {
        "contestId": 1083,
        "index": "D",
        "solvedCount": 180
      },
      {
        "contestId": 1083,
        "index": "C",
        "solvedCount": 675
      },
      {
        "contestId": 1083,
        "index": "B",
        "solvedCount": 1216
      },
      {
        "contestId": 1083,
        "index": "A",
        "solvedCount": 2557
      },
      {
        "contestId": 1082,
        "index": "G",
        "solvedCount": 143
      },
      {
        "contestId": 1082,
        "index": "F",
        "solvedCount": 16
      },
      {
        "contestId": 1082,
        "index": "E",
        "solvedCount": 538
      },
      {
        "contestId": 1082,
        "index": "D",
        "solvedCount": 996
      },
      {
        "contestId": 1082,
        "index": "C",
        "solvedCount": 1976
      },
      {
        "contestId": 1082,
        "index": "B",
        "solvedCount": 2358
      },
      {
        "contestId": 1082,
        "index": "A",
        "solvedCount": 3784
      },
      {
        "contestId": 1081,
        "index": "H",
        "solvedCount": 91
      },
      {
        "contestId": 1081,
        "index": "G",
        "solvedCount": 297
      },
      {
        "contestId": 1081,
        "index": "F",
        "solvedCount": 389
      },
      {
        "contestId": 1081,
        "index": "E",
        "solvedCount": 2237
      },
      {
        "contestId": 1081,
        "index": "D",
        "solvedCount": 3303
      },
      {
        "contestId": 1081,
        "index": "C",
        "solvedCount": 5989
      },
      {
        "contestId": 1081,
        "index": "B",
        "solvedCount": 4164
      },
      {
        "contestId": 1081,
        "index": "A",
        "solvedCount": 10464
      },
      {
        "contestId": 1080,
        "index": "F",
        "solvedCount": 571
      },
      {
        "contestId": 1080,
        "index": "E",
        "solvedCount": 747
      },
      {
        "contestId": 1080,
        "index": "D",
        "solvedCount": 1467
      },
      {
        "contestId": 1080,
        "index": "C",
        "solvedCount": 3923
      },
      {
        "contestId": 1080,
        "index": "B",
        "solvedCount": 10660
      },
      {
        "contestId": 1080,
        "index": "A",
        "solvedCount": 15616
      },
      {
        "contestId": 1078,
        "index": "E",
        "solvedCount": 83
      },
      {
        "contestId": 1077,
        "index": "F2",
        "solvedCount": 229
      },
      {
        "contestId": 1077,
        "index": "F1",
        "solvedCount": 514
      },
      {
        "contestId": 1077,
        "index": "E",
        "solvedCount": 1001
      },
      {
        "contestId": 1077,
        "index": "D",
        "solvedCount": 1730
      },
      {
        "contestId": 1077,
        "index": "C",
        "solvedCount": 3978
      },
      {
        "contestId": 1077,
        "index": "B",
        "solvedCount": 6500
      },
      {
        "contestId": 1077,
        "index": "A",
        "solvedCount": 7875
      },
      {
        "contestId": 1076,
        "index": "G",
        "solvedCount": 4
      },
      {
        "contestId": 1076,
        "index": "F",
        "solvedCount": 80
      },
      {
        "contestId": 1076,
        "index": "E",
        "solvedCount": 625
      },
      {
        "contestId": 1076,
        "index": "D",
        "solvedCount": 769
      },
      {
        "contestId": 1076,
        "index": "C",
        "solvedCount": 3753
      },
      {
        "contestId": 1076,
        "index": "B",
        "solvedCount": 4083
      },
      {
        "contestId": 1076,
        "index": "A",
        "solvedCount": 4383
      },
      {
        "contestId": 1075,
        "index": "B",
        "solvedCount": 3896
      },
      {
        "contestId": 1075,
        "index": "A",
        "solvedCount": 7538
      },
      {
        "contestId": 1073,
        "index": "G",
        "solvedCount": 22
      },
      {
        "contestId": 1073,
        "index": "F",
        "solvedCount": 19
      },
      {
        "contestId": 1073,
        "index": "E",
        "solvedCount": 214
      },
      {
        "contestId": 1073,
        "index": "D",
        "solvedCount": 1521
      },
      {
        "contestId": 1073,
        "index": "C",
        "solvedCount": 1072
      },
      {
        "contestId": 1073,
        "index": "B",
        "solvedCount": 5001
      },
      {
        "contestId": 1073,
        "index": "A",
        "solvedCount": 5308
      },
      {
        "contestId": 1071,
        "index": "E",
        "solvedCount": 84
      },
      {
        "contestId": 1070,
        "index": "M",
        "solvedCount": 4
      },
      {
        "contestId": 1070,
        "index": "L",
        "solvedCount": 30
      },
      {
        "contestId": 1070,
        "index": "K",
        "solvedCount": 1338
      },
      {
        "contestId": 1070,
        "index": "J",
        "solvedCount": 136
      },
      {
        "contestId": 1070,
        "index": "I",
        "solvedCount": 88
      },
      {
        "contestId": 1070,
        "index": "H",
        "solvedCount": 1048
      },
      {
        "contestId": 1070,
        "index": "G",
        "solvedCount": 216
      },
      {
        "contestId": 1070,
        "index": "F",
        "solvedCount": 1002
      },
      {
        "contestId": 1070,
        "index": "E",
        "solvedCount": 301
      },
      {
        "contestId": 1070,
        "index": "D",
        "solvedCount": 1295
      },
      {
        "contestId": 1070,
        "index": "C",
        "solvedCount": 492
      },
      {
        "contestId": 1070,
        "index": "B",
        "solvedCount": 117
      },
      {
        "contestId": 1070,
        "index": "A",
        "solvedCount": 367
      },
      {
        "contestId": 1068,
        "index": "C",
        "solvedCount": 2928
      },
      {
        "contestId": 1068,
        "index": "B",
        "solvedCount": 9197
      },
      {
        "contestId": 1068,
        "index": "A",
        "solvedCount": 6112
      },
      {
        "contestId": 1067,
        "index": "E",
        "solvedCount": 379
      },
      {
        "contestId": 1067,
        "index": "D",
        "solvedCount": 289
      },
      {
        "contestId": 1067,
        "index": "C",
        "solvedCount": 484
      },
      {
        "contestId": 1067,
        "index": "B",
        "solvedCount": 1407
      },
      {
        "contestId": 1067,
        "index": "A",
        "solvedCount": 1714
      },
      {
        "contestId": 1066,
        "index": "F",
        "solvedCount": 218
      },
      {
        "contestId": 1066,
        "index": "E",
        "solvedCount": 1389
      },
      {
        "contestId": 1066,
        "index": "D",
        "solvedCount": 1249
      },
      {
        "contestId": 1066,
        "index": "C",
        "solvedCount": 3041
      },
      {
        "contestId": 1066,
        "index": "B",
        "solvedCount": 2470
      },
      {
        "contestId": 1066,
        "index": "A",
        "solvedCount": 5946
      },
      {
        "contestId": 1065,
        "index": "G",
        "solvedCount": 8
      },
      {
        "contestId": 1065,
        "index": "F",
        "solvedCount": 71
      },
      {
        "contestId": 1065,
        "index": "E",
        "solvedCount": 250
      },
      {
        "contestId": 1065,
        "index": "D",
        "solvedCount": 305
      },
      {
        "contestId": 1065,
        "index": "C",
        "solvedCount": 2433
      },
      {
        "contestId": 1065,
        "index": "B",
        "solvedCount": 4178
      },
      {
        "contestId": 1065,
        "index": "A",
        "solvedCount": 6126
      },
      {
        "contestId": 1064,
        "index": "B",
        "solvedCount": 7126
      },
      {
        "contestId": 1064,
        "index": "A",
        "solvedCount": 16687
      },
      {
        "contestId": 1063,
        "index": "F",
        "solvedCount": 667
      },
      {
        "contestId": 1063,
        "index": "E",
        "solvedCount": 307
      },
      {
        "contestId": 1063,
        "index": "D",
        "solvedCount": 358
      },
      {
        "contestId": 1063,
        "index": "C",
        "solvedCount": 1382
      },
      {
        "contestId": 1063,
        "index": "B",
        "solvedCount": 3439
      },
      {
        "contestId": 1063,
        "index": "A",
        "solvedCount": 3853
      },
      {
        "contestId": 1062,
        "index": "F",
        "solvedCount": 403
      },
      {
        "contestId": 1062,
        "index": "E",
        "solvedCount": 1496
      },
      {
        "contestId": 1062,
        "index": "D",
        "solvedCount": 3586
      },
      {
        "contestId": 1062,
        "index": "C",
        "solvedCount": 5094
      },
      {
        "contestId": 1062,
        "index": "B",
        "solvedCount": 7146
      },
      {
        "contestId": 1062,
        "index": "A",
        "solvedCount": 8016
      },
      {
        "contestId": 1061,
        "index": "F",
        "solvedCount": 621
      },
      {
        "contestId": 1061,
        "index": "E",
        "solvedCount": 438
      },
      {
        "contestId": 1061,
        "index": "D",
        "solvedCount": 2156
      },
      {
        "contestId": 1061,
        "index": "C",
        "solvedCount": 7086
      },
      {
        "contestId": 1061,
        "index": "B",
        "solvedCount": 6848
      },
      {
        "contestId": 1061,
        "index": "A",
        "solvedCount": 18413
      },
      {
        "contestId": 1060,
        "index": "H",
        "solvedCount": 195
      },
      {
        "contestId": 1060,
        "index": "G",
        "solvedCount": 93
      },
      {
        "contestId": 1060,
        "index": "F",
        "solvedCount": 451
      },
      {
        "contestId": 1060,
        "index": "E",
        "solvedCount": 2657
      },
      {
        "contestId": 1060,
        "index": "D",
        "solvedCount": 3404
      },
      {
        "contestId": 1060,
        "index": "C",
        "solvedCount": 4523
      },
      {
        "contestId": 1060,
        "index": "B",
        "solvedCount": 8137
      },
      {
        "contestId": 1060,
        "index": "A",
        "solvedCount": 10872
      },
      {
        "contestId": 1059,
        "index": "E",
        "solvedCount": 1132
      },
      {
        "contestId": 1059,
        "index": "D",
        "solvedCount": 2281
      },
      {
        "contestId": 1059,
        "index": "C",
        "solvedCount": 6592
      },
      {
        "contestId": 1059,
        "index": "B",
        "solvedCount": 6428
      },
      {
        "contestId": 1059,
        "index": "A",
        "solvedCount": 10298
      },
      {
        "contestId": 1057,
        "index": "C",
        "solvedCount": 754
      },
      {
        "contestId": 1057,
        "index": "B",
        "solvedCount": 1712
      },
      {
        "contestId": 1057,
        "index": "A",
        "solvedCount": 5246
      },
      {
        "contestId": 1056,
        "index": "H",
        "solvedCount": 129
      },
      {
        "contestId": 1056,
        "index": "G",
        "solvedCount": 217
      },
      {
        "contestId": 1056,
        "index": "F",
        "solvedCount": 433
      },
      {
        "contestId": 1056,
        "index": "E",
        "solvedCount": 1629
      },
      {
        "contestId": 1056,
        "index": "D",
        "solvedCount": 4869
      },
      {
        "contestId": 1056,
        "index": "C",
        "solvedCount": 2077
      },
      {
        "contestId": 1056,
        "index": "B",
        "solvedCount": 3785
      },
      {
        "contestId": 1056,
        "index": "A",
        "solvedCount": 5847
      },
      {
        "contestId": 1055,
        "index": "G",
        "solvedCount": 68
      },
      {
        "contestId": 1055,
        "index": "F",
        "solvedCount": 383
      },
      {
        "contestId": 1055,
        "index": "E",
        "solvedCount": 645
      },
      {
        "contestId": 1055,
        "index": "D",
        "solvedCount": 590
      },
      {
        "contestId": 1055,
        "index": "C",
        "solvedCount": 1696
      },
      {
        "contestId": 1055,
        "index": "B",
        "solvedCount": 4245
      },
      {
        "contestId": 1055,
        "index": "A",
        "solvedCount": 8193
      },
      {
        "contestId": 1054,
        "index": "H",
        "solvedCount": 147
      },
      {
        "contestId": 1054,
        "index": "G",
        "solvedCount": 186
      },
      {
        "contestId": 1054,
        "index": "F",
        "solvedCount": 277
      },
      {
        "contestId": 1054,
        "index": "E",
        "solvedCount": 451
      },
      {
        "contestId": 1054,
        "index": "D",
        "solvedCount": 2071
      },
      {
        "contestId": 1054,
        "index": "C",
        "solvedCount": 4028
      },
      {
        "contestId": 1054,
        "index": "B",
        "solvedCount": 5938
      },
      {
        "contestId": 1054,
        "index": "A",
        "solvedCount": 8268
      },
      {
        "contestId": 1053,
        "index": "E",
        "solvedCount": 169
      },
      {
        "contestId": 1051,
        "index": "G",
        "solvedCount": 2
      },
      {
        "contestId": 1051,
        "index": "F",
        "solvedCount": 137
      },
      {
        "contestId": 1051,
        "index": "E",
        "solvedCount": 50
      },
      {
        "contestId": 1051,
        "index": "D",
        "solvedCount": 1654
      },
      {
        "contestId": 1051,
        "index": "C",
        "solvedCount": 2897
      },
      {
        "contestId": 1051,
        "index": "B",
        "solvedCount": 4944
      },
      {
        "contestId": 1051,
        "index": "A",
        "solvedCount": 4344
      },
      {
        "contestId": 1047,
        "index": "B",
        "solvedCount": 14365
      },
      {
        "contestId": 1047,
        "index": "A",
        "solvedCount": 16076
      },
      {
        "contestId": 1046,
        "index": "I",
        "solvedCount": 43
      },
      {
        "contestId": 1046,
        "index": "F",
        "solvedCount": 634
      },
      {
        "contestId": 1046,
        "index": "C",
        "solvedCount": 647
      },
      {
        "contestId": 1045,
        "index": "J",
        "solvedCount": 15
      },
      {
        "contestId": 1045,
        "index": "I",
        "solvedCount": 234
      },
      {
        "contestId": 1045,
        "index": "H",
        "solvedCount": 45
      },
      {
        "contestId": 1045,
        "index": "G",
        "solvedCount": 136
      },
      {
        "contestId": 1045,
        "index": "F",
        "solvedCount": 5
      },
      {
        "contestId": 1045,
        "index": "E",
        "solvedCount": 5
      },
      {
        "contestId": 1045,
        "index": "D",
        "solvedCount": 84
      },
      {
        "contestId": 1045,
        "index": "C",
        "solvedCount": 91
      },
      {
        "contestId": 1045,
        "index": "B",
        "solvedCount": 100
      },
      {
        "contestId": 1045,
        "index": "A",
        "solvedCount": 31
      },
      {
        "contestId": 1044,
        "index": "F",
        "solvedCount": 163
      },
      {
        "contestId": 1044,
        "index": "E",
        "solvedCount": 43
      },
      {
        "contestId": 1044,
        "index": "D",
        "solvedCount": 268
      },
      {
        "contestId": 1044,
        "index": "C",
        "solvedCount": 266
      },
      {
        "contestId": 1044,
        "index": "B",
        "solvedCount": 298
      },
      {
        "contestId": 1044,
        "index": "A",
        "solvedCount": 423
      },
      {
        "contestId": 1043,
        "index": "G",
        "solvedCount": 174
      },
      {
        "contestId": 1043,
        "index": "F",
        "solvedCount": 1787
      },
      {
        "contestId": 1043,
        "index": "E",
        "solvedCount": 2539
      },
      {
        "contestId": 1043,
        "index": "D",
        "solvedCount": 4180
      },
      {
        "contestId": 1043,
        "index": "C",
        "solvedCount": 6325
      },
      {
        "contestId": 1043,
        "index": "B",
        "solvedCount": 5913
      },
      {
        "contestId": 1043,
        "index": "A",
        "solvedCount": 10079
      },
      {
        "contestId": 1042,
        "index": "F",
        "solvedCount": 1088
      },
      {
        "contestId": 1042,
        "index": "E",
        "solvedCount": 1439
      },
      {
        "contestId": 1042,
        "index": "D",
        "solvedCount": 4772
      },
      {
        "contestId": 1042,
        "index": "C",
        "solvedCount": 4311
      },
      {
        "contestId": 1042,
        "index": "B",
        "solvedCount": 10816
      },
      {
        "contestId": 1042,
        "index": "A",
        "solvedCount": 10507
      },
      {
        "contestId": 1041,
        "index": "F",
        "solvedCount": 1044
      },
      {
        "contestId": 1041,
        "index": "E",
        "solvedCount": 2762
      },
      {
        "contestId": 1041,
        "index": "D",
        "solvedCount": 4477
      },
      {
        "contestId": 1041,
        "index": "C",
        "solvedCount": 7140
      },
      {
        "contestId": 1041,
        "index": "B",
        "solvedCount": 10624
      },
      {
        "contestId": 1041,
        "index": "A",
        "solvedCount": 18048
      },
      {
        "contestId": 1040,
        "index": "B",
        "solvedCount": 6705
      },
      {
        "contestId": 1040,
        "index": "A",
        "solvedCount": 8522
      },
      {
        "contestId": 1039,
        "index": "E",
        "solvedCount": 242
      },
      {
        "contestId": 1039,
        "index": "D",
        "solvedCount": 1361
      },
      {
        "contestId": 1039,
        "index": "C",
        "solvedCount": 917
      },
      {
        "contestId": 1039,
        "index": "B",
        "solvedCount": 1271
      },
      {
        "contestId": 1039,
        "index": "A",
        "solvedCount": 568
      },
      {
        "contestId": 1038,
        "index": "F",
        "solvedCount": 256
      },
      {
        "contestId": 1038,
        "index": "E",
        "solvedCount": 894
      },
      {
        "contestId": 1038,
        "index": "D",
        "solvedCount": 7398
      },
      {
        "contestId": 1038,
        "index": "C",
        "solvedCount": 8648
      },
      {
        "contestId": 1038,
        "index": "B",
        "solvedCount": 11896
      },
      {
        "contestId": 1038,
        "index": "A",
        "solvedCount": 12877
      },
      {
        "contestId": 1037,
        "index": "H",
        "solvedCount": 785
      },
      {
        "contestId": 1037,
        "index": "G",
        "solvedCount": 277
      },
      {
        "contestId": 1037,
        "index": "F",
        "solvedCount": 889
      },
      {
        "contestId": 1037,
        "index": "E",
        "solvedCount": 2475
      },
      {
        "contestId": 1037,
        "index": "D",
        "solvedCount": 11663
      },
      {
        "contestId": 1037,
        "index": "C",
        "solvedCount": 16539
      },
      {
        "contestId": 1037,
        "index": "B",
        "solvedCount": 9519
      },
      {
        "contestId": 1037,
        "index": "A",
        "solvedCount": 10125
      },
      {
        "contestId": 1036,
        "index": "G",
        "solvedCount": 16
      },
      {
        "contestId": 1036,
        "index": "F",
        "solvedCount": 141
      },
      {
        "contestId": 1036,
        "index": "E",
        "solvedCount": 168
      },
      {
        "contestId": 1036,
        "index": "D",
        "solvedCount": 2489
      },
      {
        "contestId": 1036,
        "index": "C",
        "solvedCount": 1304
      },
      {
        "contestId": 1036,
        "index": "B",
        "solvedCount": 2710
      },
      {
        "contestId": 1036,
        "index": "A",
        "solvedCount": 5328
      },
      {
        "contestId": 1034,
        "index": "E",
        "solvedCount": 472
      },
      {
        "contestId": 1034,
        "index": "D",
        "solvedCount": 391
      },
      {
        "contestId": 1034,
        "index": "C",
        "solvedCount": 618
      },
      {
        "contestId": 1034,
        "index": "B",
        "solvedCount": 1081
      },
      {
        "contestId": 1034,
        "index": "A",
        "solvedCount": 3550
      },
      {
        "contestId": 1033,
        "index": "G",
        "solvedCount": 292
      },
      {
        "contestId": 1033,
        "index": "F",
        "solvedCount": 316
      },
      {
        "contestId": 1033,
        "index": "E",
        "solvedCount": 507
      },
      {
        "contestId": 1033,
        "index": "D",
        "solvedCount": 2056
      },
      {
        "contestId": 1033,
        "index": "C",
        "solvedCount": 4749
      },
      {
        "contestId": 1033,
        "index": "B",
        "solvedCount": 7474
      },
      {
        "contestId": 1033,
        "index": "A",
        "solvedCount": 9852
      },
      {
        "contestId": 1032,
        "index": "G",
        "solvedCount": 156
      },
      {
        "contestId": 1032,
        "index": "F",
        "solvedCount": 303
      },
      {
        "contestId": 1032,
        "index": "E",
        "solvedCount": 451
      },
      {
        "contestId": 1032,
        "index": "D",
        "solvedCount": 809
      },
      {
        "contestId": 1032,
        "index": "C",
        "solvedCount": 1792
      },
      {
        "contestId": 1032,
        "index": "B",
        "solvedCount": 1958
      },
      {
        "contestId": 1032,
        "index": "A",
        "solvedCount": 2909
      },
      {
        "contestId": 1031,
        "index": "F",
        "solvedCount": 76
      },
      {
        "contestId": 1031,
        "index": "E",
        "solvedCount": 125
      },
      {
        "contestId": 1031,
        "index": "D",
        "solvedCount": 800
      },
      {
        "contestId": 1031,
        "index": "C",
        "solvedCount": 1712
      },
      {
        "contestId": 1031,
        "index": "B",
        "solvedCount": 1171
      },
      {
        "contestId": 1031,
        "index": "A",
        "solvedCount": 7103
      },
      {
        "contestId": 1030,
        "index": "G",
        "solvedCount": 136
      },
      {
        "contestId": 1030,
        "index": "F",
        "solvedCount": 249
      },
      {
        "contestId": 1030,
        "index": "E",
        "solvedCount": 1270
      },
      {
        "contestId": 1030,
        "index": "D",
        "solvedCount": 2104
      },
      {
        "contestId": 1030,
        "index": "C",
        "solvedCount": 3741
      },
      {
        "contestId": 1030,
        "index": "B",
        "solvedCount": 5237
      },
      {
        "contestId": 1030,
        "index": "A",
        "solvedCount": 85580
      },
      {
        "contestId": 1029,
        "index": "F",
        "solvedCount": 412
      },
      {
        "contestId": 1029,
        "index": "E",
        "solvedCount": 237
      },
      {
        "contestId": 1029,
        "index": "D",
        "solvedCount": 426
      },
      {
        "contestId": 1029,
        "index": "C",
        "solvedCount": 1888
      },
      {
        "contestId": 1029,
        "index": "B",
        "solvedCount": 4747
      },
      {
        "contestId": 1029,
        "index": "A",
        "solvedCount": 4390
      },
      {
        "contestId": 1028,
        "index": "H",
        "solvedCount": 423
      },
      {
        "contestId": 1028,
        "index": "G",
        "solvedCount": 381
      },
      {
        "contestId": 1028,
        "index": "F",
        "solvedCount": 480
      },
      {
        "contestId": 1028,
        "index": "E",
        "solvedCount": 1068
      },
      {
        "contestId": 1028,
        "index": "D",
        "solvedCount": 1583
      },
      {
        "contestId": 1028,
        "index": "C",
        "solvedCount": 4026
      },
      {
        "contestId": 1028,
        "index": "B",
        "solvedCount": 7305
      },
      {
        "contestId": 1028,
        "index": "A",
        "solvedCount": 9756
      },
      {
        "contestId": 1027,
        "index": "G",
        "solvedCount": 18
      },
      {
        "contestId": 1027,
        "index": "F",
        "solvedCount": 110
      },
      {
        "contestId": 1027,
        "index": "E",
        "solvedCount": 334
      },
      {
        "contestId": 1027,
        "index": "D",
        "solvedCount": 1740
      },
      {
        "contestId": 1027,
        "index": "C",
        "solvedCount": 2484
      },
      {
        "contestId": 1027,
        "index": "B",
        "solvedCount": 4521
      },
      {
        "contestId": 1027,
        "index": "A",
        "solvedCount": 5994
      },
      {
        "contestId": 1025,
        "index": "G",
        "solvedCount": 448
      },
      {
        "contestId": 1025,
        "index": "F",
        "solvedCount": 514
      },
      {
        "contestId": 1025,
        "index": "E",
        "solvedCount": 455
      },
      {
        "contestId": 1025,
        "index": "D",
        "solvedCount": 2937
      },
      {
        "contestId": 1025,
        "index": "C",
        "solvedCount": 5550
      },
      {
        "contestId": 1025,
        "index": "B",
        "solvedCount": 7129
      },
      {
        "contestId": 1025,
        "index": "A",
        "solvedCount": 11323
      },
      {
        "contestId": 1023,
        "index": "G",
        "solvedCount": 101
      },
      {
        "contestId": 1023,
        "index": "F",
        "solvedCount": 739
      },
      {
        "contestId": 1023,
        "index": "E",
        "solvedCount": 1723
      },
      {
        "contestId": 1023,
        "index": "D",
        "solvedCount": 3758
      },
      {
        "contestId": 1023,
        "index": "C",
        "solvedCount": 8656
      },
      {
        "contestId": 1023,
        "index": "B",
        "solvedCount": 9582
      },
      {
        "contestId": 1023,
        "index": "A",
        "solvedCount": 7801
      },
      {
        "contestId": 1020,
        "index": "B",
        "solvedCount": 16352
      },
      {
        "contestId": 1020,
        "index": "A",
        "solvedCount": 8387
      },
      {
        "contestId": 1019,
        "index": "E",
        "solvedCount": 289
      },
      {
        "contestId": 1019,
        "index": "D",
        "solvedCount": 559
      },
      {
        "contestId": 1019,
        "index": "C",
        "solvedCount": 778
      },
      {
        "contestId": 1019,
        "index": "B",
        "solvedCount": 1213
      },
      {
        "contestId": 1019,
        "index": "A",
        "solvedCount": 1948
      },
      {
        "contestId": 1017,
        "index": "H",
        "solvedCount": 97
      },
      {
        "contestId": 1017,
        "index": "G",
        "solvedCount": 611
      },
      {
        "contestId": 1017,
        "index": "F",
        "solvedCount": 764
      },
      {
        "contestId": 1017,
        "index": "E",
        "solvedCount": 731
      },
      {
        "contestId": 1017,
        "index": "D",
        "solvedCount": 3097
      },
      {
        "contestId": 1017,
        "index": "C",
        "solvedCount": 5564
      },
      {
        "contestId": 1017,
        "index": "B",
        "solvedCount": 8597
      },
      {
        "contestId": 1017,
        "index": "A",
        "solvedCount": 17048
      },
      {
        "contestId": 1016,
        "index": "G",
        "solvedCount": 10
      },
      {
        "contestId": 1016,
        "index": "F",
        "solvedCount": 50
      },
      {
        "contestId": 1016,
        "index": "E",
        "solvedCount": 128
      },
      {
        "contestId": 1016,
        "index": "D",
        "solvedCount": 1304
      },
      {
        "contestId": 1016,
        "index": "C",
        "solvedCount": 1258
      },
      {
        "contestId": 1016,
        "index": "B",
        "solvedCount": 3828
      },
      {
        "contestId": 1016,
        "index": "A",
        "solvedCount": 5678
      },
      {
        "contestId": 1015,
        "index": "F",
        "solvedCount": 99
      },
      {
        "contestId": 1015,
        "index": "E2",
        "solvedCount": 676
      },
      {
        "contestId": 1015,
        "index": "E1",
        "solvedCount": 1316
      },
      {
        "contestId": 1015,
        "index": "D",
        "solvedCount": 1992
      },
      {
        "contestId": 1015,
        "index": "C",
        "solvedCount": 5736
      },
      {
        "contestId": 1015,
        "index": "B",
        "solvedCount": 4788
      },
      {
        "contestId": 1015,
        "index": "A",
        "solvedCount": 7705
      },
      {
        "contestId": 1013,
        "index": "B",
        "solvedCount": 6836
      },
      {
        "contestId": 1013,
        "index": "A",
        "solvedCount": 9951
      },
      {
        "contestId": 1012,
        "index": "F",
        "solvedCount": 138
      },
      {
        "contestId": 1012,
        "index": "E",
        "solvedCount": 244
      },
      {
        "contestId": 1012,
        "index": "D",
        "solvedCount": 259
      },
      {
        "contestId": 1012,
        "index": "C",
        "solvedCount": 2054
      },
      {
        "contestId": 1012,
        "index": "B",
        "solvedCount": 2041
      },
      {
        "contestId": 1012,
        "index": "A",
        "solvedCount": 2147
      },
      {
        "contestId": 1011,
        "index": "B",
        "solvedCount": 8791
      },
      {
        "contestId": 1011,
        "index": "A",
        "solvedCount": 10797
      },
      {
        "contestId": 1010,
        "index": "F",
        "solvedCount": 189
      },
      {
        "contestId": 1010,
        "index": "E",
        "solvedCount": 299
      },
      {
        "contestId": 1010,
        "index": "D",
        "solvedCount": 1424
      },
      {
        "contestId": 1010,
        "index": "C",
        "solvedCount": 2096
      },
      {
        "contestId": 1010,
        "index": "B",
        "solvedCount": 1917
      },
      {
        "contestId": 1010,
        "index": "A",
        "solvedCount": 2727
      },
      {
        "contestId": 1009,
        "index": "G",
        "solvedCount": 25
      },
      {
        "contestId": 1009,
        "index": "F",
        "solvedCount": 161
      },
      {
        "contestId": 1009,
        "index": "E",
        "solvedCount": 655
      },
      {
        "contestId": 1009,
        "index": "D",
        "solvedCount": 1647
      },
      {
        "contestId": 1009,
        "index": "C",
        "solvedCount": 1678
      },
      {
        "contestId": 1009,
        "index": "B",
        "solvedCount": 3032
      },
      {
        "contestId": 1009,
        "index": "A",
        "solvedCount": 5481
      },
      {
        "contestId": 1008,
        "index": "B",
        "solvedCount": 10069
      },
      {
        "contestId": 1008,
        "index": "A",
        "solvedCount": 12759
      },
      {
        "contestId": 1007,
        "index": "E",
        "solvedCount": 147
      },
      {
        "contestId": 1007,
        "index": "D",
        "solvedCount": 217
      },
      {
        "contestId": 1007,
        "index": "C",
        "solvedCount": 239
      },
      {
        "contestId": 1007,
        "index": "B",
        "solvedCount": 605
      },
      {
        "contestId": 1007,
        "index": "A",
        "solvedCount": 5093
      },
      {
        "contestId": 1006,
        "index": "F",
        "solvedCount": 272
      },
      {
        "contestId": 1006,
        "index": "E",
        "solvedCount": 1843
      },
      {
        "contestId": 1006,
        "index": "D",
        "solvedCount": 1780
      },
      {
        "contestId": 1006,
        "index": "C",
        "solvedCount": 4902
      },
      {
        "contestId": 1006,
        "index": "B",
        "solvedCount": 5123
      },
      {
        "contestId": 1006,
        "index": "A",
        "solvedCount": 7864
      },
      {
        "contestId": 1005,
        "index": "F",
        "solvedCount": 178
      },
      {
        "contestId": 1005,
        "index": "E2",
        "solvedCount": 86
      },
      {
        "contestId": 1005,
        "index": "E1",
        "solvedCount": 844
      },
      {
        "contestId": 1005,
        "index": "D",
        "solvedCount": 2241
      },
      {
        "contestId": 1005,
        "index": "C",
        "solvedCount": 3593
      },
      {
        "contestId": 1005,
        "index": "B",
        "solvedCount": 6126
      },
      {
        "contestId": 1005,
        "index": "A",
        "solvedCount": 6994
      },
      {
        "contestId": 1004,
        "index": "F",
        "solvedCount": 546
      },
      {
        "contestId": 1004,
        "index": "E",
        "solvedCount": 885
      },
      {
        "contestId": 1004,
        "index": "D",
        "solvedCount": 1329
      },
      {
        "contestId": 1004,
        "index": "C",
        "solvedCount": 6981
      },
      {
        "contestId": 1004,
        "index": "B",
        "solvedCount": 8411
      },
      {
        "contestId": 1004,
        "index": "A",
        "solvedCount": 10125
      },
      {
        "contestId": 1003,
        "index": "F",
        "solvedCount": 125
      },
      {
        "contestId": 1003,
        "index": "E",
        "solvedCount": 301
      },
      {
        "contestId": 1003,
        "index": "D",
        "solvedCount": 1936
      },
      {
        "contestId": 1003,
        "index": "C",
        "solvedCount": 4159
      },
      {
        "contestId": 1003,
        "index": "B",
        "solvedCount": 4234
      },
      {
        "contestId": 1003,
        "index": "A",
        "solvedCount": 7564
      },
      {
        "contestId": 1002,
        "index": "E2",
        "solvedCount": 115
      },
      {
        "contestId": 1002,
        "index": "E1",
        "solvedCount": 220
      },
      {
        "contestId": 1002,
        "index": "D3",
        "solvedCount": 215
      },
      {
        "contestId": 1002,
        "index": "D2",
        "solvedCount": 252
      },
      {
        "contestId": 1002,
        "index": "D1",
        "solvedCount": 269
      },
      {
        "contestId": 1002,
        "index": "C2",
        "solvedCount": 150
      },
      {
        "contestId": 1002,
        "index": "C1",
        "solvedCount": 171
      },
      {
        "contestId": 1002,
        "index": "B4",
        "solvedCount": 195
      },
      {
        "contestId": 1002,
        "index": "B3",
        "solvedCount": 271
      },
      {
        "contestId": 1002,
        "index": "B2",
        "solvedCount": 284
      },
      {
        "contestId": 1002,
        "index": "B1",
        "solvedCount": 305
      },
      {
        "contestId": 1002,
        "index": "A4",
        "solvedCount": 139
      },
      {
        "contestId": 1002,
        "index": "A3",
        "solvedCount": 284
      },
      {
        "contestId": 1002,
        "index": "A2",
        "solvedCount": 345
      },
      {
        "contestId": 1002,
        "index": "A1",
        "solvedCount": 374
      },
      {
        "contestId": 1001,
        "index": "I",
        "solvedCount": 185
      },
      {
        "contestId": 1001,
        "index": "H",
        "solvedCount": 253
      },
      {
        "contestId": 1001,
        "index": "G",
        "solvedCount": 284
      },
      {
        "contestId": 1001,
        "index": "F",
        "solvedCount": 271
      },
      {
        "contestId": 1001,
        "index": "E",
        "solvedCount": 278
      },
      {
        "contestId": 1001,
        "index": "D",
        "solvedCount": 359
      },
      {
        "contestId": 1001,
        "index": "C",
        "solvedCount": 315
      },
      {
        "contestId": 1001,
        "index": "B",
        "solvedCount": 361
      },
      {
        "contestId": 1001,
        "index": "A",
        "solvedCount": 472
      },
      {
        "contestId": 1000,
        "index": "G",
        "solvedCount": 8
      },
      {
        "contestId": 1000,
        "index": "F",
        "solvedCount": 79
      },
      {
        "contestId": 1000,
        "index": "E",
        "solvedCount": 321
      },
      {
        "contestId": 1000,
        "index": "D",
        "solvedCount": 676
      },
      {
        "contestId": 1000,
        "index": "C",
        "solvedCount": 1509
      },
      {
        "contestId": 1000,
        "index": "B",
        "solvedCount": 2100
      },
      {
        "contestId": 1000,
        "index": "A",
        "solvedCount": 3891
      },
      {
        "contestId": 999,
        "index": "F",
        "solvedCount": 307
      },
      {
        "contestId": 999,
        "index": "E",
        "solvedCount": 800
      },
      {
        "contestId": 999,
        "index": "D",
        "solvedCount": 728
      },
      {
        "contestId": 999,
        "index": "C",
        "solvedCount": 5395
      },
      {
        "contestId": 999,
        "index": "B",
        "solvedCount": 6716
      },
      {
        "contestId": 999,
        "index": "A",
        "solvedCount": 7371
      },
      {
        "contestId": 998,
        "index": "B",
        "solvedCount": 10839
      },
      {
        "contestId": 998,
        "index": "A",
        "solvedCount": 8456
      },
      {
        "contestId": 997,
        "index": "E",
        "solvedCount": 744
      },
      {
        "contestId": 997,
        "index": "D",
        "solvedCount": 392
      },
      {
        "contestId": 997,
        "index": "C",
        "solvedCount": 1244
      },
      {
        "contestId": 997,
        "index": "B",
        "solvedCount": 1400
      },
      {
        "contestId": 997,
        "index": "A",
        "solvedCount": 3220
      },
      {
        "contestId": 996,
        "index": "B",
        "solvedCount": 7503
      },
      {
        "contestId": 996,
        "index": "A",
        "solvedCount": 65638
      },
      {
        "contestId": 995,
        "index": "F",
        "solvedCount": 929
      },
      {
        "contestId": 995,
        "index": "E",
        "solvedCount": 523
      },
      {
        "contestId": 995,
        "index": "D",
        "solvedCount": 531
      },
      {
        "contestId": 995,
        "index": "C",
        "solvedCount": 893
      },
      {
        "contestId": 995,
        "index": "B",
        "solvedCount": 2727
      },
      {
        "contestId": 995,
        "index": "A",
        "solvedCount": 849
      },
      {
        "contestId": 994,
        "index": "B",
        "solvedCount": 5162
      },
      {
        "contestId": 994,
        "index": "A",
        "solvedCount": 12144
      },
      {
        "contestId": 993,
        "index": "F",
        "solvedCount": 45
      },
      {
        "contestId": 993,
        "index": "E",
        "solvedCount": 1202
      },
      {
        "contestId": 993,
        "index": "D",
        "solvedCount": 489
      },
      {
        "contestId": 993,
        "index": "C",
        "solvedCount": 938
      },
      {
        "contestId": 993,
        "index": "B",
        "solvedCount": 934
      },
      {
        "contestId": 993,
        "index": "A",
        "solvedCount": 1528
      },
      {
        "contestId": 992,
        "index": "E",
        "solvedCount": 1099
      },
      {
        "contestId": 992,
        "index": "D",
        "solvedCount": 1527
      },
      {
        "contestId": 992,
        "index": "C",
        "solvedCount": 4344
      },
      {
        "contestId": 992,
        "index": "B",
        "solvedCount": 5611
      },
      {
        "contestId": 992,
        "index": "A",
        "solvedCount": 11074
      },
      {
        "contestId": 991,
        "index": "F",
        "solvedCount": 258
      },
      {
        "contestId": 991,
        "index": "E",
        "solvedCount": 2970
      },
      {
        "contestId": 991,
        "index": "D",
        "solvedCount": 6362
      },
      {
        "contestId": 991,
        "index": "C",
        "solvedCount": 8180
      },
      {
        "contestId": 991,
        "index": "B",
        "solvedCount": 10667
      },
      {
        "contestId": 991,
        "index": "A",
        "solvedCount": 9657
      },
      {
        "contestId": 990,
        "index": "G",
        "solvedCount": 119
      },
      {
        "contestId": 990,
        "index": "F",
        "solvedCount": 84
      },
      {
        "contestId": 990,
        "index": "E",
        "solvedCount": 424
      },
      {
        "contestId": 990,
        "index": "D",
        "solvedCount": 1318
      },
      {
        "contestId": 990,
        "index": "C",
        "solvedCount": 2526
      },
      {
        "contestId": 990,
        "index": "B",
        "solvedCount": 3957
      },
      {
        "contestId": 990,
        "index": "A",
        "solvedCount": 4991
      },
      {
        "contestId": 989,
        "index": "E",
        "solvedCount": 219
      },
      {
        "contestId": 989,
        "index": "D",
        "solvedCount": 472
      },
      {
        "contestId": 989,
        "index": "C",
        "solvedCount": 3270
      },
      {
        "contestId": 989,
        "index": "B",
        "solvedCount": 6307
      },
      {
        "contestId": 989,
        "index": "A",
        "solvedCount": 9358
      },
      {
        "contestId": 988,
        "index": "F",
        "solvedCount": 212
      },
      {
        "contestId": 988,
        "index": "E",
        "solvedCount": 423
      },
      {
        "contestId": 988,
        "index": "D",
        "solvedCount": 1194
      },
      {
        "contestId": 988,
        "index": "C",
        "solvedCount": 3164
      },
      {
        "contestId": 988,
        "index": "B",
        "solvedCount": 5751
      },
      {
        "contestId": 988,
        "index": "A",
        "solvedCount": 7540
      },
      {
        "contestId": 987,
        "index": "C",
        "solvedCount": 11101
      },
      {
        "contestId": 987,
        "index": "B",
        "solvedCount": 10681
      },
      {
        "contestId": 987,
        "index": "A",
        "solvedCount": 13865
      },
      {
        "contestId": 986,
        "index": "F",
        "solvedCount": 354
      },
      {
        "contestId": 986,
        "index": "E",
        "solvedCount": 599
      },
      {
        "contestId": 986,
        "index": "D",
        "solvedCount": 292
      },
      {
        "contestId": 986,
        "index": "C",
        "solvedCount": 1578
      },
      {
        "contestId": 986,
        "index": "B",
        "solvedCount": 2176
      },
      {
        "contestId": 986,
        "index": "A",
        "solvedCount": 3207
      },
      {
        "contestId": 985,
        "index": "G",
        "solvedCount": 8
      },
      {
        "contestId": 985,
        "index": "F",
        "solvedCount": 112
      },
      {
        "contestId": 985,
        "index": "E",
        "solvedCount": 518
      },
      {
        "contestId": 985,
        "index": "D",
        "solvedCount": 460
      },
      {
        "contestId": 985,
        "index": "C",
        "solvedCount": 2178
      },
      {
        "contestId": 985,
        "index": "B",
        "solvedCount": 3628
      },
      {
        "contestId": 985,
        "index": "A",
        "solvedCount": 4021
      },
      {
        "contestId": 984,
        "index": "B",
        "solvedCount": 6691
      },
      {
        "contestId": 984,
        "index": "A",
        "solvedCount": 15819
      },
      {
        "contestId": 983,
        "index": "E",
        "solvedCount": 738
      },
      {
        "contestId": 983,
        "index": "D",
        "solvedCount": 261
      },
      {
        "contestId": 983,
        "index": "C",
        "solvedCount": 615
      },
      {
        "contestId": 983,
        "index": "B",
        "solvedCount": 2988
      },
      {
        "contestId": 983,
        "index": "A",
        "solvedCount": 1960
      },
      {
        "contestId": 982,
        "index": "F",
        "solvedCount": 166
      },
      {
        "contestId": 982,
        "index": "E",
        "solvedCount": 620
      },
      {
        "contestId": 982,
        "index": "D",
        "solvedCount": 2047
      },
      {
        "contestId": 982,
        "index": "C",
        "solvedCount": 9061
      },
      {
        "contestId": 982,
        "index": "B",
        "solvedCount": 7017
      },
      {
        "contestId": 982,
        "index": "A",
        "solvedCount": 8438
      },
      {
        "contestId": 981,
        "index": "H",
        "solvedCount": 230
      },
      {
        "contestId": 981,
        "index": "G",
        "solvedCount": 575
      },
      {
        "contestId": 981,
        "index": "F",
        "solvedCount": 582
      },
      {
        "contestId": 981,
        "index": "E",
        "solvedCount": 1775
      },
      {
        "contestId": 981,
        "index": "D",
        "solvedCount": 2945
      },
      {
        "contestId": 981,
        "index": "C",
        "solvedCount": 4572
      },
      {
        "contestId": 981,
        "index": "B",
        "solvedCount": 5900
      },
      {
        "contestId": 981,
        "index": "A",
        "solvedCount": 7981
      },
      {
        "contestId": 980,
        "index": "F",
        "solvedCount": 157
      },
      {
        "contestId": 980,
        "index": "E",
        "solvedCount": 1611
      },
      {
        "contestId": 980,
        "index": "D",
        "solvedCount": 2103
      },
      {
        "contestId": 980,
        "index": "C",
        "solvedCount": 3606
      },
      {
        "contestId": 980,
        "index": "B",
        "solvedCount": 4389
      },
      {
        "contestId": 980,
        "index": "A",
        "solvedCount": 9616
      },
      {
        "contestId": 979,
        "index": "E",
        "solvedCount": 525
      },
      {
        "contestId": 979,
        "index": "D",
        "solvedCount": 1453
      },
      {
        "contestId": 979,
        "index": "C",
        "solvedCount": 5402
      },
      {
        "contestId": 979,
        "index": "B",
        "solvedCount": 4124
      },
      {
        "contestId": 979,
        "index": "A",
        "solvedCount": 11623
      },
      {
        "contestId": 978,
        "index": "G",
        "solvedCount": 1028
      },
      {
        "contestId": 978,
        "index": "F",
        "solvedCount": 2257
      },
      {
        "contestId": 978,
        "index": "E",
        "solvedCount": 2884
      },
      {
        "contestId": 978,
        "index": "D",
        "solvedCount": 2452
      },
      {
        "contestId": 978,
        "index": "C",
        "solvedCount": 5683
      },
      {
        "contestId": 978,
        "index": "B",
        "solvedCount": 7047
      },
      {
        "contestId": 978,
        "index": "A",
        "solvedCount": 7095
      },
      {
        "contestId": 977,
        "index": "F",
        "solvedCount": 1561
      },
      {
        "contestId": 977,
        "index": "E",
        "solvedCount": 2632
      },
      {
        "contestId": 977,
        "index": "D",
        "solvedCount": 4068
      },
      {
        "contestId": 977,
        "index": "C",
        "solvedCount": 6064
      },
      {
        "contestId": 977,
        "index": "B",
        "solvedCount": 8268
      },
      {
        "contestId": 977,
        "index": "A",
        "solvedCount": 9950
      },
      {
        "contestId": 976,
        "index": "F",
        "solvedCount": 28
      },
      {
        "contestId": 976,
        "index": "E",
        "solvedCount": 372
      },
      {
        "contestId": 976,
        "index": "D",
        "solvedCount": 76
      },
      {
        "contestId": 976,
        "index": "C",
        "solvedCount": 1999
      },
      {
        "contestId": 976,
        "index": "B",
        "solvedCount": 2946
      },
      {
        "contestId": 976,
        "index": "A",
        "solvedCount": 4509
      },
      {
        "contestId": 975,
        "index": "E",
        "solvedCount": 288
      },
      {
        "contestId": 975,
        "index": "D",
        "solvedCount": 1784
      },
      {
        "contestId": 975,
        "index": "C",
        "solvedCount": 7812
      },
      {
        "contestId": 975,
        "index": "B",
        "solvedCount": 6283
      },
      {
        "contestId": 975,
        "index": "A",
        "solvedCount": 8005
      },
      {
        "contestId": 967,
        "index": "B",
        "solvedCount": 5694
      },
      {
        "contestId": 967,
        "index": "A",
        "solvedCount": 4087
      },
      {
        "contestId": 965,
        "index": "E",
        "solvedCount": 1103
      },
      {
        "contestId": 965,
        "index": "D",
        "solvedCount": 2646
      },
      {
        "contestId": 965,
        "index": "C",
        "solvedCount": 1971
      },
      {
        "contestId": 965,
        "index": "B",
        "solvedCount": 4075
      },
      {
        "contestId": 965,
        "index": "A",
        "solvedCount": 8207
      },
      {
        "contestId": 964,
        "index": "B",
        "solvedCount": 4046
      },
      {
        "contestId": 964,
        "index": "A",
        "solvedCount": 8353
      },
      {
        "contestId": 963,
        "index": "E",
        "solvedCount": 415
      },
      {
        "contestId": 963,
        "index": "D",
        "solvedCount": 1429
      },
      {
        "contestId": 963,
        "index": "C",
        "solvedCount": 456
      },
      {
        "contestId": 963,
        "index": "B",
        "solvedCount": 1757
      },
      {
        "contestId": 963,
        "index": "A",
        "solvedCount": 1733
      },
      {
        "contestId": 962,
        "index": "G",
        "solvedCount": 5
      },
      {
        "contestId": 962,
        "index": "F",
        "solvedCount": 57
      },
      {
        "contestId": 962,
        "index": "E",
        "solvedCount": 256
      },
      {
        "contestId": 962,
        "index": "D",
        "solvedCount": 1708
      },
      {
        "contestId": 962,
        "index": "C",
        "solvedCount": 2951
      },
      {
        "contestId": 962,
        "index": "B",
        "solvedCount": 3294
      },
      {
        "contestId": 962,
        "index": "A",
        "solvedCount": 3717
      },
      {
        "contestId": 961,
        "index": "G",
        "solvedCount": 24
      },
      {
        "contestId": 961,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 961,
        "index": "E",
        "solvedCount": 734
      },
      {
        "contestId": 961,
        "index": "D",
        "solvedCount": 730
      },
      {
        "contestId": 961,
        "index": "C",
        "solvedCount": 2632
      },
      {
        "contestId": 961,
        "index": "B",
        "solvedCount": 3523
      },
      {
        "contestId": 961,
        "index": "A",
        "solvedCount": 4491
      },
      {
        "contestId": 960,
        "index": "H",
        "solvedCount": 205
      },
      {
        "contestId": 960,
        "index": "G",
        "solvedCount": 897
      },
      {
        "contestId": 960,
        "index": "F",
        "solvedCount": 2318
      },
      {
        "contestId": 960,
        "index": "E",
        "solvedCount": 1499
      },
      {
        "contestId": 960,
        "index": "D",
        "solvedCount": 1553
      },
      {
        "contestId": 960,
        "index": "C",
        "solvedCount": 3552
      },
      {
        "contestId": 960,
        "index": "B",
        "solvedCount": 5933
      },
      {
        "contestId": 960,
        "index": "A",
        "solvedCount": 7388
      },
      {
        "contestId": 959,
        "index": "F",
        "solvedCount": 1551
      },
      {
        "contestId": 959,
        "index": "E",
        "solvedCount": 3039
      },
      {
        "contestId": 959,
        "index": "D",
        "solvedCount": 2687
      },
      {
        "contestId": 959,
        "index": "C",
        "solvedCount": 5274
      },
      {
        "contestId": 959,
        "index": "B",
        "solvedCount": 7610
      },
      {
        "contestId": 959,
        "index": "A",
        "solvedCount": 34345
      },
      {
        "contestId": 958,
        "index": "F3",
        "solvedCount": 40
      },
      {
        "contestId": 958,
        "index": "F2",
        "solvedCount": 295
      },
      {
        "contestId": 958,
        "index": "F1",
        "solvedCount": 490
      },
      {
        "contestId": 958,
        "index": "E3",
        "solvedCount": 22
      },
      {
        "contestId": 958,
        "index": "E2",
        "solvedCount": 112
      },
      {
        "contestId": 958,
        "index": "E1",
        "solvedCount": 414
      },
      {
        "contestId": 958,
        "index": "D2",
        "solvedCount": 17
      },
      {
        "contestId": 958,
        "index": "D1",
        "solvedCount": 581
      },
      {
        "contestId": 958,
        "index": "C3",
        "solvedCount": 46
      },
      {
        "contestId": 958,
        "index": "C2",
        "solvedCount": 227
      },
      {
        "contestId": 958,
        "index": "C1",
        "solvedCount": 731
      },
      {
        "contestId": 958,
        "index": "B2",
        "solvedCount": 106
      },
      {
        "contestId": 958,
        "index": "B1",
        "solvedCount": 859
      },
      {
        "contestId": 958,
        "index": "A3",
        "solvedCount": 4
      },
      {
        "contestId": 958,
        "index": "A2",
        "solvedCount": 221
      },
      {
        "contestId": 958,
        "index": "A1",
        "solvedCount": 616
      },
      {
        "contestId": 957,
        "index": "A",
        "solvedCount": 5109
      },
      {
        "contestId": 955,
        "index": "F",
        "solvedCount": 261
      },
      {
        "contestId": 955,
        "index": "E",
        "solvedCount": 72
      },
      {
        "contestId": 955,
        "index": "D",
        "solvedCount": 386
      },
      {
        "contestId": 955,
        "index": "C",
        "solvedCount": 2310
      },
      {
        "contestId": 955,
        "index": "B",
        "solvedCount": 4287
      },
      {
        "contestId": 955,
        "index": "A",
        "solvedCount": 5904
      },
      {
        "contestId": 954,
        "index": "I",
        "solvedCount": 41
      },
      {
        "contestId": 954,
        "index": "H",
        "solvedCount": 44
      },
      {
        "contestId": 954,
        "index": "G",
        "solvedCount": 365
      },
      {
        "contestId": 954,
        "index": "F",
        "solvedCount": 180
      },
      {
        "contestId": 954,
        "index": "E",
        "solvedCount": 500
      },
      {
        "contestId": 954,
        "index": "D",
        "solvedCount": 1447
      },
      {
        "contestId": 954,
        "index": "C",
        "solvedCount": 1314
      },
      {
        "contestId": 954,
        "index": "B",
        "solvedCount": 2149
      },
      {
        "contestId": 954,
        "index": "A",
        "solvedCount": 3507
      },
      {
        "contestId": 952,
        "index": "G",
        "solvedCount": 99
      },
      {
        "contestId": 952,
        "index": "F",
        "solvedCount": 39
      },
      {
        "contestId": 952,
        "index": "E",
        "solvedCount": 231
      },
      {
        "contestId": 952,
        "index": "D",
        "solvedCount": 717
      },
      {
        "contestId": 952,
        "index": "C",
        "solvedCount": 1592
      },
      {
        "contestId": 952,
        "index": "B",
        "solvedCount": 775
      },
      {
        "contestId": 952,
        "index": "A",
        "solvedCount": 3622
      },
      {
        "contestId": 950,
        "index": "B",
        "solvedCount": 6790
      },
      {
        "contestId": 950,
        "index": "A",
        "solvedCount": 12935
      },
      {
        "contestId": 949,
        "index": "F",
        "solvedCount": 48
      },
      {
        "contestId": 949,
        "index": "E",
        "solvedCount": 496
      },
      {
        "contestId": 949,
        "index": "D",
        "solvedCount": 653
      },
      {
        "contestId": 949,
        "index": "C",
        "solvedCount": 1323
      },
      {
        "contestId": 949,
        "index": "B",
        "solvedCount": 1597
      },
      {
        "contestId": 949,
        "index": "A",
        "solvedCount": 2039
      },
      {
        "contestId": 948,
        "index": "A",
        "solvedCount": 10922
      },
      {
        "contestId": 946,
        "index": "G",
        "solvedCount": 29
      },
      {
        "contestId": 946,
        "index": "F",
        "solvedCount": 60
      },
      {
        "contestId": 946,
        "index": "E",
        "solvedCount": 230
      },
      {
        "contestId": 946,
        "index": "D",
        "solvedCount": 883
      },
      {
        "contestId": 946,
        "index": "C",
        "solvedCount": 3043
      },
      {
        "contestId": 946,
        "index": "B",
        "solvedCount": 3624
      },
      {
        "contestId": 946,
        "index": "A",
        "solvedCount": 4777
      },
      {
        "contestId": 940,
        "index": "F",
        "solvedCount": 1908
      },
      {
        "contestId": 940,
        "index": "E",
        "solvedCount": 2854
      },
      {
        "contestId": 940,
        "index": "D",
        "solvedCount": 3388
      },
      {
        "contestId": 940,
        "index": "C",
        "solvedCount": 5114
      },
      {
        "contestId": 940,
        "index": "B",
        "solvedCount": 7723
      },
      {
        "contestId": 940,
        "index": "A",
        "solvedCount": 7297
      },
      {
        "contestId": 939,
        "index": "F",
        "solvedCount": 697
      },
      {
        "contestId": 939,
        "index": "E",
        "solvedCount": 2757
      },
      {
        "contestId": 939,
        "index": "D",
        "solvedCount": 6158
      },
      {
        "contestId": 939,
        "index": "C",
        "solvedCount": 4302
      },
      {
        "contestId": 939,
        "index": "B",
        "solvedCount": 9495
      },
      {
        "contestId": 939,
        "index": "A",
        "solvedCount": 18843
      },
      {
        "contestId": 938,
        "index": "G",
        "solvedCount": 6
      },
      {
        "contestId": 938,
        "index": "F",
        "solvedCount": 23
      },
      {
        "contestId": 938,
        "index": "E",
        "solvedCount": 171
      },
      {
        "contestId": 938,
        "index": "D",
        "solvedCount": 625
      },
      {
        "contestId": 938,
        "index": "C",
        "solvedCount": 1231
      },
      {
        "contestId": 938,
        "index": "B",
        "solvedCount": 4220
      },
      {
        "contestId": 938,
        "index": "A",
        "solvedCount": 4891
      },
      {
        "contestId": 937,
        "index": "B",
        "solvedCount": 6339
      },
      {
        "contestId": 937,
        "index": "A",
        "solvedCount": 12936
      },
      {
        "contestId": 936,
        "index": "E",
        "solvedCount": 168
      },
      {
        "contestId": 936,
        "index": "D",
        "solvedCount": 287
      },
      {
        "contestId": 936,
        "index": "C",
        "solvedCount": 824
      },
      {
        "contestId": 936,
        "index": "B",
        "solvedCount": 1643
      },
      {
        "contestId": 936,
        "index": "A",
        "solvedCount": 1652
      },
      {
        "contestId": 935,
        "index": "F",
        "solvedCount": 314
      },
      {
        "contestId": 935,
        "index": "E",
        "solvedCount": 797
      },
      {
        "contestId": 935,
        "index": "D",
        "solvedCount": 2338
      },
      {
        "contestId": 935,
        "index": "C",
        "solvedCount": 4304
      },
      {
        "contestId": 935,
        "index": "B",
        "solvedCount": 10542
      },
      {
        "contestId": 935,
        "index": "A",
        "solvedCount": 34161
      },
      {
        "contestId": 934,
        "index": "B",
        "solvedCount": 7881
      },
      {
        "contestId": 934,
        "index": "A",
        "solvedCount": 6178
      },
      {
        "contestId": 933,
        "index": "E",
        "solvedCount": 145
      },
      {
        "contestId": 933,
        "index": "D",
        "solvedCount": 239
      },
      {
        "contestId": 933,
        "index": "C",
        "solvedCount": 404
      },
      {
        "contestId": 933,
        "index": "B",
        "solvedCount": 1106
      },
      {
        "contestId": 933,
        "index": "A",
        "solvedCount": 2632
      },
      {
        "contestId": 932,
        "index": "G",
        "solvedCount": 675
      },
      {
        "contestId": 932,
        "index": "F",
        "solvedCount": 1897
      },
      {
        "contestId": 932,
        "index": "E",
        "solvedCount": 2305
      },
      {
        "contestId": 932,
        "index": "D",
        "solvedCount": 1525
      },
      {
        "contestId": 932,
        "index": "C",
        "solvedCount": 3807
      },
      {
        "contestId": 932,
        "index": "B",
        "solvedCount": 7007
      },
      {
        "contestId": 932,
        "index": "A",
        "solvedCount": 9149
      },
      {
        "contestId": 931,
        "index": "C",
        "solvedCount": 2771
      },
      {
        "contestId": 931,
        "index": "B",
        "solvedCount": 5808
      },
      {
        "contestId": 931,
        "index": "A",
        "solvedCount": 10272
      },
      {
        "contestId": 930,
        "index": "E",
        "solvedCount": 288
      },
      {
        "contestId": 930,
        "index": "D",
        "solvedCount": 354
      },
      {
        "contestId": 930,
        "index": "C",
        "solvedCount": 1378
      },
      {
        "contestId": 930,
        "index": "B",
        "solvedCount": 1397
      },
      {
        "contestId": 930,
        "index": "A",
        "solvedCount": 2681
      },
      {
        "contestId": 929,
        "index": "D",
        "solvedCount": 96
      },
      {
        "contestId": 929,
        "index": "C",
        "solvedCount": 666
      },
      {
        "contestId": 929,
        "index": "B",
        "solvedCount": 1214
      },
      {
        "contestId": 929,
        "index": "A",
        "solvedCount": 1538
      },
      {
        "contestId": 928,
        "index": "D",
        "solvedCount": 491
      },
      {
        "contestId": 928,
        "index": "C",
        "solvedCount": 533
      },
      {
        "contestId": 928,
        "index": "B",
        "solvedCount": 1611
      },
      {
        "contestId": 928,
        "index": "A",
        "solvedCount": 2209
      },
      {
        "contestId": 927,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 926,
        "index": "J",
        "solvedCount": 12
      },
      {
        "contestId": 926,
        "index": "I",
        "solvedCount": 166
      },
      {
        "contestId": 926,
        "index": "H",
        "solvedCount": 22
      },
      {
        "contestId": 926,
        "index": "G",
        "solvedCount": 261
      },
      {
        "contestId": 926,
        "index": "F",
        "solvedCount": 15
      },
      {
        "contestId": 926,
        "index": "E",
        "solvedCount": 63
      },
      {
        "contestId": 926,
        "index": "D",
        "solvedCount": 213
      },
      {
        "contestId": 926,
        "index": "C",
        "solvedCount": 298
      },
      {
        "contestId": 926,
        "index": "B",
        "solvedCount": 172
      },
      {
        "contestId": 926,
        "index": "A",
        "solvedCount": 317
      },
      {
        "contestId": 925,
        "index": "F",
        "solvedCount": 50
      },
      {
        "contestId": 925,
        "index": "E",
        "solvedCount": 188
      },
      {
        "contestId": 925,
        "index": "D",
        "solvedCount": 148
      },
      {
        "contestId": 925,
        "index": "C",
        "solvedCount": 348
      },
      {
        "contestId": 925,
        "index": "B",
        "solvedCount": 398
      },
      {
        "contestId": 925,
        "index": "A",
        "solvedCount": 517
      },
      {
        "contestId": 924,
        "index": "F",
        "solvedCount": 101
      },
      {
        "contestId": 924,
        "index": "E",
        "solvedCount": 204
      },
      {
        "contestId": 924,
        "index": "D",
        "solvedCount": 264
      },
      {
        "contestId": 924,
        "index": "C",
        "solvedCount": 1250
      },
      {
        "contestId": 924,
        "index": "B",
        "solvedCount": 1385
      },
      {
        "contestId": 924,
        "index": "A",
        "solvedCount": 1006
      },
      {
        "contestId": 923,
        "index": "F",
        "solvedCount": 45
      },
      {
        "contestId": 923,
        "index": "E",
        "solvedCount": 302
      },
      {
        "contestId": 923,
        "index": "D",
        "solvedCount": 432
      },
      {
        "contestId": 923,
        "index": "C",
        "solvedCount": 1364
      },
      {
        "contestId": 923,
        "index": "B",
        "solvedCount": 2542
      },
      {
        "contestId": 923,
        "index": "A",
        "solvedCount": 1675
      },
      {
        "contestId": 922,
        "index": "F",
        "solvedCount": 568
      },
      {
        "contestId": 922,
        "index": "E",
        "solvedCount": 1656
      },
      {
        "contestId": 922,
        "index": "D",
        "solvedCount": 3786
      },
      {
        "contestId": 922,
        "index": "C",
        "solvedCount": 6318
      },
      {
        "contestId": 922,
        "index": "B",
        "solvedCount": 7574
      },
      {
        "contestId": 922,
        "index": "A",
        "solvedCount": 9733
      },
      {
        "contestId": 921,
        "index": "14",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "13",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "12",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "11",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "10",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "09",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "08",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "07",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "06",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "05",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "04",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "03",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "02",
        "solvedCount": 0
      },
      {
        "contestId": 921,
        "index": "01",
        "solvedCount": 0
      },
      {
        "contestId": 920,
        "index": "G",
        "solvedCount": 174
      },
      {
        "contestId": 920,
        "index": "F",
        "solvedCount": 473
      },
      {
        "contestId": 920,
        "index": "E",
        "solvedCount": 456
      },
      {
        "contestId": 920,
        "index": "D",
        "solvedCount": 50
      },
      {
        "contestId": 920,
        "index": "C",
        "solvedCount": 2559
      },
      {
        "contestId": 920,
        "index": "B",
        "solvedCount": 3260
      },
      {
        "contestId": 920,
        "index": "A",
        "solvedCount": 4115
      },
      {
        "contestId": 919,
        "index": "F",
        "solvedCount": 287
      },
      {
        "contestId": 919,
        "index": "E",
        "solvedCount": 1611
      },
      {
        "contestId": 919,
        "index": "D",
        "solvedCount": 7648
      },
      {
        "contestId": 919,
        "index": "C",
        "solvedCount": 8268
      },
      {
        "contestId": 919,
        "index": "B",
        "solvedCount": 21978
      },
      {
        "contestId": 919,
        "index": "A",
        "solvedCount": 13233
      },
      {
        "contestId": 918,
        "index": "B",
        "solvedCount": 11920
      },
      {
        "contestId": 918,
        "index": "A",
        "solvedCount": 14327
      },
      {
        "contestId": 917,
        "index": "E",
        "solvedCount": 100
      },
      {
        "contestId": 917,
        "index": "D",
        "solvedCount": 835
      },
      {
        "contestId": 917,
        "index": "C",
        "solvedCount": 291
      },
      {
        "contestId": 917,
        "index": "B",
        "solvedCount": 1885
      },
      {
        "contestId": 917,
        "index": "A",
        "solvedCount": 1555
      },
      {
        "contestId": 916,
        "index": "E",
        "solvedCount": 1185
      },
      {
        "contestId": 916,
        "index": "D",
        "solvedCount": 427
      },
      {
        "contestId": 916,
        "index": "C",
        "solvedCount": 4457
      },
      {
        "contestId": 916,
        "index": "B",
        "solvedCount": 1574
      },
      {
        "contestId": 916,
        "index": "A",
        "solvedCount": 7975
      },
      {
        "contestId": 915,
        "index": "G",
        "solvedCount": 77
      },
      {
        "contestId": 915,
        "index": "F",
        "solvedCount": 104
      },
      {
        "contestId": 915,
        "index": "E",
        "solvedCount": 191
      },
      {
        "contestId": 915,
        "index": "D",
        "solvedCount": 244
      },
      {
        "contestId": 915,
        "index": "C",
        "solvedCount": 1450
      },
      {
        "contestId": 915,
        "index": "B",
        "solvedCount": 3293
      },
      {
        "contestId": 915,
        "index": "A",
        "solvedCount": 5129
      },
      {
        "contestId": 914,
        "index": "H",
        "solvedCount": 184
      },
      {
        "contestId": 914,
        "index": "G",
        "solvedCount": 801
      },
      {
        "contestId": 914,
        "index": "F",
        "solvedCount": 1014
      },
      {
        "contestId": 914,
        "index": "E",
        "solvedCount": 1091
      },
      {
        "contestId": 914,
        "index": "D",
        "solvedCount": 4279
      },
      {
        "contestId": 914,
        "index": "C",
        "solvedCount": 3242
      },
      {
        "contestId": 914,
        "index": "B",
        "solvedCount": 7549
      },
      {
        "contestId": 914,
        "index": "A",
        "solvedCount": 11921
      },
      {
        "contestId": 913,
        "index": "H",
        "solvedCount": 111
      },
      {
        "contestId": 913,
        "index": "G",
        "solvedCount": 182
      },
      {
        "contestId": 913,
        "index": "F",
        "solvedCount": 514
      },
      {
        "contestId": 913,
        "index": "E",
        "solvedCount": 713
      },
      {
        "contestId": 913,
        "index": "D",
        "solvedCount": 4142
      },
      {
        "contestId": 913,
        "index": "C",
        "solvedCount": 7080
      },
      {
        "contestId": 913,
        "index": "B",
        "solvedCount": 12967
      },
      {
        "contestId": 913,
        "index": "A",
        "solvedCount": 17402
      },
      {
        "contestId": 912,
        "index": "E",
        "solvedCount": 1212
      },
      {
        "contestId": 912,
        "index": "D",
        "solvedCount": 1719
      },
      {
        "contestId": 912,
        "index": "C",
        "solvedCount": 478
      },
      {
        "contestId": 912,
        "index": "B",
        "solvedCount": 9705
      },
      {
        "contestId": 912,
        "index": "A",
        "solvedCount": 11806
      },
      {
        "contestId": 911,
        "index": "G",
        "solvedCount": 68
      },
      {
        "contestId": 911,
        "index": "F",
        "solvedCount": 105
      },
      {
        "contestId": 911,
        "index": "E",
        "solvedCount": 581
      },
      {
        "contestId": 911,
        "index": "D",
        "solvedCount": 1282
      },
      {
        "contestId": 911,
        "index": "C",
        "solvedCount": 2796
      },
      {
        "contestId": 911,
        "index": "B",
        "solvedCount": 3778
      },
      {
        "contestId": 911,
        "index": "A",
        "solvedCount": 4481
      },
      {
        "contestId": 910,
        "index": "C",
        "solvedCount": 1474
      },
      {
        "contestId": 910,
        "index": "B",
        "solvedCount": 1420
      },
      {
        "contestId": 910,
        "index": "A",
        "solvedCount": 9050
      },
      {
        "contestId": 909,
        "index": "F",
        "solvedCount": 475
      },
      {
        "contestId": 909,
        "index": "E",
        "solvedCount": 1625
      },
      {
        "contestId": 909,
        "index": "D",
        "solvedCount": 1545
      },
      {
        "contestId": 909,
        "index": "C",
        "solvedCount": 4254
      },
      {
        "contestId": 909,
        "index": "B",
        "solvedCount": 5729
      },
      {
        "contestId": 909,
        "index": "A",
        "solvedCount": 8220
      },
      {
        "contestId": 908,
        "index": "H",
        "solvedCount": 327
      },
      {
        "contestId": 908,
        "index": "G",
        "solvedCount": 1079
      },
      {
        "contestId": 908,
        "index": "F",
        "solvedCount": 1245
      },
      {
        "contestId": 908,
        "index": "E",
        "solvedCount": 684
      },
      {
        "contestId": 908,
        "index": "D",
        "solvedCount": 2046
      },
      {
        "contestId": 908,
        "index": "C",
        "solvedCount": 6223
      },
      {
        "contestId": 908,
        "index": "B",
        "solvedCount": 7312
      },
      {
        "contestId": 908,
        "index": "A",
        "solvedCount": 13552
      },
      {
        "contestId": 907,
        "index": "B",
        "solvedCount": 3348
      },
      {
        "contestId": 907,
        "index": "A",
        "solvedCount": 4690
      },
      {
        "contestId": 906,
        "index": "E",
        "solvedCount": 345
      },
      {
        "contestId": 906,
        "index": "D",
        "solvedCount": 1527
      },
      {
        "contestId": 906,
        "index": "C",
        "solvedCount": 806
      },
      {
        "contestId": 906,
        "index": "B",
        "solvedCount": 807
      },
      {
        "contestId": 906,
        "index": "A",
        "solvedCount": 1494
      },
      {
        "contestId": 903,
        "index": "G",
        "solvedCount": 18
      },
      {
        "contestId": 903,
        "index": "F",
        "solvedCount": 63
      },
      {
        "contestId": 903,
        "index": "E",
        "solvedCount": 183
      },
      {
        "contestId": 903,
        "index": "D",
        "solvedCount": 447
      },
      {
        "contestId": 903,
        "index": "C",
        "solvedCount": 3744
      },
      {
        "contestId": 903,
        "index": "B",
        "solvedCount": 3488
      },
      {
        "contestId": 903,
        "index": "A",
        "solvedCount": 4698
      },
      {
        "contestId": 902,
        "index": "B",
        "solvedCount": 8694
      },
      {
        "contestId": 902,
        "index": "A",
        "solvedCount": 8512
      },
      {
        "contestId": 901,
        "index": "E",
        "solvedCount": 72
      },
      {
        "contestId": 901,
        "index": "D",
        "solvedCount": 371
      },
      {
        "contestId": 901,
        "index": "C",
        "solvedCount": 897
      },
      {
        "contestId": 901,
        "index": "B",
        "solvedCount": 795
      },
      {
        "contestId": 901,
        "index": "A",
        "solvedCount": 1775
      },
      {
        "contestId": 900,
        "index": "E",
        "solvedCount": 932
      },
      {
        "contestId": 900,
        "index": "D",
        "solvedCount": 2614
      },
      {
        "contestId": 900,
        "index": "C",
        "solvedCount": 3947
      },
      {
        "contestId": 900,
        "index": "B",
        "solvedCount": 6936
      },
      {
        "contestId": 900,
        "index": "A",
        "solvedCount": 11631
      },
      {
        "contestId": 899,
        "index": "F",
        "solvedCount": 1351
      },
      {
        "contestId": 899,
        "index": "E",
        "solvedCount": 2264
      },
      {
        "contestId": 899,
        "index": "D",
        "solvedCount": 2256
      },
      {
        "contestId": 899,
        "index": "C",
        "solvedCount": 7406
      },
      {
        "contestId": 899,
        "index": "B",
        "solvedCount": 5324
      },
      {
        "contestId": 899,
        "index": "A",
        "solvedCount": 8839
      },
      {
        "contestId": 898,
        "index": "F",
        "solvedCount": 1008
      },
      {
        "contestId": 898,
        "index": "E",
        "solvedCount": 4055
      },
      {
        "contestId": 898,
        "index": "D",
        "solvedCount": 3253
      },
      {
        "contestId": 898,
        "index": "C",
        "solvedCount": 4639
      },
      {
        "contestId": 898,
        "index": "B",
        "solvedCount": 8102
      },
      {
        "contestId": 898,
        "index": "A",
        "solvedCount": 13384
      },
      {
        "contestId": 897,
        "index": "B",
        "solvedCount": 6497
      },
      {
        "contestId": 897,
        "index": "A",
        "solvedCount": 12434
      },
      {
        "contestId": 896,
        "index": "E",
        "solvedCount": 1500
      },
      {
        "contestId": 896,
        "index": "D",
        "solvedCount": 412
      },
      {
        "contestId": 896,
        "index": "C",
        "solvedCount": 2435
      },
      {
        "contestId": 896,
        "index": "B",
        "solvedCount": 1166
      },
      {
        "contestId": 896,
        "index": "A",
        "solvedCount": 1399
      },
      {
        "contestId": 895,
        "index": "E",
        "solvedCount": 784
      },
      {
        "contestId": 895,
        "index": "D",
        "solvedCount": 977
      },
      {
        "contestId": 895,
        "index": "C",
        "solvedCount": 3941
      },
      {
        "contestId": 895,
        "index": "B",
        "solvedCount": 3196
      },
      {
        "contestId": 895,
        "index": "A",
        "solvedCount": 5869
      },
      {
        "contestId": 894,
        "index": "E",
        "solvedCount": 1605
      },
      {
        "contestId": 894,
        "index": "D",
        "solvedCount": 1009
      },
      {
        "contestId": 894,
        "index": "C",
        "solvedCount": 3890
      },
      {
        "contestId": 894,
        "index": "B",
        "solvedCount": 3990
      },
      {
        "contestId": 894,
        "index": "A",
        "solvedCount": 26672
      },
      {
        "contestId": 893,
        "index": "F",
        "solvedCount": 89
      },
      {
        "contestId": 893,
        "index": "E",
        "solvedCount": 397
      },
      {
        "contestId": 893,
        "index": "D",
        "solvedCount": 675
      },
      {
        "contestId": 893,
        "index": "C",
        "solvedCount": 2827
      },
      {
        "contestId": 893,
        "index": "B",
        "solvedCount": 3750
      },
      {
        "contestId": 893,
        "index": "A",
        "solvedCount": 4136
      },
      {
        "contestId": 892,
        "index": "B",
        "solvedCount": 7629
      },
      {
        "contestId": 892,
        "index": "A",
        "solvedCount": 11206
      },
      {
        "contestId": 891,
        "index": "E",
        "solvedCount": 738
      },
      {
        "contestId": 891,
        "index": "D",
        "solvedCount": 151
      },
      {
        "contestId": 891,
        "index": "C",
        "solvedCount": 1536
      },
      {
        "contestId": 891,
        "index": "B",
        "solvedCount": 1483
      },
      {
        "contestId": 891,
        "index": "A",
        "solvedCount": 4638
      },
      {
        "contestId": 889,
        "index": "E",
        "solvedCount": 409
      },
      {
        "contestId": 888,
        "index": "G",
        "solvedCount": 105
      },
      {
        "contestId": 888,
        "index": "F",
        "solvedCount": 42
      },
      {
        "contestId": 888,
        "index": "E",
        "solvedCount": 616
      },
      {
        "contestId": 888,
        "index": "D",
        "solvedCount": 1194
      },
      {
        "contestId": 888,
        "index": "C",
        "solvedCount": 1670
      },
      {
        "contestId": 888,
        "index": "B",
        "solvedCount": 2647
      },
      {
        "contestId": 888,
        "index": "A",
        "solvedCount": 3222
      },
      {
        "contestId": 887,
        "index": "F",
        "solvedCount": 130
      },
      {
        "contestId": 887,
        "index": "E",
        "solvedCount": 118
      },
      {
        "contestId": 887,
        "index": "D",
        "solvedCount": 434
      },
      {
        "contestId": 887,
        "index": "C",
        "solvedCount": 2659
      },
      {
        "contestId": 887,
        "index": "B",
        "solvedCount": 4704
      },
      {
        "contestId": 887,
        "index": "A",
        "solvedCount": 9949
      },
      {
        "contestId": 886,
        "index": "F",
        "solvedCount": 125
      },
      {
        "contestId": 886,
        "index": "E",
        "solvedCount": 454
      },
      {
        "contestId": 886,
        "index": "D",
        "solvedCount": 482
      },
      {
        "contestId": 886,
        "index": "C",
        "solvedCount": 2026
      },
      {
        "contestId": 886,
        "index": "B",
        "solvedCount": 2893
      },
      {
        "contestId": 886,
        "index": "A",
        "solvedCount": 4681
      },
      {
        "contestId": 884,
        "index": "F",
        "solvedCount": 52
      },
      {
        "contestId": 884,
        "index": "E",
        "solvedCount": 54
      },
      {
        "contestId": 884,
        "index": "D",
        "solvedCount": 244
      },
      {
        "contestId": 884,
        "index": "C",
        "solvedCount": 1428
      },
      {
        "contestId": 884,
        "index": "B",
        "solvedCount": 2724
      },
      {
        "contestId": 884,
        "index": "A",
        "solvedCount": 3242
      },
      {
        "contestId": 883,
        "index": "M",
        "solvedCount": 1507
      },
      {
        "contestId": 883,
        "index": "L",
        "solvedCount": 40
      },
      {
        "contestId": 883,
        "index": "K",
        "solvedCount": 419
      },
      {
        "contestId": 883,
        "index": "J",
        "solvedCount": 99
      },
      {
        "contestId": 883,
        "index": "I",
        "solvedCount": 436
      },
      {
        "contestId": 883,
        "index": "H",
        "solvedCount": 665
      },
      {
        "contestId": 883,
        "index": "G",
        "solvedCount": 491
      },
      {
        "contestId": 883,
        "index": "F",
        "solvedCount": 1269
      },
      {
        "contestId": 883,
        "index": "E",
        "solvedCount": 940
      },
      {
        "contestId": 883,
        "index": "D",
        "solvedCount": 33
      },
      {
        "contestId": 883,
        "index": "C",
        "solvedCount": 129
      },
      {
        "contestId": 883,
        "index": "B",
        "solvedCount": 41
      },
      {
        "contestId": 883,
        "index": "A",
        "solvedCount": 214
      },
      {
        "contestId": 879,
        "index": "B",
        "solvedCount": 9380
      },
      {
        "contestId": 879,
        "index": "A",
        "solvedCount": 8323
      },
      {
        "contestId": 878,
        "index": "E",
        "solvedCount": 415
      },
      {
        "contestId": 878,
        "index": "D",
        "solvedCount": 585
      },
      {
        "contestId": 878,
        "index": "C",
        "solvedCount": 703
      },
      {
        "contestId": 878,
        "index": "B",
        "solvedCount": 694
      },
      {
        "contestId": 878,
        "index": "A",
        "solvedCount": 2090
      },
      {
        "contestId": 877,
        "index": "F",
        "solvedCount": 1249
      },
      {
        "contestId": 877,
        "index": "E",
        "solvedCount": 3679
      },
      {
        "contestId": 877,
        "index": "D",
        "solvedCount": 3447
      },
      {
        "contestId": 877,
        "index": "C",
        "solvedCount": 5216
      },
      {
        "contestId": 877,
        "index": "B",
        "solvedCount": 8170
      },
      {
        "contestId": 877,
        "index": "A",
        "solvedCount": 9954
      },
      {
        "contestId": 876,
        "index": "B",
        "solvedCount": 7352
      },
      {
        "contestId": 876,
        "index": "A",
        "solvedCount": 8557
      },
      {
        "contestId": 875,
        "index": "F",
        "solvedCount": 1085
      },
      {
        "contestId": 875,
        "index": "E",
        "solvedCount": 745
      },
      {
        "contestId": 875,
        "index": "D",
        "solvedCount": 1294
      },
      {
        "contestId": 875,
        "index": "C",
        "solvedCount": 1219
      },
      {
        "contestId": 875,
        "index": "B",
        "solvedCount": 1873
      },
      {
        "contestId": 875,
        "index": "A",
        "solvedCount": 3688
      },
      {
        "contestId": 873,
        "index": "F",
        "solvedCount": 77
      },
      {
        "contestId": 873,
        "index": "E",
        "solvedCount": 55
      },
      {
        "contestId": 873,
        "index": "D",
        "solvedCount": 524
      },
      {
        "contestId": 873,
        "index": "C",
        "solvedCount": 1153
      },
      {
        "contestId": 873,
        "index": "B",
        "solvedCount": 1304
      },
      {
        "contestId": 873,
        "index": "A",
        "solvedCount": 2756
      },
      {
        "contestId": 871,
        "index": "E",
        "solvedCount": 115
      },
      {
        "contestId": 870,
        "index": "F",
        "solvedCount": 273
      },
      {
        "contestId": 870,
        "index": "E",
        "solvedCount": 320
      },
      {
        "contestId": 870,
        "index": "D",
        "solvedCount": 329
      },
      {
        "contestId": 870,
        "index": "C",
        "solvedCount": 4400
      },
      {
        "contestId": 870,
        "index": "B",
        "solvedCount": 3168
      },
      {
        "contestId": 870,
        "index": "A",
        "solvedCount": 4674
      },
      {
        "contestId": 869,
        "index": "E",
        "solvedCount": 1308
      },
      {
        "contestId": 869,
        "index": "D",
        "solvedCount": 197
      },
      {
        "contestId": 869,
        "index": "C",
        "solvedCount": 3855
      },
      {
        "contestId": 869,
        "index": "B",
        "solvedCount": 11300
      },
      {
        "contestId": 869,
        "index": "A",
        "solvedCount": 8941
      },
      {
        "contestId": 868,
        "index": "G",
        "solvedCount": 97
      },
      {
        "contestId": 868,
        "index": "F",
        "solvedCount": 2462
      },
      {
        "contestId": 868,
        "index": "E",
        "solvedCount": 382
      },
      {
        "contestId": 868,
        "index": "D",
        "solvedCount": 835
      },
      {
        "contestId": 868,
        "index": "C",
        "solvedCount": 3919
      },
      {
        "contestId": 868,
        "index": "B",
        "solvedCount": 3382
      },
      {
        "contestId": 868,
        "index": "A",
        "solvedCount": 7390
      },
      {
        "contestId": 867,
        "index": "A",
        "solvedCount": 16389
      },
      {
        "contestId": 865,
        "index": "G",
        "solvedCount": 79
      },
      {
        "contestId": 865,
        "index": "F",
        "solvedCount": 40
      },
      {
        "contestId": 865,
        "index": "E",
        "solvedCount": 66
      },
      {
        "contestId": 865,
        "index": "D",
        "solvedCount": 2326
      },
      {
        "contestId": 865,
        "index": "C",
        "solvedCount": 368
      },
      {
        "contestId": 865,
        "index": "B",
        "solvedCount": 320
      },
      {
        "contestId": 865,
        "index": "A",
        "solvedCount": 787
      },
      {
        "contestId": 864,
        "index": "F",
        "solvedCount": 531
      },
      {
        "contestId": 864,
        "index": "E",
        "solvedCount": 3626
      },
      {
        "contestId": 864,
        "index": "D",
        "solvedCount": 5459
      },
      {
        "contestId": 864,
        "index": "C",
        "solvedCount": 5535
      },
      {
        "contestId": 864,
        "index": "B",
        "solvedCount": 8186
      },
      {
        "contestId": 864,
        "index": "A",
        "solvedCount": 10213
      },
      {
        "contestId": 863,
        "index": "G",
        "solvedCount": 0
      },
      {
        "contestId": 863,
        "index": "F",
        "solvedCount": 96
      },
      {
        "contestId": 863,
        "index": "E",
        "solvedCount": 318
      },
      {
        "contestId": 863,
        "index": "D",
        "solvedCount": 626
      },
      {
        "contestId": 863,
        "index": "C",
        "solvedCount": 641
      },
      {
        "contestId": 863,
        "index": "B",
        "solvedCount": 1500
      },
      {
        "contestId": 863,
        "index": "A",
        "solvedCount": 2877
      },
      {
        "contestId": 862,
        "index": "F",
        "solvedCount": 162
      },
      {
        "contestId": 862,
        "index": "E",
        "solvedCount": 1250
      },
      {
        "contestId": 862,
        "index": "D",
        "solvedCount": 1403
      },
      {
        "contestId": 862,
        "index": "C",
        "solvedCount": 3500
      },
      {
        "contestId": 862,
        "index": "B",
        "solvedCount": 12542
      },
      {
        "contestId": 862,
        "index": "A",
        "solvedCount": 8603
      },
      {
        "contestId": 860,
        "index": "E",
        "solvedCount": 391
      },
      {
        "contestId": 859,
        "index": "G",
        "solvedCount": 126
      },
      {
        "contestId": 859,
        "index": "F",
        "solvedCount": 140
      },
      {
        "contestId": 859,
        "index": "E",
        "solvedCount": 1460
      },
      {
        "contestId": 859,
        "index": "D",
        "solvedCount": 773
      },
      {
        "contestId": 859,
        "index": "C",
        "solvedCount": 4338
      },
      {
        "contestId": 859,
        "index": "B",
        "solvedCount": 5636
      },
      {
        "contestId": 859,
        "index": "A",
        "solvedCount": 6594
      },
      {
        "contestId": 858,
        "index": "F",
        "solvedCount": 569
      },
      {
        "contestId": 858,
        "index": "E",
        "solvedCount": 103
      },
      {
        "contestId": 858,
        "index": "D",
        "solvedCount": 1453
      },
      {
        "contestId": 858,
        "index": "C",
        "solvedCount": 2537
      },
      {
        "contestId": 858,
        "index": "B",
        "solvedCount": 1374
      },
      {
        "contestId": 858,
        "index": "A",
        "solvedCount": 3361
      },
      {
        "contestId": 856,
        "index": "F",
        "solvedCount": 3
      },
      {
        "contestId": 856,
        "index": "E",
        "solvedCount": 5
      },
      {
        "contestId": 856,
        "index": "D",
        "solvedCount": 48
      },
      {
        "contestId": 856,
        "index": "C",
        "solvedCount": 57
      },
      {
        "contestId": 856,
        "index": "B",
        "solvedCount": 85
      },
      {
        "contestId": 856,
        "index": "A",
        "solvedCount": 259
      },
      {
        "contestId": 855,
        "index": "G",
        "solvedCount": 174
      },
      {
        "contestId": 855,
        "index": "F",
        "solvedCount": 299
      },
      {
        "contestId": 855,
        "index": "E",
        "solvedCount": 1266
      },
      {
        "contestId": 855,
        "index": "D",
        "solvedCount": 437
      },
      {
        "contestId": 855,
        "index": "C",
        "solvedCount": 1648
      },
      {
        "contestId": 855,
        "index": "B",
        "solvedCount": 7245
      },
      {
        "contestId": 855,
        "index": "A",
        "solvedCount": 14357
      },
      {
        "contestId": 854,
        "index": "B",
        "solvedCount": 7604
      },
      {
        "contestId": 854,
        "index": "A",
        "solvedCount": 11391
      },
      {
        "contestId": 853,
        "index": "E",
        "solvedCount": 58
      },
      {
        "contestId": 853,
        "index": "D",
        "solvedCount": 604
      },
      {
        "contestId": 853,
        "index": "C",
        "solvedCount": 995
      },
      {
        "contestId": 853,
        "index": "B",
        "solvedCount": 1239
      },
      {
        "contestId": 853,
        "index": "A",
        "solvedCount": 2050
      },
      {
        "contestId": 852,
        "index": "I",
        "solvedCount": 86
      },
      {
        "contestId": 852,
        "index": "H",
        "solvedCount": 11
      },
      {
        "contestId": 852,
        "index": "G",
        "solvedCount": 344
      },
      {
        "contestId": 852,
        "index": "F",
        "solvedCount": 130
      },
      {
        "contestId": 852,
        "index": "E",
        "solvedCount": 174
      },
      {
        "contestId": 852,
        "index": "D",
        "solvedCount": 113
      },
      {
        "contestId": 852,
        "index": "C",
        "solvedCount": 87
      },
      {
        "contestId": 852,
        "index": "B",
        "solvedCount": 219
      },
      {
        "contestId": 852,
        "index": "A",
        "solvedCount": 69
      },
      {
        "contestId": 851,
        "index": "B",
        "solvedCount": 4752
      },
      {
        "contestId": 851,
        "index": "A",
        "solvedCount": 8652
      },
      {
        "contestId": 850,
        "index": "F",
        "solvedCount": 463
      },
      {
        "contestId": 850,
        "index": "E",
        "solvedCount": 344
      },
      {
        "contestId": 850,
        "index": "D",
        "solvedCount": 325
      },
      {
        "contestId": 850,
        "index": "C",
        "solvedCount": 968
      },
      {
        "contestId": 850,
        "index": "B",
        "solvedCount": 1147
      },
      {
        "contestId": 850,
        "index": "A",
        "solvedCount": 1117
      },
      {
        "contestId": 849,
        "index": "B",
        "solvedCount": 3219
      },
      {
        "contestId": 849,
        "index": "A",
        "solvedCount": 8128
      },
      {
        "contestId": 848,
        "index": "E",
        "solvedCount": 184
      },
      {
        "contestId": 848,
        "index": "D",
        "solvedCount": 305
      },
      {
        "contestId": 848,
        "index": "C",
        "solvedCount": 979
      },
      {
        "contestId": 848,
        "index": "B",
        "solvedCount": 1239
      },
      {
        "contestId": 848,
        "index": "A",
        "solvedCount": 1940
      },
      {
        "contestId": 847,
        "index": "M",
        "solvedCount": 1542
      },
      {
        "contestId": 847,
        "index": "L",
        "solvedCount": 64
      },
      {
        "contestId": 847,
        "index": "K",
        "solvedCount": 364
      },
      {
        "contestId": 847,
        "index": "J",
        "solvedCount": 88
      },
      {
        "contestId": 847,
        "index": "I",
        "solvedCount": 395
      },
      {
        "contestId": 847,
        "index": "H",
        "solvedCount": 716
      },
      {
        "contestId": 847,
        "index": "G",
        "solvedCount": 1559
      },
      {
        "contestId": 847,
        "index": "F",
        "solvedCount": 202
      },
      {
        "contestId": 847,
        "index": "E",
        "solvedCount": 354
      },
      {
        "contestId": 847,
        "index": "D",
        "solvedCount": 144
      },
      {
        "contestId": 847,
        "index": "C",
        "solvedCount": 552
      },
      {
        "contestId": 847,
        "index": "B",
        "solvedCount": 806
      },
      {
        "contestId": 847,
        "index": "A",
        "solvedCount": 1031
      },
      {
        "contestId": 846,
        "index": "F",
        "solvedCount": 370
      },
      {
        "contestId": 846,
        "index": "E",
        "solvedCount": 106
      },
      {
        "contestId": 846,
        "index": "D",
        "solvedCount": 423
      },
      {
        "contestId": 846,
        "index": "C",
        "solvedCount": 608
      },
      {
        "contestId": 846,
        "index": "B",
        "solvedCount": 791
      },
      {
        "contestId": 846,
        "index": "A",
        "solvedCount": 1484
      },
      {
        "contestId": 845,
        "index": "G",
        "solvedCount": 134
      },
      {
        "contestId": 845,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 845,
        "index": "E",
        "solvedCount": 55
      },
      {
        "contestId": 845,
        "index": "D",
        "solvedCount": 739
      },
      {
        "contestId": 845,
        "index": "C",
        "solvedCount": 1731
      },
      {
        "contestId": 845,
        "index": "B",
        "solvedCount": 1589
      },
      {
        "contestId": 845,
        "index": "A",
        "solvedCount": 2945
      },
      {
        "contestId": 844,
        "index": "B",
        "solvedCount": 5453
      },
      {
        "contestId": 844,
        "index": "A",
        "solvedCount": 8658
      },
      {
        "contestId": 843,
        "index": "E",
        "solvedCount": 183
      },
      {
        "contestId": 843,
        "index": "D",
        "solvedCount": 618
      },
      {
        "contestId": 843,
        "index": "C",
        "solvedCount": 268
      },
      {
        "contestId": 843,
        "index": "B",
        "solvedCount": 1203
      },
      {
        "contestId": 843,
        "index": "A",
        "solvedCount": 2230
      },
      {
        "contestId": 842,
        "index": "E",
        "solvedCount": 320
      },
      {
        "contestId": 842,
        "index": "D",
        "solvedCount": 2734
      },
      {
        "contestId": 842,
        "index": "C",
        "solvedCount": 3221
      },
      {
        "contestId": 842,
        "index": "B",
        "solvedCount": 8458
      },
      {
        "contestId": 842,
        "index": "A",
        "solvedCount": 8427
      },
      {
        "contestId": 841,
        "index": "B",
        "solvedCount": 10578
      },
      {
        "contestId": 841,
        "index": "A",
        "solvedCount": 11473
      },
      {
        "contestId": 840,
        "index": "E",
        "solvedCount": 371
      },
      {
        "contestId": 840,
        "index": "D",
        "solvedCount": 2136
      },
      {
        "contestId": 840,
        "index": "C",
        "solvedCount": 1275
      },
      {
        "contestId": 840,
        "index": "B",
        "solvedCount": 1362
      },
      {
        "contestId": 840,
        "index": "A",
        "solvedCount": 2164
      },
      {
        "contestId": 839,
        "index": "E",
        "solvedCount": 707
      },
      {
        "contestId": 839,
        "index": "D",
        "solvedCount": 2509
      },
      {
        "contestId": 839,
        "index": "C",
        "solvedCount": 13534
      },
      {
        "contestId": 839,
        "index": "B",
        "solvedCount": 3152
      },
      {
        "contestId": 839,
        "index": "A",
        "solvedCount": 12479
      },
      {
        "contestId": 838,
        "index": "F",
        "solvedCount": 1
      },
      {
        "contestId": 838,
        "index": "E",
        "solvedCount": 42
      },
      {
        "contestId": 838,
        "index": "D",
        "solvedCount": 10
      },
      {
        "contestId": 838,
        "index": "C",
        "solvedCount": 2
      },
      {
        "contestId": 838,
        "index": "B",
        "solvedCount": 58
      },
      {
        "contestId": 838,
        "index": "A",
        "solvedCount": 285
      },
      {
        "contestId": 837,
        "index": "G",
        "solvedCount": 31
      },
      {
        "contestId": 837,
        "index": "F",
        "solvedCount": 70
      },
      {
        "contestId": 837,
        "index": "E",
        "solvedCount": 223
      },
      {
        "contestId": 837,
        "index": "D",
        "solvedCount": 305
      },
      {
        "contestId": 837,
        "index": "C",
        "solvedCount": 1496
      },
      {
        "contestId": 837,
        "index": "B",
        "solvedCount": 1315
      },
      {
        "contestId": 837,
        "index": "A",
        "solvedCount": 3167
      },
      {
        "contestId": 835,
        "index": "F",
        "solvedCount": 832
      },
      {
        "contestId": 835,
        "index": "E",
        "solvedCount": 943
      },
      {
        "contestId": 835,
        "index": "D",
        "solvedCount": 3498
      },
      {
        "contestId": 835,
        "index": "C",
        "solvedCount": 6938
      },
      {
        "contestId": 835,
        "index": "B",
        "solvedCount": 9640
      },
      {
        "contestId": 835,
        "index": "A",
        "solvedCount": 17782
      },
      {
        "contestId": 834,
        "index": "B",
        "solvedCount": 7731
      },
      {
        "contestId": 834,
        "index": "A",
        "solvedCount": 7923
      },
      {
        "contestId": 833,
        "index": "E",
        "solvedCount": 162
      },
      {
        "contestId": 833,
        "index": "D",
        "solvedCount": 306
      },
      {
        "contestId": 833,
        "index": "C",
        "solvedCount": 325
      },
      {
        "contestId": 833,
        "index": "B",
        "solvedCount": 2569
      },
      {
        "contestId": 833,
        "index": "A",
        "solvedCount": 2317
      },
      {
        "contestId": 832,
        "index": "E",
        "solvedCount": 248
      },
      {
        "contestId": 832,
        "index": "D",
        "solvedCount": 3129
      },
      {
        "contestId": 832,
        "index": "C",
        "solvedCount": 406
      },
      {
        "contestId": 832,
        "index": "B",
        "solvedCount": 4173
      },
      {
        "contestId": 832,
        "index": "A",
        "solvedCount": 17470
      },
      {
        "contestId": 831,
        "index": "C",
        "solvedCount": 3956
      },
      {
        "contestId": 831,
        "index": "B",
        "solvedCount": 12335
      },
      {
        "contestId": 831,
        "index": "A",
        "solvedCount": 9261
      },
      {
        "contestId": 830,
        "index": "E",
        "solvedCount": 234
      },
      {
        "contestId": 830,
        "index": "D",
        "solvedCount": 691
      },
      {
        "contestId": 830,
        "index": "C",
        "solvedCount": 931
      },
      {
        "contestId": 830,
        "index": "B",
        "solvedCount": 1611
      },
      {
        "contestId": 830,
        "index": "A",
        "solvedCount": 2981
      },
      {
        "contestId": 828,
        "index": "B",
        "solvedCount": 5249
      },
      {
        "contestId": 828,
        "index": "A",
        "solvedCount": 6861
      },
      {
        "contestId": 827,
        "index": "F",
        "solvedCount": 306
      },
      {
        "contestId": 827,
        "index": "E",
        "solvedCount": 663
      },
      {
        "contestId": 827,
        "index": "D",
        "solvedCount": 790
      },
      {
        "contestId": 827,
        "index": "C",
        "solvedCount": 1039
      },
      {
        "contestId": 827,
        "index": "B",
        "solvedCount": 1600
      },
      {
        "contestId": 827,
        "index": "A",
        "solvedCount": 1649
      },
      {
        "contestId": 825,
        "index": "G",
        "solvedCount": 25
      },
      {
        "contestId": 825,
        "index": "F",
        "solvedCount": 75
      },
      {
        "contestId": 825,
        "index": "E",
        "solvedCount": 197
      },
      {
        "contestId": 825,
        "index": "D",
        "solvedCount": 1023
      },
      {
        "contestId": 825,
        "index": "C",
        "solvedCount": 1458
      },
      {
        "contestId": 825,
        "index": "B",
        "solvedCount": 1332
      },
      {
        "contestId": 825,
        "index": "A",
        "solvedCount": 2607
      },
      {
        "contestId": 822,
        "index": "F",
        "solvedCount": 257
      },
      {
        "contestId": 822,
        "index": "E",
        "solvedCount": 621
      },
      {
        "contestId": 822,
        "index": "D",
        "solvedCount": 2829
      },
      {
        "contestId": 822,
        "index": "C",
        "solvedCount": 4256
      },
      {
        "contestId": 822,
        "index": "B",
        "solvedCount": 8663
      },
      {
        "contestId": 822,
        "index": "A",
        "solvedCount": 25740
      },
      {
        "contestId": 821,
        "index": "E",
        "solvedCount": 1282
      },
      {
        "contestId": 821,
        "index": "D",
        "solvedCount": 1179
      },
      {
        "contestId": 821,
        "index": "C",
        "solvedCount": 5557
      },
      {
        "contestId": 821,
        "index": "B",
        "solvedCount": 5228
      },
      {
        "contestId": 821,
        "index": "A",
        "solvedCount": 7473
      },
      {
        "contestId": 820,
        "index": "B",
        "solvedCount": 4617
      },
      {
        "contestId": 820,
        "index": "A",
        "solvedCount": 7482
      },
      {
        "contestId": 819,
        "index": "E",
        "solvedCount": 368
      },
      {
        "contestId": 819,
        "index": "D",
        "solvedCount": 179
      },
      {
        "contestId": 819,
        "index": "C",
        "solvedCount": 166
      },
      {
        "contestId": 819,
        "index": "B",
        "solvedCount": 937
      },
      {
        "contestId": 819,
        "index": "A",
        "solvedCount": 137
      },
      {
        "contestId": 818,
        "index": "G",
        "solvedCount": 34
      },
      {
        "contestId": 818,
        "index": "F",
        "solvedCount": 145
      },
      {
        "contestId": 818,
        "index": "E",
        "solvedCount": 336
      },
      {
        "contestId": 818,
        "index": "D",
        "solvedCount": 929
      },
      {
        "contestId": 818,
        "index": "C",
        "solvedCount": 381
      },
      {
        "contestId": 818,
        "index": "B",
        "solvedCount": 1083
      },
      {
        "contestId": 818,
        "index": "A",
        "solvedCount": 2601
      },
      {
        "contestId": 817,
        "index": "F",
        "solvedCount": 76
      },
      {
        "contestId": 817,
        "index": "E",
        "solvedCount": 269
      },
      {
        "contestId": 817,
        "index": "D",
        "solvedCount": 427
      },
      {
        "contestId": 817,
        "index": "C",
        "solvedCount": 1001
      },
      {
        "contestId": 817,
        "index": "B",
        "solvedCount": 1357
      },
      {
        "contestId": 817,
        "index": "A",
        "solvedCount": 1955
      },
      {
        "contestId": 816,
        "index": "B",
        "solvedCount": 11984
      },
      {
        "contestId": 816,
        "index": "A",
        "solvedCount": 8046
      },
      {
        "contestId": 815,
        "index": "E",
        "solvedCount": 204
      },
      {
        "contestId": 815,
        "index": "D",
        "solvedCount": 508
      },
      {
        "contestId": 815,
        "index": "C",
        "solvedCount": 1738
      },
      {
        "contestId": 815,
        "index": "B",
        "solvedCount": 872
      },
      {
        "contestId": 815,
        "index": "A",
        "solvedCount": 2224
      },
      {
        "contestId": 814,
        "index": "E",
        "solvedCount": 569
      },
      {
        "contestId": 814,
        "index": "D",
        "solvedCount": 1907
      },
      {
        "contestId": 814,
        "index": "C",
        "solvedCount": 5676
      },
      {
        "contestId": 814,
        "index": "B",
        "solvedCount": 5287
      },
      {
        "contestId": 814,
        "index": "A",
        "solvedCount": 9208
      },
      {
        "contestId": 813,
        "index": "F",
        "solvedCount": 32
      },
      {
        "contestId": 813,
        "index": "E",
        "solvedCount": 128
      },
      {
        "contestId": 813,
        "index": "D",
        "solvedCount": 48
      },
      {
        "contestId": 813,
        "index": "C",
        "solvedCount": 927
      },
      {
        "contestId": 813,
        "index": "B",
        "solvedCount": 795
      },
      {
        "contestId": 813,
        "index": "A",
        "solvedCount": 2092
      },
      {
        "contestId": 812,
        "index": "E",
        "solvedCount": 918
      },
      {
        "contestId": 812,
        "index": "D",
        "solvedCount": 300
      },
      {
        "contestId": 812,
        "index": "C",
        "solvedCount": 10362
      },
      {
        "contestId": 812,
        "index": "B",
        "solvedCount": 4592
      },
      {
        "contestId": 812,
        "index": "A",
        "solvedCount": 5816
      },
      {
        "contestId": 811,
        "index": "E",
        "solvedCount": 633
      },
      {
        "contestId": 811,
        "index": "D",
        "solvedCount": 1330
      },
      {
        "contestId": 811,
        "index": "C",
        "solvedCount": 3005
      },
      {
        "contestId": 811,
        "index": "B",
        "solvedCount": 5995
      },
      {
        "contestId": 811,
        "index": "A",
        "solvedCount": 10410
      },
      {
        "contestId": 810,
        "index": "B",
        "solvedCount": 9668
      },
      {
        "contestId": 810,
        "index": "A",
        "solvedCount": 7977
      },
      {
        "contestId": 809,
        "index": "E",
        "solvedCount": 653
      },
      {
        "contestId": 809,
        "index": "D",
        "solvedCount": 596
      },
      {
        "contestId": 809,
        "index": "C",
        "solvedCount": 610
      },
      {
        "contestId": 809,
        "index": "B",
        "solvedCount": 854
      },
      {
        "contestId": 809,
        "index": "A",
        "solvedCount": 1799
      },
      {
        "contestId": 808,
        "index": "G",
        "solvedCount": 86
      },
      {
        "contestId": 808,
        "index": "F",
        "solvedCount": 55
      },
      {
        "contestId": 808,
        "index": "E",
        "solvedCount": 168
      },
      {
        "contestId": 808,
        "index": "D",
        "solvedCount": 702
      },
      {
        "contestId": 808,
        "index": "C",
        "solvedCount": 1556
      },
      {
        "contestId": 808,
        "index": "B",
        "solvedCount": 1936
      },
      {
        "contestId": 808,
        "index": "A",
        "solvedCount": 2689
      },
      {
        "contestId": 807,
        "index": "B",
        "solvedCount": 3414
      },
      {
        "contestId": 807,
        "index": "A",
        "solvedCount": 15559
      },
      {
        "contestId": 805,
        "index": "B",
        "solvedCount": 13064
      },
      {
        "contestId": 805,
        "index": "A",
        "solvedCount": 14508
      },
      {
        "contestId": 804,
        "index": "F",
        "solvedCount": 124
      },
      {
        "contestId": 804,
        "index": "E",
        "solvedCount": 387
      },
      {
        "contestId": 804,
        "index": "D",
        "solvedCount": 947
      },
      {
        "contestId": 804,
        "index": "C",
        "solvedCount": 1019
      },
      {
        "contestId": 804,
        "index": "B",
        "solvedCount": 3945
      },
      {
        "contestId": 804,
        "index": "A",
        "solvedCount": 6617
      },
      {
        "contestId": 803,
        "index": "G",
        "solvedCount": 57
      },
      {
        "contestId": 803,
        "index": "F",
        "solvedCount": 271
      },
      {
        "contestId": 803,
        "index": "E",
        "solvedCount": 301
      },
      {
        "contestId": 803,
        "index": "D",
        "solvedCount": 624
      },
      {
        "contestId": 803,
        "index": "C",
        "solvedCount": 703
      },
      {
        "contestId": 803,
        "index": "B",
        "solvedCount": 1921
      },
      {
        "contestId": 803,
        "index": "A",
        "solvedCount": 1477
      },
      {
        "contestId": 802,
        "index": "O",
        "solvedCount": 5
      },
      {
        "contestId": 802,
        "index": "N",
        "solvedCount": 54
      },
      {
        "contestId": 802,
        "index": "M",
        "solvedCount": 602
      },
      {
        "contestId": 802,
        "index": "L",
        "solvedCount": 18
      },
      {
        "contestId": 802,
        "index": "K",
        "solvedCount": 107
      },
      {
        "contestId": 802,
        "index": "J",
        "solvedCount": 428
      },
      {
        "contestId": 802,
        "index": "I",
        "solvedCount": 60
      },
      {
        "contestId": 802,
        "index": "H",
        "solvedCount": 57
      },
      {
        "contestId": 802,
        "index": "G",
        "solvedCount": 726
      },
      {
        "contestId": 802,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 802,
        "index": "E",
        "solvedCount": 59
      },
      {
        "contestId": 802,
        "index": "D",
        "solvedCount": 117
      },
      {
        "contestId": 802,
        "index": "C",
        "solvedCount": 23
      },
      {
        "contestId": 802,
        "index": "B",
        "solvedCount": 212
      },
      {
        "contestId": 802,
        "index": "A",
        "solvedCount": 268
      },
      {
        "contestId": 801,
        "index": "B",
        "solvedCount": 8797
      },
      {
        "contestId": 801,
        "index": "A",
        "solvedCount": 6531
      },
      {
        "contestId": 799,
        "index": "G",
        "solvedCount": 91
      },
      {
        "contestId": 799,
        "index": "F",
        "solvedCount": 351
      },
      {
        "contestId": 799,
        "index": "E",
        "solvedCount": 829
      },
      {
        "contestId": 799,
        "index": "D",
        "solvedCount": 1806
      },
      {
        "contestId": 799,
        "index": "C",
        "solvedCount": 3246
      },
      {
        "contestId": 799,
        "index": "B",
        "solvedCount": 7006
      },
      {
        "contestId": 799,
        "index": "A",
        "solvedCount": 15643
      },
      {
        "contestId": 798,
        "index": "E",
        "solvedCount": 385
      },
      {
        "contestId": 798,
        "index": "D",
        "solvedCount": 1639
      },
      {
        "contestId": 798,
        "index": "C",
        "solvedCount": 5057
      },
      {
        "contestId": 798,
        "index": "B",
        "solvedCount": 7533
      },
      {
        "contestId": 798,
        "index": "A",
        "solvedCount": 16822
      },
      {
        "contestId": 797,
        "index": "F",
        "solvedCount": 31
      },
      {
        "contestId": 797,
        "index": "E",
        "solvedCount": 397
      },
      {
        "contestId": 797,
        "index": "D",
        "solvedCount": 277
      },
      {
        "contestId": 797,
        "index": "C",
        "solvedCount": 845
      },
      {
        "contestId": 797,
        "index": "B",
        "solvedCount": 1689
      },
      {
        "contestId": 797,
        "index": "A",
        "solvedCount": 2222
      },
      {
        "contestId": 796,
        "index": "F",
        "solvedCount": 145
      },
      {
        "contestId": 796,
        "index": "E",
        "solvedCount": 557
      },
      {
        "contestId": 796,
        "index": "D",
        "solvedCount": 4131
      },
      {
        "contestId": 796,
        "index": "C",
        "solvedCount": 2730
      },
      {
        "contestId": 796,
        "index": "B",
        "solvedCount": 8384
      },
      {
        "contestId": 796,
        "index": "A",
        "solvedCount": 11185
      },
      {
        "contestId": 794,
        "index": "G",
        "solvedCount": 304
      },
      {
        "contestId": 794,
        "index": "F",
        "solvedCount": 588
      },
      {
        "contestId": 794,
        "index": "E",
        "solvedCount": 570
      },
      {
        "contestId": 794,
        "index": "D",
        "solvedCount": 670
      },
      {
        "contestId": 794,
        "index": "C",
        "solvedCount": 2861
      },
      {
        "contestId": 794,
        "index": "B",
        "solvedCount": 5271
      },
      {
        "contestId": 794,
        "index": "A",
        "solvedCount": 6209
      },
      {
        "contestId": 793,
        "index": "G",
        "solvedCount": 252
      },
      {
        "contestId": 793,
        "index": "F",
        "solvedCount": 402
      },
      {
        "contestId": 793,
        "index": "E",
        "solvedCount": 214
      },
      {
        "contestId": 793,
        "index": "D",
        "solvedCount": 1469
      },
      {
        "contestId": 793,
        "index": "C",
        "solvedCount": 1146
      },
      {
        "contestId": 793,
        "index": "B",
        "solvedCount": 3629
      },
      {
        "contestId": 793,
        "index": "A",
        "solvedCount": 5684
      },
      {
        "contestId": 792,
        "index": "F",
        "solvedCount": 1
      },
      {
        "contestId": 792,
        "index": "E",
        "solvedCount": 69
      },
      {
        "contestId": 792,
        "index": "D",
        "solvedCount": 635
      },
      {
        "contestId": 792,
        "index": "C",
        "solvedCount": 536
      },
      {
        "contestId": 792,
        "index": "B",
        "solvedCount": 2240
      },
      {
        "contestId": 792,
        "index": "A",
        "solvedCount": 2983
      },
      {
        "contestId": 791,
        "index": "A",
        "solvedCount": 138071
      },
      {
        "contestId": 789,
        "index": "B",
        "solvedCount": 4209
      },
      {
        "contestId": 789,
        "index": "A",
        "solvedCount": 8195
      },
      {
        "contestId": 788,
        "index": "E",
        "solvedCount": 274
      },
      {
        "contestId": 788,
        "index": "D",
        "solvedCount": 276
      },
      {
        "contestId": 788,
        "index": "C",
        "solvedCount": 1418
      },
      {
        "contestId": 788,
        "index": "B",
        "solvedCount": 1418
      },
      {
        "contestId": 788,
        "index": "A",
        "solvedCount": 4782
      },
      {
        "contestId": 787,
        "index": "B",
        "solvedCount": 5286
      },
      {
        "contestId": 787,
        "index": "A",
        "solvedCount": 9670
      },
      {
        "contestId": 786,
        "index": "E",
        "solvedCount": 495
      },
      {
        "contestId": 786,
        "index": "D",
        "solvedCount": 105
      },
      {
        "contestId": 786,
        "index": "C",
        "solvedCount": 1777
      },
      {
        "contestId": 786,
        "index": "B",
        "solvedCount": 3661
      },
      {
        "contestId": 786,
        "index": "A",
        "solvedCount": 1373
      },
      {
        "contestId": 785,
        "index": "E",
        "solvedCount": 1603
      },
      {
        "contestId": 785,
        "index": "D",
        "solvedCount": 2259
      },
      {
        "contestId": 785,
        "index": "C",
        "solvedCount": 6517
      },
      {
        "contestId": 785,
        "index": "B",
        "solvedCount": 9181
      },
      {
        "contestId": 785,
        "index": "A",
        "solvedCount": 65491
      },
      {
        "contestId": 784,
        "index": "G",
        "solvedCount": 379
      },
      {
        "contestId": 784,
        "index": "F",
        "solvedCount": 263
      },
      {
        "contestId": 784,
        "index": "E",
        "solvedCount": 561
      },
      {
        "contestId": 784,
        "index": "D",
        "solvedCount": 78
      },
      {
        "contestId": 784,
        "index": "C",
        "solvedCount": 142
      },
      {
        "contestId": 784,
        "index": "B",
        "solvedCount": 212
      },
      {
        "contestId": 784,
        "index": "A",
        "solvedCount": 862
      },
      {
        "contestId": 780,
        "index": "H",
        "solvedCount": 71
      },
      {
        "contestId": 780,
        "index": "G",
        "solvedCount": 249
      },
      {
        "contestId": 780,
        "index": "F",
        "solvedCount": 319
      },
      {
        "contestId": 780,
        "index": "E",
        "solvedCount": 549
      },
      {
        "contestId": 780,
        "index": "D",
        "solvedCount": 693
      },
      {
        "contestId": 780,
        "index": "C",
        "solvedCount": 4018
      },
      {
        "contestId": 780,
        "index": "B",
        "solvedCount": 2019
      },
      {
        "contestId": 780,
        "index": "A",
        "solvedCount": 4534
      },
      {
        "contestId": 779,
        "index": "C",
        "solvedCount": 9954
      },
      {
        "contestId": 779,
        "index": "B",
        "solvedCount": 9040
      },
      {
        "contestId": 779,
        "index": "A",
        "solvedCount": 8186
      },
      {
        "contestId": 778,
        "index": "E",
        "solvedCount": 274
      },
      {
        "contestId": 778,
        "index": "D",
        "solvedCount": 442
      },
      {
        "contestId": 778,
        "index": "C",
        "solvedCount": 706
      },
      {
        "contestId": 778,
        "index": "B",
        "solvedCount": 1248
      },
      {
        "contestId": 778,
        "index": "A",
        "solvedCount": 5293
      },
      {
        "contestId": 777,
        "index": "E",
        "solvedCount": 3329
      },
      {
        "contestId": 777,
        "index": "D",
        "solvedCount": 4400
      },
      {
        "contestId": 777,
        "index": "C",
        "solvedCount": 5699
      },
      {
        "contestId": 777,
        "index": "B",
        "solvedCount": 8447
      },
      {
        "contestId": 777,
        "index": "A",
        "solvedCount": 8840
      },
      {
        "contestId": 776,
        "index": "G",
        "solvedCount": 295
      },
      {
        "contestId": 776,
        "index": "F",
        "solvedCount": 379
      },
      {
        "contestId": 776,
        "index": "E",
        "solvedCount": 1753
      },
      {
        "contestId": 776,
        "index": "D",
        "solvedCount": 3827
      },
      {
        "contestId": 776,
        "index": "C",
        "solvedCount": 5273
      },
      {
        "contestId": 776,
        "index": "B",
        "solvedCount": 15310
      },
      {
        "contestId": 776,
        "index": "A",
        "solvedCount": 10118
      },
      {
        "contestId": 775,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 774,
        "index": "L",
        "solvedCount": 41
      },
      {
        "contestId": 774,
        "index": "K",
        "solvedCount": 214
      },
      {
        "contestId": 774,
        "index": "J",
        "solvedCount": 56
      },
      {
        "contestId": 774,
        "index": "I",
        "solvedCount": 6
      },
      {
        "contestId": 774,
        "index": "H",
        "solvedCount": 18
      },
      {
        "contestId": 774,
        "index": "G",
        "solvedCount": 1
      },
      {
        "contestId": 774,
        "index": "F",
        "solvedCount": 3
      },
      {
        "contestId": 774,
        "index": "E",
        "solvedCount": 6
      },
      {
        "contestId": 774,
        "index": "D",
        "solvedCount": 247
      },
      {
        "contestId": 774,
        "index": "C",
        "solvedCount": 298
      },
      {
        "contestId": 774,
        "index": "B",
        "solvedCount": 26
      },
      {
        "contestId": 774,
        "index": "A",
        "solvedCount": 8
      },
      {
        "contestId": 773,
        "index": "F",
        "solvedCount": 139
      },
      {
        "contestId": 773,
        "index": "E",
        "solvedCount": 181
      },
      {
        "contestId": 773,
        "index": "D",
        "solvedCount": 236
      },
      {
        "contestId": 773,
        "index": "C",
        "solvedCount": 251
      },
      {
        "contestId": 773,
        "index": "B",
        "solvedCount": 224
      },
      {
        "contestId": 773,
        "index": "A",
        "solvedCount": 823
      },
      {
        "contestId": 772,
        "index": "E",
        "solvedCount": 84
      },
      {
        "contestId": 772,
        "index": "D",
        "solvedCount": 253
      },
      {
        "contestId": 772,
        "index": "C",
        "solvedCount": 491
      },
      {
        "contestId": 772,
        "index": "B",
        "solvedCount": 823
      },
      {
        "contestId": 772,
        "index": "A",
        "solvedCount": 1161
      },
      {
        "contestId": 771,
        "index": "F",
        "solvedCount": 50
      },
      {
        "contestId": 771,
        "index": "E",
        "solvedCount": 295
      },
      {
        "contestId": 771,
        "index": "D",
        "solvedCount": 503
      },
      {
        "contestId": 771,
        "index": "C",
        "solvedCount": 1168
      },
      {
        "contestId": 771,
        "index": "B",
        "solvedCount": 2131
      },
      {
        "contestId": 771,
        "index": "A",
        "solvedCount": 7056
      },
      {
        "contestId": 770,
        "index": "D",
        "solvedCount": 1048
      },
      {
        "contestId": 770,
        "index": "C",
        "solvedCount": 1965
      },
      {
        "contestId": 770,
        "index": "B",
        "solvedCount": 2047
      },
      {
        "contestId": 770,
        "index": "A",
        "solvedCount": 16002
      },
      {
        "contestId": 769,
        "index": "D",
        "solvedCount": 1764
      },
      {
        "contestId": 769,
        "index": "C",
        "solvedCount": 1602
      },
      {
        "contestId": 769,
        "index": "B",
        "solvedCount": 2241
      },
      {
        "contestId": 769,
        "index": "A",
        "solvedCount": 4126
      },
      {
        "contestId": 768,
        "index": "G",
        "solvedCount": 315
      },
      {
        "contestId": 768,
        "index": "F",
        "solvedCount": 871
      },
      {
        "contestId": 768,
        "index": "E",
        "solvedCount": 2310
      },
      {
        "contestId": 768,
        "index": "D",
        "solvedCount": 2345
      },
      {
        "contestId": 768,
        "index": "C",
        "solvedCount": 3530
      },
      {
        "contestId": 768,
        "index": "B",
        "solvedCount": 5317
      },
      {
        "contestId": 768,
        "index": "A",
        "solvedCount": 20919
      },
      {
        "contestId": 767,
        "index": "E",
        "solvedCount": 854
      },
      {
        "contestId": 767,
        "index": "D",
        "solvedCount": 1918
      },
      {
        "contestId": 767,
        "index": "C",
        "solvedCount": 3487
      },
      {
        "contestId": 767,
        "index": "B",
        "solvedCount": 2032
      },
      {
        "contestId": 767,
        "index": "A",
        "solvedCount": 15522
      },
      {
        "contestId": 766,
        "index": "E",
        "solvedCount": 2343
      },
      {
        "contestId": 766,
        "index": "D",
        "solvedCount": 2902
      },
      {
        "contestId": 766,
        "index": "C",
        "solvedCount": 4048
      },
      {
        "contestId": 766,
        "index": "B",
        "solvedCount": 24143
      },
      {
        "contestId": 766,
        "index": "A",
        "solvedCount": 22703
      },
      {
        "contestId": 765,
        "index": "G",
        "solvedCount": 50
      },
      {
        "contestId": 765,
        "index": "F",
        "solvedCount": 1503
      },
      {
        "contestId": 765,
        "index": "E",
        "solvedCount": 1189
      },
      {
        "contestId": 765,
        "index": "D",
        "solvedCount": 2268
      },
      {
        "contestId": 765,
        "index": "C",
        "solvedCount": 6338
      },
      {
        "contestId": 765,
        "index": "B",
        "solvedCount": 6405
      },
      {
        "contestId": 765,
        "index": "A",
        "solvedCount": 7761
      },
      {
        "contestId": 764,
        "index": "B",
        "solvedCount": 10352
      },
      {
        "contestId": 764,
        "index": "A",
        "solvedCount": 14265
      },
      {
        "contestId": 763,
        "index": "E",
        "solvedCount": 415
      },
      {
        "contestId": 763,
        "index": "D",
        "solvedCount": 418
      },
      {
        "contestId": 763,
        "index": "C",
        "solvedCount": 582
      },
      {
        "contestId": 763,
        "index": "B",
        "solvedCount": 1424
      },
      {
        "contestId": 763,
        "index": "A",
        "solvedCount": 5861
      },
      {
        "contestId": 762,
        "index": "F",
        "solvedCount": 7
      },
      {
        "contestId": 762,
        "index": "E",
        "solvedCount": 98
      },
      {
        "contestId": 762,
        "index": "D",
        "solvedCount": 148
      },
      {
        "contestId": 762,
        "index": "C",
        "solvedCount": 382
      },
      {
        "contestId": 762,
        "index": "B",
        "solvedCount": 2050
      },
      {
        "contestId": 762,
        "index": "A",
        "solvedCount": 2105
      },
      {
        "contestId": 761,
        "index": "F",
        "solvedCount": 361
      },
      {
        "contestId": 761,
        "index": "E",
        "solvedCount": 1690
      },
      {
        "contestId": 761,
        "index": "D",
        "solvedCount": 3388
      },
      {
        "contestId": 761,
        "index": "C",
        "solvedCount": 5074
      },
      {
        "contestId": 761,
        "index": "B",
        "solvedCount": 6056
      },
      {
        "contestId": 761,
        "index": "A",
        "solvedCount": 12667
      },
      {
        "contestId": 760,
        "index": "B",
        "solvedCount": 4791
      },
      {
        "contestId": 760,
        "index": "A",
        "solvedCount": 7239
      },
      {
        "contestId": 758,
        "index": "F",
        "solvedCount": 566
      },
      {
        "contestId": 758,
        "index": "E",
        "solvedCount": 386
      },
      {
        "contestId": 758,
        "index": "D",
        "solvedCount": 2556
      },
      {
        "contestId": 758,
        "index": "C",
        "solvedCount": 3572
      },
      {
        "contestId": 758,
        "index": "B",
        "solvedCount": 9060
      },
      {
        "contestId": 758,
        "index": "A",
        "solvedCount": 45793
      },
      {
        "contestId": 757,
        "index": "G",
        "solvedCount": 375
      },
      {
        "contestId": 757,
        "index": "F",
        "solvedCount": 916
      },
      {
        "contestId": 757,
        "index": "E",
        "solvedCount": 1100
      },
      {
        "contestId": 757,
        "index": "D",
        "solvedCount": 1206
      },
      {
        "contestId": 757,
        "index": "C",
        "solvedCount": 2180
      },
      {
        "contestId": 757,
        "index": "B",
        "solvedCount": 8301
      },
      {
        "contestId": 757,
        "index": "A",
        "solvedCount": 9903
      },
      {
        "contestId": 756,
        "index": "F",
        "solvedCount": 67
      },
      {
        "contestId": 756,
        "index": "E",
        "solvedCount": 104
      },
      {
        "contestId": 756,
        "index": "D",
        "solvedCount": 533
      },
      {
        "contestId": 756,
        "index": "C",
        "solvedCount": 479
      },
      {
        "contestId": 756,
        "index": "B",
        "solvedCount": 1270
      },
      {
        "contestId": 756,
        "index": "A",
        "solvedCount": 698
      },
      {
        "contestId": 755,
        "index": "G",
        "solvedCount": 681
      },
      {
        "contestId": 755,
        "index": "F",
        "solvedCount": 1015
      },
      {
        "contestId": 755,
        "index": "E",
        "solvedCount": 709
      },
      {
        "contestId": 755,
        "index": "D",
        "solvedCount": 2288
      },
      {
        "contestId": 755,
        "index": "C",
        "solvedCount": 9711
      },
      {
        "contestId": 755,
        "index": "B",
        "solvedCount": 8045
      },
      {
        "contestId": 755,
        "index": "A",
        "solvedCount": 14693
      },
      {
        "contestId": 754,
        "index": "E",
        "solvedCount": 438
      },
      {
        "contestId": 754,
        "index": "D",
        "solvedCount": 2011
      },
      {
        "contestId": 754,
        "index": "C",
        "solvedCount": 856
      },
      {
        "contestId": 754,
        "index": "B",
        "solvedCount": 6512
      },
      {
        "contestId": 754,
        "index": "A",
        "solvedCount": 7566
      },
      {
        "contestId": 753,
        "index": "C",
        "solvedCount": 260
      },
      {
        "contestId": 753,
        "index": "B",
        "solvedCount": 987
      },
      {
        "contestId": 753,
        "index": "A",
        "solvedCount": 7278
      },
      {
        "contestId": 750,
        "index": "H",
        "solvedCount": 157
      },
      {
        "contestId": 750,
        "index": "G",
        "solvedCount": 319
      },
      {
        "contestId": 750,
        "index": "F",
        "solvedCount": 400
      },
      {
        "contestId": 750,
        "index": "E",
        "solvedCount": 1348
      },
      {
        "contestId": 750,
        "index": "D",
        "solvedCount": 2980
      },
      {
        "contestId": 750,
        "index": "C",
        "solvedCount": 6017
      },
      {
        "contestId": 750,
        "index": "B",
        "solvedCount": 8484
      },
      {
        "contestId": 750,
        "index": "A",
        "solvedCount": 56482
      },
      {
        "contestId": 749,
        "index": "E",
        "solvedCount": 887
      },
      {
        "contestId": 749,
        "index": "D",
        "solvedCount": 2230
      },
      {
        "contestId": 749,
        "index": "C",
        "solvedCount": 5247
      },
      {
        "contestId": 749,
        "index": "B",
        "solvedCount": 7002
      },
      {
        "contestId": 749,
        "index": "A",
        "solvedCount": 36151
      },
      {
        "contestId": 748,
        "index": "F",
        "solvedCount": 251
      },
      {
        "contestId": 748,
        "index": "E",
        "solvedCount": 546
      },
      {
        "contestId": 748,
        "index": "D",
        "solvedCount": 610
      },
      {
        "contestId": 748,
        "index": "C",
        "solvedCount": 1581
      },
      {
        "contestId": 748,
        "index": "B",
        "solvedCount": 2047
      },
      {
        "contestId": 748,
        "index": "A",
        "solvedCount": 3398
      },
      {
        "contestId": 747,
        "index": "F",
        "solvedCount": 378
      },
      {
        "contestId": 747,
        "index": "E",
        "solvedCount": 1777
      },
      {
        "contestId": 747,
        "index": "D",
        "solvedCount": 2588
      },
      {
        "contestId": 747,
        "index": "C",
        "solvedCount": 4140
      },
      {
        "contestId": 747,
        "index": "B",
        "solvedCount": 7174
      },
      {
        "contestId": 747,
        "index": "A",
        "solvedCount": 8148
      },
      {
        "contestId": 746,
        "index": "G",
        "solvedCount": 1180
      },
      {
        "contestId": 746,
        "index": "F",
        "solvedCount": 656
      },
      {
        "contestId": 746,
        "index": "E",
        "solvedCount": 1602
      },
      {
        "contestId": 746,
        "index": "D",
        "solvedCount": 4453
      },
      {
        "contestId": 746,
        "index": "C",
        "solvedCount": 3444
      },
      {
        "contestId": 746,
        "index": "B",
        "solvedCount": 20648
      },
      {
        "contestId": 746,
        "index": "A",
        "solvedCount": 16743
      },
      {
        "contestId": 745,
        "index": "B",
        "solvedCount": 3494
      },
      {
        "contestId": 745,
        "index": "A",
        "solvedCount": 8464
      },
      {
        "contestId": 744,
        "index": "E",
        "solvedCount": 122
      },
      {
        "contestId": 744,
        "index": "D",
        "solvedCount": 109
      },
      {
        "contestId": 744,
        "index": "C",
        "solvedCount": 768
      },
      {
        "contestId": 744,
        "index": "B",
        "solvedCount": 1141
      },
      {
        "contestId": 744,
        "index": "A",
        "solvedCount": 4114
      },
      {
        "contestId": 743,
        "index": "E",
        "solvedCount": 1318
      },
      {
        "contestId": 743,
        "index": "D",
        "solvedCount": 3870
      },
      {
        "contestId": 743,
        "index": "C",
        "solvedCount": 10313
      },
      {
        "contestId": 743,
        "index": "B",
        "solvedCount": 11789
      },
      {
        "contestId": 743,
        "index": "A",
        "solvedCount": 9669
      },
      {
        "contestId": 742,
        "index": "B",
        "solvedCount": 8224
      },
      {
        "contestId": 742,
        "index": "A",
        "solvedCount": 31487
      },
      {
        "contestId": 741,
        "index": "E",
        "solvedCount": 149
      },
      {
        "contestId": 741,
        "index": "D",
        "solvedCount": 2026
      },
      {
        "contestId": 741,
        "index": "C",
        "solvedCount": 1603
      },
      {
        "contestId": 741,
        "index": "B",
        "solvedCount": 2574
      },
      {
        "contestId": 741,
        "index": "A",
        "solvedCount": 2143
      },
      {
        "contestId": 740,
        "index": "B",
        "solvedCount": 7133
      },
      {
        "contestId": 740,
        "index": "A",
        "solvedCount": 7922
      },
      {
        "contestId": 739,
        "index": "E",
        "solvedCount": 1732
      },
      {
        "contestId": 739,
        "index": "D",
        "solvedCount": 129
      },
      {
        "contestId": 739,
        "index": "C",
        "solvedCount": 999
      },
      {
        "contestId": 739,
        "index": "B",
        "solvedCount": 2877
      },
      {
        "contestId": 739,
        "index": "A",
        "solvedCount": 2936
      },
      {
        "contestId": 737,
        "index": "F",
        "solvedCount": 64
      },
      {
        "contestId": 737,
        "index": "E",
        "solvedCount": 105
      },
      {
        "contestId": 736,
        "index": "E",
        "solvedCount": 158
      },
      {
        "contestId": 736,
        "index": "D",
        "solvedCount": 390
      },
      {
        "contestId": 735,
        "index": "E",
        "solvedCount": 390
      },
      {
        "contestId": 735,
        "index": "D",
        "solvedCount": 9545
      },
      {
        "contestId": 735,
        "index": "C",
        "solvedCount": 5698
      },
      {
        "contestId": 735,
        "index": "B",
        "solvedCount": 7509
      },
      {
        "contestId": 735,
        "index": "A",
        "solvedCount": 10804
      },
      {
        "contestId": 734,
        "index": "F",
        "solvedCount": 1104
      },
      {
        "contestId": 734,
        "index": "E",
        "solvedCount": 3195
      },
      {
        "contestId": 734,
        "index": "D",
        "solvedCount": 3527
      },
      {
        "contestId": 734,
        "index": "C",
        "solvedCount": 4933
      },
      {
        "contestId": 734,
        "index": "B",
        "solvedCount": 24743
      },
      {
        "contestId": 734,
        "index": "A",
        "solvedCount": 111644
      },
      {
        "contestId": 733,
        "index": "F",
        "solvedCount": 988
      },
      {
        "contestId": 733,
        "index": "E",
        "solvedCount": 592
      },
      {
        "contestId": 733,
        "index": "D",
        "solvedCount": 3845
      },
      {
        "contestId": 733,
        "index": "C",
        "solvedCount": 3079
      },
      {
        "contestId": 733,
        "index": "B",
        "solvedCount": 9555
      },
      {
        "contestId": 733,
        "index": "A",
        "solvedCount": 13889
      },
      {
        "contestId": 732,
        "index": "F",
        "solvedCount": 1717
      },
      {
        "contestId": 732,
        "index": "E",
        "solvedCount": 1520
      },
      {
        "contestId": 732,
        "index": "D",
        "solvedCount": 4893
      },
      {
        "contestId": 732,
        "index": "C",
        "solvedCount": 8244
      },
      {
        "contestId": 732,
        "index": "B",
        "solvedCount": 21137
      },
      {
        "contestId": 732,
        "index": "A",
        "solvedCount": 54861
      },
      {
        "contestId": 731,
        "index": "F",
        "solvedCount": 2508
      },
      {
        "contestId": 731,
        "index": "E",
        "solvedCount": 1230
      },
      {
        "contestId": 731,
        "index": "D",
        "solvedCount": 1058
      },
      {
        "contestId": 731,
        "index": "C",
        "solvedCount": 5791
      },
      {
        "contestId": 731,
        "index": "B",
        "solvedCount": 6950
      },
      {
        "contestId": 731,
        "index": "A",
        "solvedCount": 35097
      },
      {
        "contestId": 730,
        "index": "L",
        "solvedCount": 12
      },
      {
        "contestId": 730,
        "index": "K",
        "solvedCount": 9
      },
      {
        "contestId": 730,
        "index": "J",
        "solvedCount": 462
      },
      {
        "contestId": 730,
        "index": "I",
        "solvedCount": 258
      },
      {
        "contestId": 730,
        "index": "H",
        "solvedCount": 999
      },
      {
        "contestId": 730,
        "index": "G",
        "solvedCount": 780
      },
      {
        "contestId": 730,
        "index": "F",
        "solvedCount": 11
      },
      {
        "contestId": 730,
        "index": "E",
        "solvedCount": 190
      },
      {
        "contestId": 730,
        "index": "D",
        "solvedCount": 163
      },
      {
        "contestId": 730,
        "index": "C",
        "solvedCount": 263
      },
      {
        "contestId": 730,
        "index": "B",
        "solvedCount": 630
      },
      {
        "contestId": 730,
        "index": "A",
        "solvedCount": 489
      },
      {
        "contestId": 729,
        "index": "F",
        "solvedCount": 377
      },
      {
        "contestId": 729,
        "index": "E",
        "solvedCount": 699
      },
      {
        "contestId": 729,
        "index": "D",
        "solvedCount": 1406
      },
      {
        "contestId": 729,
        "index": "C",
        "solvedCount": 1356
      },
      {
        "contestId": 729,
        "index": "B",
        "solvedCount": 3419
      },
      {
        "contestId": 729,
        "index": "A",
        "solvedCount": 2822
      },
      {
        "contestId": 727,
        "index": "F",
        "solvedCount": 674
      },
      {
        "contestId": 727,
        "index": "E",
        "solvedCount": 849
      },
      {
        "contestId": 727,
        "index": "D",
        "solvedCount": 1529
      },
      {
        "contestId": 727,
        "index": "C",
        "solvedCount": 4797
      },
      {
        "contestId": 727,
        "index": "B",
        "solvedCount": 1761
      },
      {
        "contestId": 727,
        "index": "A",
        "solvedCount": 10468
      },
      {
        "contestId": 725,
        "index": "G",
        "solvedCount": 139
      },
      {
        "contestId": 725,
        "index": "F",
        "solvedCount": 387
      },
      {
        "contestId": 725,
        "index": "E",
        "solvedCount": 597
      },
      {
        "contestId": 725,
        "index": "D",
        "solvedCount": 2494
      },
      {
        "contestId": 725,
        "index": "C",
        "solvedCount": 2461
      },
      {
        "contestId": 725,
        "index": "B",
        "solvedCount": 4830
      },
      {
        "contestId": 725,
        "index": "A",
        "solvedCount": 6096
      },
      {
        "contestId": 724,
        "index": "G",
        "solvedCount": 834
      },
      {
        "contestId": 724,
        "index": "F",
        "solvedCount": 350
      },
      {
        "contestId": 724,
        "index": "E",
        "solvedCount": 1063
      },
      {
        "contestId": 724,
        "index": "D",
        "solvedCount": 2125
      },
      {
        "contestId": 724,
        "index": "C",
        "solvedCount": 1954
      },
      {
        "contestId": 724,
        "index": "B",
        "solvedCount": 3696
      },
      {
        "contestId": 724,
        "index": "A",
        "solvedCount": 6210
      },
      {
        "contestId": 723,
        "index": "F",
        "solvedCount": 1259
      },
      {
        "contestId": 723,
        "index": "E",
        "solvedCount": 1704
      },
      {
        "contestId": 723,
        "index": "D",
        "solvedCount": 6222
      },
      {
        "contestId": 723,
        "index": "C",
        "solvedCount": 4295
      },
      {
        "contestId": 723,
        "index": "B",
        "solvedCount": 8971
      },
      {
        "contestId": 723,
        "index": "A",
        "solvedCount": 52579
      },
      {
        "contestId": 722,
        "index": "F",
        "solvedCount": 417
      },
      {
        "contestId": 722,
        "index": "E",
        "solvedCount": 718
      },
      {
        "contestId": 722,
        "index": "D",
        "solvedCount": 2848
      },
      {
        "contestId": 722,
        "index": "C",
        "solvedCount": 6659
      },
      {
        "contestId": 722,
        "index": "B",
        "solvedCount": 5849
      },
      {
        "contestId": 722,
        "index": "A",
        "solvedCount": 5855
      },
      {
        "contestId": 721,
        "index": "E",
        "solvedCount": 286
      },
      {
        "contestId": 721,
        "index": "D",
        "solvedCount": 2115
      },
      {
        "contestId": 721,
        "index": "C",
        "solvedCount": 4820
      },
      {
        "contestId": 721,
        "index": "B",
        "solvedCount": 10638
      },
      {
        "contestId": 721,
        "index": "A",
        "solvedCount": 16015
      },
      {
        "contestId": 720,
        "index": "F",
        "solvedCount": 1
      },
      {
        "contestId": 720,
        "index": "E",
        "solvedCount": 1
      },
      {
        "contestId": 720,
        "index": "D",
        "solvedCount": 2
      },
      {
        "contestId": 720,
        "index": "C",
        "solvedCount": 1
      },
      {
        "contestId": 720,
        "index": "B",
        "solvedCount": 36
      },
      {
        "contestId": 720,
        "index": "A",
        "solvedCount": 91
      },
      {
        "contestId": 719,
        "index": "B",
        "solvedCount": 7340
      },
      {
        "contestId": 719,
        "index": "A",
        "solvedCount": 13478
      },
      {
        "contestId": 718,
        "index": "E",
        "solvedCount": 292
      },
      {
        "contestId": 718,
        "index": "D",
        "solvedCount": 344
      },
      {
        "contestId": 718,
        "index": "C",
        "solvedCount": 2116
      },
      {
        "contestId": 718,
        "index": "A",
        "solvedCount": 1707
      },
      {
        "contestId": 717,
        "index": "I",
        "solvedCount": 6
      },
      {
        "contestId": 717,
        "index": "H",
        "solvedCount": 96
      },
      {
        "contestId": 717,
        "index": "G",
        "solvedCount": 86
      },
      {
        "contestId": 717,
        "index": "F",
        "solvedCount": 39
      },
      {
        "contestId": 717,
        "index": "E",
        "solvedCount": 308
      },
      {
        "contestId": 717,
        "index": "D",
        "solvedCount": 283
      },
      {
        "contestId": 717,
        "index": "C",
        "solvedCount": 767
      },
      {
        "contestId": 717,
        "index": "B",
        "solvedCount": 12
      },
      {
        "contestId": 717,
        "index": "A",
        "solvedCount": 13
      },
      {
        "contestId": 716,
        "index": "B",
        "solvedCount": 10260
      },
      {
        "contestId": 716,
        "index": "A",
        "solvedCount": 19225
      },
      {
        "contestId": 715,
        "index": "E",
        "solvedCount": 293
      },
      {
        "contestId": 715,
        "index": "D",
        "solvedCount": 216
      },
      {
        "contestId": 715,
        "index": "C",
        "solvedCount": 1194
      },
      {
        "contestId": 715,
        "index": "B",
        "solvedCount": 1681
      },
      {
        "contestId": 715,
        "index": "A",
        "solvedCount": 2005
      },
      {
        "contestId": 714,
        "index": "B",
        "solvedCount": 12153
      },
      {
        "contestId": 714,
        "index": "A",
        "solvedCount": 9778
      },
      {
        "contestId": 713,
        "index": "E",
        "solvedCount": 288
      },
      {
        "contestId": 713,
        "index": "D",
        "solvedCount": 927
      },
      {
        "contestId": 713,
        "index": "C",
        "solvedCount": 3372
      },
      {
        "contestId": 713,
        "index": "B",
        "solvedCount": 840
      },
      {
        "contestId": 713,
        "index": "A",
        "solvedCount": 3332
      },
      {
        "contestId": 712,
        "index": "E",
        "solvedCount": 535
      },
      {
        "contestId": 712,
        "index": "D",
        "solvedCount": 1476
      },
      {
        "contestId": 712,
        "index": "C",
        "solvedCount": 5182
      },
      {
        "contestId": 712,
        "index": "B",
        "solvedCount": 8167
      },
      {
        "contestId": 712,
        "index": "A",
        "solvedCount": 10229
      },
      {
        "contestId": 711,
        "index": "E",
        "solvedCount": 1170
      },
      {
        "contestId": 711,
        "index": "D",
        "solvedCount": 4041
      },
      {
        "contestId": 711,
        "index": "C",
        "solvedCount": 6918
      },
      {
        "contestId": 711,
        "index": "B",
        "solvedCount": 7742
      },
      {
        "contestId": 711,
        "index": "A",
        "solvedCount": 25845
      },
      {
        "contestId": 710,
        "index": "F",
        "solvedCount": 19
      },
      {
        "contestId": 710,
        "index": "E",
        "solvedCount": 426
      },
      {
        "contestId": 710,
        "index": "D",
        "solvedCount": 65
      },
      {
        "contestId": 710,
        "index": "C",
        "solvedCount": 1508
      },
      {
        "contestId": 710,
        "index": "B",
        "solvedCount": 2137
      },
      {
        "contestId": 710,
        "index": "A",
        "solvedCount": 3696
      },
      {
        "contestId": 709,
        "index": "B",
        "solvedCount": 4404
      },
      {
        "contestId": 709,
        "index": "A",
        "solvedCount": 23753
      },
      {
        "contestId": 708,
        "index": "E",
        "solvedCount": 688
      },
      {
        "contestId": 708,
        "index": "D",
        "solvedCount": 605
      },
      {
        "contestId": 708,
        "index": "C",
        "solvedCount": 2178
      },
      {
        "contestId": 708,
        "index": "B",
        "solvedCount": 1779
      },
      {
        "contestId": 708,
        "index": "A",
        "solvedCount": 3590
      },
      {
        "contestId": 707,
        "index": "E",
        "solvedCount": 863
      },
      {
        "contestId": 707,
        "index": "D",
        "solvedCount": 2306
      },
      {
        "contestId": 707,
        "index": "C",
        "solvedCount": 10834
      },
      {
        "contestId": 707,
        "index": "B",
        "solvedCount": 11024
      },
      {
        "contestId": 707,
        "index": "A",
        "solvedCount": 38476
      },
      {
        "contestId": 706,
        "index": "E",
        "solvedCount": 997
      },
      {
        "contestId": 706,
        "index": "D",
        "solvedCount": 7472
      },
      {
        "contestId": 706,
        "index": "C",
        "solvedCount": 13504
      },
      {
        "contestId": 706,
        "index": "B",
        "solvedCount": 41078
      },
      {
        "contestId": 706,
        "index": "A",
        "solvedCount": 12256
      },
      {
        "contestId": 705,
        "index": "B",
        "solvedCount": 7756
      },
      {
        "contestId": 705,
        "index": "A",
        "solvedCount": 80622
      },
      {
        "contestId": 704,
        "index": "E",
        "solvedCount": 227
      },
      {
        "contestId": 704,
        "index": "D",
        "solvedCount": 656
      },
      {
        "contestId": 704,
        "index": "C",
        "solvedCount": 363
      },
      {
        "contestId": 704,
        "index": "B",
        "solvedCount": 1240
      },
      {
        "contestId": 704,
        "index": "A",
        "solvedCount": 3640
      },
      {
        "contestId": 703,
        "index": "E",
        "solvedCount": 522
      },
      {
        "contestId": 703,
        "index": "D",
        "solvedCount": 2937
      },
      {
        "contestId": 703,
        "index": "C",
        "solvedCount": 1493
      },
      {
        "contestId": 703,
        "index": "B",
        "solvedCount": 5432
      },
      {
        "contestId": 703,
        "index": "A",
        "solvedCount": 44150
      },
      {
        "contestId": 702,
        "index": "F",
        "solvedCount": 7
      },
      {
        "contestId": 702,
        "index": "E",
        "solvedCount": 269
      },
      {
        "contestId": 702,
        "index": "D",
        "solvedCount": 737
      },
      {
        "contestId": 702,
        "index": "C",
        "solvedCount": 1482
      },
      {
        "contestId": 702,
        "index": "B",
        "solvedCount": 1699
      },
      {
        "contestId": 702,
        "index": "A",
        "solvedCount": 3305
      },
      {
        "contestId": 701,
        "index": "C",
        "solvedCount": 10356
      },
      {
        "contestId": 701,
        "index": "B",
        "solvedCount": 9672
      },
      {
        "contestId": 701,
        "index": "A",
        "solvedCount": 16486
      },
      {
        "contestId": 700,
        "index": "E",
        "solvedCount": 1006
      },
      {
        "contestId": 700,
        "index": "D",
        "solvedCount": 399
      },
      {
        "contestId": 700,
        "index": "C",
        "solvedCount": 864
      },
      {
        "contestId": 700,
        "index": "B",
        "solvedCount": 2424
      },
      {
        "contestId": 700,
        "index": "A",
        "solvedCount": 1411
      },
      {
        "contestId": 699,
        "index": "B",
        "solvedCount": 6697
      },
      {
        "contestId": 699,
        "index": "A",
        "solvedCount": 12359
      },
      {
        "contestId": 698,
        "index": "F",
        "solvedCount": 304
      },
      {
        "contestId": 698,
        "index": "E",
        "solvedCount": 80
      },
      {
        "contestId": 698,
        "index": "D",
        "solvedCount": 403
      },
      {
        "contestId": 698,
        "index": "C",
        "solvedCount": 915
      },
      {
        "contestId": 698,
        "index": "B",
        "solvedCount": 2914
      },
      {
        "contestId": 698,
        "index": "A",
        "solvedCount": 15979
      },
      {
        "contestId": 697,
        "index": "B",
        "solvedCount": 5376
      },
      {
        "contestId": 697,
        "index": "A",
        "solvedCount": 11254
      },
      {
        "contestId": 696,
        "index": "F",
        "solvedCount": 112
      },
      {
        "contestId": 696,
        "index": "E",
        "solvedCount": 387
      },
      {
        "contestId": 696,
        "index": "D",
        "solvedCount": 964
      },
      {
        "contestId": 696,
        "index": "C",
        "solvedCount": 1326
      },
      {
        "contestId": 696,
        "index": "B",
        "solvedCount": 1892
      },
      {
        "contestId": 696,
        "index": "A",
        "solvedCount": 2249
      },
      {
        "contestId": 691,
        "index": "F",
        "solvedCount": 148
      },
      {
        "contestId": 691,
        "index": "E",
        "solvedCount": 330
      },
      {
        "contestId": 691,
        "index": "D",
        "solvedCount": 844
      },
      {
        "contestId": 691,
        "index": "C",
        "solvedCount": 655
      },
      {
        "contestId": 691,
        "index": "B",
        "solvedCount": 1284
      },
      {
        "contestId": 691,
        "index": "A",
        "solvedCount": 2578
      },
      {
        "contestId": 690,
        "index": "F3",
        "solvedCount": 1
      },
      {
        "contestId": 690,
        "index": "F2",
        "solvedCount": 10
      },
      {
        "contestId": 690,
        "index": "F1",
        "solvedCount": 594
      },
      {
        "contestId": 690,
        "index": "E2",
        "solvedCount": 27
      },
      {
        "contestId": 690,
        "index": "E1",
        "solvedCount": 246
      },
      {
        "contestId": 690,
        "index": "D3",
        "solvedCount": 153
      },
      {
        "contestId": 690,
        "index": "D2",
        "solvedCount": 327
      },
      {
        "contestId": 690,
        "index": "D1",
        "solvedCount": 705
      },
      {
        "contestId": 690,
        "index": "C3",
        "solvedCount": 159
      },
      {
        "contestId": 690,
        "index": "C2",
        "solvedCount": 497
      },
      {
        "contestId": 690,
        "index": "C1",
        "solvedCount": 621
      },
      {
        "contestId": 690,
        "index": "B3",
        "solvedCount": 20
      },
      {
        "contestId": 690,
        "index": "B2",
        "solvedCount": 44
      },
      {
        "contestId": 690,
        "index": "B1",
        "solvedCount": 331
      },
      {
        "contestId": 690,
        "index": "A3",
        "solvedCount": 67
      },
      {
        "contestId": 690,
        "index": "A2",
        "solvedCount": 91
      },
      {
        "contestId": 690,
        "index": "A1",
        "solvedCount": 803
      },
      {
        "contestId": 689,
        "index": "E",
        "solvedCount": 1484
      },
      {
        "contestId": 689,
        "index": "D",
        "solvedCount": 2574
      },
      {
        "contestId": 689,
        "index": "C",
        "solvedCount": 4206
      },
      {
        "contestId": 689,
        "index": "B",
        "solvedCount": 4802
      },
      {
        "contestId": 689,
        "index": "A",
        "solvedCount": 4910
      },
      {
        "contestId": 688,
        "index": "B",
        "solvedCount": 25038
      },
      {
        "contestId": 688,
        "index": "A",
        "solvedCount": 12612
      },
      {
        "contestId": 687,
        "index": "E",
        "solvedCount": 292
      },
      {
        "contestId": 687,
        "index": "D",
        "solvedCount": 796
      },
      {
        "contestId": 687,
        "index": "C",
        "solvedCount": 3035
      },
      {
        "contestId": 687,
        "index": "B",
        "solvedCount": 3300
      },
      {
        "contestId": 687,
        "index": "A",
        "solvedCount": 7201
      },
      {
        "contestId": 686,
        "index": "B",
        "solvedCount": 6883
      },
      {
        "contestId": 686,
        "index": "A",
        "solvedCount": 28518
      },
      {
        "contestId": 685,
        "index": "E",
        "solvedCount": 405
      },
      {
        "contestId": 685,
        "index": "D",
        "solvedCount": 440
      },
      {
        "contestId": 685,
        "index": "C",
        "solvedCount": 446
      },
      {
        "contestId": 685,
        "index": "B",
        "solvedCount": 2082
      },
      {
        "contestId": 685,
        "index": "A",
        "solvedCount": 1750
      },
      {
        "contestId": 683,
        "index": "J",
        "solvedCount": 1
      },
      {
        "contestId": 683,
        "index": "I",
        "solvedCount": 13
      },
      {
        "contestId": 683,
        "index": "H",
        "solvedCount": 56
      },
      {
        "contestId": 683,
        "index": "G",
        "solvedCount": 82
      },
      {
        "contestId": 683,
        "index": "F",
        "solvedCount": 98
      },
      {
        "contestId": 683,
        "index": "E",
        "solvedCount": 135
      },
      {
        "contestId": 683,
        "index": "D",
        "solvedCount": 215
      },
      {
        "contestId": 683,
        "index": "C",
        "solvedCount": 239
      },
      {
        "contestId": 683,
        "index": "B",
        "solvedCount": 253
      },
      {
        "contestId": 683,
        "index": "A",
        "solvedCount": 452
      },
      {
        "contestId": 682,
        "index": "E",
        "solvedCount": 600
      },
      {
        "contestId": 682,
        "index": "D",
        "solvedCount": 3010
      },
      {
        "contestId": 682,
        "index": "C",
        "solvedCount": 6316
      },
      {
        "contestId": 682,
        "index": "B",
        "solvedCount": 9256
      },
      {
        "contestId": 682,
        "index": "A",
        "solvedCount": 16420
      },
      {
        "contestId": 681,
        "index": "E",
        "solvedCount": 407
      },
      {
        "contestId": 681,
        "index": "D",
        "solvedCount": 1627
      },
      {
        "contestId": 681,
        "index": "C",
        "solvedCount": 6037
      },
      {
        "contestId": 681,
        "index": "B",
        "solvedCount": 7488
      },
      {
        "contestId": 681,
        "index": "A",
        "solvedCount": 13282
      },
      {
        "contestId": 680,
        "index": "B",
        "solvedCount": 20163
      },
      {
        "contestId": 680,
        "index": "A",
        "solvedCount": 10765
      },
      {
        "contestId": 679,
        "index": "E",
        "solvedCount": 564
      },
      {
        "contestId": 679,
        "index": "D",
        "solvedCount": 282
      },
      {
        "contestId": 679,
        "index": "C",
        "solvedCount": 811
      },
      {
        "contestId": 679,
        "index": "B",
        "solvedCount": 1338
      },
      {
        "contestId": 679,
        "index": "A",
        "solvedCount": 5274
      },
      {
        "contestId": 678,
        "index": "F",
        "solvedCount": 24
      },
      {
        "contestId": 678,
        "index": "E",
        "solvedCount": 179
      },
      {
        "contestId": 678,
        "index": "D",
        "solvedCount": 908
      },
      {
        "contestId": 678,
        "index": "C",
        "solvedCount": 1414
      },
      {
        "contestId": 678,
        "index": "B",
        "solvedCount": 1522
      },
      {
        "contestId": 678,
        "index": "A",
        "solvedCount": 2970
      },
      {
        "contestId": 677,
        "index": "E",
        "solvedCount": 530
      },
      {
        "contestId": 677,
        "index": "D",
        "solvedCount": 1399
      },
      {
        "contestId": 677,
        "index": "C",
        "solvedCount": 5456
      },
      {
        "contestId": 677,
        "index": "B",
        "solvedCount": 6674
      },
      {
        "contestId": 677,
        "index": "A",
        "solvedCount": 103702
      },
      {
        "contestId": 676,
        "index": "E",
        "solvedCount": 842
      },
      {
        "contestId": 676,
        "index": "D",
        "solvedCount": 1685
      },
      {
        "contestId": 676,
        "index": "C",
        "solvedCount": 14477
      },
      {
        "contestId": 676,
        "index": "B",
        "solvedCount": 5143
      },
      {
        "contestId": 676,
        "index": "A",
        "solvedCount": 12093
      },
      {
        "contestId": 675,
        "index": "E",
        "solvedCount": 2170
      },
      {
        "contestId": 675,
        "index": "D",
        "solvedCount": 3178
      },
      {
        "contestId": 675,
        "index": "C",
        "solvedCount": 3217
      },
      {
        "contestId": 675,
        "index": "B",
        "solvedCount": 6768
      },
      {
        "contestId": 675,
        "index": "A",
        "solvedCount": 12619
      },
      {
        "contestId": 673,
        "index": "B",
        "solvedCount": 3277
      },
      {
        "contestId": 673,
        "index": "A",
        "solvedCount": 8365
      },
      {
        "contestId": 672,
        "index": "B",
        "solvedCount": 13990
      },
      {
        "contestId": 672,
        "index": "A",
        "solvedCount": 13164
      },
      {
        "contestId": 671,
        "index": "E",
        "solvedCount": 322
      },
      {
        "contestId": 671,
        "index": "D",
        "solvedCount": 953
      },
      {
        "contestId": 671,
        "index": "C",
        "solvedCount": 555
      },
      {
        "contestId": 671,
        "index": "B",
        "solvedCount": 1718
      },
      {
        "contestId": 671,
        "index": "A",
        "solvedCount": 2000
      },
      {
        "contestId": 670,
        "index": "F",
        "solvedCount": 804
      },
      {
        "contestId": 670,
        "index": "E",
        "solvedCount": 2790
      },
      {
        "contestId": 670,
        "index": "D2",
        "solvedCount": 9404
      },
      {
        "contestId": 670,
        "index": "D1",
        "solvedCount": 11749
      },
      {
        "contestId": 670,
        "index": "C",
        "solvedCount": 8109
      },
      {
        "contestId": 670,
        "index": "B",
        "solvedCount": 9595
      },
      {
        "contestId": 670,
        "index": "A",
        "solvedCount": 13782
      },
      {
        "contestId": 669,
        "index": "A",
        "solvedCount": 9046
      },
      {
        "contestId": 667,
        "index": "B",
        "solvedCount": 4904
      },
      {
        "contestId": 667,
        "index": "A",
        "solvedCount": 6925
      },
      {
        "contestId": 666,
        "index": "E",
        "solvedCount": 1125
      },
      {
        "contestId": 666,
        "index": "D",
        "solvedCount": 224
      },
      {
        "contestId": 666,
        "index": "C",
        "solvedCount": 697
      },
      {
        "contestId": 666,
        "index": "B",
        "solvedCount": 1393
      },
      {
        "contestId": 666,
        "index": "A",
        "solvedCount": 1564
      },
      {
        "contestId": 665,
        "index": "F",
        "solvedCount": 27
      },
      {
        "contestId": 665,
        "index": "E",
        "solvedCount": 180
      },
      {
        "contestId": 665,
        "index": "D",
        "solvedCount": 442
      },
      {
        "contestId": 665,
        "index": "C",
        "solvedCount": 1330
      },
      {
        "contestId": 665,
        "index": "B",
        "solvedCount": 1117
      },
      {
        "contestId": 665,
        "index": "A",
        "solvedCount": 820
      },
      {
        "contestId": 664,
        "index": "A",
        "solvedCount": 12947
      },
      {
        "contestId": 663,
        "index": "A",
        "solvedCount": 1266
      },
      {
        "contestId": 662,
        "index": "E",
        "solvedCount": 62
      },
      {
        "contestId": 662,
        "index": "D",
        "solvedCount": 284
      },
      {
        "contestId": 662,
        "index": "C",
        "solvedCount": 1390
      },
      {
        "contestId": 662,
        "index": "B",
        "solvedCount": 431
      },
      {
        "contestId": 662,
        "index": "A",
        "solvedCount": 337
      },
      {
        "contestId": 661,
        "index": "H",
        "solvedCount": 8
      },
      {
        "contestId": 661,
        "index": "G",
        "solvedCount": 8
      },
      {
        "contestId": 661,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 661,
        "index": "E",
        "solvedCount": 18
      },
      {
        "contestId": 661,
        "index": "D",
        "solvedCount": 25
      },
      {
        "contestId": 661,
        "index": "C",
        "solvedCount": 25
      },
      {
        "contestId": 661,
        "index": "B",
        "solvedCount": 37
      },
      {
        "contestId": 661,
        "index": "A",
        "solvedCount": 78
      },
      {
        "contestId": 660,
        "index": "F",
        "solvedCount": 48
      },
      {
        "contestId": 660,
        "index": "E",
        "solvedCount": 114
      },
      {
        "contestId": 660,
        "index": "D",
        "solvedCount": 615
      },
      {
        "contestId": 660,
        "index": "C",
        "solvedCount": 1039
      },
      {
        "contestId": 660,
        "index": "B",
        "solvedCount": 1883
      },
      {
        "contestId": 660,
        "index": "A",
        "solvedCount": 1742
      },
      {
        "contestId": 659,
        "index": "G",
        "solvedCount": 876
      },
      {
        "contestId": 659,
        "index": "F",
        "solvedCount": 1577
      },
      {
        "contestId": 659,
        "index": "E",
        "solvedCount": 6314
      },
      {
        "contestId": 659,
        "index": "D",
        "solvedCount": 5497
      },
      {
        "contestId": 659,
        "index": "C",
        "solvedCount": 9993
      },
      {
        "contestId": 659,
        "index": "B",
        "solvedCount": 5724
      },
      {
        "contestId": 659,
        "index": "A",
        "solvedCount": 13664
      },
      {
        "contestId": 658,
        "index": "A",
        "solvedCount": 6398
      },
      {
        "contestId": 656,
        "index": "G",
        "solvedCount": 201
      },
      {
        "contestId": 656,
        "index": "F",
        "solvedCount": 147
      },
      {
        "contestId": 656,
        "index": "E",
        "solvedCount": 352
      },
      {
        "contestId": 656,
        "index": "D",
        "solvedCount": 139
      },
      {
        "contestId": 656,
        "index": "C",
        "solvedCount": 270
      },
      {
        "contestId": 656,
        "index": "B",
        "solvedCount": 923
      },
      {
        "contestId": 656,
        "index": "A",
        "solvedCount": 450
      },
      {
        "contestId": 653,
        "index": "G",
        "solvedCount": 391
      },
      {
        "contestId": 653,
        "index": "F",
        "solvedCount": 820
      },
      {
        "contestId": 653,
        "index": "E",
        "solvedCount": 1234
      },
      {
        "contestId": 653,
        "index": "D",
        "solvedCount": 1815
      },
      {
        "contestId": 653,
        "index": "C",
        "solvedCount": 1526
      },
      {
        "contestId": 653,
        "index": "B",
        "solvedCount": 4349
      },
      {
        "contestId": 653,
        "index": "A",
        "solvedCount": 6631
      },
      {
        "contestId": 652,
        "index": "F",
        "solvedCount": 15
      },
      {
        "contestId": 652,
        "index": "E",
        "solvedCount": 115
      },
      {
        "contestId": 652,
        "index": "D",
        "solvedCount": 569
      },
      {
        "contestId": 652,
        "index": "C",
        "solvedCount": 724
      },
      {
        "contestId": 652,
        "index": "B",
        "solvedCount": 2193
      },
      {
        "contestId": 652,
        "index": "A",
        "solvedCount": 1584
      },
      {
        "contestId": 651,
        "index": "B",
        "solvedCount": 9823
      },
      {
        "contestId": 651,
        "index": "A",
        "solvedCount": 19612
      },
      {
        "contestId": 650,
        "index": "E",
        "solvedCount": 526
      },
      {
        "contestId": 650,
        "index": "D",
        "solvedCount": 1084
      },
      {
        "contestId": 650,
        "index": "C",
        "solvedCount": 1369
      },
      {
        "contestId": 650,
        "index": "B",
        "solvedCount": 1784
      },
      {
        "contestId": 650,
        "index": "A",
        "solvedCount": 6535
      },
      {
        "contestId": 645,
        "index": "G",
        "solvedCount": 89
      },
      {
        "contestId": 645,
        "index": "F",
        "solvedCount": 516
      },
      {
        "contestId": 645,
        "index": "E",
        "solvedCount": 860
      },
      {
        "contestId": 645,
        "index": "D",
        "solvedCount": 1821
      },
      {
        "contestId": 645,
        "index": "C",
        "solvedCount": 1838
      },
      {
        "contestId": 645,
        "index": "B",
        "solvedCount": 1906
      },
      {
        "contestId": 645,
        "index": "A",
        "solvedCount": 1973
      },
      {
        "contestId": 644,
        "index": "C",
        "solvedCount": 847
      },
      {
        "contestId": 644,
        "index": "B",
        "solvedCount": 2371
      },
      {
        "contestId": 644,
        "index": "A",
        "solvedCount": 4091
      },
      {
        "contestId": 643,
        "index": "G",
        "solvedCount": 633
      },
      {
        "contestId": 643,
        "index": "F",
        "solvedCount": 407
      },
      {
        "contestId": 643,
        "index": "E",
        "solvedCount": 357
      },
      {
        "contestId": 643,
        "index": "D",
        "solvedCount": 190
      },
      {
        "contestId": 643,
        "index": "C",
        "solvedCount": 414
      },
      {
        "contestId": 643,
        "index": "B",
        "solvedCount": 738
      },
      {
        "contestId": 643,
        "index": "A",
        "solvedCount": 806
      },
      {
        "contestId": 641,
        "index": "G",
        "solvedCount": 44
      },
      {
        "contestId": 641,
        "index": "F",
        "solvedCount": 98
      },
      {
        "contestId": 641,
        "index": "E",
        "solvedCount": 1027
      },
      {
        "contestId": 641,
        "index": "D",
        "solvedCount": 439
      },
      {
        "contestId": 641,
        "index": "C",
        "solvedCount": 862
      },
      {
        "contestId": 641,
        "index": "B",
        "solvedCount": 867
      },
      {
        "contestId": 641,
        "index": "A",
        "solvedCount": 1774
      },
      {
        "contestId": 639,
        "index": "F",
        "solvedCount": 316
      },
      {
        "contestId": 639,
        "index": "E",
        "solvedCount": 388
      },
      {
        "contestId": 639,
        "index": "D",
        "solvedCount": 367
      },
      {
        "contestId": 639,
        "index": "C",
        "solvedCount": 471
      },
      {
        "contestId": 639,
        "index": "B",
        "solvedCount": 3406
      },
      {
        "contestId": 639,
        "index": "A",
        "solvedCount": 1996
      },
      {
        "contestId": 638,
        "index": "D",
        "solvedCount": 460
      },
      {
        "contestId": 638,
        "index": "C",
        "solvedCount": 1033
      },
      {
        "contestId": 638,
        "index": "B",
        "solvedCount": 1338
      },
      {
        "contestId": 638,
        "index": "A",
        "solvedCount": 2713
      },
      {
        "contestId": 637,
        "index": "D",
        "solvedCount": 1407
      },
      {
        "contestId": 637,
        "index": "C",
        "solvedCount": 1652
      },
      {
        "contestId": 637,
        "index": "B",
        "solvedCount": 7941
      },
      {
        "contestId": 637,
        "index": "A",
        "solvedCount": 3831
      },
      {
        "contestId": 635,
        "index": "A",
        "solvedCount": 2440
      },
      {
        "contestId": 634,
        "index": "A",
        "solvedCount": 1153
      },
      {
        "contestId": 633,
        "index": "H",
        "solvedCount": 496
      },
      {
        "contestId": 633,
        "index": "G",
        "solvedCount": 577
      },
      {
        "contestId": 633,
        "index": "F",
        "solvedCount": 734
      },
      {
        "contestId": 633,
        "index": "E",
        "solvedCount": 540
      },
      {
        "contestId": 633,
        "index": "D",
        "solvedCount": 2335
      },
      {
        "contestId": 633,
        "index": "C",
        "solvedCount": 2226
      },
      {
        "contestId": 633,
        "index": "B",
        "solvedCount": 5717
      },
      {
        "contestId": 633,
        "index": "A",
        "solvedCount": 10311
      },
      {
        "contestId": 632,
        "index": "F",
        "solvedCount": 45
      },
      {
        "contestId": 632,
        "index": "E",
        "solvedCount": 81
      },
      {
        "contestId": 632,
        "index": "D",
        "solvedCount": 338
      },
      {
        "contestId": 632,
        "index": "C",
        "solvedCount": 834
      },
      {
        "contestId": 632,
        "index": "B",
        "solvedCount": 1361
      },
      {
        "contestId": 632,
        "index": "A",
        "solvedCount": 1656
      },
      {
        "contestId": 631,
        "index": "E",
        "solvedCount": 1767
      },
      {
        "contestId": 631,
        "index": "D",
        "solvedCount": 1705
      },
      {
        "contestId": 631,
        "index": "C",
        "solvedCount": 3357
      },
      {
        "contestId": 631,
        "index": "B",
        "solvedCount": 6491
      },
      {
        "contestId": 631,
        "index": "A",
        "solvedCount": 7907
      },
      {
        "contestId": 630,
        "index": "R",
        "solvedCount": 2032
      },
      {
        "contestId": 630,
        "index": "Q",
        "solvedCount": 308
      },
      {
        "contestId": 630,
        "index": "P",
        "solvedCount": 114
      },
      {
        "contestId": 630,
        "index": "O",
        "solvedCount": 146
      },
      {
        "contestId": 630,
        "index": "N",
        "solvedCount": 1383
      },
      {
        "contestId": 630,
        "index": "M",
        "solvedCount": 338
      },
      {
        "contestId": 630,
        "index": "L",
        "solvedCount": 940
      },
      {
        "contestId": 630,
        "index": "K",
        "solvedCount": 1021
      },
      {
        "contestId": 630,
        "index": "J",
        "solvedCount": 2199
      },
      {
        "contestId": 630,
        "index": "I",
        "solvedCount": 490
      },
      {
        "contestId": 630,
        "index": "H",
        "solvedCount": 986
      },
      {
        "contestId": 630,
        "index": "G",
        "solvedCount": 646
      },
      {
        "contestId": 630,
        "index": "F",
        "solvedCount": 1470
      },
      {
        "contestId": 630,
        "index": "E",
        "solvedCount": 488
      },
      {
        "contestId": 630,
        "index": "D",
        "solvedCount": 2281
      },
      {
        "contestId": 630,
        "index": "C",
        "solvedCount": 2545
      },
      {
        "contestId": 630,
        "index": "B",
        "solvedCount": 1892
      },
      {
        "contestId": 630,
        "index": "A",
        "solvedCount": 3181
      },
      {
        "contestId": 629,
        "index": "E",
        "solvedCount": 864
      },
      {
        "contestId": 629,
        "index": "D",
        "solvedCount": 3199
      },
      {
        "contestId": 629,
        "index": "C",
        "solvedCount": 2471
      },
      {
        "contestId": 629,
        "index": "B",
        "solvedCount": 6731
      },
      {
        "contestId": 629,
        "index": "A",
        "solvedCount": 11066
      },
      {
        "contestId": 628,
        "index": "F",
        "solvedCount": 39
      },
      {
        "contestId": 628,
        "index": "E",
        "solvedCount": 80
      },
      {
        "contestId": 628,
        "index": "D",
        "solvedCount": 251
      },
      {
        "contestId": 628,
        "index": "C",
        "solvedCount": 1702
      },
      {
        "contestId": 628,
        "index": "B",
        "solvedCount": 1886
      },
      {
        "contestId": 628,
        "index": "A",
        "solvedCount": 2337
      },
      {
        "contestId": 627,
        "index": "F",
        "solvedCount": 196
      },
      {
        "contestId": 627,
        "index": "E",
        "solvedCount": 380
      },
      {
        "contestId": 627,
        "index": "D",
        "solvedCount": 533
      },
      {
        "contestId": 627,
        "index": "C",
        "solvedCount": 524
      },
      {
        "contestId": 627,
        "index": "B",
        "solvedCount": 753
      },
      {
        "contestId": 627,
        "index": "A",
        "solvedCount": 2149
      },
      {
        "contestId": 626,
        "index": "G",
        "solvedCount": 479
      },
      {
        "contestId": 626,
        "index": "F",
        "solvedCount": 2187
      },
      {
        "contestId": 626,
        "index": "E",
        "solvedCount": 1159
      },
      {
        "contestId": 626,
        "index": "D",
        "solvedCount": 2464
      },
      {
        "contestId": 626,
        "index": "C",
        "solvedCount": 3989
      },
      {
        "contestId": 626,
        "index": "B",
        "solvedCount": 6028
      },
      {
        "contestId": 626,
        "index": "A",
        "solvedCount": 5521
      },
      {
        "contestId": 625,
        "index": "E",
        "solvedCount": 227
      },
      {
        "contestId": 625,
        "index": "D",
        "solvedCount": 574
      },
      {
        "contestId": 625,
        "index": "C",
        "solvedCount": 6149
      },
      {
        "contestId": 625,
        "index": "B",
        "solvedCount": 8566
      },
      {
        "contestId": 625,
        "index": "A",
        "solvedCount": 5001
      },
      {
        "contestId": 624,
        "index": "B",
        "solvedCount": 6645
      },
      {
        "contestId": 624,
        "index": "A",
        "solvedCount": 8528
      },
      {
        "contestId": 623,
        "index": "E",
        "solvedCount": 476
      },
      {
        "contestId": 623,
        "index": "D",
        "solvedCount": 424
      },
      {
        "contestId": 623,
        "index": "C",
        "solvedCount": 375
      },
      {
        "contestId": 623,
        "index": "B",
        "solvedCount": 1523
      },
      {
        "contestId": 623,
        "index": "A",
        "solvedCount": 2142
      },
      {
        "contestId": 622,
        "index": "F",
        "solvedCount": 44
      },
      {
        "contestId": 622,
        "index": "E",
        "solvedCount": 218
      },
      {
        "contestId": 622,
        "index": "D",
        "solvedCount": 691
      },
      {
        "contestId": 622,
        "index": "C",
        "solvedCount": 1105
      },
      {
        "contestId": 622,
        "index": "B",
        "solvedCount": 2805
      },
      {
        "contestId": 622,
        "index": "A",
        "solvedCount": 2781
      },
      {
        "contestId": 621,
        "index": "E",
        "solvedCount": 2291
      },
      {
        "contestId": 621,
        "index": "D",
        "solvedCount": 927
      },
      {
        "contestId": 621,
        "index": "C",
        "solvedCount": 4642
      },
      {
        "contestId": 621,
        "index": "B",
        "solvedCount": 9361
      },
      {
        "contestId": 621,
        "index": "A",
        "solvedCount": 16188
      },
      {
        "contestId": 620,
        "index": "F",
        "solvedCount": 23
      },
      {
        "contestId": 620,
        "index": "E",
        "solvedCount": 277
      },
      {
        "contestId": 620,
        "index": "D",
        "solvedCount": 208
      },
      {
        "contestId": 620,
        "index": "C",
        "solvedCount": 1600
      },
      {
        "contestId": 620,
        "index": "B",
        "solvedCount": 2969
      },
      {
        "contestId": 620,
        "index": "A",
        "solvedCount": 3287
      },
      {
        "contestId": 618,
        "index": "G",
        "solvedCount": 195
      },
      {
        "contestId": 618,
        "index": "F",
        "solvedCount": 1013
      },
      {
        "contestId": 618,
        "index": "E",
        "solvedCount": 531
      },
      {
        "contestId": 618,
        "index": "D",
        "solvedCount": 1551
      },
      {
        "contestId": 618,
        "index": "C",
        "solvedCount": 3615
      },
      {
        "contestId": 618,
        "index": "B",
        "solvedCount": 6400
      },
      {
        "contestId": 618,
        "index": "A",
        "solvedCount": 7277
      },
      {
        "contestId": 617,
        "index": "E",
        "solvedCount": 6178
      },
      {
        "contestId": 617,
        "index": "D",
        "solvedCount": 3904
      },
      {
        "contestId": 617,
        "index": "C",
        "solvedCount": 4491
      },
      {
        "contestId": 617,
        "index": "B",
        "solvedCount": 14691
      },
      {
        "contestId": 617,
        "index": "A",
        "solvedCount": 128881
      },
      {
        "contestId": 616,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 616,
        "index": "E",
        "solvedCount": 212
      },
      {
        "contestId": 616,
        "index": "D",
        "solvedCount": 1033
      },
      {
        "contestId": 616,
        "index": "C",
        "solvedCount": 1143
      },
      {
        "contestId": 616,
        "index": "B",
        "solvedCount": 2632
      },
      {
        "contestId": 616,
        "index": "A",
        "solvedCount": 2134
      },
      {
        "contestId": 615,
        "index": "E",
        "solvedCount": 910
      },
      {
        "contestId": 615,
        "index": "D",
        "solvedCount": 3251
      },
      {
        "contestId": 615,
        "index": "C",
        "solvedCount": 2076
      },
      {
        "contestId": 615,
        "index": "B",
        "solvedCount": 4238
      },
      {
        "contestId": 615,
        "index": "A",
        "solvedCount": 14798
      },
      {
        "contestId": 614,
        "index": "B",
        "solvedCount": 6246
      },
      {
        "contestId": 614,
        "index": "A",
        "solvedCount": 6912
      },
      {
        "contestId": 613,
        "index": "E",
        "solvedCount": 422
      },
      {
        "contestId": 613,
        "index": "D",
        "solvedCount": 2095
      },
      {
        "contestId": 613,
        "index": "C",
        "solvedCount": 737
      },
      {
        "contestId": 613,
        "index": "B",
        "solvedCount": 1393
      },
      {
        "contestId": 613,
        "index": "A",
        "solvedCount": 1532
      },
      {
        "contestId": 612,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 612,
        "index": "E",
        "solvedCount": 165
      },
      {
        "contestId": 612,
        "index": "D",
        "solvedCount": 659
      },
      {
        "contestId": 612,
        "index": "C",
        "solvedCount": 1563
      },
      {
        "contestId": 612,
        "index": "B",
        "solvedCount": 2218
      },
      {
        "contestId": 612,
        "index": "A",
        "solvedCount": 1953
      },
      {
        "contestId": 611,
        "index": "H",
        "solvedCount": 489
      },
      {
        "contestId": 611,
        "index": "G",
        "solvedCount": 399
      },
      {
        "contestId": 611,
        "index": "F",
        "solvedCount": 418
      },
      {
        "contestId": 611,
        "index": "E",
        "solvedCount": 802
      },
      {
        "contestId": 611,
        "index": "D",
        "solvedCount": 2313
      },
      {
        "contestId": 611,
        "index": "C",
        "solvedCount": 7461
      },
      {
        "contestId": 611,
        "index": "B",
        "solvedCount": 7796
      },
      {
        "contestId": 611,
        "index": "A",
        "solvedCount": 10456
      },
      {
        "contestId": 610,
        "index": "E",
        "solvedCount": 677
      },
      {
        "contestId": 610,
        "index": "D",
        "solvedCount": 1069
      },
      {
        "contestId": 610,
        "index": "C",
        "solvedCount": 2657
      },
      {
        "contestId": 610,
        "index": "B",
        "solvedCount": 6386
      },
      {
        "contestId": 610,
        "index": "A",
        "solvedCount": 17260
      },
      {
        "contestId": 609,
        "index": "F",
        "solvedCount": 33
      },
      {
        "contestId": 609,
        "index": "E",
        "solvedCount": 246
      },
      {
        "contestId": 609,
        "index": "D",
        "solvedCount": 455
      },
      {
        "contestId": 609,
        "index": "C",
        "solvedCount": 1601
      },
      {
        "contestId": 609,
        "index": "B",
        "solvedCount": 2636
      },
      {
        "contestId": 609,
        "index": "A",
        "solvedCount": 3066
      },
      {
        "contestId": 608,
        "index": "B",
        "solvedCount": 5818
      },
      {
        "contestId": 608,
        "index": "A",
        "solvedCount": 7996
      },
      {
        "contestId": 607,
        "index": "E",
        "solvedCount": 233
      },
      {
        "contestId": 607,
        "index": "D",
        "solvedCount": 487
      },
      {
        "contestId": 607,
        "index": "C",
        "solvedCount": 581
      },
      {
        "contestId": 607,
        "index": "B",
        "solvedCount": 7312
      },
      {
        "contestId": 607,
        "index": "A",
        "solvedCount": 5334
      },
      {
        "contestId": 606,
        "index": "B",
        "solvedCount": 2611
      },
      {
        "contestId": 606,
        "index": "A",
        "solvedCount": 6931
      },
      {
        "contestId": 605,
        "index": "E",
        "solvedCount": 1156
      },
      {
        "contestId": 605,
        "index": "D",
        "solvedCount": 714
      },
      {
        "contestId": 605,
        "index": "C",
        "solvedCount": 799
      },
      {
        "contestId": 605,
        "index": "B",
        "solvedCount": 1922
      },
      {
        "contestId": 605,
        "index": "A",
        "solvedCount": 3474
      },
      {
        "contestId": 604,
        "index": "B",
        "solvedCount": 7116
      },
      {
        "contestId": 604,
        "index": "A",
        "solvedCount": 7904
      },
      {
        "contestId": 603,
        "index": "E",
        "solvedCount": 935
      },
      {
        "contestId": 603,
        "index": "D",
        "solvedCount": 308
      },
      {
        "contestId": 603,
        "index": "C",
        "solvedCount": 1373
      },
      {
        "contestId": 603,
        "index": "B",
        "solvedCount": 1530
      },
      {
        "contestId": 603,
        "index": "A",
        "solvedCount": 3870
      },
      {
        "contestId": 602,
        "index": "B",
        "solvedCount": 8919
      },
      {
        "contestId": 602,
        "index": "A",
        "solvedCount": 7393
      },
      {
        "contestId": 601,
        "index": "E",
        "solvedCount": 687
      },
      {
        "contestId": 601,
        "index": "D",
        "solvedCount": 949
      },
      {
        "contestId": 601,
        "index": "C",
        "solvedCount": 1076
      },
      {
        "contestId": 601,
        "index": "B",
        "solvedCount": 1340
      },
      {
        "contestId": 601,
        "index": "A",
        "solvedCount": 6207
      },
      {
        "contestId": 600,
        "index": "F",
        "solvedCount": 2
      },
      {
        "contestId": 600,
        "index": "E",
        "solvedCount": 130
      },
      {
        "contestId": 600,
        "index": "D",
        "solvedCount": 103
      },
      {
        "contestId": 600,
        "index": "C",
        "solvedCount": 940
      },
      {
        "contestId": 600,
        "index": "B",
        "solvedCount": 2041
      },
      {
        "contestId": 600,
        "index": "A",
        "solvedCount": 1342
      },
      {
        "contestId": 599,
        "index": "E",
        "solvedCount": 553
      },
      {
        "contestId": 599,
        "index": "D",
        "solvedCount": 2400
      },
      {
        "contestId": 599,
        "index": "C",
        "solvedCount": 4227
      },
      {
        "contestId": 599,
        "index": "B",
        "solvedCount": 4086
      },
      {
        "contestId": 599,
        "index": "A",
        "solvedCount": 24000
      },
      {
        "contestId": 598,
        "index": "F",
        "solvedCount": 6
      },
      {
        "contestId": 598,
        "index": "E",
        "solvedCount": 415
      },
      {
        "contestId": 598,
        "index": "D",
        "solvedCount": 1323
      },
      {
        "contestId": 598,
        "index": "C",
        "solvedCount": 267
      },
      {
        "contestId": 598,
        "index": "B",
        "solvedCount": 2732
      },
      {
        "contestId": 598,
        "index": "A",
        "solvedCount": 3806
      },
      {
        "contestId": 597,
        "index": "C",
        "solvedCount": 3334
      },
      {
        "contestId": 597,
        "index": "B",
        "solvedCount": 3587
      },
      {
        "contestId": 597,
        "index": "A",
        "solvedCount": 3555
      },
      {
        "contestId": 596,
        "index": "E",
        "solvedCount": 348
      },
      {
        "contestId": 596,
        "index": "D",
        "solvedCount": 639
      },
      {
        "contestId": 596,
        "index": "C",
        "solvedCount": 2177
      },
      {
        "contestId": 596,
        "index": "B",
        "solvedCount": 8870
      },
      {
        "contestId": 596,
        "index": "A",
        "solvedCount": 6404
      },
      {
        "contestId": 595,
        "index": "B",
        "solvedCount": 2770
      },
      {
        "contestId": 595,
        "index": "A",
        "solvedCount": 12511
      },
      {
        "contestId": 594,
        "index": "E",
        "solvedCount": 139
      },
      {
        "contestId": 594,
        "index": "D",
        "solvedCount": 1232
      },
      {
        "contestId": 594,
        "index": "C",
        "solvedCount": 546
      },
      {
        "contestId": 594,
        "index": "B",
        "solvedCount": 306
      },
      {
        "contestId": 594,
        "index": "A",
        "solvedCount": 992
      },
      {
        "contestId": 593,
        "index": "E",
        "solvedCount": 373
      },
      {
        "contestId": 593,
        "index": "D",
        "solvedCount": 1041
      },
      {
        "contestId": 593,
        "index": "C",
        "solvedCount": 252
      },
      {
        "contestId": 593,
        "index": "B",
        "solvedCount": 3516
      },
      {
        "contestId": 593,
        "index": "A",
        "solvedCount": 5192
      },
      {
        "contestId": 592,
        "index": "E",
        "solvedCount": 195
      },
      {
        "contestId": 592,
        "index": "D",
        "solvedCount": 2045
      },
      {
        "contestId": 592,
        "index": "C",
        "solvedCount": 2904
      },
      {
        "contestId": 592,
        "index": "B",
        "solvedCount": 7607
      },
      {
        "contestId": 592,
        "index": "A",
        "solvedCount": 5649
      },
      {
        "contestId": 591,
        "index": "B",
        "solvedCount": 7090
      },
      {
        "contestId": 591,
        "index": "A",
        "solvedCount": 11848
      },
      {
        "contestId": 590,
        "index": "E",
        "solvedCount": 656
      },
      {
        "contestId": 590,
        "index": "D",
        "solvedCount": 1038
      },
      {
        "contestId": 590,
        "index": "C",
        "solvedCount": 1835
      },
      {
        "contestId": 590,
        "index": "B",
        "solvedCount": 1028
      },
      {
        "contestId": 590,
        "index": "A",
        "solvedCount": 1519
      },
      {
        "contestId": 588,
        "index": "B",
        "solvedCount": 12138
      },
      {
        "contestId": 588,
        "index": "A",
        "solvedCount": 19438
      },
      {
        "contestId": 587,
        "index": "F",
        "solvedCount": 765
      },
      {
        "contestId": 587,
        "index": "E",
        "solvedCount": 600
      },
      {
        "contestId": 587,
        "index": "D",
        "solvedCount": 574
      },
      {
        "contestId": 587,
        "index": "C",
        "solvedCount": 2285
      },
      {
        "contestId": 587,
        "index": "B",
        "solvedCount": 978
      },
      {
        "contestId": 587,
        "index": "A",
        "solvedCount": 3004
      },
      {
        "contestId": 586,
        "index": "B",
        "solvedCount": 4933
      },
      {
        "contestId": 586,
        "index": "A",
        "solvedCount": 8643
      },
      {
        "contestId": 585,
        "index": "F",
        "solvedCount": 546
      },
      {
        "contestId": 585,
        "index": "E",
        "solvedCount": 828
      },
      {
        "contestId": 585,
        "index": "D",
        "solvedCount": 1110
      },
      {
        "contestId": 585,
        "index": "C",
        "solvedCount": 634
      },
      {
        "contestId": 585,
        "index": "B",
        "solvedCount": 1698
      },
      {
        "contestId": 585,
        "index": "A",
        "solvedCount": 1629
      },
      {
        "contestId": 584,
        "index": "E",
        "solvedCount": 1315
      },
      {
        "contestId": 584,
        "index": "D",
        "solvedCount": 7589
      },
      {
        "contestId": 584,
        "index": "C",
        "solvedCount": 5709
      },
      {
        "contestId": 584,
        "index": "B",
        "solvedCount": 9467
      },
      {
        "contestId": 584,
        "index": "A",
        "solvedCount": 35992
      },
      {
        "contestId": 583,
        "index": "B",
        "solvedCount": 7768
      },
      {
        "contestId": 583,
        "index": "A",
        "solvedCount": 10179
      },
      {
        "contestId": 582,
        "index": "E",
        "solvedCount": 420
      },
      {
        "contestId": 582,
        "index": "D",
        "solvedCount": 491
      },
      {
        "contestId": 582,
        "index": "C",
        "solvedCount": 605
      },
      {
        "contestId": 582,
        "index": "B",
        "solvedCount": 1982
      },
      {
        "contestId": 582,
        "index": "A",
        "solvedCount": 3767
      },
      {
        "contestId": 581,
        "index": "F",
        "solvedCount": 730
      },
      {
        "contestId": 581,
        "index": "E",
        "solvedCount": 159
      },
      {
        "contestId": 581,
        "index": "D",
        "solvedCount": 2886
      },
      {
        "contestId": 581,
        "index": "C",
        "solvedCount": 6673
      },
      {
        "contestId": 581,
        "index": "B",
        "solvedCount": 11067
      },
      {
        "contestId": 581,
        "index": "A",
        "solvedCount": 52945
      },
      {
        "contestId": 580,
        "index": "E",
        "solvedCount": 1663
      },
      {
        "contestId": 580,
        "index": "D",
        "solvedCount": 7418
      },
      {
        "contestId": 580,
        "index": "C",
        "solvedCount": 31833
      },
      {
        "contestId": 580,
        "index": "B",
        "solvedCount": 19715
      },
      {
        "contestId": 580,
        "index": "A",
        "solvedCount": 70180
      },
      {
        "contestId": 579,
        "index": "B",
        "solvedCount": 4883
      },
      {
        "contestId": 579,
        "index": "A",
        "solvedCount": 42804
      },
      {
        "contestId": 578,
        "index": "F",
        "solvedCount": 447
      },
      {
        "contestId": 578,
        "index": "E",
        "solvedCount": 558
      },
      {
        "contestId": 578,
        "index": "D",
        "solvedCount": 646
      },
      {
        "contestId": 578,
        "index": "C",
        "solvedCount": 3158
      },
      {
        "contestId": 578,
        "index": "B",
        "solvedCount": 3170
      },
      {
        "contestId": 578,
        "index": "A",
        "solvedCount": 2591
      },
      {
        "contestId": 577,
        "index": "B",
        "solvedCount": 9329
      },
      {
        "contestId": 577,
        "index": "A",
        "solvedCount": 30386
      },
      {
        "contestId": 576,
        "index": "E",
        "solvedCount": 890
      },
      {
        "contestId": 576,
        "index": "D",
        "solvedCount": 1102
      },
      {
        "contestId": 576,
        "index": "C",
        "solvedCount": 2225
      },
      {
        "contestId": 576,
        "index": "B",
        "solvedCount": 1198
      },
      {
        "contestId": 576,
        "index": "A",
        "solvedCount": 6320
      },
      {
        "contestId": 575,
        "index": "I",
        "solvedCount": 10
      },
      {
        "contestId": 575,
        "index": "H",
        "solvedCount": 493
      },
      {
        "contestId": 575,
        "index": "G",
        "solvedCount": 132
      },
      {
        "contestId": 575,
        "index": "F",
        "solvedCount": 270
      },
      {
        "contestId": 575,
        "index": "E",
        "solvedCount": 10
      },
      {
        "contestId": 575,
        "index": "D",
        "solvedCount": 636
      },
      {
        "contestId": 575,
        "index": "C",
        "solvedCount": 31
      },
      {
        "contestId": 575,
        "index": "B",
        "solvedCount": 202
      },
      {
        "contestId": 575,
        "index": "A",
        "solvedCount": 38
      },
      {
        "contestId": 574,
        "index": "B",
        "solvedCount": 6899
      },
      {
        "contestId": 574,
        "index": "A",
        "solvedCount": 7895
      },
      {
        "contestId": 573,
        "index": "E",
        "solvedCount": 942
      },
      {
        "contestId": 573,
        "index": "D",
        "solvedCount": 357
      },
      {
        "contestId": 573,
        "index": "C",
        "solvedCount": 798
      },
      {
        "contestId": 573,
        "index": "B",
        "solvedCount": 3678
      },
      {
        "contestId": 573,
        "index": "A",
        "solvedCount": 10077
      },
      {
        "contestId": 572,
        "index": "B",
        "solvedCount": 5704
      },
      {
        "contestId": 572,
        "index": "A",
        "solvedCount": 13709
      },
      {
        "contestId": 571,
        "index": "E",
        "solvedCount": 229
      },
      {
        "contestId": 571,
        "index": "D",
        "solvedCount": 603
      },
      {
        "contestId": 571,
        "index": "C",
        "solvedCount": 517
      },
      {
        "contestId": 571,
        "index": "B",
        "solvedCount": 1994
      },
      {
        "contestId": 571,
        "index": "A",
        "solvedCount": 1346
      },
      {
        "contestId": 570,
        "index": "E",
        "solvedCount": 1628
      },
      {
        "contestId": 570,
        "index": "D",
        "solvedCount": 5541
      },
      {
        "contestId": 570,
        "index": "C",
        "solvedCount": 8112
      },
      {
        "contestId": 570,
        "index": "B",
        "solvedCount": 13922
      },
      {
        "contestId": 570,
        "index": "A",
        "solvedCount": 12514
      },
      {
        "contestId": 569,
        "index": "B",
        "solvedCount": 6345
      },
      {
        "contestId": 569,
        "index": "A",
        "solvedCount": 4401
      },
      {
        "contestId": 568,
        "index": "E",
        "solvedCount": 526
      },
      {
        "contestId": 568,
        "index": "D",
        "solvedCount": 261
      },
      {
        "contestId": 568,
        "index": "C",
        "solvedCount": 669
      },
      {
        "contestId": 568,
        "index": "B",
        "solvedCount": 1719
      },
      {
        "contestId": 568,
        "index": "A",
        "solvedCount": 2603
      },
      {
        "contestId": 567,
        "index": "F",
        "solvedCount": 509
      },
      {
        "contestId": 567,
        "index": "E",
        "solvedCount": 1426
      },
      {
        "contestId": 567,
        "index": "D",
        "solvedCount": 3827
      },
      {
        "contestId": 567,
        "index": "C",
        "solvedCount": 8385
      },
      {
        "contestId": 567,
        "index": "B",
        "solvedCount": 7328
      },
      {
        "contestId": 567,
        "index": "A",
        "solvedCount": 25345
      },
      {
        "contestId": 566,
        "index": "G",
        "solvedCount": 264
      },
      {
        "contestId": 566,
        "index": "F",
        "solvedCount": 2696
      },
      {
        "contestId": 566,
        "index": "E",
        "solvedCount": 499
      },
      {
        "contestId": 566,
        "index": "D",
        "solvedCount": 2185
      },
      {
        "contestId": 566,
        "index": "C",
        "solvedCount": 567
      },
      {
        "contestId": 566,
        "index": "B",
        "solvedCount": 199
      },
      {
        "contestId": 566,
        "index": "A",
        "solvedCount": 628
      },
      {
        "contestId": 560,
        "index": "B",
        "solvedCount": 6952
      },
      {
        "contestId": 560,
        "index": "A",
        "solvedCount": 14449
      },
      {
        "contestId": 559,
        "index": "E",
        "solvedCount": 756
      },
      {
        "contestId": 559,
        "index": "D",
        "solvedCount": 348
      },
      {
        "contestId": 559,
        "index": "C",
        "solvedCount": 4676
      },
      {
        "contestId": 559,
        "index": "B",
        "solvedCount": 6854
      },
      {
        "contestId": 559,
        "index": "A",
        "solvedCount": 5372
      },
      {
        "contestId": 558,
        "index": "E",
        "solvedCount": 4352
      },
      {
        "contestId": 558,
        "index": "D",
        "solvedCount": 1043
      },
      {
        "contestId": 558,
        "index": "C",
        "solvedCount": 3718
      },
      {
        "contestId": 558,
        "index": "B",
        "solvedCount": 6677
      },
      {
        "contestId": 558,
        "index": "A",
        "solvedCount": 8816
      },
      {
        "contestId": 557,
        "index": "E",
        "solvedCount": 977
      },
      {
        "contestId": 557,
        "index": "D",
        "solvedCount": 1981
      },
      {
        "contestId": 557,
        "index": "C",
        "solvedCount": 3728
      },
      {
        "contestId": 557,
        "index": "B",
        "solvedCount": 6667
      },
      {
        "contestId": 557,
        "index": "A",
        "solvedCount": 7502
      },
      {
        "contestId": 556,
        "index": "B",
        "solvedCount": 6896
      },
      {
        "contestId": 556,
        "index": "A",
        "solvedCount": 30633
      },
      {
        "contestId": 555,
        "index": "E",
        "solvedCount": 1767
      },
      {
        "contestId": 555,
        "index": "D",
        "solvedCount": 834
      },
      {
        "contestId": 555,
        "index": "C",
        "solvedCount": 1647
      },
      {
        "contestId": 555,
        "index": "B",
        "solvedCount": 2633
      },
      {
        "contestId": 555,
        "index": "A",
        "solvedCount": 3125
      },
      {
        "contestId": 554,
        "index": "B",
        "solvedCount": 7924
      },
      {
        "contestId": 554,
        "index": "A",
        "solvedCount": 10809
      },
      {
        "contestId": 553,
        "index": "E",
        "solvedCount": 475
      },
      {
        "contestId": 553,
        "index": "D",
        "solvedCount": 916
      },
      {
        "contestId": 553,
        "index": "C",
        "solvedCount": 1433
      },
      {
        "contestId": 553,
        "index": "B",
        "solvedCount": 1628
      },
      {
        "contestId": 553,
        "index": "A",
        "solvedCount": 5431
      },
      {
        "contestId": 552,
        "index": "E",
        "solvedCount": 1304
      },
      {
        "contestId": 552,
        "index": "D",
        "solvedCount": 3898
      },
      {
        "contestId": 552,
        "index": "C",
        "solvedCount": 4976
      },
      {
        "contestId": 552,
        "index": "B",
        "solvedCount": 13751
      },
      {
        "contestId": 552,
        "index": "A",
        "solvedCount": 8352
      },
      {
        "contestId": 551,
        "index": "E",
        "solvedCount": 1470
      },
      {
        "contestId": 551,
        "index": "D",
        "solvedCount": 1572
      },
      {
        "contestId": 551,
        "index": "C",
        "solvedCount": 3019
      },
      {
        "contestId": 551,
        "index": "B",
        "solvedCount": 3437
      },
      {
        "contestId": 551,
        "index": "A",
        "solvedCount": 14355
      },
      {
        "contestId": 550,
        "index": "E",
        "solvedCount": 1324
      },
      {
        "contestId": 550,
        "index": "D",
        "solvedCount": 2895
      },
      {
        "contestId": 550,
        "index": "C",
        "solvedCount": 22940
      },
      {
        "contestId": 550,
        "index": "B",
        "solvedCount": 14710
      },
      {
        "contestId": 550,
        "index": "A",
        "solvedCount": 30889
      },
      {
        "contestId": 549,
        "index": "H",
        "solvedCount": 1673
      },
      {
        "contestId": 549,
        "index": "G",
        "solvedCount": 2149
      },
      {
        "contestId": 549,
        "index": "F",
        "solvedCount": 733
      },
      {
        "contestId": 549,
        "index": "E",
        "solvedCount": 139
      },
      {
        "contestId": 549,
        "index": "D",
        "solvedCount": 2022
      },
      {
        "contestId": 549,
        "index": "C",
        "solvedCount": 1541
      },
      {
        "contestId": 549,
        "index": "B",
        "solvedCount": 1365
      },
      {
        "contestId": 549,
        "index": "A",
        "solvedCount": 8004
      },
      {
        "contestId": 548,
        "index": "B",
        "solvedCount": 7045
      },
      {
        "contestId": 548,
        "index": "A",
        "solvedCount": 8743
      },
      {
        "contestId": 547,
        "index": "E",
        "solvedCount": 1590
      },
      {
        "contestId": 547,
        "index": "D",
        "solvedCount": 1969
      },
      {
        "contestId": 547,
        "index": "C",
        "solvedCount": 2170
      },
      {
        "contestId": 547,
        "index": "B",
        "solvedCount": 5667
      },
      {
        "contestId": 547,
        "index": "A",
        "solvedCount": 1608
      },
      {
        "contestId": 546,
        "index": "E",
        "solvedCount": 2875
      },
      {
        "contestId": 546,
        "index": "D",
        "solvedCount": 9789
      },
      {
        "contestId": 546,
        "index": "C",
        "solvedCount": 15033
      },
      {
        "contestId": 546,
        "index": "B",
        "solvedCount": 14773
      },
      {
        "contestId": 546,
        "index": "A",
        "solvedCount": 130332
      },
      {
        "contestId": 545,
        "index": "E",
        "solvedCount": 3809
      },
      {
        "contestId": 545,
        "index": "D",
        "solvedCount": 19907
      },
      {
        "contestId": 545,
        "index": "C",
        "solvedCount": 22380
      },
      {
        "contestId": 545,
        "index": "B",
        "solvedCount": 9995
      },
      {
        "contestId": 545,
        "index": "A",
        "solvedCount": 10258
      },
      {
        "contestId": 544,
        "index": "B",
        "solvedCount": 6911
      },
      {
        "contestId": 544,
        "index": "A",
        "solvedCount": 6299
      },
      {
        "contestId": 543,
        "index": "E",
        "solvedCount": 207
      },
      {
        "contestId": 543,
        "index": "D",
        "solvedCount": 1915
      },
      {
        "contestId": 543,
        "index": "C",
        "solvedCount": 1035
      },
      {
        "contestId": 543,
        "index": "B",
        "solvedCount": 2645
      },
      {
        "contestId": 543,
        "index": "A",
        "solvedCount": 5508
      },
      {
        "contestId": 542,
        "index": "F",
        "solvedCount": 566
      },
      {
        "contestId": 542,
        "index": "E",
        "solvedCount": 598
      },
      {
        "contestId": 542,
        "index": "D",
        "solvedCount": 406
      },
      {
        "contestId": 542,
        "index": "C",
        "solvedCount": 870
      },
      {
        "contestId": 542,
        "index": "B",
        "solvedCount": 96
      },
      {
        "contestId": 542,
        "index": "A",
        "solvedCount": 388
      },
      {
        "contestId": 540,
        "index": "E",
        "solvedCount": 1638
      },
      {
        "contestId": 540,
        "index": "D",
        "solvedCount": 4318
      },
      {
        "contestId": 540,
        "index": "C",
        "solvedCount": 6315
      },
      {
        "contestId": 540,
        "index": "B",
        "solvedCount": 4311
      },
      {
        "contestId": 540,
        "index": "A",
        "solvedCount": 27722
      },
      {
        "contestId": 538,
        "index": "H",
        "solvedCount": 542
      },
      {
        "contestId": 538,
        "index": "G",
        "solvedCount": 405
      },
      {
        "contestId": 538,
        "index": "F",
        "solvedCount": 1372
      },
      {
        "contestId": 538,
        "index": "E",
        "solvedCount": 1374
      },
      {
        "contestId": 538,
        "index": "D",
        "solvedCount": 2310
      },
      {
        "contestId": 538,
        "index": "C",
        "solvedCount": 5372
      },
      {
        "contestId": 538,
        "index": "B",
        "solvedCount": 15215
      },
      {
        "contestId": 538,
        "index": "A",
        "solvedCount": 6339
      },
      {
        "contestId": 536,
        "index": "E",
        "solvedCount": 296
      },
      {
        "contestId": 536,
        "index": "D",
        "solvedCount": 624
      },
      {
        "contestId": 535,
        "index": "E",
        "solvedCount": 342
      },
      {
        "contestId": 535,
        "index": "D",
        "solvedCount": 2071
      },
      {
        "contestId": 535,
        "index": "C",
        "solvedCount": 2320
      },
      {
        "contestId": 535,
        "index": "B",
        "solvedCount": 17834
      },
      {
        "contestId": 535,
        "index": "A",
        "solvedCount": 10465
      },
      {
        "contestId": 534,
        "index": "F",
        "solvedCount": 412
      },
      {
        "contestId": 534,
        "index": "E",
        "solvedCount": 315
      },
      {
        "contestId": 534,
        "index": "D",
        "solvedCount": 2159
      },
      {
        "contestId": 534,
        "index": "C",
        "solvedCount": 4369
      },
      {
        "contestId": 534,
        "index": "B",
        "solvedCount": 7987
      },
      {
        "contestId": 534,
        "index": "A",
        "solvedCount": 10598
      },
      {
        "contestId": 533,
        "index": "F",
        "solvedCount": 635
      },
      {
        "contestId": 533,
        "index": "E",
        "solvedCount": 1320
      },
      {
        "contestId": 533,
        "index": "D",
        "solvedCount": 186
      },
      {
        "contestId": 533,
        "index": "C",
        "solvedCount": 1323
      },
      {
        "contestId": 533,
        "index": "B",
        "solvedCount": 1457
      },
      {
        "contestId": 533,
        "index": "A",
        "solvedCount": 270
      },
      {
        "contestId": 530,
        "index": "I",
        "solvedCount": 2
      },
      {
        "contestId": 530,
        "index": "H",
        "solvedCount": 26
      },
      {
        "contestId": 530,
        "index": "G",
        "solvedCount": 17
      },
      {
        "contestId": 530,
        "index": "F",
        "solvedCount": 21
      },
      {
        "contestId": 530,
        "index": "E",
        "solvedCount": 93
      },
      {
        "contestId": 530,
        "index": "D",
        "solvedCount": 175
      },
      {
        "contestId": 530,
        "index": "C",
        "solvedCount": 163
      },
      {
        "contestId": 530,
        "index": "B",
        "solvedCount": 219
      },
      {
        "contestId": 530,
        "index": "A",
        "solvedCount": 251
      },
      {
        "contestId": 529,
        "index": "B",
        "solvedCount": 803
      },
      {
        "contestId": 528,
        "index": "E",
        "solvedCount": 201
      },
      {
        "contestId": 528,
        "index": "D",
        "solvedCount": 1776
      },
      {
        "contestId": 527,
        "index": "E",
        "solvedCount": 970
      },
      {
        "contestId": 527,
        "index": "D",
        "solvedCount": 2783
      },
      {
        "contestId": 527,
        "index": "C",
        "solvedCount": 4183
      },
      {
        "contestId": 527,
        "index": "B",
        "solvedCount": 3551
      },
      {
        "contestId": 527,
        "index": "A",
        "solvedCount": 12125
      },
      {
        "contestId": 526,
        "index": "G",
        "solvedCount": 597
      },
      {
        "contestId": 526,
        "index": "F",
        "solvedCount": 1714
      },
      {
        "contestId": 526,
        "index": "E",
        "solvedCount": 873
      },
      {
        "contestId": 526,
        "index": "D",
        "solvedCount": 1797
      },
      {
        "contestId": 526,
        "index": "C",
        "solvedCount": 2096
      },
      {
        "contestId": 526,
        "index": "B",
        "solvedCount": 4161
      },
      {
        "contestId": 526,
        "index": "A",
        "solvedCount": 4394
      },
      {
        "contestId": 525,
        "index": "E",
        "solvedCount": 2191
      },
      {
        "contestId": 525,
        "index": "D",
        "solvedCount": 1443
      },
      {
        "contestId": 525,
        "index": "C",
        "solvedCount": 5185
      },
      {
        "contestId": 525,
        "index": "B",
        "solvedCount": 8342
      },
      {
        "contestId": 525,
        "index": "A",
        "solvedCount": 11614
      },
      {
        "contestId": 524,
        "index": "F",
        "solvedCount": 304
      },
      {
        "contestId": 524,
        "index": "E",
        "solvedCount": 555
      },
      {
        "contestId": 524,
        "index": "D",
        "solvedCount": 472
      },
      {
        "contestId": 524,
        "index": "C",
        "solvedCount": 1043
      },
      {
        "contestId": 524,
        "index": "B",
        "solvedCount": 923
      },
      {
        "contestId": 524,
        "index": "A",
        "solvedCount": 905
      },
      {
        "contestId": 523,
        "index": "D",
        "solvedCount": 1372
      },
      {
        "contestId": 523,
        "index": "C",
        "solvedCount": 1757
      },
      {
        "contestId": 523,
        "index": "B",
        "solvedCount": 718
      },
      {
        "contestId": 523,
        "index": "A",
        "solvedCount": 1902
      },
      {
        "contestId": 522,
        "index": "D",
        "solvedCount": 2175
      },
      {
        "contestId": 522,
        "index": "C",
        "solvedCount": 516
      },
      {
        "contestId": 522,
        "index": "B",
        "solvedCount": 6200
      },
      {
        "contestId": 522,
        "index": "A",
        "solvedCount": 11017
      },
      {
        "contestId": 521,
        "index": "E",
        "solvedCount": 768
      },
      {
        "contestId": 521,
        "index": "D",
        "solvedCount": 1264
      },
      {
        "contestId": 520,
        "index": "E",
        "solvedCount": 865
      },
      {
        "contestId": 520,
        "index": "D",
        "solvedCount": 584
      },
      {
        "contestId": 520,
        "index": "C",
        "solvedCount": 2485
      },
      {
        "contestId": 520,
        "index": "B",
        "solvedCount": 37338
      },
      {
        "contestId": 520,
        "index": "A",
        "solvedCount": 68166
      },
      {
        "contestId": 519,
        "index": "E",
        "solvedCount": 4940
      },
      {
        "contestId": 519,
        "index": "D",
        "solvedCount": 5786
      },
      {
        "contestId": 519,
        "index": "C",
        "solvedCount": 17373
      },
      {
        "contestId": 519,
        "index": "B",
        "solvedCount": 30799
      },
      {
        "contestId": 519,
        "index": "A",
        "solvedCount": 16524
      },
      {
        "contestId": 518,
        "index": "F",
        "solvedCount": 326
      },
      {
        "contestId": 518,
        "index": "E",
        "solvedCount": 832
      },
      {
        "contestId": 518,
        "index": "D",
        "solvedCount": 5525
      },
      {
        "contestId": 518,
        "index": "C",
        "solvedCount": 5429
      },
      {
        "contestId": 518,
        "index": "B",
        "solvedCount": 7209
      },
      {
        "contestId": 518,
        "index": "A",
        "solvedCount": 8107
      },
      {
        "contestId": 516,
        "index": "E",
        "solvedCount": 388
      },
      {
        "contestId": 516,
        "index": "D",
        "solvedCount": 1096
      },
      {
        "contestId": 515,
        "index": "E",
        "solvedCount": 1088
      },
      {
        "contestId": 515,
        "index": "D",
        "solvedCount": 1464
      },
      {
        "contestId": 515,
        "index": "C",
        "solvedCount": 20292
      },
      {
        "contestId": 515,
        "index": "B",
        "solvedCount": 6718
      },
      {
        "contestId": 515,
        "index": "A",
        "solvedCount": 16827
      },
      {
        "contestId": 514,
        "index": "E",
        "solvedCount": 1221
      },
      {
        "contestId": 514,
        "index": "D",
        "solvedCount": 3583
      },
      {
        "contestId": 514,
        "index": "C",
        "solvedCount": 5250
      },
      {
        "contestId": 514,
        "index": "B",
        "solvedCount": 16998
      },
      {
        "contestId": 514,
        "index": "A",
        "solvedCount": 33767
      },
      {
        "contestId": 513,
        "index": "G3",
        "solvedCount": 7
      },
      {
        "contestId": 513,
        "index": "G2",
        "solvedCount": 193
      },
      {
        "contestId": 513,
        "index": "G1",
        "solvedCount": 1194
      },
      {
        "contestId": 513,
        "index": "F2",
        "solvedCount": 21
      },
      {
        "contestId": 513,
        "index": "F1",
        "solvedCount": 36
      },
      {
        "contestId": 513,
        "index": "E2",
        "solvedCount": 39
      },
      {
        "contestId": 513,
        "index": "E1",
        "solvedCount": 109
      },
      {
        "contestId": 513,
        "index": "D2",
        "solvedCount": 98
      },
      {
        "contestId": 513,
        "index": "D1",
        "solvedCount": 159
      },
      {
        "contestId": 513,
        "index": "C",
        "solvedCount": 772
      },
      {
        "contestId": 513,
        "index": "B2",
        "solvedCount": 1435
      },
      {
        "contestId": 513,
        "index": "B1",
        "solvedCount": 2409
      },
      {
        "contestId": 513,
        "index": "A",
        "solvedCount": 3678
      },
      {
        "contestId": 512,
        "index": "E",
        "solvedCount": 452
      },
      {
        "contestId": 512,
        "index": "D",
        "solvedCount": 819
      },
      {
        "contestId": 510,
        "index": "E",
        "solvedCount": 1107
      },
      {
        "contestId": 510,
        "index": "D",
        "solvedCount": 3054
      },
      {
        "contestId": 510,
        "index": "C",
        "solvedCount": 10600
      },
      {
        "contestId": 510,
        "index": "B",
        "solvedCount": 11568
      },
      {
        "contestId": 510,
        "index": "A",
        "solvedCount": 59495
      },
      {
        "contestId": 509,
        "index": "F",
        "solvedCount": 86
      },
      {
        "contestId": 509,
        "index": "E",
        "solvedCount": 556
      },
      {
        "contestId": 509,
        "index": "D",
        "solvedCount": 167
      },
      {
        "contestId": 509,
        "index": "C",
        "solvedCount": 455
      },
      {
        "contestId": 509,
        "index": "B",
        "solvedCount": 2412
      },
      {
        "contestId": 509,
        "index": "A",
        "solvedCount": 3637
      },
      {
        "contestId": 508,
        "index": "E",
        "solvedCount": 1420
      },
      {
        "contestId": 508,
        "index": "D",
        "solvedCount": 2385
      },
      {
        "contestId": 508,
        "index": "C",
        "solvedCount": 4117
      },
      {
        "contestId": 508,
        "index": "B",
        "solvedCount": 19891
      },
      {
        "contestId": 508,
        "index": "A",
        "solvedCount": 6879
      },
      {
        "contestId": 507,
        "index": "E",
        "solvedCount": 2293
      },
      {
        "contestId": 507,
        "index": "D",
        "solvedCount": 1506
      },
      {
        "contestId": 507,
        "index": "C",
        "solvedCount": 3956
      },
      {
        "contestId": 507,
        "index": "B",
        "solvedCount": 20865
      },
      {
        "contestId": 507,
        "index": "A",
        "solvedCount": 14178
      },
      {
        "contestId": 506,
        "index": "E",
        "solvedCount": 592
      },
      {
        "contestId": 506,
        "index": "D",
        "solvedCount": 1642
      },
      {
        "contestId": 505,
        "index": "E",
        "solvedCount": 906
      },
      {
        "contestId": 505,
        "index": "D",
        "solvedCount": 1359
      },
      {
        "contestId": 505,
        "index": "C",
        "solvedCount": 4183
      },
      {
        "contestId": 505,
        "index": "B",
        "solvedCount": 9817
      },
      {
        "contestId": 505,
        "index": "A",
        "solvedCount": 5972
      },
      {
        "contestId": 504,
        "index": "E",
        "solvedCount": 725
      },
      {
        "contestId": 504,
        "index": "D",
        "solvedCount": 287
      },
      {
        "contestId": 501,
        "index": "E",
        "solvedCount": 314
      },
      {
        "contestId": 501,
        "index": "D",
        "solvedCount": 1215
      },
      {
        "contestId": 501,
        "index": "C",
        "solvedCount": 3683
      },
      {
        "contestId": 501,
        "index": "B",
        "solvedCount": 11122
      },
      {
        "contestId": 501,
        "index": "A",
        "solvedCount": 19156
      },
      {
        "contestId": 500,
        "index": "G",
        "solvedCount": 123
      },
      {
        "contestId": 500,
        "index": "F",
        "solvedCount": 607
      },
      {
        "contestId": 500,
        "index": "E",
        "solvedCount": 1267
      },
      {
        "contestId": 500,
        "index": "D",
        "solvedCount": 2869
      },
      {
        "contestId": 500,
        "index": "C",
        "solvedCount": 5336
      },
      {
        "contestId": 500,
        "index": "B",
        "solvedCount": 7863
      },
      {
        "contestId": 500,
        "index": "A",
        "solvedCount": 40622
      },
      {
        "contestId": 499,
        "index": "B",
        "solvedCount": 30997
      },
      {
        "contestId": 499,
        "index": "A",
        "solvedCount": 12367
      },
      {
        "contestId": 498,
        "index": "E",
        "solvedCount": 374
      },
      {
        "contestId": 498,
        "index": "D",
        "solvedCount": 965
      },
      {
        "contestId": 498,
        "index": "C",
        "solvedCount": 2422
      },
      {
        "contestId": 498,
        "index": "B",
        "solvedCount": 944
      },
      {
        "contestId": 498,
        "index": "A",
        "solvedCount": 2876
      },
      {
        "contestId": 497,
        "index": "E",
        "solvedCount": 245
      },
      {
        "contestId": 497,
        "index": "D",
        "solvedCount": 186
      },
      {
        "contestId": 496,
        "index": "E",
        "solvedCount": 704
      },
      {
        "contestId": 496,
        "index": "D",
        "solvedCount": 1689
      },
      {
        "contestId": 496,
        "index": "C",
        "solvedCount": 5424
      },
      {
        "contestId": 496,
        "index": "B",
        "solvedCount": 4996
      },
      {
        "contestId": 496,
        "index": "A",
        "solvedCount": 14527
      },
      {
        "contestId": 495,
        "index": "B",
        "solvedCount": 5419
      },
      {
        "contestId": 495,
        "index": "A",
        "solvedCount": 7264
      },
      {
        "contestId": 494,
        "index": "E",
        "solvedCount": 255
      },
      {
        "contestId": 494,
        "index": "D",
        "solvedCount": 491
      },
      {
        "contestId": 494,
        "index": "C",
        "solvedCount": 682
      },
      {
        "contestId": 494,
        "index": "B",
        "solvedCount": 2210
      },
      {
        "contestId": 494,
        "index": "A",
        "solvedCount": 3704
      },
      {
        "contestId": 493,
        "index": "E",
        "solvedCount": 446
      },
      {
        "contestId": 493,
        "index": "D",
        "solvedCount": 8181
      },
      {
        "contestId": 493,
        "index": "C",
        "solvedCount": 5793
      },
      {
        "contestId": 493,
        "index": "B",
        "solvedCount": 12093
      },
      {
        "contestId": 493,
        "index": "A",
        "solvedCount": 5652
      },
      {
        "contestId": 492,
        "index": "E",
        "solvedCount": 1530
      },
      {
        "contestId": 492,
        "index": "D",
        "solvedCount": 2923
      },
      {
        "contestId": 492,
        "index": "C",
        "solvedCount": 11699
      },
      {
        "contestId": 492,
        "index": "B",
        "solvedCount": 59372
      },
      {
        "contestId": 492,
        "index": "A",
        "solvedCount": 37548
      },
      {
        "contestId": 491,
        "index": "C",
        "solvedCount": 299
      },
      {
        "contestId": 491,
        "index": "B",
        "solvedCount": 400
      },
      {
        "contestId": 491,
        "index": "A",
        "solvedCount": 2128
      },
      {
        "contestId": 490,
        "index": "F",
        "solvedCount": 1361
      },
      {
        "contestId": 490,
        "index": "E",
        "solvedCount": 1407
      },
      {
        "contestId": 490,
        "index": "D",
        "solvedCount": 1822
      },
      {
        "contestId": 490,
        "index": "C",
        "solvedCount": 8278
      },
      {
        "contestId": 490,
        "index": "B",
        "solvedCount": 5268
      },
      {
        "contestId": 490,
        "index": "A",
        "solvedCount": 46069
      },
      {
        "contestId": 489,
        "index": "F",
        "solvedCount": 1498
      },
      {
        "contestId": 489,
        "index": "E",
        "solvedCount": 844
      },
      {
        "contestId": 489,
        "index": "D",
        "solvedCount": 6101
      },
      {
        "contestId": 489,
        "index": "C",
        "solvedCount": 39674
      },
      {
        "contestId": 489,
        "index": "B",
        "solvedCount": 38213
      },
      {
        "contestId": 489,
        "index": "A",
        "solvedCount": 8035
      },
      {
        "contestId": 488,
        "index": "B",
        "solvedCount": 1930
      },
      {
        "contestId": 488,
        "index": "A",
        "solvedCount": 11774
      },
      {
        "contestId": 487,
        "index": "E",
        "solvedCount": 1544
      },
      {
        "contestId": 487,
        "index": "D",
        "solvedCount": 736
      },
      {
        "contestId": 487,
        "index": "C",
        "solvedCount": 1933
      },
      {
        "contestId": 487,
        "index": "B",
        "solvedCount": 2616
      },
      {
        "contestId": 487,
        "index": "A",
        "solvedCount": 2761
      },
      {
        "contestId": 486,
        "index": "E",
        "solvedCount": 1770
      },
      {
        "contestId": 486,
        "index": "D",
        "solvedCount": 3594
      },
      {
        "contestId": 486,
        "index": "C",
        "solvedCount": 10864
      },
      {
        "contestId": 486,
        "index": "B",
        "solvedCount": 14947
      },
      {
        "contestId": 486,
        "index": "A",
        "solvedCount": 85374
      },
      {
        "contestId": 485,
        "index": "B",
        "solvedCount": 6040
      },
      {
        "contestId": 485,
        "index": "A",
        "solvedCount": 7264
      },
      {
        "contestId": 484,
        "index": "E",
        "solvedCount": 1693
      },
      {
        "contestId": 484,
        "index": "D",
        "solvedCount": 2061
      },
      {
        "contestId": 484,
        "index": "C",
        "solvedCount": 474
      },
      {
        "contestId": 484,
        "index": "B",
        "solvedCount": 5046
      },
      {
        "contestId": 484,
        "index": "A",
        "solvedCount": 6909
      },
      {
        "contestId": 483,
        "index": "B",
        "solvedCount": 3584
      },
      {
        "contestId": 483,
        "index": "A",
        "solvedCount": 19305
      },
      {
        "contestId": 482,
        "index": "E",
        "solvedCount": 167
      },
      {
        "contestId": 482,
        "index": "D",
        "solvedCount": 403
      },
      {
        "contestId": 482,
        "index": "C",
        "solvedCount": 710
      },
      {
        "contestId": 482,
        "index": "B",
        "solvedCount": 4405
      },
      {
        "contestId": 482,
        "index": "A",
        "solvedCount": 5186
      },
      {
        "contestId": 480,
        "index": "E",
        "solvedCount": 435
      },
      {
        "contestId": 480,
        "index": "D",
        "solvedCount": 415
      },
      {
        "contestId": 479,
        "index": "E",
        "solvedCount": 3364
      },
      {
        "contestId": 479,
        "index": "D",
        "solvedCount": 3183
      },
      {
        "contestId": 479,
        "index": "C",
        "solvedCount": 23306
      },
      {
        "contestId": 479,
        "index": "B",
        "solvedCount": 6889
      },
      {
        "contestId": 479,
        "index": "A",
        "solvedCount": 73431
      },
      {
        "contestId": 478,
        "index": "E",
        "solvedCount": 179
      },
      {
        "contestId": 478,
        "index": "D",
        "solvedCount": 4848
      },
      {
        "contestId": 478,
        "index": "C",
        "solvedCount": 15704
      },
      {
        "contestId": 478,
        "index": "B",
        "solvedCount": 30771
      },
      {
        "contestId": 478,
        "index": "A",
        "solvedCount": 22243
      },
      {
        "contestId": 477,
        "index": "E",
        "solvedCount": 114
      },
      {
        "contestId": 477,
        "index": "D",
        "solvedCount": 463
      },
      {
        "contestId": 476,
        "index": "E",
        "solvedCount": 897
      },
      {
        "contestId": 476,
        "index": "D",
        "solvedCount": 2806
      },
      {
        "contestId": 476,
        "index": "C",
        "solvedCount": 3672
      },
      {
        "contestId": 476,
        "index": "B",
        "solvedCount": 24540
      },
      {
        "contestId": 476,
        "index": "A",
        "solvedCount": 33473
      },
      {
        "contestId": 475,
        "index": "F",
        "solvedCount": 180
      },
      {
        "contestId": 475,
        "index": "E",
        "solvedCount": 331
      },
      {
        "contestId": 475,
        "index": "D",
        "solvedCount": 3662
      },
      {
        "contestId": 475,
        "index": "C",
        "solvedCount": 749
      },
      {
        "contestId": 475,
        "index": "B",
        "solvedCount": 6824
      },
      {
        "contestId": 475,
        "index": "A",
        "solvedCount": 4334
      },
      {
        "contestId": 474,
        "index": "F",
        "solvedCount": 6101
      },
      {
        "contestId": 474,
        "index": "E",
        "solvedCount": 2591
      },
      {
        "contestId": 474,
        "index": "D",
        "solvedCount": 20254
      },
      {
        "contestId": 474,
        "index": "C",
        "solvedCount": 2867
      },
      {
        "contestId": 474,
        "index": "B",
        "solvedCount": 32157
      },
      {
        "contestId": 474,
        "index": "A",
        "solvedCount": 33995
      },
      {
        "contestId": 472,
        "index": "G",
        "solvedCount": 344
      },
      {
        "contestId": 472,
        "index": "F",
        "solvedCount": 227
      },
      {
        "contestId": 472,
        "index": "E",
        "solvedCount": 119
      },
      {
        "contestId": 472,
        "index": "D",
        "solvedCount": 4122
      },
      {
        "contestId": 472,
        "index": "C",
        "solvedCount": 5890
      },
      {
        "contestId": 472,
        "index": "B",
        "solvedCount": 6689
      },
      {
        "contestId": 472,
        "index": "A",
        "solvedCount": 46616
      },
      {
        "contestId": 471,
        "index": "E",
        "solvedCount": 69
      },
      {
        "contestId": 471,
        "index": "D",
        "solvedCount": 5517
      },
      {
        "contestId": 471,
        "index": "C",
        "solvedCount": 3263
      },
      {
        "contestId": 471,
        "index": "B",
        "solvedCount": 5483
      },
      {
        "contestId": 471,
        "index": "A",
        "solvedCount": 12125
      },
      {
        "contestId": 470,
        "index": "H",
        "solvedCount": 15
      },
      {
        "contestId": 470,
        "index": "G",
        "solvedCount": 23
      },
      {
        "contestId": 470,
        "index": "F",
        "solvedCount": 29
      },
      {
        "contestId": 470,
        "index": "E",
        "solvedCount": 103
      },
      {
        "contestId": 470,
        "index": "D",
        "solvedCount": 58
      },
      {
        "contestId": 470,
        "index": "C",
        "solvedCount": 67
      },
      {
        "contestId": 470,
        "index": "B",
        "solvedCount": 148
      },
      {
        "contestId": 470,
        "index": "A",
        "solvedCount": 287
      },
      {
        "contestId": 469,
        "index": "B",
        "solvedCount": 11362
      },
      {
        "contestId": 469,
        "index": "A",
        "solvedCount": 74860
      },
      {
        "contestId": 468,
        "index": "E",
        "solvedCount": 247
      },
      {
        "contestId": 468,
        "index": "D",
        "solvedCount": 303
      },
      {
        "contestId": 468,
        "index": "C",
        "solvedCount": 1757
      },
      {
        "contestId": 468,
        "index": "B",
        "solvedCount": 2738
      },
      {
        "contestId": 468,
        "index": "A",
        "solvedCount": 4554
      },
      {
        "contestId": 467,
        "index": "E",
        "solvedCount": 664
      },
      {
        "contestId": 467,
        "index": "D",
        "solvedCount": 1579
      },
      {
        "contestId": 467,
        "index": "C",
        "solvedCount": 12341
      },
      {
        "contestId": 467,
        "index": "B",
        "solvedCount": 29952
      },
      {
        "contestId": 467,
        "index": "A",
        "solvedCount": 89354
      },
      {
        "contestId": 466,
        "index": "E",
        "solvedCount": 1737
      },
      {
        "contestId": 466,
        "index": "D",
        "solvedCount": 2547
      },
      {
        "contestId": 466,
        "index": "C",
        "solvedCount": 29895
      },
      {
        "contestId": 466,
        "index": "B",
        "solvedCount": 4209
      },
      {
        "contestId": 466,
        "index": "A",
        "solvedCount": 49969
      },
      {
        "contestId": 465,
        "index": "B",
        "solvedCount": 8962
      },
      {
        "contestId": 465,
        "index": "A",
        "solvedCount": 8556
      },
      {
        "contestId": 464,
        "index": "E",
        "solvedCount": 925
      },
      {
        "contestId": 464,
        "index": "D",
        "solvedCount": 588
      },
      {
        "contestId": 464,
        "index": "C",
        "solvedCount": 1357
      },
      {
        "contestId": 464,
        "index": "B",
        "solvedCount": 1282
      },
      {
        "contestId": 464,
        "index": "A",
        "solvedCount": 3771
      },
      {
        "contestId": 463,
        "index": "E",
        "solvedCount": 1264
      },
      {
        "contestId": 463,
        "index": "D",
        "solvedCount": 5163
      },
      {
        "contestId": 463,
        "index": "C",
        "solvedCount": 7853
      },
      {
        "contestId": 463,
        "index": "B",
        "solvedCount": 21914
      },
      {
        "contestId": 463,
        "index": "A",
        "solvedCount": 8152
      },
      {
        "contestId": 462,
        "index": "B",
        "solvedCount": 12007
      },
      {
        "contestId": 462,
        "index": "A",
        "solvedCount": 14766
      },
      {
        "contestId": 461,
        "index": "E",
        "solvedCount": 278
      },
      {
        "contestId": 461,
        "index": "D",
        "solvedCount": 327
      },
      {
        "contestId": 461,
        "index": "C",
        "solvedCount": 1096
      },
      {
        "contestId": 461,
        "index": "B",
        "solvedCount": 4107
      },
      {
        "contestId": 461,
        "index": "A",
        "solvedCount": 9342
      },
      {
        "contestId": 460,
        "index": "E",
        "solvedCount": 311
      },
      {
        "contestId": 460,
        "index": "D",
        "solvedCount": 876
      },
      {
        "contestId": 460,
        "index": "C",
        "solvedCount": 5326
      },
      {
        "contestId": 460,
        "index": "B",
        "solvedCount": 10331
      },
      {
        "contestId": 460,
        "index": "A",
        "solvedCount": 38272
      },
      {
        "contestId": 459,
        "index": "E",
        "solvedCount": 4633
      },
      {
        "contestId": 459,
        "index": "D",
        "solvedCount": 7957
      },
      {
        "contestId": 459,
        "index": "C",
        "solvedCount": 5757
      },
      {
        "contestId": 459,
        "index": "B",
        "solvedCount": 32751
      },
      {
        "contestId": 459,
        "index": "A",
        "solvedCount": 27615
      },
      {
        "contestId": 457,
        "index": "F",
        "solvedCount": 67
      },
      {
        "contestId": 457,
        "index": "E",
        "solvedCount": 57
      },
      {
        "contestId": 457,
        "index": "D",
        "solvedCount": 157
      },
      {
        "contestId": 457,
        "index": "C",
        "solvedCount": 296
      },
      {
        "contestId": 457,
        "index": "B",
        "solvedCount": 261
      },
      {
        "contestId": 457,
        "index": "A",
        "solvedCount": 320
      },
      {
        "contestId": 456,
        "index": "B",
        "solvedCount": 12569
      },
      {
        "contestId": 456,
        "index": "A",
        "solvedCount": 36758
      },
      {
        "contestId": 455,
        "index": "E",
        "solvedCount": 565
      },
      {
        "contestId": 455,
        "index": "D",
        "solvedCount": 2332
      },
      {
        "contestId": 455,
        "index": "C",
        "solvedCount": 4037
      },
      {
        "contestId": 455,
        "index": "B",
        "solvedCount": 3630
      },
      {
        "contestId": 455,
        "index": "A",
        "solvedCount": 41517
      },
      {
        "contestId": 454,
        "index": "B",
        "solvedCount": 16103
      },
      {
        "contestId": 454,
        "index": "A",
        "solvedCount": 12443
      },
      {
        "contestId": 453,
        "index": "E",
        "solvedCount": 538
      },
      {
        "contestId": 453,
        "index": "D",
        "solvedCount": 418
      },
      {
        "contestId": 453,
        "index": "C",
        "solvedCount": 1274
      },
      {
        "contestId": 453,
        "index": "B",
        "solvedCount": 3578
      },
      {
        "contestId": 453,
        "index": "A",
        "solvedCount": 6318
      },
      {
        "contestId": 452,
        "index": "F",
        "solvedCount": 997
      },
      {
        "contestId": 452,
        "index": "E",
        "solvedCount": 896
      },
      {
        "contestId": 452,
        "index": "D",
        "solvedCount": 1348
      },
      {
        "contestId": 452,
        "index": "C",
        "solvedCount": 1250
      },
      {
        "contestId": 452,
        "index": "B",
        "solvedCount": 1872
      },
      {
        "contestId": 452,
        "index": "A",
        "solvedCount": 6516
      },
      {
        "contestId": 451,
        "index": "E",
        "solvedCount": 2707
      },
      {
        "contestId": 451,
        "index": "D",
        "solvedCount": 4307
      },
      {
        "contestId": 451,
        "index": "C",
        "solvedCount": 3146
      },
      {
        "contestId": 451,
        "index": "B",
        "solvedCount": 36405
      },
      {
        "contestId": 451,
        "index": "A",
        "solvedCount": 53568
      },
      {
        "contestId": 450,
        "index": "B",
        "solvedCount": 22459
      },
      {
        "contestId": 450,
        "index": "A",
        "solvedCount": 26061
      },
      {
        "contestId": 449,
        "index": "E",
        "solvedCount": 250
      },
      {
        "contestId": 449,
        "index": "D",
        "solvedCount": 3311
      },
      {
        "contestId": 449,
        "index": "C",
        "solvedCount": 1663
      },
      {
        "contestId": 449,
        "index": "B",
        "solvedCount": 5359
      },
      {
        "contestId": 449,
        "index": "A",
        "solvedCount": 2134
      },
      {
        "contestId": 448,
        "index": "E",
        "solvedCount": 1295
      },
      {
        "contestId": 448,
        "index": "D",
        "solvedCount": 10615
      },
      {
        "contestId": 448,
        "index": "C",
        "solvedCount": 6966
      },
      {
        "contestId": 448,
        "index": "B",
        "solvedCount": 13927
      },
      {
        "contestId": 448,
        "index": "A",
        "solvedCount": 20970
      },
      {
        "contestId": 447,
        "index": "B",
        "solvedCount": 18044
      },
      {
        "contestId": 447,
        "index": "A",
        "solvedCount": 7927
      },
      {
        "contestId": 446,
        "index": "E",
        "solvedCount": 103
      },
      {
        "contestId": 446,
        "index": "D",
        "solvedCount": 303
      },
      {
        "contestId": 446,
        "index": "C",
        "solvedCount": 2532
      },
      {
        "contestId": 446,
        "index": "B",
        "solvedCount": 2640
      },
      {
        "contestId": 446,
        "index": "A",
        "solvedCount": 9300
      },
      {
        "contestId": 445,
        "index": "B",
        "solvedCount": 10093
      },
      {
        "contestId": 445,
        "index": "A",
        "solvedCount": 22839
      },
      {
        "contestId": 444,
        "index": "E",
        "solvedCount": 543
      },
      {
        "contestId": 444,
        "index": "D",
        "solvedCount": 637
      },
      {
        "contestId": 444,
        "index": "C",
        "solvedCount": 2163
      },
      {
        "contestId": 444,
        "index": "B",
        "solvedCount": 767
      },
      {
        "contestId": 444,
        "index": "A",
        "solvedCount": 1684
      },
      {
        "contestId": 443,
        "index": "B",
        "solvedCount": 3603
      },
      {
        "contestId": 443,
        "index": "A",
        "solvedCount": 70100
      },
      {
        "contestId": 442,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 442,
        "index": "D",
        "solvedCount": 751
      },
      {
        "contestId": 442,
        "index": "C",
        "solvedCount": 1241
      },
      {
        "contestId": 442,
        "index": "B",
        "solvedCount": 3527
      },
      {
        "contestId": 442,
        "index": "A",
        "solvedCount": 1327
      },
      {
        "contestId": 441,
        "index": "E",
        "solvedCount": 507
      },
      {
        "contestId": 441,
        "index": "D",
        "solvedCount": 944
      },
      {
        "contestId": 441,
        "index": "C",
        "solvedCount": 10150
      },
      {
        "contestId": 441,
        "index": "B",
        "solvedCount": 6250
      },
      {
        "contestId": 441,
        "index": "A",
        "solvedCount": 16587
      },
      {
        "contestId": 440,
        "index": "D",
        "solvedCount": 467
      },
      {
        "contestId": 440,
        "index": "C",
        "solvedCount": 697
      },
      {
        "contestId": 440,
        "index": "B",
        "solvedCount": 1647
      },
      {
        "contestId": 440,
        "index": "A",
        "solvedCount": 5319
      },
      {
        "contestId": 439,
        "index": "E",
        "solvedCount": 1298
      },
      {
        "contestId": 439,
        "index": "D",
        "solvedCount": 4648
      },
      {
        "contestId": 439,
        "index": "C",
        "solvedCount": 3563
      },
      {
        "contestId": 439,
        "index": "B",
        "solvedCount": 12378
      },
      {
        "contestId": 439,
        "index": "A",
        "solvedCount": 22439
      },
      {
        "contestId": 438,
        "index": "E",
        "solvedCount": 1579
      },
      {
        "contestId": 438,
        "index": "D",
        "solvedCount": 6008
      },
      {
        "contestId": 437,
        "index": "E",
        "solvedCount": 245
      },
      {
        "contestId": 437,
        "index": "D",
        "solvedCount": 1805
      },
      {
        "contestId": 437,
        "index": "C",
        "solvedCount": 10736
      },
      {
        "contestId": 437,
        "index": "B",
        "solvedCount": 8008
      },
      {
        "contestId": 437,
        "index": "A",
        "solvedCount": 8340
      },
      {
        "contestId": 436,
        "index": "F",
        "solvedCount": 281
      },
      {
        "contestId": 436,
        "index": "E",
        "solvedCount": 866
      },
      {
        "contestId": 436,
        "index": "D",
        "solvedCount": 258
      },
      {
        "contestId": 436,
        "index": "C",
        "solvedCount": 2148
      },
      {
        "contestId": 436,
        "index": "B",
        "solvedCount": 2830
      },
      {
        "contestId": 436,
        "index": "A",
        "solvedCount": 2977
      },
      {
        "contestId": 435,
        "index": "E",
        "solvedCount": 204
      },
      {
        "contestId": 435,
        "index": "D",
        "solvedCount": 705
      },
      {
        "contestId": 435,
        "index": "C",
        "solvedCount": 2317
      },
      {
        "contestId": 435,
        "index": "B",
        "solvedCount": 5940
      },
      {
        "contestId": 435,
        "index": "A",
        "solvedCount": 8504
      },
      {
        "contestId": 434,
        "index": "E",
        "solvedCount": 225
      },
      {
        "contestId": 434,
        "index": "D",
        "solvedCount": 336
      },
      {
        "contestId": 433,
        "index": "E",
        "solvedCount": 169
      },
      {
        "contestId": 433,
        "index": "D",
        "solvedCount": 370
      },
      {
        "contestId": 433,
        "index": "C",
        "solvedCount": 1388
      },
      {
        "contestId": 433,
        "index": "B",
        "solvedCount": 26986
      },
      {
        "contestId": 433,
        "index": "A",
        "solvedCount": 13418
      },
      {
        "contestId": 432,
        "index": "E",
        "solvedCount": 595
      },
      {
        "contestId": 432,
        "index": "D",
        "solvedCount": 6463
      },
      {
        "contestId": 432,
        "index": "C",
        "solvedCount": 2234
      },
      {
        "contestId": 432,
        "index": "B",
        "solvedCount": 10652
      },
      {
        "contestId": 432,
        "index": "A",
        "solvedCount": 46947
      },
      {
        "contestId": 431,
        "index": "E",
        "solvedCount": 745
      },
      {
        "contestId": 431,
        "index": "D",
        "solvedCount": 1860
      },
      {
        "contestId": 431,
        "index": "C",
        "solvedCount": 20837
      },
      {
        "contestId": 431,
        "index": "B",
        "solvedCount": 9125
      },
      {
        "contestId": 431,
        "index": "A",
        "solvedCount": 42220
      },
      {
        "contestId": 430,
        "index": "B",
        "solvedCount": 3187
      },
      {
        "contestId": 430,
        "index": "A",
        "solvedCount": 2065
      },
      {
        "contestId": 429,
        "index": "E",
        "solvedCount": 732
      },
      {
        "contestId": 429,
        "index": "D",
        "solvedCount": 2259
      },
      {
        "contestId": 429,
        "index": "C",
        "solvedCount": 715
      },
      {
        "contestId": 429,
        "index": "B",
        "solvedCount": 6733
      },
      {
        "contestId": 429,
        "index": "A",
        "solvedCount": 6327
      },
      {
        "contestId": 427,
        "index": "E",
        "solvedCount": 1283
      },
      {
        "contestId": 427,
        "index": "D",
        "solvedCount": 1906
      },
      {
        "contestId": 427,
        "index": "C",
        "solvedCount": 10402
      },
      {
        "contestId": 427,
        "index": "B",
        "solvedCount": 11161
      },
      {
        "contestId": 427,
        "index": "A",
        "solvedCount": 57119
      },
      {
        "contestId": 426,
        "index": "B",
        "solvedCount": 3413
      },
      {
        "contestId": 426,
        "index": "A",
        "solvedCount": 7780
      },
      {
        "contestId": 425,
        "index": "E",
        "solvedCount": 480
      },
      {
        "contestId": 425,
        "index": "D",
        "solvedCount": 1207
      },
      {
        "contestId": 425,
        "index": "C",
        "solvedCount": 763
      },
      {
        "contestId": 425,
        "index": "B",
        "solvedCount": 1037
      },
      {
        "contestId": 425,
        "index": "A",
        "solvedCount": 2351
      },
      {
        "contestId": 424,
        "index": "E",
        "solvedCount": 110
      },
      {
        "contestId": 424,
        "index": "D",
        "solvedCount": 510
      },
      {
        "contestId": 424,
        "index": "C",
        "solvedCount": 4715
      },
      {
        "contestId": 424,
        "index": "B",
        "solvedCount": 5330
      },
      {
        "contestId": 424,
        "index": "A",
        "solvedCount": 7246
      },
      {
        "contestId": 421,
        "index": "D",
        "solvedCount": 427
      },
      {
        "contestId": 421,
        "index": "A",
        "solvedCount": 4823
      },
      {
        "contestId": 420,
        "index": "E",
        "solvedCount": 179
      },
      {
        "contestId": 420,
        "index": "D",
        "solvedCount": 544
      },
      {
        "contestId": 420,
        "index": "C",
        "solvedCount": 932
      },
      {
        "contestId": 420,
        "index": "B",
        "solvedCount": 692
      },
      {
        "contestId": 420,
        "index": "A",
        "solvedCount": 3230
      },
      {
        "contestId": 418,
        "index": "E",
        "solvedCount": 238
      },
      {
        "contestId": 418,
        "index": "D",
        "solvedCount": 366
      },
      {
        "contestId": 417,
        "index": "E",
        "solvedCount": 350
      },
      {
        "contestId": 417,
        "index": "D",
        "solvedCount": 1287
      },
      {
        "contestId": 417,
        "index": "C",
        "solvedCount": 3288
      },
      {
        "contestId": 417,
        "index": "B",
        "solvedCount": 1556
      },
      {
        "contestId": 417,
        "index": "A",
        "solvedCount": 2510
      },
      {
        "contestId": 416,
        "index": "E",
        "solvedCount": 1175
      },
      {
        "contestId": 416,
        "index": "D",
        "solvedCount": 760
      },
      {
        "contestId": 416,
        "index": "C",
        "solvedCount": 6526
      },
      {
        "contestId": 416,
        "index": "B",
        "solvedCount": 7396
      },
      {
        "contestId": 416,
        "index": "A",
        "solvedCount": 7167
      },
      {
        "contestId": 415,
        "index": "B",
        "solvedCount": 5322
      },
      {
        "contestId": 415,
        "index": "A",
        "solvedCount": 7653
      },
      {
        "contestId": 414,
        "index": "E",
        "solvedCount": 161
      },
      {
        "contestId": 414,
        "index": "D",
        "solvedCount": 611
      },
      {
        "contestId": 414,
        "index": "C",
        "solvedCount": 1852
      },
      {
        "contestId": 414,
        "index": "B",
        "solvedCount": 15218
      },
      {
        "contestId": 414,
        "index": "A",
        "solvedCount": 6707
      },
      {
        "contestId": 413,
        "index": "E",
        "solvedCount": 451
      },
      {
        "contestId": 413,
        "index": "D",
        "solvedCount": 590
      },
      {
        "contestId": 413,
        "index": "C",
        "solvedCount": 2042
      },
      {
        "contestId": 413,
        "index": "B",
        "solvedCount": 1493
      },
      {
        "contestId": 413,
        "index": "A",
        "solvedCount": 2072
      },
      {
        "contestId": 412,
        "index": "E",
        "solvedCount": 742
      },
      {
        "contestId": 412,
        "index": "D",
        "solvedCount": 1470
      },
      {
        "contestId": 412,
        "index": "C",
        "solvedCount": 3154
      },
      {
        "contestId": 412,
        "index": "B",
        "solvedCount": 4508
      },
      {
        "contestId": 412,
        "index": "A",
        "solvedCount": 3568
      },
      {
        "contestId": 411,
        "index": "C",
        "solvedCount": 596
      },
      {
        "contestId": 411,
        "index": "B",
        "solvedCount": 758
      },
      {
        "contestId": 411,
        "index": "A",
        "solvedCount": 1617
      },
      {
        "contestId": 409,
        "index": "I",
        "solvedCount": 9
      },
      {
        "contestId": 409,
        "index": "H",
        "solvedCount": 869
      },
      {
        "contestId": 409,
        "index": "G",
        "solvedCount": 24
      },
      {
        "contestId": 409,
        "index": "F",
        "solvedCount": 59
      },
      {
        "contestId": 409,
        "index": "E",
        "solvedCount": 231
      },
      {
        "contestId": 409,
        "index": "D",
        "solvedCount": 342
      },
      {
        "contestId": 409,
        "index": "C",
        "solvedCount": 879
      },
      {
        "contestId": 409,
        "index": "B",
        "solvedCount": 513
      },
      {
        "contestId": 409,
        "index": "A",
        "solvedCount": 920
      },
      {
        "contestId": 408,
        "index": "B",
        "solvedCount": 7390
      },
      {
        "contestId": 408,
        "index": "A",
        "solvedCount": 9307
      },
      {
        "contestId": 407,
        "index": "E",
        "solvedCount": 588
      },
      {
        "contestId": 407,
        "index": "D",
        "solvedCount": 478
      },
      {
        "contestId": 407,
        "index": "C",
        "solvedCount": 789
      },
      {
        "contestId": 407,
        "index": "B",
        "solvedCount": 4758
      },
      {
        "contestId": 407,
        "index": "A",
        "solvedCount": 2964
      },
      {
        "contestId": 406,
        "index": "E",
        "solvedCount": 210
      },
      {
        "contestId": 406,
        "index": "D",
        "solvedCount": 1033
      },
      {
        "contestId": 405,
        "index": "E",
        "solvedCount": 580
      },
      {
        "contestId": 405,
        "index": "D",
        "solvedCount": 1906
      },
      {
        "contestId": 405,
        "index": "C",
        "solvedCount": 3099
      },
      {
        "contestId": 405,
        "index": "B",
        "solvedCount": 5113
      },
      {
        "contestId": 405,
        "index": "A",
        "solvedCount": 74094
      },
      {
        "contestId": 404,
        "index": "E",
        "solvedCount": 482
      },
      {
        "contestId": 404,
        "index": "D",
        "solvedCount": 1714
      },
      {
        "contestId": 404,
        "index": "C",
        "solvedCount": 4434
      },
      {
        "contestId": 404,
        "index": "B",
        "solvedCount": 2746
      },
      {
        "contestId": 404,
        "index": "A",
        "solvedCount": 19655
      },
      {
        "contestId": 403,
        "index": "E",
        "solvedCount": 175
      },
      {
        "contestId": 403,
        "index": "D",
        "solvedCount": 965
      },
      {
        "contestId": 402,
        "index": "E",
        "solvedCount": 1131
      },
      {
        "contestId": 402,
        "index": "D",
        "solvedCount": 1574
      },
      {
        "contestId": 402,
        "index": "C",
        "solvedCount": 4128
      },
      {
        "contestId": 402,
        "index": "B",
        "solvedCount": 3141
      },
      {
        "contestId": 402,
        "index": "A",
        "solvedCount": 4074
      },
      {
        "contestId": 401,
        "index": "E",
        "solvedCount": 161
      },
      {
        "contestId": 401,
        "index": "D",
        "solvedCount": 3402
      },
      {
        "contestId": 401,
        "index": "C",
        "solvedCount": 17380
      },
      {
        "contestId": 401,
        "index": "B",
        "solvedCount": 4007
      },
      {
        "contestId": 401,
        "index": "A",
        "solvedCount": 13539
      },
      {
        "contestId": 400,
        "index": "E",
        "solvedCount": 804
      },
      {
        "contestId": 400,
        "index": "D",
        "solvedCount": 2533
      },
      {
        "contestId": 400,
        "index": "C",
        "solvedCount": 2673
      },
      {
        "contestId": 400,
        "index": "B",
        "solvedCount": 6245
      },
      {
        "contestId": 400,
        "index": "A",
        "solvedCount": 5817
      },
      {
        "contestId": 399,
        "index": "B",
        "solvedCount": 1575
      },
      {
        "contestId": 399,
        "index": "A",
        "solvedCount": 3680
      },
      {
        "contestId": 398,
        "index": "E",
        "solvedCount": 72
      },
      {
        "contestId": 398,
        "index": "D",
        "solvedCount": 666
      },
      {
        "contestId": 398,
        "index": "C",
        "solvedCount": 170
      },
      {
        "contestId": 398,
        "index": "B",
        "solvedCount": 796
      },
      {
        "contestId": 398,
        "index": "A",
        "solvedCount": 603
      },
      {
        "contestId": 397,
        "index": "B",
        "solvedCount": 658
      },
      {
        "contestId": 397,
        "index": "A",
        "solvedCount": 2373
      },
      {
        "contestId": 396,
        "index": "E",
        "solvedCount": 140
      },
      {
        "contestId": 396,
        "index": "D",
        "solvedCount": 365
      },
      {
        "contestId": 396,
        "index": "C",
        "solvedCount": 1247
      },
      {
        "contestId": 396,
        "index": "B",
        "solvedCount": 707
      },
      {
        "contestId": 396,
        "index": "A",
        "solvedCount": 912
      },
      {
        "contestId": 394,
        "index": "E",
        "solvedCount": 109
      },
      {
        "contestId": 394,
        "index": "D",
        "solvedCount": 247
      },
      {
        "contestId": 394,
        "index": "C",
        "solvedCount": 459
      },
      {
        "contestId": 394,
        "index": "B",
        "solvedCount": 507
      },
      {
        "contestId": 394,
        "index": "A",
        "solvedCount": 2395
      },
      {
        "contestId": 393,
        "index": "B",
        "solvedCount": 1754
      },
      {
        "contestId": 393,
        "index": "A",
        "solvedCount": 5832
      },
      {
        "contestId": 392,
        "index": "E",
        "solvedCount": 167
      },
      {
        "contestId": 392,
        "index": "D",
        "solvedCount": 202
      },
      {
        "contestId": 392,
        "index": "C",
        "solvedCount": 458
      },
      {
        "contestId": 392,
        "index": "B",
        "solvedCount": 672
      },
      {
        "contestId": 392,
        "index": "A",
        "solvedCount": 638
      },
      {
        "contestId": 391,
        "index": "F3",
        "solvedCount": 2
      },
      {
        "contestId": 391,
        "index": "F2",
        "solvedCount": 3
      },
      {
        "contestId": 391,
        "index": "F1",
        "solvedCount": 12
      },
      {
        "contestId": 391,
        "index": "E2",
        "solvedCount": 3
      },
      {
        "contestId": 391,
        "index": "E1",
        "solvedCount": 4
      },
      {
        "contestId": 391,
        "index": "D2",
        "solvedCount": 12
      },
      {
        "contestId": 391,
        "index": "D1",
        "solvedCount": 23
      },
      {
        "contestId": 391,
        "index": "C3",
        "solvedCount": 29
      },
      {
        "contestId": 391,
        "index": "C2",
        "solvedCount": 31
      },
      {
        "contestId": 391,
        "index": "C1",
        "solvedCount": 37
      },
      {
        "contestId": 391,
        "index": "B",
        "solvedCount": 43
      },
      {
        "contestId": 391,
        "index": "A",
        "solvedCount": 71
      },
      {
        "contestId": 390,
        "index": "E",
        "solvedCount": 229
      },
      {
        "contestId": 390,
        "index": "D",
        "solvedCount": 396
      },
      {
        "contestId": 390,
        "index": "C",
        "solvedCount": 551
      },
      {
        "contestId": 390,
        "index": "B",
        "solvedCount": 1021
      },
      {
        "contestId": 390,
        "index": "A",
        "solvedCount": 3224
      },
      {
        "contestId": 389,
        "index": "B",
        "solvedCount": 5797
      },
      {
        "contestId": 389,
        "index": "A",
        "solvedCount": 11926
      },
      {
        "contestId": 388,
        "index": "E",
        "solvedCount": 105
      },
      {
        "contestId": 388,
        "index": "D",
        "solvedCount": 404
      },
      {
        "contestId": 388,
        "index": "C",
        "solvedCount": 2133
      },
      {
        "contestId": 388,
        "index": "B",
        "solvedCount": 1821
      },
      {
        "contestId": 388,
        "index": "A",
        "solvedCount": 7864
      },
      {
        "contestId": 387,
        "index": "E",
        "solvedCount": 773
      },
      {
        "contestId": 387,
        "index": "D",
        "solvedCount": 790
      },
      {
        "contestId": 387,
        "index": "C",
        "solvedCount": 1989
      },
      {
        "contestId": 387,
        "index": "B",
        "solvedCount": 10526
      },
      {
        "contestId": 387,
        "index": "A",
        "solvedCount": 7903
      },
      {
        "contestId": 386,
        "index": "D",
        "solvedCount": 330
      },
      {
        "contestId": 386,
        "index": "C",
        "solvedCount": 515
      },
      {
        "contestId": 386,
        "index": "B",
        "solvedCount": 1538
      },
      {
        "contestId": 386,
        "index": "A",
        "solvedCount": 4813
      },
      {
        "contestId": 385,
        "index": "E",
        "solvedCount": 499
      },
      {
        "contestId": 385,
        "index": "D",
        "solvedCount": 623
      },
      {
        "contestId": 385,
        "index": "C",
        "solvedCount": 8407
      },
      {
        "contestId": 385,
        "index": "B",
        "solvedCount": 8583
      },
      {
        "contestId": 385,
        "index": "A",
        "solvedCount": 14419
      },
      {
        "contestId": 384,
        "index": "B",
        "solvedCount": 3160
      },
      {
        "contestId": 384,
        "index": "A",
        "solvedCount": 13728
      },
      {
        "contestId": 383,
        "index": "E",
        "solvedCount": 2129
      },
      {
        "contestId": 383,
        "index": "D",
        "solvedCount": 2575
      },
      {
        "contestId": 383,
        "index": "C",
        "solvedCount": 4534
      },
      {
        "contestId": 383,
        "index": "B",
        "solvedCount": 542
      },
      {
        "contestId": 383,
        "index": "A",
        "solvedCount": 2916
      },
      {
        "contestId": 382,
        "index": "E",
        "solvedCount": 295
      },
      {
        "contestId": 382,
        "index": "D",
        "solvedCount": 592
      },
      {
        "contestId": 382,
        "index": "C",
        "solvedCount": 7616
      },
      {
        "contestId": 382,
        "index": "B",
        "solvedCount": 1210
      },
      {
        "contestId": 382,
        "index": "A",
        "solvedCount": 9785
      },
      {
        "contestId": 381,
        "index": "B",
        "solvedCount": 5721
      },
      {
        "contestId": 381,
        "index": "A",
        "solvedCount": 43989
      },
      {
        "contestId": 380,
        "index": "E",
        "solvedCount": 249
      },
      {
        "contestId": 380,
        "index": "D",
        "solvedCount": 376
      },
      {
        "contestId": 380,
        "index": "C",
        "solvedCount": 10297
      },
      {
        "contestId": 380,
        "index": "B",
        "solvedCount": 421
      },
      {
        "contestId": 380,
        "index": "A",
        "solvedCount": 1491
      },
      {
        "contestId": 379,
        "index": "G",
        "solvedCount": 120
      },
      {
        "contestId": 379,
        "index": "F",
        "solvedCount": 1794
      },
      {
        "contestId": 379,
        "index": "E",
        "solvedCount": 320
      },
      {
        "contestId": 379,
        "index": "D",
        "solvedCount": 1405
      },
      {
        "contestId": 379,
        "index": "C",
        "solvedCount": 5735
      },
      {
        "contestId": 379,
        "index": "B",
        "solvedCount": 6125
      },
      {
        "contestId": 379,
        "index": "A",
        "solvedCount": 38259
      },
      {
        "contestId": 378,
        "index": "B",
        "solvedCount": 4423
      },
      {
        "contestId": 378,
        "index": "A",
        "solvedCount": 19596
      },
      {
        "contestId": 377,
        "index": "E",
        "solvedCount": 359
      },
      {
        "contestId": 377,
        "index": "D",
        "solvedCount": 855
      },
      {
        "contestId": 377,
        "index": "C",
        "solvedCount": 859
      },
      {
        "contestId": 377,
        "index": "B",
        "solvedCount": 1467
      },
      {
        "contestId": 377,
        "index": "A",
        "solvedCount": 14987
      },
      {
        "contestId": 376,
        "index": "B",
        "solvedCount": 5398
      },
      {
        "contestId": 376,
        "index": "A",
        "solvedCount": 8248
      },
      {
        "contestId": 375,
        "index": "E",
        "solvedCount": 350
      },
      {
        "contestId": 375,
        "index": "D",
        "solvedCount": 5109
      },
      {
        "contestId": 375,
        "index": "C",
        "solvedCount": 416
      },
      {
        "contestId": 375,
        "index": "B",
        "solvedCount": 3650
      },
      {
        "contestId": 375,
        "index": "A",
        "solvedCount": 3081
      },
      {
        "contestId": 374,
        "index": "E",
        "solvedCount": 163
      },
      {
        "contestId": 374,
        "index": "D",
        "solvedCount": 762
      },
      {
        "contestId": 374,
        "index": "C",
        "solvedCount": 2376
      },
      {
        "contestId": 374,
        "index": "B",
        "solvedCount": 3041
      },
      {
        "contestId": 374,
        "index": "A",
        "solvedCount": 2612
      },
      {
        "contestId": 373,
        "index": "B",
        "solvedCount": 2164
      },
      {
        "contestId": 373,
        "index": "A",
        "solvedCount": 9197
      },
      {
        "contestId": 372,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 372,
        "index": "D",
        "solvedCount": 752
      },
      {
        "contestId": 372,
        "index": "C",
        "solvedCount": 2746
      },
      {
        "contestId": 372,
        "index": "B",
        "solvedCount": 2034
      },
      {
        "contestId": 372,
        "index": "A",
        "solvedCount": 8669
      },
      {
        "contestId": 371,
        "index": "E",
        "solvedCount": 1001
      },
      {
        "contestId": 371,
        "index": "D",
        "solvedCount": 4418
      },
      {
        "contestId": 371,
        "index": "C",
        "solvedCount": 17662
      },
      {
        "contestId": 371,
        "index": "B",
        "solvedCount": 9353
      },
      {
        "contestId": 371,
        "index": "A",
        "solvedCount": 4775
      },
      {
        "contestId": 370,
        "index": "E",
        "solvedCount": 205
      },
      {
        "contestId": 370,
        "index": "D",
        "solvedCount": 549
      },
      {
        "contestId": 370,
        "index": "C",
        "solvedCount": 1366
      },
      {
        "contestId": 370,
        "index": "B",
        "solvedCount": 2184
      },
      {
        "contestId": 370,
        "index": "A",
        "solvedCount": 7485
      },
      {
        "contestId": 369,
        "index": "E",
        "solvedCount": 1641
      },
      {
        "contestId": 369,
        "index": "D",
        "solvedCount": 969
      },
      {
        "contestId": 369,
        "index": "C",
        "solvedCount": 8113
      },
      {
        "contestId": 369,
        "index": "B",
        "solvedCount": 5722
      },
      {
        "contestId": 369,
        "index": "A",
        "solvedCount": 9163
      },
      {
        "contestId": 368,
        "index": "B",
        "solvedCount": 30129
      },
      {
        "contestId": 368,
        "index": "A",
        "solvedCount": 6634
      },
      {
        "contestId": 367,
        "index": "E",
        "solvedCount": 914
      },
      {
        "contestId": 367,
        "index": "D",
        "solvedCount": 570
      },
      {
        "contestId": 367,
        "index": "C",
        "solvedCount": 1363
      },
      {
        "contestId": 367,
        "index": "B",
        "solvedCount": 1730
      },
      {
        "contestId": 367,
        "index": "A",
        "solvedCount": 2247
      },
      {
        "contestId": 366,
        "index": "E",
        "solvedCount": 633
      },
      {
        "contestId": 366,
        "index": "D",
        "solvedCount": 1135
      },
      {
        "contestId": 366,
        "index": "C",
        "solvedCount": 3886
      },
      {
        "contestId": 366,
        "index": "B",
        "solvedCount": 6193
      },
      {
        "contestId": 366,
        "index": "A",
        "solvedCount": 4221
      },
      {
        "contestId": 365,
        "index": "B",
        "solvedCount": 12890
      },
      {
        "contestId": 365,
        "index": "A",
        "solvedCount": 13677
      },
      {
        "contestId": 364,
        "index": "E",
        "solvedCount": 457
      },
      {
        "contestId": 364,
        "index": "D",
        "solvedCount": 1547
      },
      {
        "contestId": 364,
        "index": "C",
        "solvedCount": 492
      },
      {
        "contestId": 364,
        "index": "B",
        "solvedCount": 916
      },
      {
        "contestId": 364,
        "index": "A",
        "solvedCount": 3411
      },
      {
        "contestId": 363,
        "index": "E",
        "solvedCount": 174
      },
      {
        "contestId": 363,
        "index": "D",
        "solvedCount": 3334
      },
      {
        "contestId": 363,
        "index": "C",
        "solvedCount": 12069
      },
      {
        "contestId": 363,
        "index": "B",
        "solvedCount": 38143
      },
      {
        "contestId": 363,
        "index": "A",
        "solvedCount": 9272
      },
      {
        "contestId": 362,
        "index": "E",
        "solvedCount": 665
      },
      {
        "contestId": 362,
        "index": "D",
        "solvedCount": 787
      },
      {
        "contestId": 362,
        "index": "C",
        "solvedCount": 1416
      },
      {
        "contestId": 362,
        "index": "B",
        "solvedCount": 12123
      },
      {
        "contestId": 362,
        "index": "A",
        "solvedCount": 2447
      },
      {
        "contestId": 361,
        "index": "B",
        "solvedCount": 7101
      },
      {
        "contestId": 361,
        "index": "A",
        "solvedCount": 13967
      },
      {
        "contestId": 360,
        "index": "E",
        "solvedCount": 532
      },
      {
        "contestId": 360,
        "index": "D",
        "solvedCount": 353
      },
      {
        "contestId": 360,
        "index": "C",
        "solvedCount": 891
      },
      {
        "contestId": 360,
        "index": "B",
        "solvedCount": 2012
      },
      {
        "contestId": 360,
        "index": "A",
        "solvedCount": 1365
      },
      {
        "contestId": 359,
        "index": "E",
        "solvedCount": 380
      },
      {
        "contestId": 359,
        "index": "D",
        "solvedCount": 4257
      },
      {
        "contestId": 359,
        "index": "C",
        "solvedCount": 2665
      },
      {
        "contestId": 359,
        "index": "B",
        "solvedCount": 6856
      },
      {
        "contestId": 359,
        "index": "A",
        "solvedCount": 7610
      },
      {
        "contestId": 358,
        "index": "E",
        "solvedCount": 337
      },
      {
        "contestId": 358,
        "index": "D",
        "solvedCount": 3339
      },
      {
        "contestId": 358,
        "index": "C",
        "solvedCount": 1719
      },
      {
        "contestId": 358,
        "index": "B",
        "solvedCount": 3285
      },
      {
        "contestId": 358,
        "index": "A",
        "solvedCount": 7130
      },
      {
        "contestId": 357,
        "index": "B",
        "solvedCount": 7347
      },
      {
        "contestId": 357,
        "index": "A",
        "solvedCount": 5953
      },
      {
        "contestId": 356,
        "index": "E",
        "solvedCount": 353
      },
      {
        "contestId": 356,
        "index": "D",
        "solvedCount": 691
      },
      {
        "contestId": 356,
        "index": "C",
        "solvedCount": 902
      },
      {
        "contestId": 356,
        "index": "B",
        "solvedCount": 1330
      },
      {
        "contestId": 356,
        "index": "A",
        "solvedCount": 8020
      },
      {
        "contestId": 355,
        "index": "B",
        "solvedCount": 3823
      },
      {
        "contestId": 355,
        "index": "A",
        "solvedCount": 8394
      },
      {
        "contestId": 354,
        "index": "E",
        "solvedCount": 741
      },
      {
        "contestId": 354,
        "index": "D",
        "solvedCount": 325
      },
      {
        "contestId": 354,
        "index": "C",
        "solvedCount": 2140
      },
      {
        "contestId": 354,
        "index": "B",
        "solvedCount": 363
      },
      {
        "contestId": 354,
        "index": "A",
        "solvedCount": 3722
      },
      {
        "contestId": 353,
        "index": "E",
        "solvedCount": 529
      },
      {
        "contestId": 353,
        "index": "D",
        "solvedCount": 2446
      },
      {
        "contestId": 353,
        "index": "C",
        "solvedCount": 4215
      },
      {
        "contestId": 353,
        "index": "B",
        "solvedCount": 2031
      },
      {
        "contestId": 353,
        "index": "A",
        "solvedCount": 15598
      },
      {
        "contestId": 352,
        "index": "B",
        "solvedCount": 14151
      },
      {
        "contestId": 352,
        "index": "A",
        "solvedCount": 20986
      },
      {
        "contestId": 351,
        "index": "E",
        "solvedCount": 1383
      },
      {
        "contestId": 351,
        "index": "D",
        "solvedCount": 837
      },
      {
        "contestId": 351,
        "index": "C",
        "solvedCount": 433
      },
      {
        "contestId": 351,
        "index": "B",
        "solvedCount": 1698
      },
      {
        "contestId": 351,
        "index": "A",
        "solvedCount": 1889
      },
      {
        "contestId": 350,
        "index": "E",
        "solvedCount": 676
      },
      {
        "contestId": 350,
        "index": "D",
        "solvedCount": 223
      },
      {
        "contestId": 350,
        "index": "C",
        "solvedCount": 6084
      },
      {
        "contestId": 350,
        "index": "B",
        "solvedCount": 2664
      },
      {
        "contestId": 350,
        "index": "A",
        "solvedCount": 14145
      },
      {
        "contestId": 349,
        "index": "B",
        "solvedCount": 12091
      },
      {
        "contestId": 349,
        "index": "A",
        "solvedCount": 23379
      },
      {
        "contestId": 348,
        "index": "E",
        "solvedCount": 338
      },
      {
        "contestId": 348,
        "index": "D",
        "solvedCount": 1232
      },
      {
        "contestId": 348,
        "index": "C",
        "solvedCount": 1565
      },
      {
        "contestId": 348,
        "index": "B",
        "solvedCount": 1567
      },
      {
        "contestId": 348,
        "index": "A",
        "solvedCount": 8898
      },
      {
        "contestId": 347,
        "index": "B",
        "solvedCount": 8391
      },
      {
        "contestId": 347,
        "index": "A",
        "solvedCount": 7959
      },
      {
        "contestId": 346,
        "index": "E",
        "solvedCount": 225
      },
      {
        "contestId": 346,
        "index": "D",
        "solvedCount": 557
      },
      {
        "contestId": 346,
        "index": "C",
        "solvedCount": 1100
      },
      {
        "contestId": 346,
        "index": "B",
        "solvedCount": 2541
      },
      {
        "contestId": 346,
        "index": "A",
        "solvedCount": 4886
      },
      {
        "contestId": 345,
        "index": "G",
        "solvedCount": 2
      },
      {
        "contestId": 345,
        "index": "F",
        "solvedCount": 1
      },
      {
        "contestId": 345,
        "index": "E",
        "solvedCount": 1
      },
      {
        "contestId": 345,
        "index": "D",
        "solvedCount": 37
      },
      {
        "contestId": 345,
        "index": "C",
        "solvedCount": 67
      },
      {
        "contestId": 345,
        "index": "B",
        "solvedCount": 70
      },
      {
        "contestId": 345,
        "index": "A",
        "solvedCount": 258
      },
      {
        "contestId": 344,
        "index": "B",
        "solvedCount": 7575
      },
      {
        "contestId": 344,
        "index": "A",
        "solvedCount": 88580
      },
      {
        "contestId": 343,
        "index": "E",
        "solvedCount": 571
      },
      {
        "contestId": 343,
        "index": "D",
        "solvedCount": 4466
      },
      {
        "contestId": 343,
        "index": "C",
        "solvedCount": 2072
      },
      {
        "contestId": 343,
        "index": "B",
        "solvedCount": 7426
      },
      {
        "contestId": 343,
        "index": "A",
        "solvedCount": 5053
      },
      {
        "contestId": 342,
        "index": "E",
        "solvedCount": 6114
      },
      {
        "contestId": 342,
        "index": "D",
        "solvedCount": 449
      },
      {
        "contestId": 342,
        "index": "C",
        "solvedCount": 1634
      },
      {
        "contestId": 342,
        "index": "B",
        "solvedCount": 3704
      },
      {
        "contestId": 342,
        "index": "A",
        "solvedCount": 10500
      },
      {
        "contestId": 341,
        "index": "E",
        "solvedCount": 383
      },
      {
        "contestId": 341,
        "index": "D",
        "solvedCount": 940
      },
      {
        "contestId": 340,
        "index": "E",
        "solvedCount": 1373
      },
      {
        "contestId": 340,
        "index": "D",
        "solvedCount": 4688
      },
      {
        "contestId": 340,
        "index": "C",
        "solvedCount": 2891
      },
      {
        "contestId": 340,
        "index": "B",
        "solvedCount": 1744
      },
      {
        "contestId": 340,
        "index": "A",
        "solvedCount": 6403
      },
      {
        "contestId": 339,
        "index": "E",
        "solvedCount": 501
      },
      {
        "contestId": 339,
        "index": "D",
        "solvedCount": 19305
      },
      {
        "contestId": 339,
        "index": "C",
        "solvedCount": 7642
      },
      {
        "contestId": 339,
        "index": "B",
        "solvedCount": 56723
      },
      {
        "contestId": 339,
        "index": "A",
        "solvedCount": 160051
      },
      {
        "contestId": 338,
        "index": "E",
        "solvedCount": 789
      },
      {
        "contestId": 338,
        "index": "D",
        "solvedCount": 960
      },
      {
        "contestId": 337,
        "index": "E",
        "solvedCount": 530
      },
      {
        "contestId": 337,
        "index": "D",
        "solvedCount": 4388
      },
      {
        "contestId": 337,
        "index": "C",
        "solvedCount": 3754
      },
      {
        "contestId": 337,
        "index": "B",
        "solvedCount": 8154
      },
      {
        "contestId": 337,
        "index": "A",
        "solvedCount": 64188
      },
      {
        "contestId": 336,
        "index": "E",
        "solvedCount": 98
      },
      {
        "contestId": 336,
        "index": "D",
        "solvedCount": 818
      },
      {
        "contestId": 336,
        "index": "C",
        "solvedCount": 2110
      },
      {
        "contestId": 336,
        "index": "B",
        "solvedCount": 1106
      },
      {
        "contestId": 336,
        "index": "A",
        "solvedCount": 8824
      },
      {
        "contestId": 335,
        "index": "F",
        "solvedCount": 369
      },
      {
        "contestId": 335,
        "index": "E",
        "solvedCount": 182
      },
      {
        "contestId": 335,
        "index": "D",
        "solvedCount": 243
      },
      {
        "contestId": 335,
        "index": "C",
        "solvedCount": 440
      },
      {
        "contestId": 335,
        "index": "B",
        "solvedCount": 1384
      },
      {
        "contestId": 335,
        "index": "A",
        "solvedCount": 1782
      },
      {
        "contestId": 334,
        "index": "B",
        "solvedCount": 3140
      },
      {
        "contestId": 334,
        "index": "A",
        "solvedCount": 15833
      },
      {
        "contestId": 333,
        "index": "E",
        "solvedCount": 768
      },
      {
        "contestId": 333,
        "index": "D",
        "solvedCount": 1576
      },
      {
        "contestId": 333,
        "index": "C",
        "solvedCount": 288
      },
      {
        "contestId": 333,
        "index": "B",
        "solvedCount": 1869
      },
      {
        "contestId": 333,
        "index": "A",
        "solvedCount": 2134
      },
      {
        "contestId": 332,
        "index": "E",
        "solvedCount": 267
      },
      {
        "contestId": 332,
        "index": "D",
        "solvedCount": 325
      },
      {
        "contestId": 332,
        "index": "C",
        "solvedCount": 790
      },
      {
        "contestId": 332,
        "index": "B",
        "solvedCount": 6902
      },
      {
        "contestId": 332,
        "index": "A",
        "solvedCount": 3211
      },
      {
        "contestId": 331,
        "index": "E2",
        "solvedCount": 0
      },
      {
        "contestId": 331,
        "index": "E1",
        "solvedCount": 0
      },
      {
        "contestId": 331,
        "index": "D3",
        "solvedCount": 2
      },
      {
        "contestId": 331,
        "index": "D2",
        "solvedCount": 13
      },
      {
        "contestId": 331,
        "index": "D1",
        "solvedCount": 43
      },
      {
        "contestId": 331,
        "index": "C3",
        "solvedCount": 19
      },
      {
        "contestId": 331,
        "index": "C2",
        "solvedCount": 43
      },
      {
        "contestId": 331,
        "index": "C1",
        "solvedCount": 768
      },
      {
        "contestId": 331,
        "index": "B2",
        "solvedCount": 236
      },
      {
        "contestId": 331,
        "index": "B1",
        "solvedCount": 400
      },
      {
        "contestId": 331,
        "index": "A2",
        "solvedCount": 522
      },
      {
        "contestId": 331,
        "index": "A1",
        "solvedCount": 631
      },
      {
        "contestId": 330,
        "index": "B",
        "solvedCount": 13701
      },
      {
        "contestId": 330,
        "index": "A",
        "solvedCount": 21895
      },
      {
        "contestId": 329,
        "index": "E",
        "solvedCount": 151
      },
      {
        "contestId": 329,
        "index": "D",
        "solvedCount": 320
      },
      {
        "contestId": 329,
        "index": "C",
        "solvedCount": 648
      },
      {
        "contestId": 329,
        "index": "B",
        "solvedCount": 4018
      },
      {
        "contestId": 329,
        "index": "A",
        "solvedCount": 2662
      },
      {
        "contestId": 328,
        "index": "B",
        "solvedCount": 1018
      },
      {
        "contestId": 328,
        "index": "A",
        "solvedCount": 1626
      },
      {
        "contestId": 327,
        "index": "E",
        "solvedCount": 1056
      },
      {
        "contestId": 327,
        "index": "D",
        "solvedCount": 1907
      },
      {
        "contestId": 327,
        "index": "C",
        "solvedCount": 2787
      },
      {
        "contestId": 327,
        "index": "B",
        "solvedCount": 16117
      },
      {
        "contestId": 327,
        "index": "A",
        "solvedCount": 34455
      },
      {
        "contestId": 325,
        "index": "E",
        "solvedCount": 473
      },
      {
        "contestId": 325,
        "index": "D",
        "solvedCount": 426
      },
      {
        "contestId": 325,
        "index": "C",
        "solvedCount": 300
      },
      {
        "contestId": 325,
        "index": "B",
        "solvedCount": 1089
      },
      {
        "contestId": 325,
        "index": "A",
        "solvedCount": 1682
      },
      {
        "contestId": 323,
        "index": "C",
        "solvedCount": 499
      },
      {
        "contestId": 323,
        "index": "B",
        "solvedCount": 318
      },
      {
        "contestId": 323,
        "index": "A",
        "solvedCount": 568
      },
      {
        "contestId": 322,
        "index": "B",
        "solvedCount": 10032
      },
      {
        "contestId": 322,
        "index": "A",
        "solvedCount": 6825
      },
      {
        "contestId": 321,
        "index": "E",
        "solvedCount": 3589
      },
      {
        "contestId": 321,
        "index": "D",
        "solvedCount": 406
      },
      {
        "contestId": 321,
        "index": "C",
        "solvedCount": 4974
      },
      {
        "contestId": 321,
        "index": "B",
        "solvedCount": 2185
      },
      {
        "contestId": 321,
        "index": "A",
        "solvedCount": 2183
      },
      {
        "contestId": 320,
        "index": "B",
        "solvedCount": 6234
      },
      {
        "contestId": 320,
        "index": "A",
        "solvedCount": 27380
      },
      {
        "contestId": 319,
        "index": "E",
        "solvedCount": 506
      },
      {
        "contestId": 319,
        "index": "D",
        "solvedCount": 523
      },
      {
        "contestId": 319,
        "index": "C",
        "solvedCount": 3649
      },
      {
        "contestId": 319,
        "index": "B",
        "solvedCount": 3063
      },
      {
        "contestId": 319,
        "index": "A",
        "solvedCount": 1865
      },
      {
        "contestId": 318,
        "index": "B",
        "solvedCount": 6313
      },
      {
        "contestId": 318,
        "index": "A",
        "solvedCount": 85974
      },
      {
        "contestId": 317,
        "index": "E",
        "solvedCount": 129
      },
      {
        "contestId": 317,
        "index": "D",
        "solvedCount": 894
      },
      {
        "contestId": 317,
        "index": "C",
        "solvedCount": 383
      },
      {
        "contestId": 317,
        "index": "B",
        "solvedCount": 1017
      },
      {
        "contestId": 317,
        "index": "A",
        "solvedCount": 2480
      },
      {
        "contestId": 316,
        "index": "G3",
        "solvedCount": 16
      },
      {
        "contestId": 316,
        "index": "G2",
        "solvedCount": 145
      },
      {
        "contestId": 316,
        "index": "G1",
        "solvedCount": 516
      },
      {
        "contestId": 316,
        "index": "F3",
        "solvedCount": 40
      },
      {
        "contestId": 316,
        "index": "F2",
        "solvedCount": 55
      },
      {
        "contestId": 316,
        "index": "F1",
        "solvedCount": 63
      },
      {
        "contestId": 316,
        "index": "E3",
        "solvedCount": 68
      },
      {
        "contestId": 316,
        "index": "E2",
        "solvedCount": 91
      },
      {
        "contestId": 316,
        "index": "E1",
        "solvedCount": 891
      },
      {
        "contestId": 316,
        "index": "D3",
        "solvedCount": 78
      },
      {
        "contestId": 316,
        "index": "D2",
        "solvedCount": 105
      },
      {
        "contestId": 316,
        "index": "D1",
        "solvedCount": 137
      },
      {
        "contestId": 316,
        "index": "C2",
        "solvedCount": 117
      },
      {
        "contestId": 316,
        "index": "C1",
        "solvedCount": 162
      },
      {
        "contestId": 316,
        "index": "B2",
        "solvedCount": 803
      },
      {
        "contestId": 316,
        "index": "B1",
        "solvedCount": 839
      },
      {
        "contestId": 316,
        "index": "A2",
        "solvedCount": 1118
      },
      {
        "contestId": 316,
        "index": "A1",
        "solvedCount": 1372
      },
      {
        "contestId": 315,
        "index": "B",
        "solvedCount": 6179
      },
      {
        "contestId": 315,
        "index": "A",
        "solvedCount": 9484
      },
      {
        "contestId": 314,
        "index": "E",
        "solvedCount": 309
      },
      {
        "contestId": 314,
        "index": "D",
        "solvedCount": 447
      },
      {
        "contestId": 314,
        "index": "C",
        "solvedCount": 1411
      },
      {
        "contestId": 314,
        "index": "B",
        "solvedCount": 1112
      },
      {
        "contestId": 314,
        "index": "A",
        "solvedCount": 1171
      },
      {
        "contestId": 313,
        "index": "E",
        "solvedCount": 487
      },
      {
        "contestId": 313,
        "index": "D",
        "solvedCount": 1247
      },
      {
        "contestId": 313,
        "index": "C",
        "solvedCount": 4888
      },
      {
        "contestId": 313,
        "index": "B",
        "solvedCount": 32277
      },
      {
        "contestId": 313,
        "index": "A",
        "solvedCount": 43508
      },
      {
        "contestId": 312,
        "index": "B",
        "solvedCount": 8717
      },
      {
        "contestId": 312,
        "index": "A",
        "solvedCount": 4449
      },
      {
        "contestId": 311,
        "index": "E",
        "solvedCount": 900
      },
      {
        "contestId": 311,
        "index": "D",
        "solvedCount": 599
      },
      {
        "contestId": 311,
        "index": "C",
        "solvedCount": 394
      },
      {
        "contestId": 311,
        "index": "B",
        "solvedCount": 2530
      },
      {
        "contestId": 311,
        "index": "A",
        "solvedCount": 2484
      },
      {
        "contestId": 309,
        "index": "E",
        "solvedCount": 143
      },
      {
        "contestId": 309,
        "index": "D",
        "solvedCount": 152
      },
      {
        "contestId": 309,
        "index": "C",
        "solvedCount": 864
      },
      {
        "contestId": 309,
        "index": "B",
        "solvedCount": 366
      },
      {
        "contestId": 309,
        "index": "A",
        "solvedCount": 374
      },
      {
        "contestId": 306,
        "index": "D",
        "solvedCount": 231
      },
      {
        "contestId": 306,
        "index": "C",
        "solvedCount": 382
      },
      {
        "contestId": 306,
        "index": "B",
        "solvedCount": 369
      },
      {
        "contestId": 306,
        "index": "A",
        "solvedCount": 4531
      },
      {
        "contestId": 305,
        "index": "E",
        "solvedCount": 494
      },
      {
        "contestId": 305,
        "index": "D",
        "solvedCount": 419
      },
      {
        "contestId": 305,
        "index": "C",
        "solvedCount": 2215
      },
      {
        "contestId": 305,
        "index": "B",
        "solvedCount": 1867
      },
      {
        "contestId": 305,
        "index": "A",
        "solvedCount": 3890
      },
      {
        "contestId": 304,
        "index": "B",
        "solvedCount": 2664
      },
      {
        "contestId": 304,
        "index": "A",
        "solvedCount": 8711
      },
      {
        "contestId": 303,
        "index": "E",
        "solvedCount": 269
      },
      {
        "contestId": 303,
        "index": "D",
        "solvedCount": 254
      },
      {
        "contestId": 303,
        "index": "C",
        "solvedCount": 665
      },
      {
        "contestId": 303,
        "index": "B",
        "solvedCount": 867
      },
      {
        "contestId": 303,
        "index": "A",
        "solvedCount": 2366
      },
      {
        "contestId": 302,
        "index": "B",
        "solvedCount": 5317
      },
      {
        "contestId": 302,
        "index": "A",
        "solvedCount": 7791
      },
      {
        "contestId": 301,
        "index": "E",
        "solvedCount": 335
      },
      {
        "contestId": 301,
        "index": "D",
        "solvedCount": 1769
      },
      {
        "contestId": 301,
        "index": "C",
        "solvedCount": 355
      },
      {
        "contestId": 301,
        "index": "B",
        "solvedCount": 1445
      },
      {
        "contestId": 301,
        "index": "A",
        "solvedCount": 1814
      },
      {
        "contestId": 300,
        "index": "E",
        "solvedCount": 866
      },
      {
        "contestId": 300,
        "index": "D",
        "solvedCount": 681
      },
      {
        "contestId": 300,
        "index": "C",
        "solvedCount": 7518
      },
      {
        "contestId": 300,
        "index": "B",
        "solvedCount": 5306
      },
      {
        "contestId": 300,
        "index": "A",
        "solvedCount": 17973
      },
      {
        "contestId": 299,
        "index": "B",
        "solvedCount": 3987
      },
      {
        "contestId": 299,
        "index": "A",
        "solvedCount": 5367
      },
      {
        "contestId": 298,
        "index": "B",
        "solvedCount": 11730
      },
      {
        "contestId": 298,
        "index": "A",
        "solvedCount": 9328
      },
      {
        "contestId": 297,
        "index": "E",
        "solvedCount": 305
      },
      {
        "contestId": 297,
        "index": "D",
        "solvedCount": 404
      },
      {
        "contestId": 297,
        "index": "C",
        "solvedCount": 767
      },
      {
        "contestId": 297,
        "index": "B",
        "solvedCount": 2218
      },
      {
        "contestId": 297,
        "index": "A",
        "solvedCount": 1930
      },
      {
        "contestId": 296,
        "index": "B",
        "solvedCount": 1564
      },
      {
        "contestId": 296,
        "index": "A",
        "solvedCount": 17785
      },
      {
        "contestId": 295,
        "index": "E",
        "solvedCount": 553
      },
      {
        "contestId": 295,
        "index": "D",
        "solvedCount": 610
      },
      {
        "contestId": 295,
        "index": "C",
        "solvedCount": 1439
      },
      {
        "contestId": 295,
        "index": "B",
        "solvedCount": 9240
      },
      {
        "contestId": 295,
        "index": "A",
        "solvedCount": 8044
      },
      {
        "contestId": 294,
        "index": "E",
        "solvedCount": 794
      },
      {
        "contestId": 294,
        "index": "D",
        "solvedCount": 276
      },
      {
        "contestId": 294,
        "index": "C",
        "solvedCount": 3122
      },
      {
        "contestId": 294,
        "index": "B",
        "solvedCount": 3786
      },
      {
        "contestId": 294,
        "index": "A",
        "solvedCount": 18576
      },
      {
        "contestId": 293,
        "index": "E",
        "solvedCount": 1080
      },
      {
        "contestId": 293,
        "index": "D",
        "solvedCount": 207
      },
      {
        "contestId": 293,
        "index": "C",
        "solvedCount": 434
      },
      {
        "contestId": 293,
        "index": "B",
        "solvedCount": 656
      },
      {
        "contestId": 293,
        "index": "A",
        "solvedCount": 1539
      },
      {
        "contestId": 292,
        "index": "E",
        "solvedCount": 3258
      },
      {
        "contestId": 292,
        "index": "D",
        "solvedCount": 2118
      },
      {
        "contestId": 292,
        "index": "C",
        "solvedCount": 883
      },
      {
        "contestId": 292,
        "index": "B",
        "solvedCount": 5326
      },
      {
        "contestId": 292,
        "index": "A",
        "solvedCount": 2382
      },
      {
        "contestId": 291,
        "index": "E",
        "solvedCount": 1214
      },
      {
        "contestId": 291,
        "index": "D",
        "solvedCount": 1445
      },
      {
        "contestId": 291,
        "index": "C",
        "solvedCount": 1652
      },
      {
        "contestId": 291,
        "index": "B",
        "solvedCount": 2963
      },
      {
        "contestId": 291,
        "index": "A",
        "solvedCount": 5745
      },
      {
        "contestId": 290,
        "index": "F",
        "solvedCount": 3
      },
      {
        "contestId": 290,
        "index": "E",
        "solvedCount": 11
      },
      {
        "contestId": 290,
        "index": "D",
        "solvedCount": 1077
      },
      {
        "contestId": 290,
        "index": "C",
        "solvedCount": 623
      },
      {
        "contestId": 290,
        "index": "B",
        "solvedCount": 1174
      },
      {
        "contestId": 290,
        "index": "A",
        "solvedCount": 1337
      },
      {
        "contestId": 289,
        "index": "B",
        "solvedCount": 14647
      },
      {
        "contestId": 289,
        "index": "A",
        "solvedCount": 7281
      },
      {
        "contestId": 288,
        "index": "E",
        "solvedCount": 239
      },
      {
        "contestId": 288,
        "index": "D",
        "solvedCount": 619
      },
      {
        "contestId": 288,
        "index": "C",
        "solvedCount": 1565
      },
      {
        "contestId": 288,
        "index": "B",
        "solvedCount": 1768
      },
      {
        "contestId": 288,
        "index": "A",
        "solvedCount": 3520
      },
      {
        "contestId": 287,
        "index": "B",
        "solvedCount": 6862
      },
      {
        "contestId": 287,
        "index": "A",
        "solvedCount": 15736
      },
      {
        "contestId": 286,
        "index": "E",
        "solvedCount": 715
      },
      {
        "contestId": 286,
        "index": "D",
        "solvedCount": 337
      },
      {
        "contestId": 286,
        "index": "C",
        "solvedCount": 1087
      },
      {
        "contestId": 286,
        "index": "B",
        "solvedCount": 894
      },
      {
        "contestId": 286,
        "index": "A",
        "solvedCount": 1767
      },
      {
        "contestId": 285,
        "index": "E",
        "solvedCount": 771
      },
      {
        "contestId": 285,
        "index": "D",
        "solvedCount": 1335
      },
      {
        "contestId": 285,
        "index": "C",
        "solvedCount": 19206
      },
      {
        "contestId": 285,
        "index": "B",
        "solvedCount": 13709
      },
      {
        "contestId": 285,
        "index": "A",
        "solvedCount": 11679
      },
      {
        "contestId": 284,
        "index": "B",
        "solvedCount": 6090
      },
      {
        "contestId": 284,
        "index": "A",
        "solvedCount": 5726
      },
      {
        "contestId": 283,
        "index": "E",
        "solvedCount": 580
      },
      {
        "contestId": 283,
        "index": "D",
        "solvedCount": 490
      },
      {
        "contestId": 283,
        "index": "C",
        "solvedCount": 1017
      },
      {
        "contestId": 283,
        "index": "B",
        "solvedCount": 2904
      },
      {
        "contestId": 283,
        "index": "A",
        "solvedCount": 4802
      },
      {
        "contestId": 282,
        "index": "E",
        "solvedCount": 2807
      },
      {
        "contestId": 282,
        "index": "D",
        "solvedCount": 1130
      },
      {
        "contestId": 282,
        "index": "C",
        "solvedCount": 8179
      },
      {
        "contestId": 282,
        "index": "B",
        "solvedCount": 11561
      },
      {
        "contestId": 282,
        "index": "A",
        "solvedCount": 184209
      },
      {
        "contestId": 281,
        "index": "B",
        "solvedCount": 2829
      },
      {
        "contestId": 281,
        "index": "A",
        "solvedCount": 158525
      },
      {
        "contestId": 280,
        "index": "E",
        "solvedCount": 167
      },
      {
        "contestId": 280,
        "index": "D",
        "solvedCount": 873
      },
      {
        "contestId": 280,
        "index": "C",
        "solvedCount": 2583
      },
      {
        "contestId": 280,
        "index": "B",
        "solvedCount": 2446
      },
      {
        "contestId": 280,
        "index": "A",
        "solvedCount": 1076
      },
      {
        "contestId": 279,
        "index": "E",
        "solvedCount": 1265
      },
      {
        "contestId": 279,
        "index": "D",
        "solvedCount": 609
      },
      {
        "contestId": 279,
        "index": "C",
        "solvedCount": 7330
      },
      {
        "contestId": 279,
        "index": "B",
        "solvedCount": 35204
      },
      {
        "contestId": 279,
        "index": "A",
        "solvedCount": 5042
      },
      {
        "contestId": 278,
        "index": "B",
        "solvedCount": 2990
      },
      {
        "contestId": 278,
        "index": "A",
        "solvedCount": 9709
      },
      {
        "contestId": 277,
        "index": "E",
        "solvedCount": 1028
      },
      {
        "contestId": 277,
        "index": "D",
        "solvedCount": 303
      },
      {
        "contestId": 277,
        "index": "C",
        "solvedCount": 402
      },
      {
        "contestId": 277,
        "index": "B",
        "solvedCount": 608
      },
      {
        "contestId": 277,
        "index": "A",
        "solvedCount": 12456
      },
      {
        "contestId": 276,
        "index": "E",
        "solvedCount": 1356
      },
      {
        "contestId": 276,
        "index": "D",
        "solvedCount": 10299
      },
      {
        "contestId": 276,
        "index": "C",
        "solvedCount": 18456
      },
      {
        "contestId": 276,
        "index": "B",
        "solvedCount": 22680
      },
      {
        "contestId": 276,
        "index": "A",
        "solvedCount": 23509
      },
      {
        "contestId": 275,
        "index": "B",
        "solvedCount": 2610
      },
      {
        "contestId": 275,
        "index": "A",
        "solvedCount": 23548
      },
      {
        "contestId": 274,
        "index": "E",
        "solvedCount": 266
      },
      {
        "contestId": 274,
        "index": "D",
        "solvedCount": 895
      },
      {
        "contestId": 274,
        "index": "C",
        "solvedCount": 294
      },
      {
        "contestId": 274,
        "index": "B",
        "solvedCount": 3939
      },
      {
        "contestId": 274,
        "index": "A",
        "solvedCount": 5906
      },
      {
        "contestId": 273,
        "index": "E",
        "solvedCount": 302
      },
      {
        "contestId": 273,
        "index": "D",
        "solvedCount": 364
      },
      {
        "contestId": 272,
        "index": "E",
        "solvedCount": 608
      },
      {
        "contestId": 272,
        "index": "D",
        "solvedCount": 1696
      },
      {
        "contestId": 272,
        "index": "C",
        "solvedCount": 5256
      },
      {
        "contestId": 272,
        "index": "B",
        "solvedCount": 3495
      },
      {
        "contestId": 272,
        "index": "A",
        "solvedCount": 19800
      },
      {
        "contestId": 271,
        "index": "E",
        "solvedCount": 442
      },
      {
        "contestId": 271,
        "index": "D",
        "solvedCount": 8347
      },
      {
        "contestId": 271,
        "index": "C",
        "solvedCount": 2754
      },
      {
        "contestId": 271,
        "index": "B",
        "solvedCount": 10130
      },
      {
        "contestId": 271,
        "index": "A",
        "solvedCount": 101652
      },
      {
        "contestId": 270,
        "index": "B",
        "solvedCount": 3746
      },
      {
        "contestId": 270,
        "index": "A",
        "solvedCount": 37297
      },
      {
        "contestId": 269,
        "index": "E",
        "solvedCount": 99
      },
      {
        "contestId": 269,
        "index": "D",
        "solvedCount": 392
      },
      {
        "contestId": 269,
        "index": "C",
        "solvedCount": 1277
      },
      {
        "contestId": 269,
        "index": "B",
        "solvedCount": 4660
      },
      {
        "contestId": 269,
        "index": "A",
        "solvedCount": 1916
      },
      {
        "contestId": 268,
        "index": "E",
        "solvedCount": 903
      },
      {
        "contestId": 268,
        "index": "D",
        "solvedCount": 447
      },
      {
        "contestId": 268,
        "index": "C",
        "solvedCount": 12448
      },
      {
        "contestId": 268,
        "index": "B",
        "solvedCount": 26367
      },
      {
        "contestId": 268,
        "index": "A",
        "solvedCount": 68112
      },
      {
        "contestId": 267,
        "index": "C",
        "solvedCount": 139
      },
      {
        "contestId": 267,
        "index": "B",
        "solvedCount": 515
      },
      {
        "contestId": 267,
        "index": "A",
        "solvedCount": 5193
      },
      {
        "contestId": 266,
        "index": "E",
        "solvedCount": 646
      },
      {
        "contestId": 266,
        "index": "D",
        "solvedCount": 643
      },
      {
        "contestId": 266,
        "index": "C",
        "solvedCount": 1277
      },
      {
        "contestId": 266,
        "index": "B",
        "solvedCount": 106821
      },
      {
        "contestId": 266,
        "index": "A",
        "solvedCount": 146286
      },
      {
        "contestId": 265,
        "index": "B",
        "solvedCount": 15219
      },
      {
        "contestId": 265,
        "index": "A",
        "solvedCount": 27588
      },
      {
        "contestId": 264,
        "index": "E",
        "solvedCount": 344
      },
      {
        "contestId": 264,
        "index": "D",
        "solvedCount": 373
      },
      {
        "contestId": 264,
        "index": "C",
        "solvedCount": 2229
      },
      {
        "contestId": 264,
        "index": "B",
        "solvedCount": 7051
      },
      {
        "contestId": 264,
        "index": "A",
        "solvedCount": 7179
      },
      {
        "contestId": 263,
        "index": "E",
        "solvedCount": 366
      },
      {
        "contestId": 263,
        "index": "D",
        "solvedCount": 2670
      },
      {
        "contestId": 263,
        "index": "C",
        "solvedCount": 1006
      },
      {
        "contestId": 263,
        "index": "B",
        "solvedCount": 7598
      },
      {
        "contestId": 263,
        "index": "A",
        "solvedCount": 181499
      },
      {
        "contestId": 262,
        "index": "B",
        "solvedCount": 9538
      },
      {
        "contestId": 262,
        "index": "A",
        "solvedCount": 16053
      },
      {
        "contestId": 261,
        "index": "E",
        "solvedCount": 383
      },
      {
        "contestId": 261,
        "index": "D",
        "solvedCount": 465
      },
      {
        "contestId": 261,
        "index": "C",
        "solvedCount": 649
      },
      {
        "contestId": 261,
        "index": "B",
        "solvedCount": 1045
      },
      {
        "contestId": 261,
        "index": "A",
        "solvedCount": 2903
      },
      {
        "contestId": 260,
        "index": "E",
        "solvedCount": 382
      },
      {
        "contestId": 260,
        "index": "D",
        "solvedCount": 1127
      },
      {
        "contestId": 260,
        "index": "C",
        "solvedCount": 2701
      },
      {
        "contestId": 260,
        "index": "B",
        "solvedCount": 3396
      },
      {
        "contestId": 260,
        "index": "A",
        "solvedCount": 12313
      },
      {
        "contestId": 259,
        "index": "B",
        "solvedCount": 12583
      },
      {
        "contestId": 259,
        "index": "A",
        "solvedCount": 7933
      },
      {
        "contestId": 258,
        "index": "E",
        "solvedCount": 833
      },
      {
        "contestId": 258,
        "index": "D",
        "solvedCount": 1008
      },
      {
        "contestId": 258,
        "index": "C",
        "solvedCount": 1434
      },
      {
        "contestId": 258,
        "index": "B",
        "solvedCount": 1111
      },
      {
        "contestId": 258,
        "index": "A",
        "solvedCount": 16480
      },
      {
        "contestId": 257,
        "index": "E",
        "solvedCount": 237
      },
      {
        "contestId": 257,
        "index": "D",
        "solvedCount": 1401
      },
      {
        "contestId": 257,
        "index": "C",
        "solvedCount": 3638
      },
      {
        "contestId": 257,
        "index": "B",
        "solvedCount": 6014
      },
      {
        "contestId": 257,
        "index": "A",
        "solvedCount": 5782
      },
      {
        "contestId": 256,
        "index": "E",
        "solvedCount": 574
      },
      {
        "contestId": 256,
        "index": "D",
        "solvedCount": 237
      },
      {
        "contestId": 255,
        "index": "E",
        "solvedCount": 414
      },
      {
        "contestId": 255,
        "index": "D",
        "solvedCount": 1031
      },
      {
        "contestId": 255,
        "index": "C",
        "solvedCount": 3484
      },
      {
        "contestId": 255,
        "index": "B",
        "solvedCount": 4302
      },
      {
        "contestId": 255,
        "index": "A",
        "solvedCount": 22944
      },
      {
        "contestId": 254,
        "index": "E",
        "solvedCount": 425
      },
      {
        "contestId": 254,
        "index": "D",
        "solvedCount": 434
      },
      {
        "contestId": 254,
        "index": "C",
        "solvedCount": 1284
      },
      {
        "contestId": 254,
        "index": "B",
        "solvedCount": 2020
      },
      {
        "contestId": 254,
        "index": "A",
        "solvedCount": 6191
      },
      {
        "contestId": 253,
        "index": "E",
        "solvedCount": 474
      },
      {
        "contestId": 253,
        "index": "D",
        "solvedCount": 739
      },
      {
        "contestId": 253,
        "index": "C",
        "solvedCount": 2262
      },
      {
        "contestId": 253,
        "index": "B",
        "solvedCount": 8820
      },
      {
        "contestId": 253,
        "index": "A",
        "solvedCount": 9805
      },
      {
        "contestId": 252,
        "index": "B",
        "solvedCount": 1512
      },
      {
        "contestId": 252,
        "index": "A",
        "solvedCount": 4465
      },
      {
        "contestId": 251,
        "index": "E",
        "solvedCount": 139
      },
      {
        "contestId": 251,
        "index": "D",
        "solvedCount": 410
      },
      {
        "contestId": 251,
        "index": "C",
        "solvedCount": 870
      },
      {
        "contestId": 251,
        "index": "B",
        "solvedCount": 1009
      },
      {
        "contestId": 251,
        "index": "A",
        "solvedCount": 10373
      },
      {
        "contestId": 250,
        "index": "E",
        "solvedCount": 404
      },
      {
        "contestId": 250,
        "index": "D",
        "solvedCount": 762
      },
      {
        "contestId": 250,
        "index": "C",
        "solvedCount": 1535
      },
      {
        "contestId": 250,
        "index": "B",
        "solvedCount": 1625
      },
      {
        "contestId": 250,
        "index": "A",
        "solvedCount": 3237
      },
      {
        "contestId": 249,
        "index": "E",
        "solvedCount": 226
      },
      {
        "contestId": 249,
        "index": "D",
        "solvedCount": 313
      },
      {
        "contestId": 248,
        "index": "E",
        "solvedCount": 388
      },
      {
        "contestId": 248,
        "index": "D",
        "solvedCount": 252
      },
      {
        "contestId": 248,
        "index": "C",
        "solvedCount": 507
      },
      {
        "contestId": 248,
        "index": "B",
        "solvedCount": 4258
      },
      {
        "contestId": 248,
        "index": "A",
        "solvedCount": 18628
      },
      {
        "contestId": 246,
        "index": "E",
        "solvedCount": 2405
      },
      {
        "contestId": 246,
        "index": "D",
        "solvedCount": 8386
      },
      {
        "contestId": 246,
        "index": "C",
        "solvedCount": 2410
      },
      {
        "contestId": 246,
        "index": "B",
        "solvedCount": 9494
      },
      {
        "contestId": 246,
        "index": "A",
        "solvedCount": 7711
      },
      {
        "contestId": 245,
        "index": "H",
        "solvedCount": 263
      },
      {
        "contestId": 245,
        "index": "G",
        "solvedCount": 58
      },
      {
        "contestId": 245,
        "index": "F",
        "solvedCount": 190
      },
      {
        "contestId": 245,
        "index": "E",
        "solvedCount": 914
      },
      {
        "contestId": 245,
        "index": "D",
        "solvedCount": 818
      },
      {
        "contestId": 245,
        "index": "C",
        "solvedCount": 433
      },
      {
        "contestId": 245,
        "index": "B",
        "solvedCount": 1294
      },
      {
        "contestId": 245,
        "index": "A",
        "solvedCount": 1523
      },
      {
        "contestId": 244,
        "index": "B",
        "solvedCount": 3590
      },
      {
        "contestId": 244,
        "index": "A",
        "solvedCount": 6713
      },
      {
        "contestId": 243,
        "index": "E",
        "solvedCount": 156
      },
      {
        "contestId": 243,
        "index": "D",
        "solvedCount": 193
      },
      {
        "contestId": 243,
        "index": "C",
        "solvedCount": 463
      },
      {
        "contestId": 243,
        "index": "B",
        "solvedCount": 873
      },
      {
        "contestId": 243,
        "index": "A",
        "solvedCount": 2783
      },
      {
        "contestId": 242,
        "index": "E",
        "solvedCount": 6533
      },
      {
        "contestId": 242,
        "index": "D",
        "solvedCount": 1606
      },
      {
        "contestId": 242,
        "index": "C",
        "solvedCount": 6770
      },
      {
        "contestId": 242,
        "index": "B",
        "solvedCount": 12965
      },
      {
        "contestId": 242,
        "index": "A",
        "solvedCount": 5849
      },
      {
        "contestId": 241,
        "index": "G",
        "solvedCount": 330
      },
      {
        "contestId": 241,
        "index": "F",
        "solvedCount": 77
      },
      {
        "contestId": 241,
        "index": "E",
        "solvedCount": 26
      },
      {
        "contestId": 241,
        "index": "D",
        "solvedCount": 2
      },
      {
        "contestId": 241,
        "index": "C",
        "solvedCount": 263
      },
      {
        "contestId": 241,
        "index": "B",
        "solvedCount": 21
      },
      {
        "contestId": 241,
        "index": "A",
        "solvedCount": 1083
      },
      {
        "contestId": 240,
        "index": "F",
        "solvedCount": 15
      },
      {
        "contestId": 240,
        "index": "E",
        "solvedCount": 6
      },
      {
        "contestId": 239,
        "index": "B",
        "solvedCount": 1275
      },
      {
        "contestId": 239,
        "index": "A",
        "solvedCount": 15768
      },
      {
        "contestId": 238,
        "index": "E",
        "solvedCount": 304
      },
      {
        "contestId": 238,
        "index": "D",
        "solvedCount": 226
      },
      {
        "contestId": 238,
        "index": "C",
        "solvedCount": 807
      },
      {
        "contestId": 238,
        "index": "B",
        "solvedCount": 905
      },
      {
        "contestId": 238,
        "index": "A",
        "solvedCount": 1255
      },
      {
        "contestId": 237,
        "index": "E",
        "solvedCount": 1314
      },
      {
        "contestId": 237,
        "index": "D",
        "solvedCount": 487
      },
      {
        "contestId": 237,
        "index": "C",
        "solvedCount": 4273
      },
      {
        "contestId": 237,
        "index": "B",
        "solvedCount": 2089
      },
      {
        "contestId": 237,
        "index": "A",
        "solvedCount": 22133
      },
      {
        "contestId": 236,
        "index": "B",
        "solvedCount": 11171
      },
      {
        "contestId": 236,
        "index": "A",
        "solvedCount": 155574
      },
      {
        "contestId": 235,
        "index": "E",
        "solvedCount": 658
      },
      {
        "contestId": 235,
        "index": "D",
        "solvedCount": 391
      },
      {
        "contestId": 235,
        "index": "C",
        "solvedCount": 1628
      },
      {
        "contestId": 235,
        "index": "B",
        "solvedCount": 2610
      },
      {
        "contestId": 235,
        "index": "A",
        "solvedCount": 11914
      },
      {
        "contestId": 234,
        "index": "H",
        "solvedCount": 57
      },
      {
        "contestId": 234,
        "index": "G",
        "solvedCount": 145
      },
      {
        "contestId": 234,
        "index": "F",
        "solvedCount": 136
      },
      {
        "contestId": 234,
        "index": "E",
        "solvedCount": 412
      },
      {
        "contestId": 234,
        "index": "D",
        "solvedCount": 310
      },
      {
        "contestId": 234,
        "index": "C",
        "solvedCount": 793
      },
      {
        "contestId": 234,
        "index": "B",
        "solvedCount": 1079
      },
      {
        "contestId": 234,
        "index": "A",
        "solvedCount": 975
      },
      {
        "contestId": 233,
        "index": "B",
        "solvedCount": 6253
      },
      {
        "contestId": 233,
        "index": "A",
        "solvedCount": 33770
      },
      {
        "contestId": 232,
        "index": "E",
        "solvedCount": 597
      },
      {
        "contestId": 232,
        "index": "D",
        "solvedCount": 395
      },
      {
        "contestId": 232,
        "index": "C",
        "solvedCount": 242
      },
      {
        "contestId": 232,
        "index": "B",
        "solvedCount": 1045
      },
      {
        "contestId": 232,
        "index": "A",
        "solvedCount": 1443
      },
      {
        "contestId": 231,
        "index": "E",
        "solvedCount": 1307
      },
      {
        "contestId": 231,
        "index": "D",
        "solvedCount": 3670
      },
      {
        "contestId": 231,
        "index": "C",
        "solvedCount": 6928
      },
      {
        "contestId": 231,
        "index": "B",
        "solvedCount": 3313
      },
      {
        "contestId": 231,
        "index": "A",
        "solvedCount": 240125
      },
      {
        "contestId": 230,
        "index": "B",
        "solvedCount": 54843
      },
      {
        "contestId": 230,
        "index": "A",
        "solvedCount": 57897
      },
      {
        "contestId": 229,
        "index": "E",
        "solvedCount": 398
      },
      {
        "contestId": 229,
        "index": "D",
        "solvedCount": 1830
      },
      {
        "contestId": 229,
        "index": "C",
        "solvedCount": 1269
      },
      {
        "contestId": 229,
        "index": "B",
        "solvedCount": 3126
      },
      {
        "contestId": 229,
        "index": "A",
        "solvedCount": 1807
      },
      {
        "contestId": 228,
        "index": "E",
        "solvedCount": 1898
      },
      {
        "contestId": 228,
        "index": "D",
        "solvedCount": 350
      },
      {
        "contestId": 228,
        "index": "C",
        "solvedCount": 413
      },
      {
        "contestId": 228,
        "index": "B",
        "solvedCount": 3305
      },
      {
        "contestId": 228,
        "index": "A",
        "solvedCount": 81887
      },
      {
        "contestId": 227,
        "index": "B",
        "solvedCount": 22590
      },
      {
        "contestId": 227,
        "index": "A",
        "solvedCount": 3138
      },
      {
        "contestId": 226,
        "index": "E",
        "solvedCount": 383
      },
      {
        "contestId": 226,
        "index": "D",
        "solvedCount": 838
      },
      {
        "contestId": 226,
        "index": "C",
        "solvedCount": 625
      },
      {
        "contestId": 226,
        "index": "B",
        "solvedCount": 1077
      },
      {
        "contestId": 226,
        "index": "A",
        "solvedCount": 1431
      },
      {
        "contestId": 225,
        "index": "E",
        "solvedCount": 697
      },
      {
        "contestId": 225,
        "index": "D",
        "solvedCount": 847
      },
      {
        "contestId": 225,
        "index": "C",
        "solvedCount": 7756
      },
      {
        "contestId": 225,
        "index": "B",
        "solvedCount": 2883
      },
      {
        "contestId": 225,
        "index": "A",
        "solvedCount": 9605
      },
      {
        "contestId": 224,
        "index": "B",
        "solvedCount": 6255
      },
      {
        "contestId": 224,
        "index": "A",
        "solvedCount": 20997
      },
      {
        "contestId": 223,
        "index": "E",
        "solvedCount": 158
      },
      {
        "contestId": 223,
        "index": "D",
        "solvedCount": 59
      },
      {
        "contestId": 223,
        "index": "C",
        "solvedCount": 1151
      },
      {
        "contestId": 223,
        "index": "B",
        "solvedCount": 1185
      },
      {
        "contestId": 223,
        "index": "A",
        "solvedCount": 1503
      },
      {
        "contestId": 222,
        "index": "E",
        "solvedCount": 1955
      },
      {
        "contestId": 222,
        "index": "D",
        "solvedCount": 1829
      },
      {
        "contestId": 222,
        "index": "C",
        "solvedCount": 1775
      },
      {
        "contestId": 222,
        "index": "B",
        "solvedCount": 5440
      },
      {
        "contestId": 222,
        "index": "A",
        "solvedCount": 9188
      },
      {
        "contestId": 221,
        "index": "B",
        "solvedCount": 4050
      },
      {
        "contestId": 221,
        "index": "A",
        "solvedCount": 12852
      },
      {
        "contestId": 220,
        "index": "E",
        "solvedCount": 1130
      },
      {
        "contestId": 220,
        "index": "D",
        "solvedCount": 258
      },
      {
        "contestId": 220,
        "index": "C",
        "solvedCount": 767
      },
      {
        "contestId": 220,
        "index": "B",
        "solvedCount": 6084
      },
      {
        "contestId": 220,
        "index": "A",
        "solvedCount": 8684
      },
      {
        "contestId": 219,
        "index": "E",
        "solvedCount": 553
      },
      {
        "contestId": 219,
        "index": "D",
        "solvedCount": 7032
      },
      {
        "contestId": 219,
        "index": "C",
        "solvedCount": 5827
      },
      {
        "contestId": 219,
        "index": "B",
        "solvedCount": 5322
      },
      {
        "contestId": 219,
        "index": "A",
        "solvedCount": 21310
      },
      {
        "contestId": 218,
        "index": "B",
        "solvedCount": 13208
      },
      {
        "contestId": 218,
        "index": "A",
        "solvedCount": 7276
      },
      {
        "contestId": 217,
        "index": "E",
        "solvedCount": 259
      },
      {
        "contestId": 217,
        "index": "D",
        "solvedCount": 228
      },
      {
        "contestId": 217,
        "index": "C",
        "solvedCount": 272
      },
      {
        "contestId": 217,
        "index": "B",
        "solvedCount": 615
      },
      {
        "contestId": 217,
        "index": "A",
        "solvedCount": 15182
      },
      {
        "contestId": 216,
        "index": "E",
        "solvedCount": 489
      },
      {
        "contestId": 216,
        "index": "D",
        "solvedCount": 1129
      },
      {
        "contestId": 216,
        "index": "C",
        "solvedCount": 1656
      },
      {
        "contestId": 216,
        "index": "B",
        "solvedCount": 5286
      },
      {
        "contestId": 216,
        "index": "A",
        "solvedCount": 4455
      },
      {
        "contestId": 215,
        "index": "E",
        "solvedCount": 492
      },
      {
        "contestId": 215,
        "index": "D",
        "solvedCount": 1334
      },
      {
        "contestId": 215,
        "index": "C",
        "solvedCount": 450
      },
      {
        "contestId": 215,
        "index": "B",
        "solvedCount": 4917
      },
      {
        "contestId": 215,
        "index": "A",
        "solvedCount": 12146
      },
      {
        "contestId": 214,
        "index": "B",
        "solvedCount": 4489
      },
      {
        "contestId": 214,
        "index": "A",
        "solvedCount": 26577
      },
      {
        "contestId": 213,
        "index": "E",
        "solvedCount": 662
      },
      {
        "contestId": 213,
        "index": "D",
        "solvedCount": 312
      },
      {
        "contestId": 213,
        "index": "C",
        "solvedCount": 1744
      },
      {
        "contestId": 213,
        "index": "B",
        "solvedCount": 1300
      },
      {
        "contestId": 213,
        "index": "A",
        "solvedCount": 1212
      },
      {
        "contestId": 212,
        "index": "E",
        "solvedCount": 1146
      },
      {
        "contestId": 212,
        "index": "D",
        "solvedCount": 385
      },
      {
        "contestId": 212,
        "index": "C",
        "solvedCount": 287
      },
      {
        "contestId": 212,
        "index": "B",
        "solvedCount": 252
      },
      {
        "contestId": 212,
        "index": "A",
        "solvedCount": 151
      },
      {
        "contestId": 209,
        "index": "C",
        "solvedCount": 595
      },
      {
        "contestId": 209,
        "index": "B",
        "solvedCount": 308
      },
      {
        "contestId": 209,
        "index": "A",
        "solvedCount": 1399
      },
      {
        "contestId": 208,
        "index": "E",
        "solvedCount": 4808
      },
      {
        "contestId": 208,
        "index": "D",
        "solvedCount": 7178
      },
      {
        "contestId": 208,
        "index": "C",
        "solvedCount": 1501
      },
      {
        "contestId": 208,
        "index": "B",
        "solvedCount": 1215
      },
      {
        "contestId": 208,
        "index": "A",
        "solvedCount": 70572
      },
      {
        "contestId": 207,
        "index": "D9",
        "solvedCount": 3
      },
      {
        "contestId": 207,
        "index": "D8",
        "solvedCount": 7
      },
      {
        "contestId": 207,
        "index": "D7",
        "solvedCount": 3
      },
      {
        "contestId": 207,
        "index": "D6",
        "solvedCount": 5
      },
      {
        "contestId": 207,
        "index": "D5",
        "solvedCount": 5
      },
      {
        "contestId": 207,
        "index": "D4",
        "solvedCount": 4
      },
      {
        "contestId": 207,
        "index": "D3",
        "solvedCount": 10
      },
      {
        "contestId": 207,
        "index": "D2",
        "solvedCount": 11
      },
      {
        "contestId": 207,
        "index": "D10",
        "solvedCount": 3
      },
      {
        "contestId": 207,
        "index": "D1",
        "solvedCount": 15
      },
      {
        "contestId": 207,
        "index": "C3",
        "solvedCount": 1
      },
      {
        "contestId": 207,
        "index": "C2",
        "solvedCount": 5
      },
      {
        "contestId": 207,
        "index": "C1",
        "solvedCount": 12
      },
      {
        "contestId": 207,
        "index": "B3",
        "solvedCount": 7
      },
      {
        "contestId": 207,
        "index": "B2",
        "solvedCount": 27
      },
      {
        "contestId": 207,
        "index": "B1",
        "solvedCount": 46
      },
      {
        "contestId": 207,
        "index": "A3",
        "solvedCount": 18
      },
      {
        "contestId": 207,
        "index": "A2",
        "solvedCount": 40
      },
      {
        "contestId": 207,
        "index": "A1",
        "solvedCount": 50
      },
      {
        "contestId": 205,
        "index": "B",
        "solvedCount": 5319
      },
      {
        "contestId": 205,
        "index": "A",
        "solvedCount": 18390
      },
      {
        "contestId": 204,
        "index": "E",
        "solvedCount": 936
      },
      {
        "contestId": 204,
        "index": "D",
        "solvedCount": 364
      },
      {
        "contestId": 204,
        "index": "C",
        "solvedCount": 784
      },
      {
        "contestId": 204,
        "index": "B",
        "solvedCount": 2936
      },
      {
        "contestId": 204,
        "index": "A",
        "solvedCount": 3837
      },
      {
        "contestId": 203,
        "index": "E",
        "solvedCount": 255
      },
      {
        "contestId": 203,
        "index": "D",
        "solvedCount": 1331
      },
      {
        "contestId": 203,
        "index": "C",
        "solvedCount": 4552
      },
      {
        "contestId": 203,
        "index": "B",
        "solvedCount": 2316
      },
      {
        "contestId": 203,
        "index": "A",
        "solvedCount": 3789
      },
      {
        "contestId": 202,
        "index": "B",
        "solvedCount": 744
      },
      {
        "contestId": 202,
        "index": "A",
        "solvedCount": 12691
      },
      {
        "contestId": 201,
        "index": "E",
        "solvedCount": 314
      },
      {
        "contestId": 201,
        "index": "D",
        "solvedCount": 360
      },
      {
        "contestId": 201,
        "index": "C",
        "solvedCount": 994
      },
      {
        "contestId": 201,
        "index": "B",
        "solvedCount": 985
      },
      {
        "contestId": 201,
        "index": "A",
        "solvedCount": 1713
      },
      {
        "contestId": 200,
        "index": "E",
        "solvedCount": 311
      },
      {
        "contestId": 200,
        "index": "D",
        "solvedCount": 808
      },
      {
        "contestId": 200,
        "index": "C",
        "solvedCount": 940
      },
      {
        "contestId": 200,
        "index": "B",
        "solvedCount": 86990
      },
      {
        "contestId": 200,
        "index": "A",
        "solvedCount": 619
      },
      {
        "contestId": 199,
        "index": "B",
        "solvedCount": 728
      },
      {
        "contestId": 199,
        "index": "A",
        "solvedCount": 18861
      },
      {
        "contestId": 198,
        "index": "E",
        "solvedCount": 359
      },
      {
        "contestId": 198,
        "index": "D",
        "solvedCount": 80
      },
      {
        "contestId": 198,
        "index": "C",
        "solvedCount": 306
      },
      {
        "contestId": 198,
        "index": "B",
        "solvedCount": 2226
      },
      {
        "contestId": 198,
        "index": "A",
        "solvedCount": 2013
      },
      {
        "contestId": 197,
        "index": "B",
        "solvedCount": 4204
      },
      {
        "contestId": 197,
        "index": "A",
        "solvedCount": 5185
      },
      {
        "contestId": 196,
        "index": "E",
        "solvedCount": 670
      },
      {
        "contestId": 196,
        "index": "D",
        "solvedCount": 467
      },
      {
        "contestId": 196,
        "index": "C",
        "solvedCount": 611
      },
      {
        "contestId": 196,
        "index": "B",
        "solvedCount": 1494
      },
      {
        "contestId": 196,
        "index": "A",
        "solvedCount": 2722
      },
      {
        "contestId": 195,
        "index": "E",
        "solvedCount": 626
      },
      {
        "contestId": 195,
        "index": "D",
        "solvedCount": 895
      },
      {
        "contestId": 195,
        "index": "C",
        "solvedCount": 896
      },
      {
        "contestId": 195,
        "index": "B",
        "solvedCount": 4470
      },
      {
        "contestId": 195,
        "index": "A",
        "solvedCount": 6066
      },
      {
        "contestId": 194,
        "index": "B",
        "solvedCount": 2983
      },
      {
        "contestId": 194,
        "index": "A",
        "solvedCount": 8248
      },
      {
        "contestId": 193,
        "index": "E",
        "solvedCount": 292
      },
      {
        "contestId": 193,
        "index": "D",
        "solvedCount": 349
      },
      {
        "contestId": 193,
        "index": "C",
        "solvedCount": 393
      },
      {
        "contestId": 193,
        "index": "B",
        "solvedCount": 658
      },
      {
        "contestId": 193,
        "index": "A",
        "solvedCount": 2137
      },
      {
        "contestId": 192,
        "index": "B",
        "solvedCount": 5398
      },
      {
        "contestId": 192,
        "index": "A",
        "solvedCount": 8216
      },
      {
        "contestId": 191,
        "index": "E",
        "solvedCount": 670
      },
      {
        "contestId": 191,
        "index": "D",
        "solvedCount": 315
      },
      {
        "contestId": 191,
        "index": "C",
        "solvedCount": 4767
      },
      {
        "contestId": 191,
        "index": "B",
        "solvedCount": 690
      },
      {
        "contestId": 191,
        "index": "A",
        "solvedCount": 2389
      },
      {
        "contestId": 190,
        "index": "E",
        "solvedCount": 1189
      },
      {
        "contestId": 190,
        "index": "D",
        "solvedCount": 1728
      },
      {
        "contestId": 190,
        "index": "C",
        "solvedCount": 2379
      },
      {
        "contestId": 190,
        "index": "B",
        "solvedCount": 2430
      },
      {
        "contestId": 190,
        "index": "A",
        "solvedCount": 4753
      },
      {
        "contestId": 189,
        "index": "B",
        "solvedCount": 3434
      },
      {
        "contestId": 189,
        "index": "A",
        "solvedCount": 50315
      },
      {
        "contestId": 188,
        "index": "H",
        "solvedCount": 76
      },
      {
        "contestId": 188,
        "index": "G",
        "solvedCount": 105
      },
      {
        "contestId": 188,
        "index": "F",
        "solvedCount": 158
      },
      {
        "contestId": 188,
        "index": "E",
        "solvedCount": 176
      },
      {
        "contestId": 188,
        "index": "D",
        "solvedCount": 222
      },
      {
        "contestId": 188,
        "index": "C",
        "solvedCount": 227
      },
      {
        "contestId": 188,
        "index": "B",
        "solvedCount": 224
      },
      {
        "contestId": 188,
        "index": "A",
        "solvedCount": 307
      },
      {
        "contestId": 187,
        "index": "E",
        "solvedCount": 83
      },
      {
        "contestId": 187,
        "index": "D",
        "solvedCount": 394
      },
      {
        "contestId": 187,
        "index": "C",
        "solvedCount": 907
      },
      {
        "contestId": 187,
        "index": "B",
        "solvedCount": 1211
      },
      {
        "contestId": 187,
        "index": "A",
        "solvedCount": 1434
      },
      {
        "contestId": 186,
        "index": "B",
        "solvedCount": 4636
      },
      {
        "contestId": 186,
        "index": "A",
        "solvedCount": 14367
      },
      {
        "contestId": 185,
        "index": "E",
        "solvedCount": 88
      },
      {
        "contestId": 185,
        "index": "D",
        "solvedCount": 323
      },
      {
        "contestId": 185,
        "index": "C",
        "solvedCount": 99
      },
      {
        "contestId": 185,
        "index": "B",
        "solvedCount": 1061
      },
      {
        "contestId": 185,
        "index": "A",
        "solvedCount": 3450
      },
      {
        "contestId": 183,
        "index": "E",
        "solvedCount": 108
      },
      {
        "contestId": 183,
        "index": "D",
        "solvedCount": 364
      },
      {
        "contestId": 183,
        "index": "C",
        "solvedCount": 512
      },
      {
        "contestId": 183,
        "index": "B",
        "solvedCount": 526
      },
      {
        "contestId": 183,
        "index": "A",
        "solvedCount": 465
      },
      {
        "contestId": 182,
        "index": "E",
        "solvedCount": 1198
      },
      {
        "contestId": 182,
        "index": "D",
        "solvedCount": 6700
      },
      {
        "contestId": 182,
        "index": "C",
        "solvedCount": 669
      },
      {
        "contestId": 182,
        "index": "B",
        "solvedCount": 6224
      },
      {
        "contestId": 182,
        "index": "A",
        "solvedCount": 252
      },
      {
        "contestId": 181,
        "index": "B",
        "solvedCount": 2040
      },
      {
        "contestId": 181,
        "index": "A",
        "solvedCount": 5178
      },
      {
        "contestId": 180,
        "index": "F",
        "solvedCount": 674
      },
      {
        "contestId": 180,
        "index": "E",
        "solvedCount": 249
      },
      {
        "contestId": 180,
        "index": "D",
        "solvedCount": 139
      },
      {
        "contestId": 180,
        "index": "C",
        "solvedCount": 577
      },
      {
        "contestId": 180,
        "index": "B",
        "solvedCount": 26
      },
      {
        "contestId": 180,
        "index": "A",
        "solvedCount": 154
      },
      {
        "contestId": 178,
        "index": "F3",
        "solvedCount": 28
      },
      {
        "contestId": 178,
        "index": "F2",
        "solvedCount": 49
      },
      {
        "contestId": 178,
        "index": "F1",
        "solvedCount": 166
      },
      {
        "contestId": 178,
        "index": "E3",
        "solvedCount": 53
      },
      {
        "contestId": 178,
        "index": "E2",
        "solvedCount": 104
      },
      {
        "contestId": 178,
        "index": "E1",
        "solvedCount": 166
      },
      {
        "contestId": 178,
        "index": "D3",
        "solvedCount": 102
      },
      {
        "contestId": 178,
        "index": "D2",
        "solvedCount": 134
      },
      {
        "contestId": 178,
        "index": "D1",
        "solvedCount": 356
      },
      {
        "contestId": 178,
        "index": "C3",
        "solvedCount": 163
      },
      {
        "contestId": 178,
        "index": "C2",
        "solvedCount": 175
      },
      {
        "contestId": 178,
        "index": "C1",
        "solvedCount": 316
      },
      {
        "contestId": 178,
        "index": "B3",
        "solvedCount": 220
      },
      {
        "contestId": 178,
        "index": "B2",
        "solvedCount": 300
      },
      {
        "contestId": 178,
        "index": "B1",
        "solvedCount": 321
      },
      {
        "contestId": 178,
        "index": "A3",
        "solvedCount": 470
      },
      {
        "contestId": 178,
        "index": "A2",
        "solvedCount": 491
      },
      {
        "contestId": 178,
        "index": "A1",
        "solvedCount": 497
      },
      {
        "contestId": 177,
        "index": "G2",
        "solvedCount": 12
      },
      {
        "contestId": 177,
        "index": "G1",
        "solvedCount": 17
      },
      {
        "contestId": 177,
        "index": "F2",
        "solvedCount": 33
      },
      {
        "contestId": 177,
        "index": "F1",
        "solvedCount": 165
      },
      {
        "contestId": 177,
        "index": "E2",
        "solvedCount": 140
      },
      {
        "contestId": 177,
        "index": "E1",
        "solvedCount": 272
      },
      {
        "contestId": 177,
        "index": "D2",
        "solvedCount": 511
      },
      {
        "contestId": 177,
        "index": "D1",
        "solvedCount": 827
      },
      {
        "contestId": 177,
        "index": "C2",
        "solvedCount": 505
      },
      {
        "contestId": 177,
        "index": "C1",
        "solvedCount": 538
      },
      {
        "contestId": 177,
        "index": "B2",
        "solvedCount": 863
      },
      {
        "contestId": 177,
        "index": "B1",
        "solvedCount": 1030
      },
      {
        "contestId": 177,
        "index": "A2",
        "solvedCount": 1156
      },
      {
        "contestId": 177,
        "index": "A1",
        "solvedCount": 1179
      },
      {
        "contestId": 176,
        "index": "E",
        "solvedCount": 784
      },
      {
        "contestId": 176,
        "index": "D",
        "solvedCount": 270
      },
      {
        "contestId": 176,
        "index": "C",
        "solvedCount": 364
      },
      {
        "contestId": 176,
        "index": "B",
        "solvedCount": 1252
      },
      {
        "contestId": 176,
        "index": "A",
        "solvedCount": 923
      },
      {
        "contestId": 175,
        "index": "F",
        "solvedCount": 58
      },
      {
        "contestId": 175,
        "index": "E",
        "solvedCount": 232
      },
      {
        "contestId": 175,
        "index": "D",
        "solvedCount": 269
      },
      {
        "contestId": 175,
        "index": "C",
        "solvedCount": 1149
      },
      {
        "contestId": 175,
        "index": "B",
        "solvedCount": 1243
      },
      {
        "contestId": 175,
        "index": "A",
        "solvedCount": 2128
      },
      {
        "contestId": 174,
        "index": "C",
        "solvedCount": 891
      },
      {
        "contestId": 174,
        "index": "B",
        "solvedCount": 1792
      },
      {
        "contestId": 174,
        "index": "A",
        "solvedCount": 2111
      },
      {
        "contestId": 173,
        "index": "E",
        "solvedCount": 494
      },
      {
        "contestId": 173,
        "index": "D",
        "solvedCount": 225
      },
      {
        "contestId": 173,
        "index": "C",
        "solvedCount": 831
      },
      {
        "contestId": 173,
        "index": "B",
        "solvedCount": 2136
      },
      {
        "contestId": 173,
        "index": "A",
        "solvedCount": 2019
      },
      {
        "contestId": 172,
        "index": "E",
        "solvedCount": 263
      },
      {
        "contestId": 172,
        "index": "D",
        "solvedCount": 1231
      },
      {
        "contestId": 172,
        "index": "C",
        "solvedCount": 1054
      },
      {
        "contestId": 172,
        "index": "B",
        "solvedCount": 2361
      },
      {
        "contestId": 172,
        "index": "A",
        "solvedCount": 5072
      },
      {
        "contestId": 171,
        "index": "H",
        "solvedCount": 44
      },
      {
        "contestId": 171,
        "index": "G",
        "solvedCount": 73
      },
      {
        "contestId": 171,
        "index": "F",
        "solvedCount": 424
      },
      {
        "contestId": 171,
        "index": "E",
        "solvedCount": 149
      },
      {
        "contestId": 171,
        "index": "D",
        "solvedCount": 711
      },
      {
        "contestId": 171,
        "index": "C",
        "solvedCount": 105
      },
      {
        "contestId": 171,
        "index": "B",
        "solvedCount": 791
      },
      {
        "contestId": 171,
        "index": "A",
        "solvedCount": 835
      },
      {
        "contestId": 169,
        "index": "B",
        "solvedCount": 2699
      },
      {
        "contestId": 169,
        "index": "A",
        "solvedCount": 4972
      },
      {
        "contestId": 168,
        "index": "B",
        "solvedCount": 1121
      },
      {
        "contestId": 168,
        "index": "A",
        "solvedCount": 9363
      },
      {
        "contestId": 167,
        "index": "E",
        "solvedCount": 464
      },
      {
        "contestId": 167,
        "index": "D",
        "solvedCount": 167
      },
      {
        "contestId": 167,
        "index": "C",
        "solvedCount": 548
      },
      {
        "contestId": 167,
        "index": "B",
        "solvedCount": 1635
      },
      {
        "contestId": 167,
        "index": "A",
        "solvedCount": 1016
      },
      {
        "contestId": 166,
        "index": "E",
        "solvedCount": 16450
      },
      {
        "contestId": 166,
        "index": "D",
        "solvedCount": 304
      },
      {
        "contestId": 166,
        "index": "C",
        "solvedCount": 5391
      },
      {
        "contestId": 166,
        "index": "B",
        "solvedCount": 1641
      },
      {
        "contestId": 166,
        "index": "A",
        "solvedCount": 13409
      },
      {
        "contestId": 165,
        "index": "E",
        "solvedCount": 5016
      },
      {
        "contestId": 165,
        "index": "D",
        "solvedCount": 1365
      },
      {
        "contestId": 165,
        "index": "C",
        "solvedCount": 10324
      },
      {
        "contestId": 165,
        "index": "B",
        "solvedCount": 10723
      },
      {
        "contestId": 165,
        "index": "A",
        "solvedCount": 19578
      },
      {
        "contestId": 164,
        "index": "E",
        "solvedCount": 59
      },
      {
        "contestId": 164,
        "index": "D",
        "solvedCount": 205
      },
      {
        "contestId": 164,
        "index": "C",
        "solvedCount": 788
      },
      {
        "contestId": 164,
        "index": "B",
        "solvedCount": 387
      },
      {
        "contestId": 164,
        "index": "A",
        "solvedCount": 728
      },
      {
        "contestId": 163,
        "index": "E",
        "solvedCount": 1165
      },
      {
        "contestId": 163,
        "index": "D",
        "solvedCount": 429
      },
      {
        "contestId": 163,
        "index": "C",
        "solvedCount": 475
      },
      {
        "contestId": 163,
        "index": "B",
        "solvedCount": 842
      },
      {
        "contestId": 163,
        "index": "A",
        "solvedCount": 2024
      },
      {
        "contestId": 162,
        "index": "J",
        "solvedCount": 23
      },
      {
        "contestId": 162,
        "index": "I",
        "solvedCount": 10
      },
      {
        "contestId": 162,
        "index": "H",
        "solvedCount": 25
      },
      {
        "contestId": 162,
        "index": "G",
        "solvedCount": 5
      },
      {
        "contestId": 162,
        "index": "F",
        "solvedCount": 63
      },
      {
        "contestId": 162,
        "index": "E",
        "solvedCount": 105
      },
      {
        "contestId": 162,
        "index": "D",
        "solvedCount": 139
      },
      {
        "contestId": 162,
        "index": "C",
        "solvedCount": 44
      },
      {
        "contestId": 162,
        "index": "B",
        "solvedCount": 198
      },
      {
        "contestId": 162,
        "index": "A",
        "solvedCount": 412
      },
      {
        "contestId": 161,
        "index": "E",
        "solvedCount": 397
      },
      {
        "contestId": 161,
        "index": "D",
        "solvedCount": 10804
      },
      {
        "contestId": 161,
        "index": "C",
        "solvedCount": 564
      },
      {
        "contestId": 161,
        "index": "B",
        "solvedCount": 1720
      },
      {
        "contestId": 161,
        "index": "A",
        "solvedCount": 4020
      },
      {
        "contestId": 160,
        "index": "E",
        "solvedCount": 500
      },
      {
        "contestId": 160,
        "index": "D",
        "solvedCount": 1929
      },
      {
        "contestId": 160,
        "index": "C",
        "solvedCount": 3085
      },
      {
        "contestId": 160,
        "index": "B",
        "solvedCount": 11337
      },
      {
        "contestId": 160,
        "index": "A",
        "solvedCount": 92816
      },
      {
        "contestId": 159,
        "index": "E",
        "solvedCount": 871
      },
      {
        "contestId": 159,
        "index": "D",
        "solvedCount": 3852
      },
      {
        "contestId": 159,
        "index": "C",
        "solvedCount": 2536
      },
      {
        "contestId": 159,
        "index": "B",
        "solvedCount": 3162
      },
      {
        "contestId": 159,
        "index": "A",
        "solvedCount": 2313
      },
      {
        "contestId": 158,
        "index": "E",
        "solvedCount": 1396
      },
      {
        "contestId": 158,
        "index": "D",
        "solvedCount": 5857
      },
      {
        "contestId": 158,
        "index": "C",
        "solvedCount": 7062
      },
      {
        "contestId": 158,
        "index": "B",
        "solvedCount": 70673
      },
      {
        "contestId": 158,
        "index": "A",
        "solvedCount": 191840
      },
      {
        "contestId": 157,
        "index": "B",
        "solvedCount": 11252
      },
      {
        "contestId": 157,
        "index": "A",
        "solvedCount": 6308
      },
      {
        "contestId": 156,
        "index": "E",
        "solvedCount": 148
      },
      {
        "contestId": 156,
        "index": "D",
        "solvedCount": 1184
      },
      {
        "contestId": 156,
        "index": "C",
        "solvedCount": 1709
      },
      {
        "contestId": 156,
        "index": "B",
        "solvedCount": 1397
      },
      {
        "contestId": 156,
        "index": "A",
        "solvedCount": 1611
      },
      {
        "contestId": 155,
        "index": "B",
        "solvedCount": 8780
      },
      {
        "contestId": 155,
        "index": "A",
        "solvedCount": 58075
      },
      {
        "contestId": 154,
        "index": "E",
        "solvedCount": 81
      },
      {
        "contestId": 154,
        "index": "D",
        "solvedCount": 374
      },
      {
        "contestId": 154,
        "index": "C",
        "solvedCount": 1916
      },
      {
        "contestId": 154,
        "index": "B",
        "solvedCount": 2739
      },
      {
        "contestId": 154,
        "index": "A",
        "solvedCount": 2441
      },
      {
        "contestId": 153,
        "index": "E",
        "solvedCount": 14
      },
      {
        "contestId": 153,
        "index": "D",
        "solvedCount": 12
      },
      {
        "contestId": 153,
        "index": "C",
        "solvedCount": 22
      },
      {
        "contestId": 153,
        "index": "B",
        "solvedCount": 76
      },
      {
        "contestId": 153,
        "index": "A",
        "solvedCount": 145
      },
      {
        "contestId": 152,
        "index": "E",
        "solvedCount": 391
      },
      {
        "contestId": 152,
        "index": "D",
        "solvedCount": 220
      },
      {
        "contestId": 152,
        "index": "C",
        "solvedCount": 9134
      },
      {
        "contestId": 152,
        "index": "B",
        "solvedCount": 5430
      },
      {
        "contestId": 152,
        "index": "A",
        "solvedCount": 12965
      },
      {
        "contestId": 151,
        "index": "B",
        "solvedCount": 5535
      },
      {
        "contestId": 151,
        "index": "A",
        "solvedCount": 50846
      },
      {
        "contestId": 150,
        "index": "E",
        "solvedCount": 606
      },
      {
        "contestId": 150,
        "index": "D",
        "solvedCount": 484
      },
      {
        "contestId": 150,
        "index": "C",
        "solvedCount": 518
      },
      {
        "contestId": 150,
        "index": "B",
        "solvedCount": 2230
      },
      {
        "contestId": 150,
        "index": "A",
        "solvedCount": 4346
      },
      {
        "contestId": 149,
        "index": "E",
        "solvedCount": 1702
      },
      {
        "contestId": 149,
        "index": "D",
        "solvedCount": 2963
      },
      {
        "contestId": 149,
        "index": "C",
        "solvedCount": 4938
      },
      {
        "contestId": 149,
        "index": "B",
        "solvedCount": 2096
      },
      {
        "contestId": 149,
        "index": "A",
        "solvedCount": 31304
      },
      {
        "contestId": 148,
        "index": "E",
        "solvedCount": 3089
      },
      {
        "contestId": 148,
        "index": "D",
        "solvedCount": 5711
      },
      {
        "contestId": 148,
        "index": "C",
        "solvedCount": 2779
      },
      {
        "contestId": 148,
        "index": "B",
        "solvedCount": 4751
      },
      {
        "contestId": 148,
        "index": "A",
        "solvedCount": 71767
      },
      {
        "contestId": 147,
        "index": "B",
        "solvedCount": 635
      },
      {
        "contestId": 147,
        "index": "A",
        "solvedCount": 2694
      },
      {
        "contestId": 146,
        "index": "B",
        "solvedCount": 3641
      },
      {
        "contestId": 146,
        "index": "A",
        "solvedCount": 11975
      },
      {
        "contestId": 145,
        "index": "E",
        "solvedCount": 2325
      },
      {
        "contestId": 145,
        "index": "D",
        "solvedCount": 216
      },
      {
        "contestId": 145,
        "index": "C",
        "solvedCount": 1393
      },
      {
        "contestId": 145,
        "index": "B",
        "solvedCount": 1329
      },
      {
        "contestId": 145,
        "index": "A",
        "solvedCount": 4351
      },
      {
        "contestId": 144,
        "index": "E",
        "solvedCount": 474
      },
      {
        "contestId": 144,
        "index": "D",
        "solvedCount": 2973
      },
      {
        "contestId": 144,
        "index": "C",
        "solvedCount": 3428
      },
      {
        "contestId": 144,
        "index": "B",
        "solvedCount": 4599
      },
      {
        "contestId": 144,
        "index": "A",
        "solvedCount": 73523
      },
      {
        "contestId": 143,
        "index": "B",
        "solvedCount": 4598
      },
      {
        "contestId": 143,
        "index": "A",
        "solvedCount": 10656
      },
      {
        "contestId": 142,
        "index": "E",
        "solvedCount": 68
      },
      {
        "contestId": 142,
        "index": "D",
        "solvedCount": 307
      },
      {
        "contestId": 142,
        "index": "C",
        "solvedCount": 719
      },
      {
        "contestId": 142,
        "index": "B",
        "solvedCount": 1427
      },
      {
        "contestId": 142,
        "index": "A",
        "solvedCount": 1380
      },
      {
        "contestId": 141,
        "index": "E",
        "solvedCount": 671
      },
      {
        "contestId": 141,
        "index": "D",
        "solvedCount": 712
      },
      {
        "contestId": 141,
        "index": "C",
        "solvedCount": 2130
      },
      {
        "contestId": 141,
        "index": "B",
        "solvedCount": 4461
      },
      {
        "contestId": 141,
        "index": "A",
        "solvedCount": 62976
      },
      {
        "contestId": 140,
        "index": "F",
        "solvedCount": 335
      },
      {
        "contestId": 140,
        "index": "E",
        "solvedCount": 625
      },
      {
        "contestId": 140,
        "index": "D",
        "solvedCount": 1983
      },
      {
        "contestId": 140,
        "index": "C",
        "solvedCount": 3641
      },
      {
        "contestId": 140,
        "index": "B",
        "solvedCount": 1364
      },
      {
        "contestId": 140,
        "index": "A",
        "solvedCount": 3636
      },
      {
        "contestId": 139,
        "index": "B",
        "solvedCount": 1114
      },
      {
        "contestId": 139,
        "index": "A",
        "solvedCount": 22460
      },
      {
        "contestId": 138,
        "index": "E",
        "solvedCount": 141
      },
      {
        "contestId": 138,
        "index": "D",
        "solvedCount": 416
      },
      {
        "contestId": 138,
        "index": "C",
        "solvedCount": 676
      },
      {
        "contestId": 138,
        "index": "B",
        "solvedCount": 678
      },
      {
        "contestId": 138,
        "index": "A",
        "solvedCount": 1396
      },
      {
        "contestId": 137,
        "index": "E",
        "solvedCount": 1091
      },
      {
        "contestId": 137,
        "index": "D",
        "solvedCount": 1281
      },
      {
        "contestId": 137,
        "index": "C",
        "solvedCount": 6166
      },
      {
        "contestId": 137,
        "index": "B",
        "solvedCount": 10867
      },
      {
        "contestId": 137,
        "index": "A",
        "solvedCount": 6147
      },
      {
        "contestId": 136,
        "index": "B",
        "solvedCount": 4213
      },
      {
        "contestId": 136,
        "index": "A",
        "solvedCount": 88814
      },
      {
        "contestId": 135,
        "index": "E",
        "solvedCount": 236
      },
      {
        "contestId": 135,
        "index": "D",
        "solvedCount": 274
      },
      {
        "contestId": 135,
        "index": "C",
        "solvedCount": 989
      },
      {
        "contestId": 135,
        "index": "B",
        "solvedCount": 1289
      },
      {
        "contestId": 135,
        "index": "A",
        "solvedCount": 4220
      },
      {
        "contestId": 134,
        "index": "C",
        "solvedCount": 413
      },
      {
        "contestId": 134,
        "index": "B",
        "solvedCount": 1502
      },
      {
        "contestId": 134,
        "index": "A",
        "solvedCount": 2928
      },
      {
        "contestId": 133,
        "index": "B",
        "solvedCount": 7999
      },
      {
        "contestId": 133,
        "index": "A",
        "solvedCount": 85364
      },
      {
        "contestId": 132,
        "index": "E",
        "solvedCount": 402
      },
      {
        "contestId": 132,
        "index": "D",
        "solvedCount": 540
      },
      {
        "contestId": 132,
        "index": "C",
        "solvedCount": 1592
      },
      {
        "contestId": 132,
        "index": "B",
        "solvedCount": 323
      },
      {
        "contestId": 132,
        "index": "A",
        "solvedCount": 1321
      },
      {
        "contestId": 131,
        "index": "F",
        "solvedCount": 526
      },
      {
        "contestId": 131,
        "index": "E",
        "solvedCount": 1670
      },
      {
        "contestId": 131,
        "index": "D",
        "solvedCount": 3885
      },
      {
        "contestId": 131,
        "index": "C",
        "solvedCount": 9023
      },
      {
        "contestId": 131,
        "index": "B",
        "solvedCount": 5938
      },
      {
        "contestId": 131,
        "index": "A",
        "solvedCount": 68854
      },
      {
        "contestId": 130,
        "index": "J",
        "solvedCount": 37
      },
      {
        "contestId": 130,
        "index": "I",
        "solvedCount": 43
      },
      {
        "contestId": 130,
        "index": "H",
        "solvedCount": 103
      },
      {
        "contestId": 130,
        "index": "G",
        "solvedCount": 111
      },
      {
        "contestId": 130,
        "index": "F",
        "solvedCount": 101
      },
      {
        "contestId": 130,
        "index": "E",
        "solvedCount": 127
      },
      {
        "contestId": 130,
        "index": "D",
        "solvedCount": 184
      },
      {
        "contestId": 130,
        "index": "C",
        "solvedCount": 256
      },
      {
        "contestId": 130,
        "index": "B",
        "solvedCount": 245
      },
      {
        "contestId": 130,
        "index": "A",
        "solvedCount": 385
      },
      {
        "contestId": 129,
        "index": "B",
        "solvedCount": 9851
      },
      {
        "contestId": 129,
        "index": "A",
        "solvedCount": 16927
      },
      {
        "contestId": 128,
        "index": "E",
        "solvedCount": 79
      },
      {
        "contestId": 128,
        "index": "D",
        "solvedCount": 973
      },
      {
        "contestId": 128,
        "index": "C",
        "solvedCount": 1922
      },
      {
        "contestId": 128,
        "index": "B",
        "solvedCount": 1794
      },
      {
        "contestId": 128,
        "index": "A",
        "solvedCount": 1851
      },
      {
        "contestId": 127,
        "index": "B",
        "solvedCount": 5824
      },
      {
        "contestId": 127,
        "index": "A",
        "solvedCount": 9003
      },
      {
        "contestId": 126,
        "index": "E",
        "solvedCount": 64
      },
      {
        "contestId": 126,
        "index": "D",
        "solvedCount": 733
      },
      {
        "contestId": 126,
        "index": "C",
        "solvedCount": 536
      },
      {
        "contestId": 126,
        "index": "B",
        "solvedCount": 13015
      },
      {
        "contestId": 126,
        "index": "A",
        "solvedCount": 877
      },
      {
        "contestId": 125,
        "index": "E",
        "solvedCount": 840
      },
      {
        "contestId": 125,
        "index": "D",
        "solvedCount": 338
      },
      {
        "contestId": 125,
        "index": "C",
        "solvedCount": 756
      },
      {
        "contestId": 125,
        "index": "B",
        "solvedCount": 2099
      },
      {
        "contestId": 125,
        "index": "A",
        "solvedCount": 2290
      },
      {
        "contestId": 124,
        "index": "B",
        "solvedCount": 2838
      },
      {
        "contestId": 124,
        "index": "A",
        "solvedCount": 30062
      },
      {
        "contestId": 123,
        "index": "E",
        "solvedCount": 612
      },
      {
        "contestId": 123,
        "index": "D",
        "solvedCount": 1039
      },
      {
        "contestId": 123,
        "index": "C",
        "solvedCount": 478
      },
      {
        "contestId": 123,
        "index": "B",
        "solvedCount": 749
      },
      {
        "contestId": 123,
        "index": "A",
        "solvedCount": 2003
      },
      {
        "contestId": 122,
        "index": "B",
        "solvedCount": 10501
      },
      {
        "contestId": 122,
        "index": "A",
        "solvedCount": 94109
      },
      {
        "contestId": 121,
        "index": "E",
        "solvedCount": 1247
      },
      {
        "contestId": 121,
        "index": "D",
        "solvedCount": 237
      },
      {
        "contestId": 121,
        "index": "C",
        "solvedCount": 932
      },
      {
        "contestId": 121,
        "index": "B",
        "solvedCount": 1580
      },
      {
        "contestId": 121,
        "index": "A",
        "solvedCount": 6150
      },
      {
        "contestId": 120,
        "index": "J",
        "solvedCount": 307
      },
      {
        "contestId": 120,
        "index": "I",
        "solvedCount": 112
      },
      {
        "contestId": 120,
        "index": "H",
        "solvedCount": 327
      },
      {
        "contestId": 120,
        "index": "G",
        "solvedCount": 388
      },
      {
        "contestId": 120,
        "index": "F",
        "solvedCount": 805
      },
      {
        "contestId": 120,
        "index": "E",
        "solvedCount": 918
      },
      {
        "contestId": 120,
        "index": "D",
        "solvedCount": 870
      },
      {
        "contestId": 120,
        "index": "C",
        "solvedCount": 1239
      },
      {
        "contestId": 120,
        "index": "B",
        "solvedCount": 1257
      },
      {
        "contestId": 120,
        "index": "A",
        "solvedCount": 1396
      },
      {
        "contestId": 119,
        "index": "E",
        "solvedCount": 78
      },
      {
        "contestId": 119,
        "index": "D",
        "solvedCount": 423
      },
      {
        "contestId": 119,
        "index": "C",
        "solvedCount": 786
      },
      {
        "contestId": 119,
        "index": "B",
        "solvedCount": 972
      },
      {
        "contestId": 119,
        "index": "A",
        "solvedCount": 24288
      },
      {
        "contestId": 118,
        "index": "E",
        "solvedCount": 4777
      },
      {
        "contestId": 118,
        "index": "D",
        "solvedCount": 14347
      },
      {
        "contestId": 118,
        "index": "C",
        "solvedCount": 2295
      },
      {
        "contestId": 118,
        "index": "B",
        "solvedCount": 23779
      },
      {
        "contestId": 118,
        "index": "A",
        "solvedCount": 151679
      },
      {
        "contestId": 117,
        "index": "E",
        "solvedCount": 258
      },
      {
        "contestId": 117,
        "index": "D",
        "solvedCount": 314
      },
      {
        "contestId": 117,
        "index": "C",
        "solvedCount": 2119
      },
      {
        "contestId": 117,
        "index": "B",
        "solvedCount": 1313
      },
      {
        "contestId": 117,
        "index": "A",
        "solvedCount": 1831
      },
      {
        "contestId": 116,
        "index": "B",
        "solvedCount": 12072
      },
      {
        "contestId": 116,
        "index": "A",
        "solvedCount": 109967
      },
      {
        "contestId": 115,
        "index": "E",
        "solvedCount": 1013
      },
      {
        "contestId": 115,
        "index": "D",
        "solvedCount": 309
      },
      {
        "contestId": 115,
        "index": "C",
        "solvedCount": 442
      },
      {
        "contestId": 115,
        "index": "B",
        "solvedCount": 1468
      },
      {
        "contestId": 115,
        "index": "A",
        "solvedCount": 24164
      },
      {
        "contestId": 114,
        "index": "B",
        "solvedCount": 2713
      },
      {
        "contestId": 114,
        "index": "A",
        "solvedCount": 12050
      },
      {
        "contestId": 113,
        "index": "E",
        "solvedCount": 101
      },
      {
        "contestId": 113,
        "index": "D",
        "solvedCount": 570
      },
      {
        "contestId": 113,
        "index": "C",
        "solvedCount": 842
      },
      {
        "contestId": 113,
        "index": "B",
        "solvedCount": 1768
      },
      {
        "contestId": 113,
        "index": "A",
        "solvedCount": 1531
      },
      {
        "contestId": 112,
        "index": "B",
        "solvedCount": 3612
      },
      {
        "contestId": 112,
        "index": "A",
        "solvedCount": 172050
      },
      {
        "contestId": 111,
        "index": "E",
        "solvedCount": 52
      },
      {
        "contestId": 111,
        "index": "D",
        "solvedCount": 576
      },
      {
        "contestId": 111,
        "index": "C",
        "solvedCount": 936
      },
      {
        "contestId": 111,
        "index": "B",
        "solvedCount": 2570
      },
      {
        "contestId": 111,
        "index": "A",
        "solvedCount": 2398
      },
      {
        "contestId": 110,
        "index": "B",
        "solvedCount": 8705
      },
      {
        "contestId": 110,
        "index": "A",
        "solvedCount": 114021
      },
      {
        "contestId": 109,
        "index": "E",
        "solvedCount": 85
      },
      {
        "contestId": 109,
        "index": "D",
        "solvedCount": 553
      },
      {
        "contestId": 109,
        "index": "C",
        "solvedCount": 2118
      },
      {
        "contestId": 109,
        "index": "B",
        "solvedCount": 944
      },
      {
        "contestId": 109,
        "index": "A",
        "solvedCount": 11531
      },
      {
        "contestId": 108,
        "index": "B",
        "solvedCount": 2038
      },
      {
        "contestId": 108,
        "index": "A",
        "solvedCount": 7918
      },
      {
        "contestId": 107,
        "index": "E",
        "solvedCount": 109
      },
      {
        "contestId": 107,
        "index": "D",
        "solvedCount": 363
      },
      {
        "contestId": 107,
        "index": "C",
        "solvedCount": 305
      },
      {
        "contestId": 107,
        "index": "B",
        "solvedCount": 2272
      },
      {
        "contestId": 107,
        "index": "A",
        "solvedCount": 3495
      },
      {
        "contestId": 106,
        "index": "E",
        "solvedCount": 638
      },
      {
        "contestId": 106,
        "index": "D",
        "solvedCount": 1179
      },
      {
        "contestId": 106,
        "index": "C",
        "solvedCount": 4674
      },
      {
        "contestId": 106,
        "index": "B",
        "solvedCount": 5174
      },
      {
        "contestId": 106,
        "index": "A",
        "solvedCount": 6726
      },
      {
        "contestId": 105,
        "index": "E",
        "solvedCount": 162
      },
      {
        "contestId": 105,
        "index": "D",
        "solvedCount": 122
      },
      {
        "contestId": 105,
        "index": "C",
        "solvedCount": 249
      },
      {
        "contestId": 105,
        "index": "B",
        "solvedCount": 736
      },
      {
        "contestId": 105,
        "index": "A",
        "solvedCount": 1603
      },
      {
        "contestId": 104,
        "index": "A",
        "solvedCount": 12920
      },
      {
        "contestId": 103,
        "index": "E",
        "solvedCount": 642
      },
      {
        "contestId": 103,
        "index": "D",
        "solvedCount": 1404
      },
      {
        "contestId": 103,
        "index": "C",
        "solvedCount": 652
      },
      {
        "contestId": 103,
        "index": "B",
        "solvedCount": 5442
      },
      {
        "contestId": 103,
        "index": "A",
        "solvedCount": 3639
      },
      {
        "contestId": 102,
        "index": "B",
        "solvedCount": 20132
      },
      {
        "contestId": 102,
        "index": "A",
        "solvedCount": 2446
      },
      {
        "contestId": 101,
        "index": "E",
        "solvedCount": 343
      },
      {
        "contestId": 101,
        "index": "D",
        "solvedCount": 575
      },
      {
        "contestId": 101,
        "index": "C",
        "solvedCount": 537
      },
      {
        "contestId": 101,
        "index": "B",
        "solvedCount": 1696
      },
      {
        "contestId": 101,
        "index": "A",
        "solvedCount": 1699
      },
      {
        "contestId": 100,
        "index": "J",
        "solvedCount": 17
      },
      {
        "contestId": 100,
        "index": "I",
        "solvedCount": 132
      },
      {
        "contestId": 100,
        "index": "H",
        "solvedCount": 33
      },
      {
        "contestId": 100,
        "index": "G",
        "solvedCount": 53
      },
      {
        "contestId": 100,
        "index": "F",
        "solvedCount": 75
      },
      {
        "contestId": 100,
        "index": "E",
        "solvedCount": 93
      },
      {
        "contestId": 100,
        "index": "D",
        "solvedCount": 138
      },
      {
        "contestId": 100,
        "index": "C",
        "solvedCount": 217
      },
      {
        "contestId": 100,
        "index": "B",
        "solvedCount": 153
      },
      {
        "contestId": 100,
        "index": "A",
        "solvedCount": 238
      },
      {
        "contestId": 99,
        "index": "B",
        "solvedCount": 2555
      },
      {
        "contestId": 99,
        "index": "A",
        "solvedCount": 5266
      },
      {
        "contestId": 98,
        "index": "E",
        "solvedCount": 386
      },
      {
        "contestId": 98,
        "index": "D",
        "solvedCount": 169
      },
      {
        "contestId": 98,
        "index": "C",
        "solvedCount": 233
      },
      {
        "contestId": 98,
        "index": "B",
        "solvedCount": 79
      },
      {
        "contestId": 98,
        "index": "A",
        "solvedCount": 755
      },
      {
        "contestId": 97,
        "index": "E",
        "solvedCount": 316
      },
      {
        "contestId": 97,
        "index": "D",
        "solvedCount": 196
      },
      {
        "contestId": 97,
        "index": "C",
        "solvedCount": 268
      },
      {
        "contestId": 97,
        "index": "B",
        "solvedCount": 672
      },
      {
        "contestId": 97,
        "index": "A",
        "solvedCount": 224
      },
      {
        "contestId": 96,
        "index": "B",
        "solvedCount": 11585
      },
      {
        "contestId": 96,
        "index": "A",
        "solvedCount": 122258
      },
      {
        "contestId": 95,
        "index": "E",
        "solvedCount": 1096
      },
      {
        "contestId": 95,
        "index": "D",
        "solvedCount": 332
      },
      {
        "contestId": 95,
        "index": "C",
        "solvedCount": 1679
      },
      {
        "contestId": 95,
        "index": "B",
        "solvedCount": 1042
      },
      {
        "contestId": 95,
        "index": "A",
        "solvedCount": 1047
      },
      {
        "contestId": 94,
        "index": "B",
        "solvedCount": 3903
      },
      {
        "contestId": 94,
        "index": "A",
        "solvedCount": 7400
      },
      {
        "contestId": 93,
        "index": "E",
        "solvedCount": 348
      },
      {
        "contestId": 93,
        "index": "D",
        "solvedCount": 294
      },
      {
        "contestId": 93,
        "index": "C",
        "solvedCount": 312
      },
      {
        "contestId": 93,
        "index": "B",
        "solvedCount": 555
      },
      {
        "contestId": 93,
        "index": "A",
        "solvedCount": 1032
      },
      {
        "contestId": 92,
        "index": "B",
        "solvedCount": 4015
      },
      {
        "contestId": 92,
        "index": "A",
        "solvedCount": 14513
      },
      {
        "contestId": 91,
        "index": "E",
        "solvedCount": 516
      },
      {
        "contestId": 91,
        "index": "D",
        "solvedCount": 232
      },
      {
        "contestId": 91,
        "index": "C",
        "solvedCount": 655
      },
      {
        "contestId": 91,
        "index": "B",
        "solvedCount": 4333
      },
      {
        "contestId": 91,
        "index": "A",
        "solvedCount": 2432
      },
      {
        "contestId": 90,
        "index": "B",
        "solvedCount": 4327
      },
      {
        "contestId": 90,
        "index": "A",
        "solvedCount": 3777
      },
      {
        "contestId": 89,
        "index": "E",
        "solvedCount": 77
      },
      {
        "contestId": 89,
        "index": "D",
        "solvedCount": 211
      },
      {
        "contestId": 89,
        "index": "C",
        "solvedCount": 458
      },
      {
        "contestId": 89,
        "index": "B",
        "solvedCount": 389
      },
      {
        "contestId": 89,
        "index": "A",
        "solvedCount": 922
      },
      {
        "contestId": 88,
        "index": "B",
        "solvedCount": 3801
      },
      {
        "contestId": 88,
        "index": "A",
        "solvedCount": 3446
      },
      {
        "contestId": 87,
        "index": "E",
        "solvedCount": 309
      },
      {
        "contestId": 87,
        "index": "D",
        "solvedCount": 682
      },
      {
        "contestId": 87,
        "index": "C",
        "solvedCount": 1048
      },
      {
        "contestId": 87,
        "index": "B",
        "solvedCount": 830
      },
      {
        "contestId": 87,
        "index": "A",
        "solvedCount": 2227
      },
      {
        "contestId": 86,
        "index": "E",
        "solvedCount": 159
      },
      {
        "contestId": 86,
        "index": "D",
        "solvedCount": 10054
      },
      {
        "contestId": 86,
        "index": "C",
        "solvedCount": 602
      },
      {
        "contestId": 86,
        "index": "B",
        "solvedCount": 307
      },
      {
        "contestId": 86,
        "index": "A",
        "solvedCount": 1149
      },
      {
        "contestId": 85,
        "index": "E",
        "solvedCount": 768
      },
      {
        "contestId": 85,
        "index": "D",
        "solvedCount": 1558
      },
      {
        "contestId": 85,
        "index": "C",
        "solvedCount": 488
      },
      {
        "contestId": 85,
        "index": "B",
        "solvedCount": 888
      },
      {
        "contestId": 85,
        "index": "A",
        "solvedCount": 1590
      },
      {
        "contestId": 84,
        "index": "C",
        "solvedCount": 1425
      },
      {
        "contestId": 84,
        "index": "A",
        "solvedCount": 11912
      },
      {
        "contestId": 83,
        "index": "E",
        "solvedCount": 339
      },
      {
        "contestId": 83,
        "index": "D",
        "solvedCount": 709
      },
      {
        "contestId": 83,
        "index": "C",
        "solvedCount": 308
      },
      {
        "contestId": 83,
        "index": "B",
        "solvedCount": 1163
      },
      {
        "contestId": 83,
        "index": "A",
        "solvedCount": 3529
      },
      {
        "contestId": 82,
        "index": "E",
        "solvedCount": 202
      },
      {
        "contestId": 82,
        "index": "D",
        "solvedCount": 1643
      },
      {
        "contestId": 82,
        "index": "C",
        "solvedCount": 751
      },
      {
        "contestId": 82,
        "index": "B",
        "solvedCount": 1588
      },
      {
        "contestId": 82,
        "index": "A",
        "solvedCount": 26359
      },
      {
        "contestId": 81,
        "index": "E",
        "solvedCount": 278
      },
      {
        "contestId": 81,
        "index": "D",
        "solvedCount": 596
      },
      {
        "contestId": 81,
        "index": "C",
        "solvedCount": 1477
      },
      {
        "contestId": 81,
        "index": "B",
        "solvedCount": 1794
      },
      {
        "contestId": 81,
        "index": "A",
        "solvedCount": 7057
      },
      {
        "contestId": 80,
        "index": "B",
        "solvedCount": 3435
      },
      {
        "contestId": 80,
        "index": "A",
        "solvedCount": 38255
      },
      {
        "contestId": 79,
        "index": "E",
        "solvedCount": 103
      },
      {
        "contestId": 79,
        "index": "D",
        "solvedCount": 808
      },
      {
        "contestId": 79,
        "index": "C",
        "solvedCount": 1424
      },
      {
        "contestId": 79,
        "index": "B",
        "solvedCount": 5752
      },
      {
        "contestId": 79,
        "index": "A",
        "solvedCount": 3366
      },
      {
        "contestId": 78,
        "index": "E",
        "solvedCount": 410
      },
      {
        "contestId": 78,
        "index": "D",
        "solvedCount": 249
      },
      {
        "contestId": 78,
        "index": "C",
        "solvedCount": 1434
      },
      {
        "contestId": 78,
        "index": "B",
        "solvedCount": 10371
      },
      {
        "contestId": 78,
        "index": "A",
        "solvedCount": 8952
      },
      {
        "contestId": 77,
        "index": "E",
        "solvedCount": 310
      },
      {
        "contestId": 77,
        "index": "D",
        "solvedCount": 259
      },
      {
        "contestId": 77,
        "index": "C",
        "solvedCount": 758
      },
      {
        "contestId": 77,
        "index": "B",
        "solvedCount": 1806
      },
      {
        "contestId": 77,
        "index": "A",
        "solvedCount": 1211
      },
      {
        "contestId": 76,
        "index": "F",
        "solvedCount": 91
      },
      {
        "contestId": 76,
        "index": "E",
        "solvedCount": 456
      },
      {
        "contestId": 76,
        "index": "D",
        "solvedCount": 399
      },
      {
        "contestId": 76,
        "index": "C",
        "solvedCount": 25
      },
      {
        "contestId": 76,
        "index": "B",
        "solvedCount": 140
      },
      {
        "contestId": 76,
        "index": "A",
        "solvedCount": 100
      },
      {
        "contestId": 75,
        "index": "E",
        "solvedCount": 244
      },
      {
        "contestId": 75,
        "index": "D",
        "solvedCount": 1501
      },
      {
        "contestId": 75,
        "index": "C",
        "solvedCount": 9473
      },
      {
        "contestId": 75,
        "index": "B",
        "solvedCount": 2765
      },
      {
        "contestId": 75,
        "index": "A",
        "solvedCount": 19650
      },
      {
        "contestId": 74,
        "index": "E",
        "solvedCount": 106
      },
      {
        "contestId": 74,
        "index": "D",
        "solvedCount": 310
      },
      {
        "contestId": 74,
        "index": "C",
        "solvedCount": 798
      },
      {
        "contestId": 74,
        "index": "B",
        "solvedCount": 1359
      },
      {
        "contestId": 74,
        "index": "A",
        "solvedCount": 3885
      },
      {
        "contestId": 73,
        "index": "F",
        "solvedCount": 66
      },
      {
        "contestId": 73,
        "index": "E",
        "solvedCount": 239
      },
      {
        "contestId": 73,
        "index": "D",
        "solvedCount": 506
      },
      {
        "contestId": 73,
        "index": "C",
        "solvedCount": 1660
      },
      {
        "contestId": 73,
        "index": "B",
        "solvedCount": 446
      },
      {
        "contestId": 73,
        "index": "A",
        "solvedCount": 1158
      },
      {
        "contestId": 72,
        "index": "I",
        "solvedCount": 175
      },
      {
        "contestId": 72,
        "index": "H",
        "solvedCount": 140
      },
      {
        "contestId": 72,
        "index": "G",
        "solvedCount": 226
      },
      {
        "contestId": 72,
        "index": "F",
        "solvedCount": 56
      },
      {
        "contestId": 72,
        "index": "E",
        "solvedCount": 82
      },
      {
        "contestId": 72,
        "index": "D",
        "solvedCount": 25
      },
      {
        "contestId": 72,
        "index": "C",
        "solvedCount": 212
      },
      {
        "contestId": 72,
        "index": "B",
        "solvedCount": 22
      },
      {
        "contestId": 72,
        "index": "A",
        "solvedCount": 77
      },
      {
        "contestId": 71,
        "index": "E",
        "solvedCount": 541
      },
      {
        "contestId": 71,
        "index": "D",
        "solvedCount": 522
      },
      {
        "contestId": 71,
        "index": "C",
        "solvedCount": 5337
      },
      {
        "contestId": 71,
        "index": "B",
        "solvedCount": 3890
      },
      {
        "contestId": 71,
        "index": "A",
        "solvedCount": 283739
      },
      {
        "contestId": 70,
        "index": "E",
        "solvedCount": 438
      },
      {
        "contestId": 70,
        "index": "D",
        "solvedCount": 771
      },
      {
        "contestId": 70,
        "index": "C",
        "solvedCount": 504
      },
      {
        "contestId": 70,
        "index": "B",
        "solvedCount": 1477
      },
      {
        "contestId": 70,
        "index": "A",
        "solvedCount": 2863
      },
      {
        "contestId": 69,
        "index": "E",
        "solvedCount": 2861
      },
      {
        "contestId": 69,
        "index": "D",
        "solvedCount": 738
      },
      {
        "contestId": 69,
        "index": "C",
        "solvedCount": 520
      },
      {
        "contestId": 69,
        "index": "B",
        "solvedCount": 2865
      },
      {
        "contestId": 69,
        "index": "A",
        "solvedCount": 128321
      },
      {
        "contestId": 68,
        "index": "E",
        "solvedCount": 61
      },
      {
        "contestId": 68,
        "index": "D",
        "solvedCount": 406
      },
      {
        "contestId": 68,
        "index": "C",
        "solvedCount": 295
      },
      {
        "contestId": 68,
        "index": "B",
        "solvedCount": 2720
      },
      {
        "contestId": 68,
        "index": "A",
        "solvedCount": 3908
      },
      {
        "contestId": 67,
        "index": "E",
        "solvedCount": 259
      },
      {
        "contestId": 67,
        "index": "D",
        "solvedCount": 1056
      },
      {
        "contestId": 67,
        "index": "C",
        "solvedCount": 477
      },
      {
        "contestId": 67,
        "index": "B",
        "solvedCount": 689
      },
      {
        "contestId": 67,
        "index": "A",
        "solvedCount": 1741
      },
      {
        "contestId": 66,
        "index": "E",
        "solvedCount": 579
      },
      {
        "contestId": 66,
        "index": "D",
        "solvedCount": 2426
      },
      {
        "contestId": 66,
        "index": "C",
        "solvedCount": 914
      },
      {
        "contestId": 66,
        "index": "B",
        "solvedCount": 16863
      },
      {
        "contestId": 66,
        "index": "A",
        "solvedCount": 5341
      },
      {
        "contestId": 65,
        "index": "E",
        "solvedCount": 71
      },
      {
        "contestId": 65,
        "index": "D",
        "solvedCount": 394
      },
      {
        "contestId": 65,
        "index": "C",
        "solvedCount": 637
      },
      {
        "contestId": 65,
        "index": "B",
        "solvedCount": 1192
      },
      {
        "contestId": 65,
        "index": "A",
        "solvedCount": 1590
      },
      {
        "contestId": 64,
        "index": "I",
        "solvedCount": 29
      },
      {
        "contestId": 64,
        "index": "H",
        "solvedCount": 43
      },
      {
        "contestId": 64,
        "index": "G",
        "solvedCount": 58
      },
      {
        "contestId": 64,
        "index": "F",
        "solvedCount": 100
      },
      {
        "contestId": 64,
        "index": "E",
        "solvedCount": 130
      },
      {
        "contestId": 64,
        "index": "D",
        "solvedCount": 161
      },
      {
        "contestId": 64,
        "index": "C",
        "solvedCount": 191
      },
      {
        "contestId": 64,
        "index": "B",
        "solvedCount": 264
      },
      {
        "contestId": 64,
        "index": "A",
        "solvedCount": 325
      },
      {
        "contestId": 63,
        "index": "E",
        "solvedCount": 546
      },
      {
        "contestId": 63,
        "index": "D",
        "solvedCount": 1038
      },
      {
        "contestId": 63,
        "index": "C",
        "solvedCount": 1381
      },
      {
        "contestId": 63,
        "index": "B",
        "solvedCount": 4093
      },
      {
        "contestId": 63,
        "index": "A",
        "solvedCount": 8969
      },
      {
        "contestId": 62,
        "index": "E",
        "solvedCount": 185
      },
      {
        "contestId": 62,
        "index": "D",
        "solvedCount": 303
      },
      {
        "contestId": 62,
        "index": "C",
        "solvedCount": 231
      },
      {
        "contestId": 62,
        "index": "B",
        "solvedCount": 1120
      },
      {
        "contestId": 62,
        "index": "A",
        "solvedCount": 2985
      },
      {
        "contestId": 61,
        "index": "E",
        "solvedCount": 7328
      },
      {
        "contestId": 61,
        "index": "D",
        "solvedCount": 5119
      },
      {
        "contestId": 61,
        "index": "C",
        "solvedCount": 648
      },
      {
        "contestId": 61,
        "index": "B",
        "solvedCount": 3396
      },
      {
        "contestId": 61,
        "index": "A",
        "solvedCount": 85317
      },
      {
        "contestId": 60,
        "index": "E",
        "solvedCount": 258
      },
      {
        "contestId": 60,
        "index": "D",
        "solvedCount": 367
      },
      {
        "contestId": 60,
        "index": "C",
        "solvedCount": 506
      },
      {
        "contestId": 60,
        "index": "B",
        "solvedCount": 3485
      },
      {
        "contestId": 60,
        "index": "A",
        "solvedCount": 2844
      },
      {
        "contestId": 59,
        "index": "E",
        "solvedCount": 2443
      },
      {
        "contestId": 59,
        "index": "D",
        "solvedCount": 543
      },
      {
        "contestId": 59,
        "index": "C",
        "solvedCount": 1761
      },
      {
        "contestId": 59,
        "index": "B",
        "solvedCount": 5511
      },
      {
        "contestId": 59,
        "index": "A",
        "solvedCount": 130165
      },
      {
        "contestId": 58,
        "index": "E",
        "solvedCount": 322
      },
      {
        "contestId": 58,
        "index": "D",
        "solvedCount": 641
      },
      {
        "contestId": 58,
        "index": "C",
        "solvedCount": 1775
      },
      {
        "contestId": 58,
        "index": "B",
        "solvedCount": 10374
      },
      {
        "contestId": 58,
        "index": "A",
        "solvedCount": 101983
      },
      {
        "contestId": 57,
        "index": "E",
        "solvedCount": 209
      },
      {
        "contestId": 57,
        "index": "D",
        "solvedCount": 289
      },
      {
        "contestId": 57,
        "index": "C",
        "solvedCount": 1753
      },
      {
        "contestId": 57,
        "index": "B",
        "solvedCount": 920
      },
      {
        "contestId": 57,
        "index": "A",
        "solvedCount": 2459
      },
      {
        "contestId": 56,
        "index": "E",
        "solvedCount": 1661
      },
      {
        "contestId": 56,
        "index": "D",
        "solvedCount": 1216
      },
      {
        "contestId": 56,
        "index": "C",
        "solvedCount": 995
      },
      {
        "contestId": 56,
        "index": "B",
        "solvedCount": 3169
      },
      {
        "contestId": 56,
        "index": "A",
        "solvedCount": 7262
      },
      {
        "contestId": 55,
        "index": "E",
        "solvedCount": 439
      },
      {
        "contestId": 55,
        "index": "D",
        "solvedCount": 3034
      },
      {
        "contestId": 55,
        "index": "C",
        "solvedCount": 1274
      },
      {
        "contestId": 55,
        "index": "B",
        "solvedCount": 2093
      },
      {
        "contestId": 55,
        "index": "A",
        "solvedCount": 2930
      },
      {
        "contestId": 54,
        "index": "E",
        "solvedCount": 157
      },
      {
        "contestId": 54,
        "index": "D",
        "solvedCount": 376
      },
      {
        "contestId": 54,
        "index": "C",
        "solvedCount": 1019
      },
      {
        "contestId": 54,
        "index": "B",
        "solvedCount": 681
      },
      {
        "contestId": 54,
        "index": "A",
        "solvedCount": 1783
      },
      {
        "contestId": 53,
        "index": "E",
        "solvedCount": 783
      },
      {
        "contestId": 53,
        "index": "D",
        "solvedCount": 1447
      },
      {
        "contestId": 53,
        "index": "C",
        "solvedCount": 5355
      },
      {
        "contestId": 53,
        "index": "B",
        "solvedCount": 1195
      },
      {
        "contestId": 53,
        "index": "A",
        "solvedCount": 4144
      },
      {
        "contestId": 52,
        "index": "C",
        "solvedCount": 6167
      },
      {
        "contestId": 52,
        "index": "B",
        "solvedCount": 1527
      },
      {
        "contestId": 52,
        "index": "A",
        "solvedCount": 5927
      },
      {
        "contestId": 51,
        "index": "F",
        "solvedCount": 459
      },
      {
        "contestId": 51,
        "index": "E",
        "solvedCount": 324
      },
      {
        "contestId": 51,
        "index": "D",
        "solvedCount": 371
      },
      {
        "contestId": 51,
        "index": "C",
        "solvedCount": 1258
      },
      {
        "contestId": 51,
        "index": "B",
        "solvedCount": 744
      },
      {
        "contestId": 51,
        "index": "A",
        "solvedCount": 1535
      },
      {
        "contestId": 50,
        "index": "E",
        "solvedCount": 324
      },
      {
        "contestId": 50,
        "index": "D",
        "solvedCount": 557
      },
      {
        "contestId": 50,
        "index": "C",
        "solvedCount": 655
      },
      {
        "contestId": 50,
        "index": "B",
        "solvedCount": 4662
      },
      {
        "contestId": 50,
        "index": "A",
        "solvedCount": 183513
      },
      {
        "contestId": 49,
        "index": "E",
        "solvedCount": 597
      },
      {
        "contestId": 49,
        "index": "D",
        "solvedCount": 1592
      },
      {
        "contestId": 49,
        "index": "C",
        "solvedCount": 1395
      },
      {
        "contestId": 49,
        "index": "B",
        "solvedCount": 2053
      },
      {
        "contestId": 49,
        "index": "A",
        "solvedCount": 11140
      },
      {
        "contestId": 48,
        "index": "H",
        "solvedCount": 24
      },
      {
        "contestId": 48,
        "index": "G",
        "solvedCount": 17
      },
      {
        "contestId": 48,
        "index": "F",
        "solvedCount": 29
      },
      {
        "contestId": 48,
        "index": "E",
        "solvedCount": 118
      },
      {
        "contestId": 48,
        "index": "D",
        "solvedCount": 639
      },
      {
        "contestId": 48,
        "index": "C",
        "solvedCount": 358
      },
      {
        "contestId": 48,
        "index": "B",
        "solvedCount": 780
      },
      {
        "contestId": 48,
        "index": "A",
        "solvedCount": 1004
      },
      {
        "contestId": 47,
        "index": "E",
        "solvedCount": 319
      },
      {
        "contestId": 47,
        "index": "D",
        "solvedCount": 589
      },
      {
        "contestId": 47,
        "index": "C",
        "solvedCount": 620
      },
      {
        "contestId": 47,
        "index": "B",
        "solvedCount": 10328
      },
      {
        "contestId": 47,
        "index": "A",
        "solvedCount": 11349
      },
      {
        "contestId": 46,
        "index": "G",
        "solvedCount": 36
      },
      {
        "contestId": 46,
        "index": "F",
        "solvedCount": 74
      },
      {
        "contestId": 46,
        "index": "E",
        "solvedCount": 337
      },
      {
        "contestId": 46,
        "index": "D",
        "solvedCount": 408
      },
      {
        "contestId": 46,
        "index": "C",
        "solvedCount": 700
      },
      {
        "contestId": 46,
        "index": "B",
        "solvedCount": 1040
      },
      {
        "contestId": 46,
        "index": "A",
        "solvedCount": 1575
      },
      {
        "contestId": 45,
        "index": "J",
        "solvedCount": 232
      },
      {
        "contestId": 45,
        "index": "I",
        "solvedCount": 422
      },
      {
        "contestId": 45,
        "index": "H",
        "solvedCount": 22
      },
      {
        "contestId": 45,
        "index": "G",
        "solvedCount": 91
      },
      {
        "contestId": 45,
        "index": "F",
        "solvedCount": 22
      },
      {
        "contestId": 45,
        "index": "E",
        "solvedCount": 116
      },
      {
        "contestId": 45,
        "index": "D",
        "solvedCount": 261
      },
      {
        "contestId": 45,
        "index": "C",
        "solvedCount": 176
      },
      {
        "contestId": 45,
        "index": "B",
        "solvedCount": 54
      },
      {
        "contestId": 45,
        "index": "A",
        "solvedCount": 709
      },
      {
        "contestId": 44,
        "index": "J",
        "solvedCount": 130
      },
      {
        "contestId": 44,
        "index": "I",
        "solvedCount": 51
      },
      {
        "contestId": 44,
        "index": "H",
        "solvedCount": 302
      },
      {
        "contestId": 44,
        "index": "G",
        "solvedCount": 26
      },
      {
        "contestId": 44,
        "index": "F",
        "solvedCount": 6
      },
      {
        "contestId": 44,
        "index": "E",
        "solvedCount": 433
      },
      {
        "contestId": 44,
        "index": "D",
        "solvedCount": 234
      },
      {
        "contestId": 44,
        "index": "C",
        "solvedCount": 538
      },
      {
        "contestId": 44,
        "index": "B",
        "solvedCount": 461
      },
      {
        "contestId": 44,
        "index": "A",
        "solvedCount": 742
      },
      {
        "contestId": 43,
        "index": "E",
        "solvedCount": 341
      },
      {
        "contestId": 43,
        "index": "D",
        "solvedCount": 966
      },
      {
        "contestId": 43,
        "index": "C",
        "solvedCount": 3615
      },
      {
        "contestId": 43,
        "index": "B",
        "solvedCount": 10825
      },
      {
        "contestId": 43,
        "index": "A",
        "solvedCount": 40523
      },
      {
        "contestId": 42,
        "index": "E",
        "solvedCount": 159
      },
      {
        "contestId": 42,
        "index": "D",
        "solvedCount": 339
      },
      {
        "contestId": 42,
        "index": "C",
        "solvedCount": 392
      },
      {
        "contestId": 42,
        "index": "B",
        "solvedCount": 814
      },
      {
        "contestId": 42,
        "index": "A",
        "solvedCount": 2321
      },
      {
        "contestId": 41,
        "index": "E",
        "solvedCount": 1535
      },
      {
        "contestId": 41,
        "index": "D",
        "solvedCount": 1784
      },
      {
        "contestId": 41,
        "index": "C",
        "solvedCount": 3079
      },
      {
        "contestId": 41,
        "index": "B",
        "solvedCount": 3257
      },
      {
        "contestId": 41,
        "index": "A",
        "solvedCount": 108179
      },
      {
        "contestId": 40,
        "index": "E",
        "solvedCount": 493
      },
      {
        "contestId": 40,
        "index": "D",
        "solvedCount": 108
      },
      {
        "contestId": 40,
        "index": "C",
        "solvedCount": 224
      },
      {
        "contestId": 40,
        "index": "B",
        "solvedCount": 957
      },
      {
        "contestId": 40,
        "index": "A",
        "solvedCount": 2863
      },
      {
        "contestId": 39,
        "index": "K",
        "solvedCount": 14
      },
      {
        "contestId": 39,
        "index": "J",
        "solvedCount": 376
      },
      {
        "contestId": 39,
        "index": "I",
        "solvedCount": 32
      },
      {
        "contestId": 39,
        "index": "H",
        "solvedCount": 488
      },
      {
        "contestId": 39,
        "index": "G",
        "solvedCount": 30
      },
      {
        "contestId": 39,
        "index": "F",
        "solvedCount": 396
      },
      {
        "contestId": 39,
        "index": "E",
        "solvedCount": 136
      },
      {
        "contestId": 39,
        "index": "D",
        "solvedCount": 547
      },
      {
        "contestId": 39,
        "index": "C",
        "solvedCount": 69
      },
      {
        "contestId": 39,
        "index": "B",
        "solvedCount": 533
      },
      {
        "contestId": 39,
        "index": "A",
        "solvedCount": 141
      },
      {
        "contestId": 38,
        "index": "H",
        "solvedCount": 31
      },
      {
        "contestId": 38,
        "index": "G",
        "solvedCount": 104
      },
      {
        "contestId": 38,
        "index": "F",
        "solvedCount": 156
      },
      {
        "contestId": 38,
        "index": "E",
        "solvedCount": 412
      },
      {
        "contestId": 38,
        "index": "D",
        "solvedCount": 261
      },
      {
        "contestId": 38,
        "index": "C",
        "solvedCount": 791
      },
      {
        "contestId": 38,
        "index": "B",
        "solvedCount": 1032
      },
      {
        "contestId": 38,
        "index": "A",
        "solvedCount": 1634
      },
      {
        "contestId": 37,
        "index": "E",
        "solvedCount": 470
      },
      {
        "contestId": 37,
        "index": "D",
        "solvedCount": 332
      },
      {
        "contestId": 37,
        "index": "C",
        "solvedCount": 1075
      },
      {
        "contestId": 37,
        "index": "B",
        "solvedCount": 791
      },
      {
        "contestId": 37,
        "index": "A",
        "solvedCount": 18076
      },
      {
        "contestId": 36,
        "index": "E",
        "solvedCount": 374
      },
      {
        "contestId": 36,
        "index": "D",
        "solvedCount": 568
      },
      {
        "contestId": 36,
        "index": "C",
        "solvedCount": 249
      },
      {
        "contestId": 36,
        "index": "B",
        "solvedCount": 1225
      },
      {
        "contestId": 36,
        "index": "A",
        "solvedCount": 2622
      },
      {
        "contestId": 35,
        "index": "E",
        "solvedCount": 647
      },
      {
        "contestId": 35,
        "index": "D",
        "solvedCount": 2564
      },
      {
        "contestId": 35,
        "index": "C",
        "solvedCount": 4895
      },
      {
        "contestId": 35,
        "index": "B",
        "solvedCount": 925
      },
      {
        "contestId": 35,
        "index": "A",
        "solvedCount": 5843
      },
      {
        "contestId": 34,
        "index": "E",
        "solvedCount": 509
      },
      {
        "contestId": 34,
        "index": "D",
        "solvedCount": 3836
      },
      {
        "contestId": 34,
        "index": "C",
        "solvedCount": 3373
      },
      {
        "contestId": 34,
        "index": "B",
        "solvedCount": 37407
      },
      {
        "contestId": 34,
        "index": "A",
        "solvedCount": 22883
      },
      {
        "contestId": 33,
        "index": "E",
        "solvedCount": 105
      },
      {
        "contestId": 33,
        "index": "D",
        "solvedCount": 860
      },
      {
        "contestId": 33,
        "index": "C",
        "solvedCount": 2502
      },
      {
        "contestId": 33,
        "index": "B",
        "solvedCount": 2669
      },
      {
        "contestId": 33,
        "index": "A",
        "solvedCount": 3208
      },
      {
        "contestId": 32,
        "index": "E",
        "solvedCount": 295
      },
      {
        "contestId": 32,
        "index": "D",
        "solvedCount": 1096
      },
      {
        "contestId": 32,
        "index": "C",
        "solvedCount": 1816
      },
      {
        "contestId": 32,
        "index": "B",
        "solvedCount": 46300
      },
      {
        "contestId": 32,
        "index": "A",
        "solvedCount": 8504
      },
      {
        "contestId": 31,
        "index": "E",
        "solvedCount": 875
      },
      {
        "contestId": 31,
        "index": "D",
        "solvedCount": 809
      },
      {
        "contestId": 31,
        "index": "C",
        "solvedCount": 1541
      },
      {
        "contestId": 31,
        "index": "B",
        "solvedCount": 3530
      },
      {
        "contestId": 31,
        "index": "A",
        "solvedCount": 8389
      },
      {
        "contestId": 30,
        "index": "E",
        "solvedCount": 585
      },
      {
        "contestId": 30,
        "index": "D",
        "solvedCount": 356
      },
      {
        "contestId": 30,
        "index": "C",
        "solvedCount": 1594
      },
      {
        "contestId": 30,
        "index": "B",
        "solvedCount": 979
      },
      {
        "contestId": 30,
        "index": "A",
        "solvedCount": 2836
      },
      {
        "contestId": 29,
        "index": "E",
        "solvedCount": 642
      },
      {
        "contestId": 29,
        "index": "D",
        "solvedCount": 1882
      },
      {
        "contestId": 29,
        "index": "C",
        "solvedCount": 3609
      },
      {
        "contestId": 29,
        "index": "B",
        "solvedCount": 2486
      },
      {
        "contestId": 29,
        "index": "A",
        "solvedCount": 5409
      },
      {
        "contestId": 28,
        "index": "E",
        "solvedCount": 76
      },
      {
        "contestId": 28,
        "index": "D",
        "solvedCount": 537
      },
      {
        "contestId": 28,
        "index": "C",
        "solvedCount": 865
      },
      {
        "contestId": 28,
        "index": "B",
        "solvedCount": 3426
      },
      {
        "contestId": 28,
        "index": "A",
        "solvedCount": 710
      },
      {
        "contestId": 27,
        "index": "E",
        "solvedCount": 3332
      },
      {
        "contestId": 27,
        "index": "D",
        "solvedCount": 1958
      },
      {
        "contestId": 27,
        "index": "C",
        "solvedCount": 2326
      },
      {
        "contestId": 27,
        "index": "B",
        "solvedCount": 4237
      },
      {
        "contestId": 27,
        "index": "A",
        "solvedCount": 15781
      },
      {
        "contestId": 26,
        "index": "E",
        "solvedCount": 320
      },
      {
        "contestId": 26,
        "index": "D",
        "solvedCount": 664
      },
      {
        "contestId": 26,
        "index": "C",
        "solvedCount": 742
      },
      {
        "contestId": 26,
        "index": "B",
        "solvedCount": 10197
      },
      {
        "contestId": 26,
        "index": "A",
        "solvedCount": 18958
      },
      {
        "contestId": 25,
        "index": "E",
        "solvedCount": 212
      },
      {
        "contestId": 25,
        "index": "D",
        "solvedCount": 447
      },
      {
        "contestId": 25,
        "index": "C",
        "solvedCount": 546
      },
      {
        "contestId": 25,
        "index": "B",
        "solvedCount": 1214
      },
      {
        "contestId": 25,
        "index": "A",
        "solvedCount": 1513
      },
      {
        "contestId": 24,
        "index": "E",
        "solvedCount": 198
      },
      {
        "contestId": 24,
        "index": "D",
        "solvedCount": 137
      },
      {
        "contestId": 24,
        "index": "C",
        "solvedCount": 450
      },
      {
        "contestId": 24,
        "index": "B",
        "solvedCount": 609
      },
      {
        "contestId": 24,
        "index": "A",
        "solvedCount": 823
      },
      {
        "contestId": 23,
        "index": "E",
        "solvedCount": 74
      },
      {
        "contestId": 23,
        "index": "D",
        "solvedCount": 45
      },
      {
        "contestId": 23,
        "index": "C",
        "solvedCount": 187
      },
      {
        "contestId": 23,
        "index": "B",
        "solvedCount": 624
      },
      {
        "contestId": 23,
        "index": "A",
        "solvedCount": 940
      },
      {
        "contestId": 22,
        "index": "E",
        "solvedCount": 125
      },
      {
        "contestId": 22,
        "index": "D",
        "solvedCount": 397
      },
      {
        "contestId": 22,
        "index": "C",
        "solvedCount": 473
      },
      {
        "contestId": 22,
        "index": "B",
        "solvedCount": 629
      },
      {
        "contestId": 22,
        "index": "A",
        "solvedCount": 1257
      },
      {
        "contestId": 21,
        "index": "D",
        "solvedCount": 660
      },
      {
        "contestId": 21,
        "index": "C",
        "solvedCount": 1604
      },
      {
        "contestId": 21,
        "index": "B",
        "solvedCount": 1069
      },
      {
        "contestId": 21,
        "index": "A",
        "solvedCount": 1523
      },
      {
        "contestId": 20,
        "index": "C",
        "solvedCount": 22314
      },
      {
        "contestId": 20,
        "index": "B",
        "solvedCount": 3108
      },
      {
        "contestId": 20,
        "index": "A",
        "solvedCount": 5078
      },
      {
        "contestId": 19,
        "index": "E",
        "solvedCount": 59
      },
      {
        "contestId": 19,
        "index": "D",
        "solvedCount": 96
      },
      {
        "contestId": 19,
        "index": "C",
        "solvedCount": 195
      },
      {
        "contestId": 19,
        "index": "B",
        "solvedCount": 368
      },
      {
        "contestId": 19,
        "index": "A",
        "solvedCount": 682
      },
      {
        "contestId": 18,
        "index": "E",
        "solvedCount": 180
      },
      {
        "contestId": 18,
        "index": "D",
        "solvedCount": 263
      },
      {
        "contestId": 18,
        "index": "C",
        "solvedCount": 822
      },
      {
        "contestId": 18,
        "index": "B",
        "solvedCount": 458
      },
      {
        "contestId": 18,
        "index": "A",
        "solvedCount": 699
      },
      {
        "contestId": 17,
        "index": "E",
        "solvedCount": 49
      },
      {
        "contestId": 17,
        "index": "D",
        "solvedCount": 180
      },
      {
        "contestId": 17,
        "index": "C",
        "solvedCount": 84
      },
      {
        "contestId": 17,
        "index": "B",
        "solvedCount": 651
      },
      {
        "contestId": 17,
        "index": "A",
        "solvedCount": 1086
      },
      {
        "contestId": 16,
        "index": "E",
        "solvedCount": 287
      },
      {
        "contestId": 16,
        "index": "D",
        "solvedCount": 321
      },
      {
        "contestId": 16,
        "index": "C",
        "solvedCount": 617
      },
      {
        "contestId": 16,
        "index": "B",
        "solvedCount": 944
      },
      {
        "contestId": 16,
        "index": "A",
        "solvedCount": 1164
      },
      {
        "contestId": 15,
        "index": "E",
        "solvedCount": 51
      },
      {
        "contestId": 15,
        "index": "D",
        "solvedCount": 103
      },
      {
        "contestId": 15,
        "index": "C",
        "solvedCount": 327
      },
      {
        "contestId": 15,
        "index": "B",
        "solvedCount": 426
      },
      {
        "contestId": 15,
        "index": "A",
        "solvedCount": 761
      },
      {
        "contestId": 14,
        "index": "E",
        "solvedCount": 232
      },
      {
        "contestId": 14,
        "index": "D",
        "solvedCount": 308
      },
      {
        "contestId": 14,
        "index": "C",
        "solvedCount": 478
      },
      {
        "contestId": 14,
        "index": "B",
        "solvedCount": 892
      },
      {
        "contestId": 14,
        "index": "A",
        "solvedCount": 1195
      },
      {
        "contestId": 13,
        "index": "E",
        "solvedCount": 106
      },
      {
        "contestId": 13,
        "index": "D",
        "solvedCount": 114
      },
      {
        "contestId": 13,
        "index": "C",
        "solvedCount": 352
      },
      {
        "contestId": 13,
        "index": "B",
        "solvedCount": 277
      },
      {
        "contestId": 13,
        "index": "A",
        "solvedCount": 1192
      },
      {
        "contestId": 12,
        "index": "E",
        "solvedCount": 202
      },
      {
        "contestId": 12,
        "index": "D",
        "solvedCount": 215
      },
      {
        "contestId": 12,
        "index": "C",
        "solvedCount": 916
      },
      {
        "contestId": 12,
        "index": "B",
        "solvedCount": 1099
      },
      {
        "contestId": 12,
        "index": "A",
        "solvedCount": 1358
      },
      {
        "contestId": 11,
        "index": "E",
        "solvedCount": 25
      },
      {
        "contestId": 11,
        "index": "D",
        "solvedCount": 254
      },
      {
        "contestId": 11,
        "index": "C",
        "solvedCount": 182
      },
      {
        "contestId": 11,
        "index": "B",
        "solvedCount": 670
      },
      {
        "contestId": 11,
        "index": "A",
        "solvedCount": 1122
      },
      {
        "contestId": 10,
        "index": "E",
        "solvedCount": 62
      },
      {
        "contestId": 10,
        "index": "D",
        "solvedCount": 163
      },
      {
        "contestId": 10,
        "index": "C",
        "solvedCount": 396
      },
      {
        "contestId": 10,
        "index": "B",
        "solvedCount": 557
      },
      {
        "contestId": 10,
        "index": "A",
        "solvedCount": 1006
      },
      {
        "contestId": 9,
        "index": "E",
        "solvedCount": 124
      },
      {
        "contestId": 9,
        "index": "D",
        "solvedCount": 335
      },
      {
        "contestId": 9,
        "index": "C",
        "solvedCount": 1014
      },
      {
        "contestId": 9,
        "index": "B",
        "solvedCount": 804
      },
      {
        "contestId": 9,
        "index": "A",
        "solvedCount": 1514
      },
      {
        "contestId": 8,
        "index": "E",
        "solvedCount": 44
      },
      {
        "contestId": 8,
        "index": "D",
        "solvedCount": 34
      },
      {
        "contestId": 8,
        "index": "C",
        "solvedCount": 351
      },
      {
        "contestId": 8,
        "index": "B",
        "solvedCount": 771
      },
      {
        "contestId": 8,
        "index": "A",
        "solvedCount": 889
      },
      {
        "contestId": 7,
        "index": "E",
        "solvedCount": 46
      },
      {
        "contestId": 7,
        "index": "D",
        "solvedCount": 326
      },
      {
        "contestId": 7,
        "index": "C",
        "solvedCount": 512
      },
      {
        "contestId": 7,
        "index": "B",
        "solvedCount": 591
      },
      {
        "contestId": 7,
        "index": "A",
        "solvedCount": 1142
      },
      {
        "contestId": 6,
        "index": "E",
        "solvedCount": 387
      },
      {
        "contestId": 6,
        "index": "D",
        "solvedCount": 195
      },
      {
        "contestId": 6,
        "index": "C",
        "solvedCount": 1087
      },
      {
        "contestId": 6,
        "index": "B",
        "solvedCount": 1084
      },
      {
        "contestId": 6,
        "index": "A",
        "solvedCount": 1516
      },
      {
        "contestId": 5,
        "index": "E",
        "solvedCount": 146
      },
      {
        "contestId": 5,
        "index": "D",
        "solvedCount": 252
      },
      {
        "contestId": 5,
        "index": "C",
        "solvedCount": 614
      },
      {
        "contestId": 5,
        "index": "B",
        "solvedCount": 963
      },
      {
        "contestId": 5,
        "index": "A",
        "solvedCount": 1319
      },
      {
        "contestId": 4,
        "index": "D",
        "solvedCount": 914
      },
      {
        "contestId": 4,
        "index": "C",
        "solvedCount": 2240
      },
      {
        "contestId": 4,
        "index": "B",
        "solvedCount": 2147
      },
      {
        "contestId": 4,
        "index": "A",
        "solvedCount": 7040
      },
      {
        "contestId": 3,
        "index": "D",
        "solvedCount": 280
      },
      {
        "contestId": 3,
        "index": "C",
        "solvedCount": 661
      },
      {
        "contestId": 3,
        "index": "B",
        "solvedCount": 518
      },
      {
        "contestId": 3,
        "index": "A",
        "solvedCount": 1435
      },
      {
        "contestId": 2,
        "index": "C",
        "solvedCount": 193
      },
      {
        "contestId": 2,
        "index": "B",
        "solvedCount": 702
      },
      {
        "contestId": 2,
        "index": "A",
        "solvedCount": 1459
      },
      {
        "contestId": 1,
        "index": "C",
        "solvedCount": 735
      },
      {
        "contestId": 1,
        "index": "B",
        "solvedCount": 1890
      },
      {
        "contestId": 1,
        "index": "A",
        "solvedCount": 6479
      },
      {
        "contestId": 1836,
        "index": "C",
        "solvedCount": 4228
      },
      {
        "contestId": 1836,
        "index": "D",
        "solvedCount": 146
      },
      {
        "contestId": 1836,
        "index": "E",
        "solvedCount": 148
      },
      {
        "contestId": 1836,
        "index": "F",
        "solvedCount": 26
      },
      {
        "contestId": 1831,
        "index": "C",
        "solvedCount": 7811
      },
      {
        "contestId": 1831,
        "index": "D",
        "solvedCount": 2219
      },
      {
        "contestId": 1831,
        "index": "E",
        "solvedCount": 294
      },
      {
        "contestId": 1831,
        "index": "F",
        "solvedCount": 38
      },
      {
        "contestId": 1828,
        "index": "C",
        "solvedCount": 11766
      },
      {
        "contestId": 1828,
        "index": "D1",
        "solvedCount": 1661
      },
      {
        "contestId": 1828,
        "index": "D2",
        "solvedCount": 474
      },
      {
        "contestId": 1828,
        "index": "E",
        "solvedCount": 151
      },
      {
        "contestId": 1828,
        "index": "F",
        "solvedCount": 52
      },
      {
        "contestId": 1825,
        "index": "C",
        "solvedCount": 6947
      },
      {
        "contestId": 1825,
        "index": "D1",
        "solvedCount": 2039
      },
      {
        "contestId": 1825,
        "index": "D2",
        "solvedCount": 922
      },
      {
        "contestId": 1825,
        "index": "E",
        "solvedCount": 208
      },
      {
        "contestId": 1820,
        "index": "C",
        "solvedCount": 7307
      },
      {
        "contestId": 1820,
        "index": "D",
        "solvedCount": 1422
      },
      {
        "contestId": 1820,
        "index": "E",
        "solvedCount": 283
      },
      {
        "contestId": 1820,
        "index": "F",
        "solvedCount": 69
      },
      {
        "contestId": 1818,
        "index": "C",
        "solvedCount": 5918
      },
      {
        "contestId": 1818,
        "index": "D",
        "solvedCount": 1618
      },
      {
        "contestId": 1818,
        "index": "E",
        "solvedCount": 147
      },
      {
        "contestId": 1818,
        "index": "F",
        "solvedCount": 105
      },
      {
        "contestId": 1816,
        "index": "C",
        "solvedCount": 8268
      },
      {
        "contestId": 1816,
        "index": "D",
        "solvedCount": 1130
      },
      {
        "contestId": 1816,
        "index": "E",
        "solvedCount": 441
      },
      {
        "contestId": 1816,
        "index": "F",
        "solvedCount": 134
      },
      {
        "contestId": 1813,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1812,
        "index": "A",
        "solvedCount": 7855
      },
      {
        "contestId": 1812,
        "index": "B",
        "solvedCount": 2655
      },
      {
        "contestId": 1812,
        "index": "C",
        "solvedCount": 382
      },
      {
        "contestId": 1812,
        "index": "D",
        "solvedCount": 2844
      },
      {
        "contestId": 1812,
        "index": "E",
        "solvedCount": 2458
      },
      {
        "contestId": 1812,
        "index": "F",
        "solvedCount": 307
      },
      {
        "contestId": 1812,
        "index": "G",
        "solvedCount": 27
      },
      {
        "contestId": 1812,
        "index": "H",
        "solvedCount": 19
      },
      {
        "contestId": 1812,
        "index": "I",
        "solvedCount": 14
      },
      {
        "contestId": 1812,
        "index": "J",
        "solvedCount": 2510
      },
      {
        "contestId": 1802,
        "index": "C",
        "solvedCount": 4803
      },
      {
        "contestId": 1802,
        "index": "D",
        "solvedCount": 2939
      },
      {
        "contestId": 1802,
        "index": "E",
        "solvedCount": 927
      },
      {
        "contestId": 1802,
        "index": "F",
        "solvedCount": 331
      },
      {
        "contestId": 1802,
        "index": "G",
        "solvedCount": 18
      },
      {
        "contestId": 1786,
        "index": "C",
        "solvedCount": 9214
      },
      {
        "contestId": 1786,
        "index": "D",
        "solvedCount": 1588
      },
      {
        "contestId": 1786,
        "index": "E",
        "solvedCount": 359
      },
      {
        "contestId": 1786,
        "index": "F",
        "solvedCount": 133
      },
      {
        "contestId": 1785,
        "index": "A",
        "solvedCount": 1744
      },
      {
        "contestId": 1785,
        "index": "B",
        "solvedCount": 1101
      },
      {
        "contestId": 1785,
        "index": "C",
        "solvedCount": 837
      },
      {
        "contestId": 1785,
        "index": "D",
        "solvedCount": 558
      },
      {
        "contestId": 1785,
        "index": "E",
        "solvedCount": 159
      },
      {
        "contestId": 1785,
        "index": "F",
        "solvedCount": 92
      },
      {
        "contestId": 1782,
        "index": "A",
        "solvedCount": 12007
      },
      {
        "contestId": 1782,
        "index": "B",
        "solvedCount": 9576
      },
      {
        "contestId": 1782,
        "index": "C",
        "solvedCount": 4706
      },
      {
        "contestId": 1782,
        "index": "D",
        "solvedCount": 3509
      },
      {
        "contestId": 1782,
        "index": "E",
        "solvedCount": 983
      },
      {
        "contestId": 1782,
        "index": "F",
        "solvedCount": 438
      },
      {
        "contestId": 1782,
        "index": "G",
        "solvedCount": 88
      },
      {
        "contestId": 1782,
        "index": "H1",
        "solvedCount": 53
      },
      {
        "contestId": 1782,
        "index": "H2",
        "solvedCount": 33
      },
      {
        "contestId": 1755,
        "index": "A",
        "solvedCount": 2
      },
      {
        "contestId": 1755,
        "index": "B",
        "solvedCount": 2
      },
      {
        "contestId": 1755,
        "index": "C",
        "solvedCount": 2
      },
      {
        "contestId": 1755,
        "index": "D",
        "solvedCount": 2
      },
      {
        "contestId": 1755,
        "index": "E",
        "solvedCount": 1
      },
      {
        "contestId": 1755,
        "index": "F",
        "solvedCount": 2
      },
      {
        "contestId": 1754,
        "index": "C1",
        "solvedCount": 8224
      },
      {
        "contestId": 1754,
        "index": "C2",
        "solvedCount": 5208
      },
      {
        "contestId": 1754,
        "index": "D",
        "solvedCount": 5818
      },
      {
        "contestId": 1754,
        "index": "E",
        "solvedCount": 1194
      },
      {
        "contestId": 1754,
        "index": "F",
        "solvedCount": 215
      },
      {
        "contestId": 1752,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1751,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1724,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1723,
        "index": "GP1",
        "solvedCount": 0
      },
      {
        "contestId": 1723,
        "index": "GP2",
        "solvedCount": 0
      },
      {
        "contestId": 1719,
        "index": "D1",
        "solvedCount": 2553
      },
      {
        "contestId": 1719,
        "index": "D2",
        "solvedCount": 2063
      },
      {
        "contestId": 1719,
        "index": "E",
        "solvedCount": 684
      },
      {
        "contestId": 1719,
        "index": "F",
        "solvedCount": 233
      },
      {
        "contestId": 1711,
        "index": "C",
        "solvedCount": 6570
      },
      {
        "contestId": 1711,
        "index": "D",
        "solvedCount": 671
      },
      {
        "contestId": 1711,
        "index": "E",
        "solvedCount": 216
      },
      {
        "contestId": 1708,
        "index": "C",
        "solvedCount": 7327
      },
      {
        "contestId": 1708,
        "index": "D",
        "solvedCount": 2762
      },
      {
        "contestId": 1708,
        "index": "E",
        "solvedCount": 192
      },
      {
        "contestId": 1708,
        "index": "F",
        "solvedCount": 27
      },
      {
        "contestId": 1694,
        "index": "C",
        "solvedCount": 10283
      },
      {
        "contestId": 1694,
        "index": "D",
        "solvedCount": 4249
      },
      {
        "contestId": 1694,
        "index": "E",
        "solvedCount": 755
      },
      {
        "contestId": 1694,
        "index": "F",
        "solvedCount": 85
      },
      {
        "contestId": 1688,
        "index": "D",
        "solvedCount": 5891
      },
      {
        "contestId": 1688,
        "index": "E",
        "solvedCount": 1287
      },
      {
        "contestId": 1688,
        "index": "F",
        "solvedCount": 251
      },
      {
        "contestId": 1686,
        "index": "C",
        "solvedCount": 11550
      },
      {
        "contestId": 1686,
        "index": "D",
        "solvedCount": 1476
      },
      {
        "contestId": 1686,
        "index": "E",
        "solvedCount": 145
      },
      {
        "contestId": 1686,
        "index": "F",
        "solvedCount": 56
      },
      {
        "contestId": 1678,
        "index": "C",
        "solvedCount": 4527
      },
      {
        "contestId": 1678,
        "index": "D",
        "solvedCount": 1515
      },
      {
        "contestId": 1678,
        "index": "E",
        "solvedCount": 982
      },
      {
        "contestId": 1678,
        "index": "F",
        "solvedCount": 167
      },
      {
        "contestId": 1668,
        "index": "C",
        "solvedCount": 9070
      },
      {
        "contestId": 1668,
        "index": "D",
        "solvedCount": 1492
      },
      {
        "contestId": 1668,
        "index": "E",
        "solvedCount": 357
      },
      {
        "contestId": 1668,
        "index": "F",
        "solvedCount": 73
      },
      {
        "contestId": 1652,
        "index": "A",
        "solvedCount": 837
      },
      {
        "contestId": 1652,
        "index": "B",
        "solvedCount": 788
      },
      {
        "contestId": 1652,
        "index": "C",
        "solvedCount": 527
      },
      {
        "contestId": 1652,
        "index": "D",
        "solvedCount": 152
      },
      {
        "contestId": 1652,
        "index": "E",
        "solvedCount": 65
      },
      {
        "contestId": 1652,
        "index": "F",
        "solvedCount": 14
      },
      {
        "contestId": 1652,
        "index": "G",
        "solvedCount": 4
      },
      {
        "contestId": 1649,
        "index": "C",
        "solvedCount": 6562
      },
      {
        "contestId": 1649,
        "index": "D",
        "solvedCount": 3077
      },
      {
        "contestId": 1649,
        "index": "E",
        "solvedCount": 909
      },
      {
        "contestId": 1649,
        "index": "F",
        "solvedCount": 71
      },
      {
        "contestId": 1645,
        "index": "A",
        "solvedCount": 335
      },
      {
        "contestId": 1645,
        "index": "B",
        "solvedCount": 282
      },
      {
        "contestId": 1645,
        "index": "C",
        "solvedCount": 258
      },
      {
        "contestId": 1645,
        "index": "D",
        "solvedCount": 195
      },
      {
        "contestId": 1645,
        "index": "E",
        "solvedCount": 154
      },
      {
        "contestId": 1645,
        "index": "F",
        "solvedCount": 127
      },
      {
        "contestId": 1645,
        "index": "G",
        "solvedCount": 81
      },
      {
        "contestId": 1645,
        "index": "H",
        "solvedCount": 52
      },
      {
        "contestId": 1642,
        "index": "C",
        "solvedCount": 11282
      },
      {
        "contestId": 1642,
        "index": "D",
        "solvedCount": 1972
      },
      {
        "contestId": 1642,
        "index": "E",
        "solvedCount": 669
      },
      {
        "contestId": 1642,
        "index": "F",
        "solvedCount": 145
      },
      {
        "contestId": 1631,
        "index": "C",
        "solvedCount": 8883
      },
      {
        "contestId": 1631,
        "index": "D",
        "solvedCount": 2631
      },
      {
        "contestId": 1631,
        "index": "E",
        "solvedCount": 1009
      },
      {
        "contestId": 1631,
        "index": "F",
        "solvedCount": 243
      },
      {
        "contestId": 1629,
        "index": "C",
        "solvedCount": 10115
      },
      {
        "contestId": 1629,
        "index": "D",
        "solvedCount": 7075
      },
      {
        "contestId": 1629,
        "index": "E",
        "solvedCount": 1387
      },
      {
        "contestId": 1629,
        "index": "F1",
        "solvedCount": 700
      },
      {
        "contestId": 1629,
        "index": "F2",
        "solvedCount": 345
      },
      {
        "contestId": 1604,
        "index": "C",
        "solvedCount": 9813
      },
      {
        "contestId": 1604,
        "index": "D",
        "solvedCount": 6942
      },
      {
        "contestId": 1604,
        "index": "E",
        "solvedCount": 423
      },
      {
        "contestId": 1604,
        "index": "F",
        "solvedCount": 40
      },
      {
        "contestId": 1602,
        "index": "C",
        "solvedCount": 7533
      },
      {
        "contestId": 1602,
        "index": "D",
        "solvedCount": 2266
      },
      {
        "contestId": 1602,
        "index": "E",
        "solvedCount": 413
      },
      {
        "contestId": 1602,
        "index": "F",
        "solvedCount": 162
      },
      {
        "contestId": 1600,
        "index": "A",
        "solvedCount": 12
      },
      {
        "contestId": 1600,
        "index": "B",
        "solvedCount": 48
      },
      {
        "contestId": 1600,
        "index": "C",
        "solvedCount": 48
      },
      {
        "contestId": 1600,
        "index": "D",
        "solvedCount": 48
      },
      {
        "contestId": 1600,
        "index": "G",
        "solvedCount": 5
      },
      {
        "contestId": 1600,
        "index": "H",
        "solvedCount": 5
      },
      {
        "contestId": 1600,
        "index": "I",
        "solvedCount": 105
      },
      {
        "contestId": 1591,
        "index": "A",
        "solvedCount": 12512
      },
      {
        "contestId": 1591,
        "index": "B",
        "solvedCount": 10831
      },
      {
        "contestId": 1591,
        "index": "C",
        "solvedCount": 7747
      },
      {
        "contestId": 1591,
        "index": "D",
        "solvedCount": 2786
      },
      {
        "contestId": 1591,
        "index": "E",
        "solvedCount": 802
      },
      {
        "contestId": 1591,
        "index": "F",
        "solvedCount": 794
      },
      {
        "contestId": 1589,
        "index": "A",
        "solvedCount": 9578
      },
      {
        "contestId": 1589,
        "index": "B",
        "solvedCount": 7834
      },
      {
        "contestId": 1589,
        "index": "C",
        "solvedCount": 8204
      },
      {
        "contestId": 1589,
        "index": "D",
        "solvedCount": 1661
      },
      {
        "contestId": 1589,
        "index": "E",
        "solvedCount": 241
      },
      {
        "contestId": 1589,
        "index": "F",
        "solvedCount": 78
      },
      {
        "contestId": 1588,
        "index": "A",
        "solvedCount": 1329
      },
      {
        "contestId": 1588,
        "index": "B",
        "solvedCount": 881
      },
      {
        "contestId": 1588,
        "index": "C",
        "solvedCount": 676
      },
      {
        "contestId": 1588,
        "index": "D",
        "solvedCount": 440
      },
      {
        "contestId": 1588,
        "index": "E",
        "solvedCount": 113
      },
      {
        "contestId": 1586,
        "index": "A",
        "solvedCount": 9783
      },
      {
        "contestId": 1586,
        "index": "B",
        "solvedCount": 7599
      },
      {
        "contestId": 1586,
        "index": "C",
        "solvedCount": 4688
      },
      {
        "contestId": 1586,
        "index": "D",
        "solvedCount": 3597
      },
      {
        "contestId": 1586,
        "index": "E",
        "solvedCount": 1584
      },
      {
        "contestId": 1586,
        "index": "F",
        "solvedCount": 752
      },
      {
        "contestId": 1586,
        "index": "G",
        "solvedCount": 210
      },
      {
        "contestId": 1586,
        "index": "H",
        "solvedCount": 167
      },
      {
        "contestId": 1581,
        "index": "C",
        "solvedCount": 1721
      },
      {
        "contestId": 1581,
        "index": "D",
        "solvedCount": 98
      },
      {
        "contestId": 1581,
        "index": "E",
        "solvedCount": 269
      },
      {
        "contestId": 1581,
        "index": "F",
        "solvedCount": 50
      },
      {
        "contestId": 1573,
        "index": "C",
        "solvedCount": 4253
      },
      {
        "contestId": 1573,
        "index": "D",
        "solvedCount": 477
      },
      {
        "contestId": 1573,
        "index": "E",
        "solvedCount": 264
      },
      {
        "contestId": 1573,
        "index": "F",
        "solvedCount": 37
      },
      {
        "contestId": 1570,
        "index": "A",
        "solvedCount": 720
      },
      {
        "contestId": 1570,
        "index": "B",
        "solvedCount": 323
      },
      {
        "contestId": 1570,
        "index": "C",
        "solvedCount": 269
      },
      {
        "contestId": 1570,
        "index": "D",
        "solvedCount": 254
      },
      {
        "contestId": 1570,
        "index": "E",
        "solvedCount": 248
      },
      {
        "contestId": 1570,
        "index": "F",
        "solvedCount": 174
      },
      {
        "contestId": 1570,
        "index": "G",
        "solvedCount": 129
      },
      {
        "contestId": 1570,
        "index": "H",
        "solvedCount": 14
      },
      {
        "contestId": 1570,
        "index": "I",
        "solvedCount": 5
      },
      {
        "contestId": 1563,
        "index": "A",
        "solvedCount": 32
      },
      {
        "contestId": 1563,
        "index": "B",
        "solvedCount": 35
      },
      {
        "contestId": 1563,
        "index": "C",
        "solvedCount": 29
      },
      {
        "contestId": 1563,
        "index": "D",
        "solvedCount": 21
      },
      {
        "contestId": 1563,
        "index": "E",
        "solvedCount": 18
      },
      {
        "contestId": 1563,
        "index": "F",
        "solvedCount": 3
      },
      {
        "contestId": 1561,
        "index": "B",
        "solvedCount": 7455
      },
      {
        "contestId": 1561,
        "index": "D2",
        "solvedCount": 2290
      },
      {
        "contestId": 1561,
        "index": "E",
        "solvedCount": 949
      },
      {
        "contestId": 1561,
        "index": "F",
        "solvedCount": 88
      },
      {
        "contestId": 1549,
        "index": "C",
        "solvedCount": 10934
      },
      {
        "contestId": 1549,
        "index": "D",
        "solvedCount": 5423
      },
      {
        "contestId": 1549,
        "index": "E",
        "solvedCount": 517
      },
      {
        "contestId": 1549,
        "index": "F1",
        "solvedCount": 288
      },
      {
        "contestId": 1549,
        "index": "F2",
        "solvedCount": 25
      },
      {
        "contestId": 1546,
        "index": "C",
        "solvedCount": 8580
      },
      {
        "contestId": 1546,
        "index": "D",
        "solvedCount": 2811
      },
      {
        "contestId": 1546,
        "index": "E",
        "solvedCount": 75
      },
      {
        "contestId": 1546,
        "index": "F",
        "solvedCount": 63
      },
      {
        "contestId": 1544,
        "index": "A",
        "solvedCount": 212
      },
      {
        "contestId": 1544,
        "index": "B",
        "solvedCount": 204
      },
      {
        "contestId": 1544,
        "index": "C",
        "solvedCount": 195
      },
      {
        "contestId": 1544,
        "index": "D",
        "solvedCount": 185
      },
      {
        "contestId": 1544,
        "index": "E",
        "solvedCount": 144
      },
      {
        "contestId": 1544,
        "index": "F",
        "solvedCount": 57
      },
      {
        "contestId": 1544,
        "index": "G",
        "solvedCount": 12
      },
      {
        "contestId": 1544,
        "index": "H",
        "solvedCount": 5
      },
      {
        "contestId": 1541,
        "index": "C",
        "solvedCount": 8745
      },
      {
        "contestId": 1541,
        "index": "D",
        "solvedCount": 565
      },
      {
        "contestId": 1541,
        "index": "E1",
        "solvedCount": 58
      },
      {
        "contestId": 1541,
        "index": "E2",
        "solvedCount": 42
      },
      {
        "contestId": 1529,
        "index": "C",
        "solvedCount": 7212
      },
      {
        "contestId": 1529,
        "index": "D",
        "solvedCount": 4230
      },
      {
        "contestId": 1529,
        "index": "E",
        "solvedCount": 509
      },
      {
        "contestId": 1529,
        "index": "F",
        "solvedCount": 183
      },
      {
        "contestId": 1524,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1522,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1509,
        "index": "D",
        "solvedCount": 3069
      },
      {
        "contestId": 1509,
        "index": "E",
        "solvedCount": 1026
      },
      {
        "contestId": 1509,
        "index": "F",
        "solvedCount": 127
      },
      {
        "contestId": 1504,
        "index": "C",
        "solvedCount": 8098
      },
      {
        "contestId": 1504,
        "index": "D",
        "solvedCount": 3716
      },
      {
        "contestId": 1504,
        "index": "E",
        "solvedCount": 1013
      },
      {
        "contestId": 1504,
        "index": "F",
        "solvedCount": 108
      },
      {
        "contestId": 1501,
        "index": "C",
        "solvedCount": 4757
      },
      {
        "contestId": 1501,
        "index": "D",
        "solvedCount": 540
      },
      {
        "contestId": 1501,
        "index": "E",
        "solvedCount": 41
      },
      {
        "contestId": 1501,
        "index": "F",
        "solvedCount": 19
      },
      {
        "contestId": 1496,
        "index": "C",
        "solvedCount": 10568
      },
      {
        "contestId": 1496,
        "index": "D",
        "solvedCount": 3107
      },
      {
        "contestId": 1496,
        "index": "E",
        "solvedCount": 743
      },
      {
        "contestId": 1496,
        "index": "F",
        "solvedCount": 146
      },
      {
        "contestId": 1489,
        "index": "A",
        "solvedCount": 436
      },
      {
        "contestId": 1489,
        "index": "B",
        "solvedCount": 359
      },
      {
        "contestId": 1489,
        "index": "C",
        "solvedCount": 337
      },
      {
        "contestId": 1489,
        "index": "D",
        "solvedCount": 267
      },
      {
        "contestId": 1489,
        "index": "E",
        "solvedCount": 214
      },
      {
        "contestId": 1489,
        "index": "F",
        "solvedCount": 160
      },
      {
        "contestId": 1489,
        "index": "G",
        "solvedCount": 115
      },
      {
        "contestId": 1484,
        "index": "A",
        "solvedCount": 15409
      },
      {
        "contestId": 1484,
        "index": "B",
        "solvedCount": 6697
      },
      {
        "contestId": 1484,
        "index": "C",
        "solvedCount": 4885
      },
      {
        "contestId": 1484,
        "index": "D",
        "solvedCount": 1420
      },
      {
        "contestId": 1484,
        "index": "E",
        "solvedCount": 695
      },
      {
        "contestId": 1484,
        "index": "F",
        "solvedCount": 229
      },
      {
        "contestId": 1483,
        "index": "A",
        "solvedCount": 1680
      },
      {
        "contestId": 1483,
        "index": "B",
        "solvedCount": 1384
      },
      {
        "contestId": 1483,
        "index": "C",
        "solvedCount": 1355
      },
      {
        "contestId": 1483,
        "index": "D",
        "solvedCount": 925
      },
      {
        "contestId": 1483,
        "index": "E",
        "solvedCount": 200
      },
      {
        "contestId": 1483,
        "index": "F",
        "solvedCount": 270
      },
      {
        "contestId": 1480,
        "index": "C",
        "solvedCount": 6575
      },
      {
        "contestId": 1480,
        "index": "D1",
        "solvedCount": 3593
      },
      {
        "contestId": 1480,
        "index": "D2",
        "solvedCount": 1615
      },
      {
        "contestId": 1480,
        "index": "E",
        "solvedCount": 203
      },
      {
        "contestId": 1478,
        "index": "D",
        "solvedCount": 2614
      },
      {
        "contestId": 1478,
        "index": "E",
        "solvedCount": 834
      },
      {
        "contestId": 1478,
        "index": "F",
        "solvedCount": 499
      },
      {
        "contestId": 1471,
        "index": "C",
        "solvedCount": 11750
      },
      {
        "contestId": 1471,
        "index": "D",
        "solvedCount": 3280
      },
      {
        "contestId": 1471,
        "index": "E",
        "solvedCount": 331
      },
      {
        "contestId": 1471,
        "index": "F",
        "solvedCount": 1202
      },
      {
        "contestId": 1465,
        "index": "A",
        "solvedCount": 14207
      },
      {
        "contestId": 1465,
        "index": "B",
        "solvedCount": 10912
      },
      {
        "contestId": 1465,
        "index": "C",
        "solvedCount": 4152
      },
      {
        "contestId": 1465,
        "index": "D",
        "solvedCount": 902
      },
      {
        "contestId": 1465,
        "index": "E",
        "solvedCount": 352
      },
      {
        "contestId": 1465,
        "index": "F",
        "solvedCount": 36
      },
      {
        "contestId": 1464,
        "index": "A",
        "solvedCount": 1309
      },
      {
        "contestId": 1464,
        "index": "B",
        "solvedCount": 993
      },
      {
        "contestId": 1464,
        "index": "C",
        "solvedCount": 847
      },
      {
        "contestId": 1464,
        "index": "D",
        "solvedCount": 158
      },
      {
        "contestId": 1464,
        "index": "E",
        "solvedCount": 360
      },
      {
        "contestId": 1460,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 1459,
        "index": "C",
        "solvedCount": 7847
      },
      {
        "contestId": 1459,
        "index": "D",
        "solvedCount": 1205
      },
      {
        "contestId": 1459,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 1459,
        "index": "F",
        "solvedCount": 44
      },
      {
        "contestId": 1457,
        "index": "A",
        "solvedCount": 10349
      },
      {
        "contestId": 1457,
        "index": "B",
        "solvedCount": 8110
      },
      {
        "contestId": 1457,
        "index": "C",
        "solvedCount": 5232
      },
      {
        "contestId": 1457,
        "index": "D",
        "solvedCount": 2095
      },
      {
        "contestId": 1457,
        "index": "E",
        "solvedCount": 680
      },
      {
        "contestId": 1456,
        "index": "A",
        "solvedCount": 1303
      },
      {
        "contestId": 1456,
        "index": "B",
        "solvedCount": 1131
      },
      {
        "contestId": 1456,
        "index": "C",
        "solvedCount": 987
      },
      {
        "contestId": 1456,
        "index": "D",
        "solvedCount": 250
      },
      {
        "contestId": 1447,
        "index": "C",
        "solvedCount": 7954
      },
      {
        "contestId": 1447,
        "index": "D",
        "solvedCount": 3535
      },
      {
        "contestId": 1447,
        "index": "E",
        "solvedCount": 962
      },
      {
        "contestId": 1447,
        "index": "F1",
        "solvedCount": 272
      },
      {
        "contestId": 1447,
        "index": "F2",
        "solvedCount": 97
      },
      {
        "contestId": 1445,
        "index": "C",
        "solvedCount": 6329
      },
      {
        "contestId": 1445,
        "index": "D",
        "solvedCount": 2757
      },
      {
        "contestId": 1445,
        "index": "E",
        "solvedCount": 198
      },
      {
        "contestId": 1443,
        "index": "D",
        "solvedCount": 4357
      },
      {
        "contestId": 1443,
        "index": "F",
        "solvedCount": 1379
      },
      {
        "contestId": 1441,
        "index": "A",
        "solvedCount": 39
      },
      {
        "contestId": 1441,
        "index": "B",
        "solvedCount": 27
      },
      {
        "contestId": 1441,
        "index": "C",
        "solvedCount": 19
      },
      {
        "contestId": 1441,
        "index": "D",
        "solvedCount": 14
      },
      {
        "contestId": 1441,
        "index": "E",
        "solvedCount": 3
      },
      {
        "contestId": 1441,
        "index": "F",
        "solvedCount": 5
      },
      {
        "contestId": 1440,
        "index": "C1",
        "solvedCount": 6103
      },
      {
        "contestId": 1440,
        "index": "C2",
        "solvedCount": 2681
      },
      {
        "contestId": 1440,
        "index": "D",
        "solvedCount": 230
      },
      {
        "contestId": 1440,
        "index": "E",
        "solvedCount": 426
      },
      {
        "contestId": 1435,
        "index": "A",
        "solvedCount": 9930
      },
      {
        "contestId": 1435,
        "index": "B",
        "solvedCount": 7807
      },
      {
        "contestId": 1435,
        "index": "C",
        "solvedCount": 2496
      },
      {
        "contestId": 1435,
        "index": "D",
        "solvedCount": 2746
      },
      {
        "contestId": 1435,
        "index": "E",
        "solvedCount": 453
      },
      {
        "contestId": 1434,
        "index": "A",
        "solvedCount": 1115
      },
      {
        "contestId": 1434,
        "index": "B",
        "solvedCount": 1148
      },
      {
        "contestId": 1434,
        "index": "C",
        "solvedCount": 875
      },
      {
        "contestId": 1434,
        "index": "D",
        "solvedCount": 403
      },
      {
        "contestId": 1432,
        "index": "A",
        "solvedCount": 740
      },
      {
        "contestId": 1432,
        "index": "B",
        "solvedCount": 625
      },
      {
        "contestId": 1432,
        "index": "C",
        "solvedCount": 521
      },
      {
        "contestId": 1432,
        "index": "D",
        "solvedCount": 385
      },
      {
        "contestId": 1432,
        "index": "E",
        "solvedCount": 198
      },
      {
        "contestId": 1432,
        "index": "F",
        "solvedCount": 167
      },
      {
        "contestId": 1424,
        "index": "A",
        "solvedCount": 183
      },
      {
        "contestId": 1424,
        "index": "B",
        "solvedCount": 183
      },
      {
        "contestId": 1424,
        "index": "C",
        "solvedCount": 2
      },
      {
        "contestId": 1424,
        "index": "D",
        "solvedCount": 2
      },
      {
        "contestId": 1424,
        "index": "E",
        "solvedCount": 2
      },
      {
        "contestId": 1424,
        "index": "F",
        "solvedCount": 2
      },
      {
        "contestId": 1424,
        "index": "H",
        "solvedCount": 20
      },
      {
        "contestId": 1424,
        "index": "I",
        "solvedCount": 20
      },
      {
        "contestId": 1424,
        "index": "J",
        "solvedCount": 368
      },
      {
        "contestId": 1424,
        "index": "K",
        "solvedCount": 3
      },
      {
        "contestId": 1424,
        "index": "L",
        "solvedCount": 3
      },
      {
        "contestId": 1424,
        "index": "N",
        "solvedCount": 0
      },
      {
        "contestId": 1417,
        "index": "C",
        "solvedCount": 6591
      },
      {
        "contestId": 1417,
        "index": "D",
        "solvedCount": 2815
      },
      {
        "contestId": 1417,
        "index": "E",
        "solvedCount": 1136
      },
      {
        "contestId": 1417,
        "index": "F",
        "solvedCount": 257
      },
      {
        "contestId": 1405,
        "index": "C",
        "solvedCount": 9076
      },
      {
        "contestId": 1405,
        "index": "D",
        "solvedCount": 3569
      },
      {
        "contestId": 1405,
        "index": "E",
        "solvedCount": 571
      },
      {
        "contestId": 1397,
        "index": "C",
        "solvedCount": 8397
      },
      {
        "contestId": 1397,
        "index": "D",
        "solvedCount": 5567
      },
      {
        "contestId": 1397,
        "index": "E",
        "solvedCount": 574
      },
      {
        "contestId": 1395,
        "index": "D",
        "solvedCount": 3118
      },
      {
        "contestId": 1395,
        "index": "E",
        "solvedCount": 303
      },
      {
        "contestId": 1395,
        "index": "F",
        "solvedCount": 81
      },
      {
        "contestId": 1384,
        "index": "C",
        "solvedCount": 5847
      },
      {
        "contestId": 1384,
        "index": "D",
        "solvedCount": 1556
      },
      {
        "contestId": 1384,
        "index": "E",
        "solvedCount": 60
      },
      {
        "contestId": 1384,
        "index": "F",
        "solvedCount": 45
      },
      {
        "contestId": 1382,
        "index": "C1",
        "solvedCount": 12740
      },
      {
        "contestId": 1382,
        "index": "C2",
        "solvedCount": 7629
      },
      {
        "contestId": 1382,
        "index": "D",
        "solvedCount": 3840
      },
      {
        "contestId": 1382,
        "index": "E",
        "solvedCount": 263
      },
      {
        "contestId": 1378,
        "index": "A1",
        "solvedCount": 0
      },
      {
        "contestId": 1378,
        "index": "A2",
        "solvedCount": 0
      },
      {
        "contestId": 1378,
        "index": "A3",
        "solvedCount": 0
      },
      {
        "contestId": 1377,
        "index": "A1",
        "solvedCount": 0
      },
      {
        "contestId": 1377,
        "index": "A2",
        "solvedCount": 0
      },
      {
        "contestId": 1377,
        "index": "A3",
        "solvedCount": 0
      },
      {
        "contestId": 1376,
        "index": "A1",
        "solvedCount": 0
      },
      {
        "contestId": 1376,
        "index": "B1",
        "solvedCount": 0
      },
      {
        "contestId": 1376,
        "index": "B2",
        "solvedCount": 0
      },
      {
        "contestId": 1376,
        "index": "B3",
        "solvedCount": 0
      },
      {
        "contestId": 1376,
        "index": "B4",
        "solvedCount": 0
      },
      {
        "contestId": 1362,
        "index": "D",
        "solvedCount": 4752
      },
      {
        "contestId": 1362,
        "index": "E",
        "solvedCount": 1124
      },
      {
        "contestId": 1362,
        "index": "F",
        "solvedCount": 147
      },
      {
        "contestId": 1350,
        "index": "C",
        "solvedCount": 7991
      },
      {
        "contestId": 1350,
        "index": "D",
        "solvedCount": 3578
      },
      {
        "contestId": 1350,
        "index": "E",
        "solvedCount": 1407
      },
      {
        "contestId": 1350,
        "index": "F",
        "solvedCount": 35
      },
      {
        "contestId": 1347,
        "index": "A",
        "solvedCount": 1187
      },
      {
        "contestId": 1347,
        "index": "B",
        "solvedCount": 890
      },
      {
        "contestId": 1347,
        "index": "C",
        "solvedCount": 736
      },
      {
        "contestId": 1347,
        "index": "D",
        "solvedCount": 534
      },
      {
        "contestId": 1347,
        "index": "E",
        "solvedCount": 463
      },
      {
        "contestId": 1345,
        "index": "C",
        "solvedCount": 9080
      },
      {
        "contestId": 1345,
        "index": "D",
        "solvedCount": 3014
      },
      {
        "contestId": 1345,
        "index": "E",
        "solvedCount": 433
      },
      {
        "contestId": 1345,
        "index": "F",
        "solvedCount": 135
      },
      {
        "contestId": 1341,
        "index": "C",
        "solvedCount": 9461
      },
      {
        "contestId": 1341,
        "index": "D",
        "solvedCount": 4336
      },
      {
        "contestId": 1341,
        "index": "E",
        "solvedCount": 530
      },
      {
        "contestId": 1341,
        "index": "F",
        "solvedCount": 112
      },
      {
        "contestId": 1339,
        "index": "C",
        "solvedCount": 11431
      },
      {
        "contestId": 1339,
        "index": "D",
        "solvedCount": 3826
      },
      {
        "contestId": 1339,
        "index": "E",
        "solvedCount": 827
      },
      {
        "contestId": 1337,
        "index": "C",
        "solvedCount": 9375
      },
      {
        "contestId": 1337,
        "index": "D",
        "solvedCount": 6047
      },
      {
        "contestId": 1337,
        "index": "E",
        "solvedCount": 938
      },
      {
        "contestId": 1337,
        "index": "F",
        "solvedCount": 80
      },
      {
        "contestId": 1330,
        "index": "C",
        "solvedCount": 4950
      },
      {
        "contestId": 1330,
        "index": "D",
        "solvedCount": 2856
      },
      {
        "contestId": 1330,
        "index": "E",
        "solvedCount": 284
      },
      {
        "contestId": 1323,
        "index": "C",
        "solvedCount": 7100
      },
      {
        "contestId": 1323,
        "index": "D",
        "solvedCount": 1251
      },
      {
        "contestId": 1323,
        "index": "E",
        "solvedCount": 278
      },
      {
        "contestId": 1323,
        "index": "F",
        "solvedCount": 40
      },
      {
        "contestId": 1321,
        "index": "B",
        "solvedCount": 7117
      },
      {
        "contestId": 1321,
        "index": "D",
        "solvedCount": 2769
      },
      {
        "contestId": 1321,
        "index": "E",
        "solvedCount": 864
      },
      {
        "contestId": 1321,
        "index": "F",
        "solvedCount": 115
      },
      {
        "contestId": 1319,
        "index": "A",
        "solvedCount": 754
      },
      {
        "contestId": 1319,
        "index": "B",
        "solvedCount": 697
      },
      {
        "contestId": 1319,
        "index": "C",
        "solvedCount": 627
      },
      {
        "contestId": 1319,
        "index": "D",
        "solvedCount": 527
      },
      {
        "contestId": 1319,
        "index": "E",
        "solvedCount": 216
      },
      {
        "contestId": 1319,
        "index": "F",
        "solvedCount": 7
      },
      {
        "contestId": 1319,
        "index": "G",
        "solvedCount": 32
      },
      {
        "contestId": 1319,
        "index": "H",
        "solvedCount": 2
      },
      {
        "contestId": 1315,
        "index": "D",
        "solvedCount": 2361
      },
      {
        "contestId": 1315,
        "index": "E",
        "solvedCount": 50
      },
      {
        "contestId": 1315,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 1314,
        "index": "A",
        "solvedCount": 935
      },
      {
        "contestId": 1314,
        "index": "B",
        "solvedCount": 238
      },
      {
        "contestId": 1314,
        "index": "C",
        "solvedCount": 184
      },
      {
        "contestId": 1314,
        "index": "D",
        "solvedCount": 625
      },
      {
        "contestId": 1314,
        "index": "E",
        "solvedCount": 94
      },
      {
        "contestId": 1314,
        "index": "F",
        "solvedCount": 31
      },
      {
        "contestId": 1300,
        "index": "C",
        "solvedCount": 7142
      },
      {
        "contestId": 1300,
        "index": "D",
        "solvedCount": 2815
      },
      {
        "contestId": 1300,
        "index": "E",
        "solvedCount": 1241
      },
      {
        "contestId": 1298,
        "index": "A",
        "solvedCount": 762
      },
      {
        "contestId": 1298,
        "index": "B",
        "solvedCount": 625
      },
      {
        "contestId": 1298,
        "index": "C",
        "solvedCount": 543
      },
      {
        "contestId": 1298,
        "index": "D",
        "solvedCount": 338
      },
      {
        "contestId": 1298,
        "index": "E",
        "solvedCount": 224
      },
      {
        "contestId": 1298,
        "index": "F1",
        "solvedCount": 142
      },
      {
        "contestId": 1298,
        "index": "F2",
        "solvedCount": 97
      },
      {
        "contestId": 1293,
        "index": "C",
        "solvedCount": 7779
      },
      {
        "contestId": 1293,
        "index": "D",
        "solvedCount": 2887
      },
      {
        "contestId": 1293,
        "index": "E",
        "solvedCount": 349
      },
      {
        "contestId": 1293,
        "index": "F",
        "solvedCount": 79
      },
      {
        "contestId": 1291,
        "index": "C",
        "solvedCount": 5042
      },
      {
        "contestId": 1291,
        "index": "D",
        "solvedCount": 2171
      },
      {
        "contestId": 1291,
        "index": "E",
        "solvedCount": 232
      },
      {
        "contestId": 1287,
        "index": "C",
        "solvedCount": 4129
      },
      {
        "contestId": 1287,
        "index": "D",
        "solvedCount": 1634
      },
      {
        "contestId": 1287,
        "index": "E1",
        "solvedCount": 189
      },
      {
        "contestId": 1287,
        "index": "E2",
        "solvedCount": 58
      },
      {
        "contestId": 1287,
        "index": "F",
        "solvedCount": 30
      },
      {
        "contestId": 1281,
        "index": "C",
        "solvedCount": 2750
      },
      {
        "contestId": 1281,
        "index": "D",
        "solvedCount": 1666
      },
      {
        "contestId": 1281,
        "index": "E",
        "solvedCount": 555
      },
      {
        "contestId": 1281,
        "index": "F",
        "solvedCount": 80
      },
      {
        "contestId": 1277,
        "index": "C",
        "solvedCount": 5165
      },
      {
        "contestId": 1277,
        "index": "E",
        "solvedCount": 1761
      },
      {
        "contestId": 1277,
        "index": "F",
        "solvedCount": 268
      },
      {
        "contestId": 1274,
        "index": "A",
        "solvedCount": 9
      },
      {
        "contestId": 1274,
        "index": "B",
        "solvedCount": 0
      },
      {
        "contestId": 1273,
        "index": "A",
        "solvedCount": 92
      },
      {
        "contestId": 1273,
        "index": "B",
        "solvedCount": 6
      },
      {
        "contestId": 1273,
        "index": "C",
        "solvedCount": 36
      },
      {
        "contestId": 1273,
        "index": "D",
        "solvedCount": 125
      },
      {
        "contestId": 1269,
        "index": "C",
        "solvedCount": 4961
      },
      {
        "contestId": 1269,
        "index": "D",
        "solvedCount": 2717
      },
      {
        "contestId": 1269,
        "index": "E",
        "solvedCount": 392
      },
      {
        "contestId": 1265,
        "index": "C",
        "solvedCount": 6369
      },
      {
        "contestId": 1265,
        "index": "D",
        "solvedCount": 3280
      },
      {
        "contestId": 1265,
        "index": "F",
        "solvedCount": 197
      },
      {
        "contestId": 1262,
        "index": "A",
        "solvedCount": 5721
      },
      {
        "contestId": 1262,
        "index": "B",
        "solvedCount": 5189
      },
      {
        "contestId": 1262,
        "index": "C",
        "solvedCount": 2620
      },
      {
        "contestId": 1262,
        "index": "D1",
        "solvedCount": 2773
      },
      {
        "contestId": 1262,
        "index": "D2",
        "solvedCount": 1808
      },
      {
        "contestId": 1262,
        "index": "E",
        "solvedCount": 350
      },
      {
        "contestId": 1262,
        "index": "F1",
        "solvedCount": 409
      },
      {
        "contestId": 1262,
        "index": "F2",
        "solvedCount": 231
      },
      {
        "contestId": 1261,
        "index": "A",
        "solvedCount": 1055
      },
      {
        "contestId": 1261,
        "index": "B1",
        "solvedCount": 1077
      },
      {
        "contestId": 1261,
        "index": "B2",
        "solvedCount": 1083
      },
      {
        "contestId": 1261,
        "index": "C",
        "solvedCount": 733
      },
      {
        "contestId": 1261,
        "index": "D1",
        "solvedCount": 759
      },
      {
        "contestId": 1261,
        "index": "D2",
        "solvedCount": 653
      },
      {
        "contestId": 1261,
        "index": "E",
        "solvedCount": 436
      },
      {
        "contestId": 1259,
        "index": "A",
        "solvedCount": 934
      },
      {
        "contestId": 1259,
        "index": "B",
        "solvedCount": 644
      },
      {
        "contestId": 1259,
        "index": "C",
        "solvedCount": 544
      },
      {
        "contestId": 1259,
        "index": "D",
        "solvedCount": 84
      },
      {
        "contestId": 1259,
        "index": "E",
        "solvedCount": 72
      },
      {
        "contestId": 1259,
        "index": "F",
        "solvedCount": 0
      },
      {
        "contestId": 1259,
        "index": "G",
        "solvedCount": 0
      },
      {
        "contestId": 1255,
        "index": "D",
        "solvedCount": 2516
      },
      {
        "contestId": 1255,
        "index": "E1",
        "solvedCount": 1755
      },
      {
        "contestId": 1255,
        "index": "E2",
        "solvedCount": 900
      },
      {
        "contestId": 1255,
        "index": "F",
        "solvedCount": 202
      },
      {
        "contestId": 1248,
        "index": "C",
        "solvedCount": 3932
      },
      {
        "contestId": 1248,
        "index": "D2",
        "solvedCount": 327
      },
      {
        "contestId": 1248,
        "index": "E",
        "solvedCount": 344
      },
      {
        "contestId": 1248,
        "index": "F",
        "solvedCount": 369
      },
      {
        "contestId": 1247,
        "index": "A",
        "solvedCount": 7937
      },
      {
        "contestId": 1247,
        "index": "B1",
        "solvedCount": 6836
      },
      {
        "contestId": 1247,
        "index": "B2",
        "solvedCount": 5926
      },
      {
        "contestId": 1247,
        "index": "C",
        "solvedCount": 3699
      },
      {
        "contestId": 1247,
        "index": "D",
        "solvedCount": 2265
      },
      {
        "contestId": 1247,
        "index": "E",
        "solvedCount": 380
      },
      {
        "contestId": 1247,
        "index": "F",
        "solvedCount": 126
      },
      {
        "contestId": 1246,
        "index": "A",
        "solvedCount": 1145
      },
      {
        "contestId": 1246,
        "index": "B",
        "solvedCount": 1152
      },
      {
        "contestId": 1246,
        "index": "C",
        "solvedCount": 765
      },
      {
        "contestId": 1246,
        "index": "D",
        "solvedCount": 449
      },
      {
        "contestId": 1246,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 1243,
        "index": "C",
        "solvedCount": 6910
      },
      {
        "contestId": 1243,
        "index": "D",
        "solvedCount": 2444
      },
      {
        "contestId": 1243,
        "index": "E",
        "solvedCount": 273
      },
      {
        "contestId": 1241,
        "index": "A",
        "solvedCount": 7468
      },
      {
        "contestId": 1241,
        "index": "B",
        "solvedCount": 6488
      },
      {
        "contestId": 1241,
        "index": "C",
        "solvedCount": 3114
      },
      {
        "contestId": 1241,
        "index": "D",
        "solvedCount": 1263
      },
      {
        "contestId": 1241,
        "index": "E",
        "solvedCount": 556
      },
      {
        "contestId": 1241,
        "index": "F",
        "solvedCount": 103
      },
      {
        "contestId": 1240,
        "index": "A",
        "solvedCount": 1003
      },
      {
        "contestId": 1240,
        "index": "B",
        "solvedCount": 916
      },
      {
        "contestId": 1240,
        "index": "C",
        "solvedCount": 822
      },
      {
        "contestId": 1240,
        "index": "D",
        "solvedCount": 473
      },
      {
        "contestId": 1240,
        "index": "E",
        "solvedCount": 110
      },
      {
        "contestId": 1235,
        "index": "A3",
        "solvedCount": 0
      },
      {
        "contestId": 1235,
        "index": "B3",
        "solvedCount": 0
      },
      {
        "contestId": 1235,
        "index": "C3",
        "solvedCount": 0
      },
      {
        "contestId": 1231,
        "index": "A",
        "solvedCount": 189
      },
      {
        "contestId": 1231,
        "index": "B",
        "solvedCount": 176
      },
      {
        "contestId": 1231,
        "index": "D",
        "solvedCount": 44
      },
      {
        "contestId": 1231,
        "index": "F",
        "solvedCount": 29
      },
      {
        "contestId": 1231,
        "index": "G",
        "solvedCount": 21
      },
      {
        "contestId": 1230,
        "index": "C",
        "solvedCount": 4212
      },
      {
        "contestId": 1230,
        "index": "D",
        "solvedCount": 3264
      },
      {
        "contestId": 1230,
        "index": "E",
        "solvedCount": 1284
      },
      {
        "contestId": 1230,
        "index": "F",
        "solvedCount": 369
      },
      {
        "contestId": 1229,
        "index": "A",
        "solvedCount": 1423
      },
      {
        "contestId": 1229,
        "index": "B",
        "solvedCount": 1229
      },
      {
        "contestId": 1229,
        "index": "C",
        "solvedCount": 841
      },
      {
        "contestId": 1229,
        "index": "D",
        "solvedCount": 338
      },
      {
        "contestId": 1229,
        "index": "E1",
        "solvedCount": 136
      },
      {
        "contestId": 1229,
        "index": "E2",
        "solvedCount": 131
      },
      {
        "contestId": 1229,
        "index": "F",
        "solvedCount": 99
      },
      {
        "contestId": 1219,
        "index": "A",
        "solvedCount": 1
      },
      {
        "contestId": 1219,
        "index": "B",
        "solvedCount": 2
      },
      {
        "contestId": 1219,
        "index": "D",
        "solvedCount": 189
      },
      {
        "contestId": 1219,
        "index": "E",
        "solvedCount": 4
      },
      {
        "contestId": 1219,
        "index": "F",
        "solvedCount": 60
      },
      {
        "contestId": 1219,
        "index": "H",
        "solvedCount": 21
      },
      {
        "contestId": 1219,
        "index": "I",
        "solvedCount": 21
      },
      {
        "contestId": 1212,
        "index": "A",
        "solvedCount": 675
      },
      {
        "contestId": 1212,
        "index": "B",
        "solvedCount": 469
      },
      {
        "contestId": 1212,
        "index": "C",
        "solvedCount": 306
      },
      {
        "contestId": 1212,
        "index": "D",
        "solvedCount": 224
      },
      {
        "contestId": 1212,
        "index": "E",
        "solvedCount": 131
      },
      {
        "contestId": 1212,
        "index": "F",
        "solvedCount": 79
      },
      {
        "contestId": 1212,
        "index": "G",
        "solvedCount": 33
      },
      {
        "contestId": 1212,
        "index": "H",
        "solvedCount": 30
      },
      {
        "contestId": 1206,
        "index": "C",
        "solvedCount": 8799
      },
      {
        "contestId": 1206,
        "index": "D",
        "solvedCount": 2969
      },
      {
        "contestId": 1206,
        "index": "E",
        "solvedCount": 225
      },
      {
        "contestId": 1206,
        "index": "F",
        "solvedCount": 71
      },
      {
        "contestId": 1199,
        "index": "C",
        "solvedCount": 5176
      },
      {
        "contestId": 1199,
        "index": "D",
        "solvedCount": 4647
      },
      {
        "contestId": 1199,
        "index": "E",
        "solvedCount": 1027
      },
      {
        "contestId": 1199,
        "index": "F",
        "solvedCount": 758
      },
      {
        "contestId": 1191,
        "index": "C",
        "solvedCount": 5887
      },
      {
        "contestId": 1191,
        "index": "D",
        "solvedCount": 3316
      },
      {
        "contestId": 1191,
        "index": "E",
        "solvedCount": 570
      },
      {
        "contestId": 1191,
        "index": "F",
        "solvedCount": 713
      },
      {
        "contestId": 1189,
        "index": "D1",
        "solvedCount": 4227
      },
      {
        "contestId": 1189,
        "index": "D2",
        "solvedCount": 362
      },
      {
        "contestId": 1189,
        "index": "E",
        "solvedCount": 1730
      },
      {
        "contestId": 1189,
        "index": "F",
        "solvedCount": 256
      },
      {
        "contestId": 1180,
        "index": "C",
        "solvedCount": 5110
      },
      {
        "contestId": 1180,
        "index": "D",
        "solvedCount": 2029
      },
      {
        "contestId": 1180,
        "index": "E",
        "solvedCount": 426
      },
      {
        "contestId": 1173,
        "index": "C",
        "solvedCount": 2764
      },
      {
        "contestId": 1173,
        "index": "D",
        "solvedCount": 1517
      },
      {
        "contestId": 1173,
        "index": "E1",
        "solvedCount": 148
      },
      {
        "contestId": 1173,
        "index": "E2",
        "solvedCount": 74
      },
      {
        "contestId": 1173,
        "index": "F",
        "solvedCount": 46
      },
      {
        "contestId": 1171,
        "index": "A",
        "solvedCount": 792
      },
      {
        "contestId": 1171,
        "index": "B",
        "solvedCount": 649
      },
      {
        "contestId": 1171,
        "index": "C",
        "solvedCount": 517
      },
      {
        "contestId": 1171,
        "index": "D",
        "solvedCount": 457
      },
      {
        "contestId": 1171,
        "index": "E",
        "solvedCount": 384
      },
      {
        "contestId": 1171,
        "index": "F",
        "solvedCount": 213
      },
      {
        "contestId": 1169,
        "index": "C",
        "solvedCount": 3391
      },
      {
        "contestId": 1169,
        "index": "D",
        "solvedCount": 1389
      },
      {
        "contestId": 1169,
        "index": "E",
        "solvedCount": 634
      },
      {
        "contestId": 1164,
        "index": "A",
        "solvedCount": 691
      },
      {
        "contestId": 1164,
        "index": "B",
        "solvedCount": 262
      },
      {
        "contestId": 1164,
        "index": "C",
        "solvedCount": 451
      },
      {
        "contestId": 1164,
        "index": "D",
        "solvedCount": 474
      },
      {
        "contestId": 1164,
        "index": "E",
        "solvedCount": 418
      },
      {
        "contestId": 1164,
        "index": "F",
        "solvedCount": 136
      },
      {
        "contestId": 1164,
        "index": "G",
        "solvedCount": 342
      },
      {
        "contestId": 1164,
        "index": "H",
        "solvedCount": 293
      },
      {
        "contestId": 1164,
        "index": "I",
        "solvedCount": 210
      },
      {
        "contestId": 1164,
        "index": "J",
        "solvedCount": 160
      },
      {
        "contestId": 1164,
        "index": "K",
        "solvedCount": 50
      },
      {
        "contestId": 1164,
        "index": "L",
        "solvedCount": 72
      },
      {
        "contestId": 1164,
        "index": "M",
        "solvedCount": 200
      },
      {
        "contestId": 1164,
        "index": "N",
        "solvedCount": 88
      },
      {
        "contestId": 1164,
        "index": "O",
        "solvedCount": 208
      },
      {
        "contestId": 1164,
        "index": "P",
        "solvedCount": 63
      },
      {
        "contestId": 1164,
        "index": "Q",
        "solvedCount": 78
      },
      {
        "contestId": 1164,
        "index": "R",
        "solvedCount": 126
      },
      {
        "contestId": 1164,
        "index": "S",
        "solvedCount": 67
      },
      {
        "contestId": 1164,
        "index": "T",
        "solvedCount": 114
      },
      {
        "contestId": 1164,
        "index": "U",
        "solvedCount": 81
      },
      {
        "contestId": 1162,
        "index": "C",
        "solvedCount": 2573
      },
      {
        "contestId": 1162,
        "index": "D",
        "solvedCount": 1122
      },
      {
        "contestId": 1162,
        "index": "E",
        "solvedCount": 773
      },
      {
        "contestId": 1162,
        "index": "F",
        "solvedCount": 82
      },
      {
        "contestId": 1161,
        "index": "A",
        "solvedCount": 875
      },
      {
        "contestId": 1161,
        "index": "B",
        "solvedCount": 808
      },
      {
        "contestId": 1161,
        "index": "C",
        "solvedCount": 816
      },
      {
        "contestId": 1161,
        "index": "D",
        "solvedCount": 407
      },
      {
        "contestId": 1161,
        "index": "E",
        "solvedCount": 168
      },
      {
        "contestId": 1161,
        "index": "F",
        "solvedCount": 60
      },
      {
        "contestId": 1159,
        "index": "C",
        "solvedCount": 3410
      },
      {
        "contestId": 1159,
        "index": "D",
        "solvedCount": 879
      },
      {
        "contestId": 1159,
        "index": "E",
        "solvedCount": 375
      },
      {
        "contestId": 1159,
        "index": "F",
        "solvedCount": 71
      },
      {
        "contestId": 1150,
        "index": "C",
        "solvedCount": 7383
      },
      {
        "contestId": 1150,
        "index": "D",
        "solvedCount": 623
      },
      {
        "contestId": 1150,
        "index": "E",
        "solvedCount": 93
      },
      {
        "contestId": 1143,
        "index": "D",
        "solvedCount": 1694
      },
      {
        "contestId": 1143,
        "index": "E",
        "solvedCount": 583
      },
      {
        "contestId": 1143,
        "index": "F",
        "solvedCount": 189
      },
      {
        "contestId": 1138,
        "index": "C",
        "solvedCount": 2220
      },
      {
        "contestId": 1138,
        "index": "D",
        "solvedCount": 1963
      },
      {
        "contestId": 1138,
        "index": "E",
        "solvedCount": 134
      },
      {
        "contestId": 1138,
        "index": "F",
        "solvedCount": 214
      },
      {
        "contestId": 1130,
        "index": "D1",
        "solvedCount": 2235
      },
      {
        "contestId": 1130,
        "index": "D2",
        "solvedCount": 2076
      },
      {
        "contestId": 1130,
        "index": "E",
        "solvedCount": 746
      },
      {
        "contestId": 1121,
        "index": "D",
        "solvedCount": 495
      },
      {
        "contestId": 1121,
        "index": "E",
        "solvedCount": 48
      },
      {
        "contestId": 1121,
        "index": "F",
        "solvedCount": 545
      },
      {
        "contestId": 1113,
        "index": "C",
        "solvedCount": 3631
      },
      {
        "contestId": 1113,
        "index": "D",
        "solvedCount": 2074
      },
      {
        "contestId": 1113,
        "index": "E",
        "solvedCount": 21
      },
      {
        "contestId": 1113,
        "index": "F",
        "solvedCount": 201
      },
      {
        "contestId": 1112,
        "index": "A",
        "solvedCount": 559
      },
      {
        "contestId": 1112,
        "index": "B",
        "solvedCount": 372
      },
      {
        "contestId": 1112,
        "index": "C",
        "solvedCount": 213
      },
      {
        "contestId": 1112,
        "index": "D",
        "solvedCount": 126
      },
      {
        "contestId": 1112,
        "index": "E",
        "solvedCount": 1
      },
      {
        "contestId": 1112,
        "index": "F",
        "solvedCount": 28
      },
      {
        "contestId": 1112,
        "index": "G",
        "solvedCount": 1
      },
      {
        "contestId": 1112,
        "index": "H",
        "solvedCount": 0
      },
      {
        "contestId": 1104,
        "index": "C",
        "solvedCount": 5895
      },
      {
        "contestId": 1104,
        "index": "D",
        "solvedCount": 1512
      },
      {
        "contestId": 1104,
        "index": "E",
        "solvedCount": 147
      },
      {
        "contestId": 1099,
        "index": "D",
        "solvedCount": 3929
      },
      {
        "contestId": 1099,
        "index": "E",
        "solvedCount": 402
      },
      {
        "contestId": 1087,
        "index": "A",
        "solvedCount": 6130
      },
      {
        "contestId": 1087,
        "index": "B",
        "solvedCount": 5326
      },
      {
        "contestId": 1087,
        "index": "C",
        "solvedCount": 2934
      },
      {
        "contestId": 1087,
        "index": "D",
        "solvedCount": 2445
      },
      {
        "contestId": 1087,
        "index": "E",
        "solvedCount": 173
      },
      {
        "contestId": 1087,
        "index": "F",
        "solvedCount": 74
      },
      {
        "contestId": 1086,
        "index": "A",
        "solvedCount": 900
      },
      {
        "contestId": 1086,
        "index": "B",
        "solvedCount": 922
      },
      {
        "contestId": 1086,
        "index": "C",
        "solvedCount": 533
      },
      {
        "contestId": 1086,
        "index": "D",
        "solvedCount": 376
      },
      {
        "contestId": 1086,
        "index": "E",
        "solvedCount": 211
      },
      {
        "contestId": 1084,
        "index": "D",
        "solvedCount": 2173
      },
      {
        "contestId": 1084,
        "index": "E",
        "solvedCount": 574
      },
      {
        "contestId": 1084,
        "index": "F",
        "solvedCount": 59
      },
      {
        "contestId": 1079,
        "index": "A",
        "solvedCount": 3371
      },
      {
        "contestId": 1079,
        "index": "B",
        "solvedCount": 2827
      },
      {
        "contestId": 1079,
        "index": "C",
        "solvedCount": 1637
      },
      {
        "contestId": 1079,
        "index": "D",
        "solvedCount": 988
      },
      {
        "contestId": 1079,
        "index": "E",
        "solvedCount": 316
      },
      {
        "contestId": 1079,
        "index": "F",
        "solvedCount": 61
      },
      {
        "contestId": 1079,
        "index": "G",
        "solvedCount": 35
      },
      {
        "contestId": 1078,
        "index": "A",
        "solvedCount": 668
      },
      {
        "contestId": 1078,
        "index": "B",
        "solvedCount": 675
      },
      {
        "contestId": 1078,
        "index": "C",
        "solvedCount": 413
      },
      {
        "contestId": 1078,
        "index": "D",
        "solvedCount": 233
      },
      {
        "contestId": 1075,
        "index": "C",
        "solvedCount": 1661
      },
      {
        "contestId": 1075,
        "index": "D",
        "solvedCount": 544
      },
      {
        "contestId": 1075,
        "index": "E",
        "solvedCount": 272
      },
      {
        "contestId": 1075,
        "index": "F",
        "solvedCount": 95
      },
      {
        "contestId": 1074,
        "index": "A",
        "solvedCount": 685
      },
      {
        "contestId": 1074,
        "index": "B",
        "solvedCount": 616
      },
      {
        "contestId": 1074,
        "index": "C",
        "solvedCount": 561
      },
      {
        "contestId": 1074,
        "index": "D",
        "solvedCount": 476
      },
      {
        "contestId": 1074,
        "index": "E",
        "solvedCount": 66
      },
      {
        "contestId": 1074,
        "index": "F",
        "solvedCount": 273
      },
      {
        "contestId": 1072,
        "index": "A",
        "solvedCount": 4773
      },
      {
        "contestId": 1072,
        "index": "B",
        "solvedCount": 2661
      },
      {
        "contestId": 1072,
        "index": "C",
        "solvedCount": 2408
      },
      {
        "contestId": 1072,
        "index": "D",
        "solvedCount": 904
      },
      {
        "contestId": 1072,
        "index": "E",
        "solvedCount": 48
      },
      {
        "contestId": 1072,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 1071,
        "index": "A",
        "solvedCount": 950
      },
      {
        "contestId": 1071,
        "index": "B",
        "solvedCount": 816
      },
      {
        "contestId": 1071,
        "index": "C",
        "solvedCount": 256
      },
      {
        "contestId": 1071,
        "index": "D",
        "solvedCount": 165
      },
      {
        "contestId": 1068,
        "index": "D",
        "solvedCount": 808
      },
      {
        "contestId": 1068,
        "index": "E",
        "solvedCount": 759
      },
      {
        "contestId": 1068,
        "index": "F",
        "solvedCount": 103
      },
      {
        "contestId": 1064,
        "index": "C",
        "solvedCount": 5954
      },
      {
        "contestId": 1064,
        "index": "D",
        "solvedCount": 2698
      },
      {
        "contestId": 1064,
        "index": "E",
        "solvedCount": 1094
      },
      {
        "contestId": 1064,
        "index": "F",
        "solvedCount": 52
      },
      {
        "contestId": 1058,
        "index": "A",
        "solvedCount": 7127
      },
      {
        "contestId": 1058,
        "index": "B",
        "solvedCount": 5450
      },
      {
        "contestId": 1058,
        "index": "C",
        "solvedCount": 4949
      },
      {
        "contestId": 1058,
        "index": "D",
        "solvedCount": 2492
      },
      {
        "contestId": 1058,
        "index": "E",
        "solvedCount": 745
      },
      {
        "contestId": 1058,
        "index": "F",
        "solvedCount": 97
      },
      {
        "contestId": 1058,
        "index": "G",
        "solvedCount": 26
      },
      {
        "contestId": 1053,
        "index": "A",
        "solvedCount": 922
      },
      {
        "contestId": 1053,
        "index": "B",
        "solvedCount": 835
      },
      {
        "contestId": 1053,
        "index": "C",
        "solvedCount": 427
      },
      {
        "contestId": 1053,
        "index": "D",
        "solvedCount": 187
      },
      {
        "contestId": 1052,
        "index": "C",
        "solvedCount": 0
      },
      {
        "contestId": 1047,
        "index": "C",
        "solvedCount": 3892
      },
      {
        "contestId": 1047,
        "index": "D",
        "solvedCount": 847
      },
      {
        "contestId": 1047,
        "index": "E",
        "solvedCount": 78
      },
      {
        "contestId": 1046,
        "index": "A",
        "solvedCount": 71
      },
      {
        "contestId": 1046,
        "index": "B",
        "solvedCount": 23
      },
      {
        "contestId": 1046,
        "index": "D",
        "solvedCount": 14
      },
      {
        "contestId": 1046,
        "index": "E",
        "solvedCount": 1
      },
      {
        "contestId": 1046,
        "index": "G",
        "solvedCount": 7
      },
      {
        "contestId": 1046,
        "index": "H",
        "solvedCount": 386
      },
      {
        "contestId": 1046,
        "index": "J",
        "solvedCount": 2
      },
      {
        "contestId": 1040,
        "index": "C",
        "solvedCount": 186
      },
      {
        "contestId": 1040,
        "index": "D",
        "solvedCount": 860
      },
      {
        "contestId": 1040,
        "index": "E",
        "solvedCount": 309
      },
      {
        "contestId": 1020,
        "index": "C",
        "solvedCount": 2419
      },
      {
        "contestId": 1020,
        "index": "D",
        "solvedCount": 568
      },
      {
        "contestId": 1020,
        "index": "E",
        "solvedCount": 176
      },
      {
        "contestId": 1014,
        "index": "A2",
        "solvedCount": 0
      },
      {
        "contestId": 1013,
        "index": "C",
        "solvedCount": 3672
      },
      {
        "contestId": 1013,
        "index": "D",
        "solvedCount": 1371
      },
      {
        "contestId": 1013,
        "index": "E",
        "solvedCount": 851
      },
      {
        "contestId": 1013,
        "index": "F",
        "solvedCount": 46
      },
      {
        "contestId": 1011,
        "index": "C",
        "solvedCount": 4910
      },
      {
        "contestId": 1011,
        "index": "D",
        "solvedCount": 2583
      },
      {
        "contestId": 1011,
        "index": "E",
        "solvedCount": 2240
      },
      {
        "contestId": 1011,
        "index": "F",
        "solvedCount": 733
      },
      {
        "contestId": 1008,
        "index": "C",
        "solvedCount": 6164
      },
      {
        "contestId": 1008,
        "index": "D",
        "solvedCount": 316
      },
      {
        "contestId": 1008,
        "index": "E",
        "solvedCount": 112
      },
      {
        "contestId": 998,
        "index": "C",
        "solvedCount": 4467
      },
      {
        "contestId": 998,
        "index": "D",
        "solvedCount": 1269
      },
      {
        "contestId": 998,
        "index": "E",
        "solvedCount": 177
      },
      {
        "contestId": 996,
        "index": "C",
        "solvedCount": 571
      },
      {
        "contestId": 996,
        "index": "D",
        "solvedCount": 3990
      },
      {
        "contestId": 996,
        "index": "E",
        "solvedCount": 595
      },
      {
        "contestId": 996,
        "index": "F",
        "solvedCount": 190
      },
      {
        "contestId": 994,
        "index": "C",
        "solvedCount": 2086
      },
      {
        "contestId": 994,
        "index": "D",
        "solvedCount": 926
      },
      {
        "contestId": 994,
        "index": "E",
        "solvedCount": 480
      },
      {
        "contestId": 994,
        "index": "F",
        "solvedCount": 91
      },
      {
        "contestId": 987,
        "index": "D",
        "solvedCount": 2685
      },
      {
        "contestId": 987,
        "index": "E",
        "solvedCount": 2139
      },
      {
        "contestId": 987,
        "index": "F",
        "solvedCount": 459
      },
      {
        "contestId": 984,
        "index": "C",
        "solvedCount": 2438
      },
      {
        "contestId": 984,
        "index": "D",
        "solvedCount": 1769
      },
      {
        "contestId": 984,
        "index": "E",
        "solvedCount": 149
      },
      {
        "contestId": 967,
        "index": "C",
        "solvedCount": 1640
      },
      {
        "contestId": 967,
        "index": "D",
        "solvedCount": 808
      },
      {
        "contestId": 967,
        "index": "E",
        "solvedCount": 208
      },
      {
        "contestId": 967,
        "index": "F",
        "solvedCount": 52
      },
      {
        "contestId": 966,
        "index": "A",
        "solvedCount": 816
      },
      {
        "contestId": 966,
        "index": "B",
        "solvedCount": 730
      },
      {
        "contestId": 966,
        "index": "C",
        "solvedCount": 558
      },
      {
        "contestId": 966,
        "index": "D",
        "solvedCount": 231
      },
      {
        "contestId": 966,
        "index": "E",
        "solvedCount": 138
      },
      {
        "contestId": 966,
        "index": "F",
        "solvedCount": 35
      },
      {
        "contestId": 964,
        "index": "C",
        "solvedCount": 1348
      },
      {
        "contestId": 964,
        "index": "D",
        "solvedCount": 728
      },
      {
        "contestId": 964,
        "index": "E",
        "solvedCount": 63
      },
      {
        "contestId": 957,
        "index": "B",
        "solvedCount": 2597
      },
      {
        "contestId": 957,
        "index": "C",
        "solvedCount": 2353
      },
      {
        "contestId": 957,
        "index": "D",
        "solvedCount": 1196
      },
      {
        "contestId": 957,
        "index": "E",
        "solvedCount": 135
      },
      {
        "contestId": 956,
        "index": "A",
        "solvedCount": 802
      },
      {
        "contestId": 956,
        "index": "B",
        "solvedCount": 779
      },
      {
        "contestId": 956,
        "index": "C",
        "solvedCount": 730
      },
      {
        "contestId": 956,
        "index": "D",
        "solvedCount": 361
      },
      {
        "contestId": 956,
        "index": "E",
        "solvedCount": 248
      },
      {
        "contestId": 956,
        "index": "F",
        "solvedCount": 29
      },
      {
        "contestId": 953,
        "index": "A",
        "solvedCount": 695
      },
      {
        "contestId": 953,
        "index": "B",
        "solvedCount": 239
      },
      {
        "contestId": 953,
        "index": "C",
        "solvedCount": 350
      },
      {
        "contestId": 953,
        "index": "D",
        "solvedCount": 151
      },
      {
        "contestId": 953,
        "index": "E",
        "solvedCount": 69
      },
      {
        "contestId": 953,
        "index": "F",
        "solvedCount": 13
      },
      {
        "contestId": 953,
        "index": "G",
        "solvedCount": 218
      },
      {
        "contestId": 953,
        "index": "H",
        "solvedCount": 25
      },
      {
        "contestId": 953,
        "index": "I",
        "solvedCount": 79
      },
      {
        "contestId": 953,
        "index": "J",
        "solvedCount": 13
      },
      {
        "contestId": 951,
        "index": "A",
        "solvedCount": 30
      },
      {
        "contestId": 951,
        "index": "B",
        "solvedCount": 10
      },
      {
        "contestId": 951,
        "index": "C",
        "solvedCount": 24
      },
      {
        "contestId": 951,
        "index": "D",
        "solvedCount": 11
      },
      {
        "contestId": 951,
        "index": "E",
        "solvedCount": 5
      },
      {
        "contestId": 951,
        "index": "F",
        "solvedCount": 1
      },
      {
        "contestId": 951,
        "index": "G",
        "solvedCount": 2
      },
      {
        "contestId": 950,
        "index": "C",
        "solvedCount": 2947
      },
      {
        "contestId": 950,
        "index": "D",
        "solvedCount": 1833
      },
      {
        "contestId": 950,
        "index": "E",
        "solvedCount": 541
      },
      {
        "contestId": 950,
        "index": "F",
        "solvedCount": 150
      },
      {
        "contestId": 948,
        "index": "B",
        "solvedCount": 1899
      },
      {
        "contestId": 948,
        "index": "C",
        "solvedCount": 2606
      },
      {
        "contestId": 948,
        "index": "D",
        "solvedCount": 1324
      },
      {
        "contestId": 948,
        "index": "E",
        "solvedCount": 216
      },
      {
        "contestId": 947,
        "index": "A",
        "solvedCount": 829
      },
      {
        "contestId": 947,
        "index": "B",
        "solvedCount": 820
      },
      {
        "contestId": 947,
        "index": "C",
        "solvedCount": 899
      },
      {
        "contestId": 947,
        "index": "D",
        "solvedCount": 430
      },
      {
        "contestId": 947,
        "index": "E",
        "solvedCount": 112
      },
      {
        "contestId": 947,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 944,
        "index": "A",
        "solvedCount": 607
      },
      {
        "contestId": 944,
        "index": "B",
        "solvedCount": 406
      },
      {
        "contestId": 944,
        "index": "C",
        "solvedCount": 523
      },
      {
        "contestId": 944,
        "index": "D",
        "solvedCount": 294
      },
      {
        "contestId": 944,
        "index": "E",
        "solvedCount": 176
      },
      {
        "contestId": 944,
        "index": "F",
        "solvedCount": 16
      },
      {
        "contestId": 944,
        "index": "G",
        "solvedCount": 21
      },
      {
        "contestId": 937,
        "index": "C",
        "solvedCount": 2538
      },
      {
        "contestId": 937,
        "index": "D",
        "solvedCount": 1192
      },
      {
        "contestId": 937,
        "index": "E",
        "solvedCount": 238
      },
      {
        "contestId": 934,
        "index": "C",
        "solvedCount": 1864
      },
      {
        "contestId": 934,
        "index": "D",
        "solvedCount": 721
      },
      {
        "contestId": 934,
        "index": "E",
        "solvedCount": 122
      },
      {
        "contestId": 931,
        "index": "D",
        "solvedCount": 2737
      },
      {
        "contestId": 931,
        "index": "E",
        "solvedCount": 741
      },
      {
        "contestId": 931,
        "index": "F",
        "solvedCount": 364
      },
      {
        "contestId": 918,
        "index": "C",
        "solvedCount": 1801
      },
      {
        "contestId": 918,
        "index": "D",
        "solvedCount": 1386
      },
      {
        "contestId": 918,
        "index": "E",
        "solvedCount": 27
      },
      {
        "contestId": 907,
        "index": "C",
        "solvedCount": 2182
      },
      {
        "contestId": 907,
        "index": "D",
        "solvedCount": 282
      },
      {
        "contestId": 907,
        "index": "E",
        "solvedCount": 260
      },
      {
        "contestId": 907,
        "index": "F",
        "solvedCount": 85
      },
      {
        "contestId": 904,
        "index": "A",
        "solvedCount": 449
      },
      {
        "contestId": 904,
        "index": "B",
        "solvedCount": 456
      },
      {
        "contestId": 904,
        "index": "C",
        "solvedCount": 252
      },
      {
        "contestId": 904,
        "index": "D",
        "solvedCount": 3
      },
      {
        "contestId": 904,
        "index": "E",
        "solvedCount": 2
      },
      {
        "contestId": 904,
        "index": "F",
        "solvedCount": 0
      },
      {
        "contestId": 902,
        "index": "C",
        "solvedCount": 2945
      },
      {
        "contestId": 902,
        "index": "D",
        "solvedCount": 554
      },
      {
        "contestId": 902,
        "index": "E",
        "solvedCount": 172
      },
      {
        "contestId": 897,
        "index": "C",
        "solvedCount": 1826
      },
      {
        "contestId": 897,
        "index": "D",
        "solvedCount": 731
      },
      {
        "contestId": 897,
        "index": "E",
        "solvedCount": 101
      },
      {
        "contestId": 892,
        "index": "C",
        "solvedCount": 3933
      },
      {
        "contestId": 892,
        "index": "D",
        "solvedCount": 1204
      },
      {
        "contestId": 892,
        "index": "E",
        "solvedCount": 297
      },
      {
        "contestId": 890,
        "index": "A",
        "solvedCount": 4360
      },
      {
        "contestId": 890,
        "index": "B",
        "solvedCount": 4009
      },
      {
        "contestId": 890,
        "index": "C",
        "solvedCount": 2495
      },
      {
        "contestId": 890,
        "index": "D",
        "solvedCount": 670
      },
      {
        "contestId": 890,
        "index": "E",
        "solvedCount": 91
      },
      {
        "contestId": 890,
        "index": "F",
        "solvedCount": 14
      },
      {
        "contestId": 889,
        "index": "A",
        "solvedCount": 726
      },
      {
        "contestId": 889,
        "index": "B",
        "solvedCount": 546
      },
      {
        "contestId": 889,
        "index": "C",
        "solvedCount": 371
      },
      {
        "contestId": 889,
        "index": "D",
        "solvedCount": 117
      },
      {
        "contestId": 879,
        "index": "C",
        "solvedCount": 2726
      },
      {
        "contestId": 879,
        "index": "D",
        "solvedCount": 318
      },
      {
        "contestId": 879,
        "index": "E",
        "solvedCount": 114
      },
      {
        "contestId": 876,
        "index": "C",
        "solvedCount": 5056
      },
      {
        "contestId": 876,
        "index": "D",
        "solvedCount": 2931
      },
      {
        "contestId": 876,
        "index": "E",
        "solvedCount": 622
      },
      {
        "contestId": 876,
        "index": "F",
        "solvedCount": 483
      },
      {
        "contestId": 872,
        "index": "A",
        "solvedCount": 4472
      },
      {
        "contestId": 872,
        "index": "B",
        "solvedCount": 5023
      },
      {
        "contestId": 872,
        "index": "C",
        "solvedCount": 3193
      },
      {
        "contestId": 872,
        "index": "D",
        "solvedCount": 335
      },
      {
        "contestId": 872,
        "index": "E",
        "solvedCount": 204
      },
      {
        "contestId": 871,
        "index": "A",
        "solvedCount": 758
      },
      {
        "contestId": 871,
        "index": "B",
        "solvedCount": 485
      },
      {
        "contestId": 871,
        "index": "C",
        "solvedCount": 415
      },
      {
        "contestId": 871,
        "index": "D",
        "solvedCount": 228
      },
      {
        "contestId": 867,
        "index": "B",
        "solvedCount": 2419
      },
      {
        "contestId": 867,
        "index": "C",
        "solvedCount": 739
      },
      {
        "contestId": 867,
        "index": "D",
        "solvedCount": 64
      },
      {
        "contestId": 867,
        "index": "E",
        "solvedCount": 706
      },
      {
        "contestId": 867,
        "index": "F",
        "solvedCount": 8
      },
      {
        "contestId": 866,
        "index": "A",
        "solvedCount": 769
      },
      {
        "contestId": 866,
        "index": "B",
        "solvedCount": 559
      },
      {
        "contestId": 866,
        "index": "C",
        "solvedCount": 327
      },
      {
        "contestId": 866,
        "index": "D",
        "solvedCount": 641
      },
      {
        "contestId": 866,
        "index": "E",
        "solvedCount": 37
      },
      {
        "contestId": 866,
        "index": "F",
        "solvedCount": 25
      },
      {
        "contestId": 866,
        "index": "G",
        "solvedCount": 44
      },
      {
        "contestId": 861,
        "index": "A",
        "solvedCount": 3242
      },
      {
        "contestId": 861,
        "index": "B",
        "solvedCount": 1925
      },
      {
        "contestId": 861,
        "index": "C",
        "solvedCount": 1890
      },
      {
        "contestId": 861,
        "index": "D",
        "solvedCount": 1259
      },
      {
        "contestId": 861,
        "index": "E",
        "solvedCount": 86
      },
      {
        "contestId": 861,
        "index": "F",
        "solvedCount": 130
      },
      {
        "contestId": 860,
        "index": "A",
        "solvedCount": 664
      },
      {
        "contestId": 860,
        "index": "B",
        "solvedCount": 707
      },
      {
        "contestId": 860,
        "index": "C",
        "solvedCount": 296
      },
      {
        "contestId": 860,
        "index": "D",
        "solvedCount": 551
      },
      {
        "contestId": 854,
        "index": "C",
        "solvedCount": 3536
      },
      {
        "contestId": 854,
        "index": "D",
        "solvedCount": 1203
      },
      {
        "contestId": 854,
        "index": "E",
        "solvedCount": 370
      },
      {
        "contestId": 851,
        "index": "C",
        "solvedCount": 1772
      },
      {
        "contestId": 851,
        "index": "D",
        "solvedCount": 725
      },
      {
        "contestId": 851,
        "index": "E",
        "solvedCount": 276
      },
      {
        "contestId": 849,
        "index": "C",
        "solvedCount": 2855
      },
      {
        "contestId": 849,
        "index": "D",
        "solvedCount": 475
      },
      {
        "contestId": 849,
        "index": "E",
        "solvedCount": 125
      },
      {
        "contestId": 844,
        "index": "C",
        "solvedCount": 2894
      },
      {
        "contestId": 844,
        "index": "D",
        "solvedCount": 742
      },
      {
        "contestId": 844,
        "index": "E",
        "solvedCount": 42
      },
      {
        "contestId": 841,
        "index": "C",
        "solvedCount": 4619
      },
      {
        "contestId": 841,
        "index": "D",
        "solvedCount": 685
      },
      {
        "contestId": 841,
        "index": "E",
        "solvedCount": 143
      },
      {
        "contestId": 834,
        "index": "C",
        "solvedCount": 3529
      },
      {
        "contestId": 834,
        "index": "D",
        "solvedCount": 1005
      },
      {
        "contestId": 834,
        "index": "E",
        "solvedCount": 68
      },
      {
        "contestId": 831,
        "index": "D",
        "solvedCount": 1884
      },
      {
        "contestId": 831,
        "index": "E",
        "solvedCount": 979
      },
      {
        "contestId": 831,
        "index": "F",
        "solvedCount": 158
      },
      {
        "contestId": 828,
        "index": "C",
        "solvedCount": 2013
      },
      {
        "contestId": 828,
        "index": "D",
        "solvedCount": 1551
      },
      {
        "contestId": 828,
        "index": "E",
        "solvedCount": 392
      },
      {
        "contestId": 828,
        "index": "F",
        "solvedCount": 109
      },
      {
        "contestId": 823,
        "index": "A",
        "solvedCount": 20
      },
      {
        "contestId": 823,
        "index": "B",
        "solvedCount": 19
      },
      {
        "contestId": 823,
        "index": "C",
        "solvedCount": 15
      },
      {
        "contestId": 823,
        "index": "D",
        "solvedCount": 5
      },
      {
        "contestId": 823,
        "index": "E",
        "solvedCount": 5
      },
      {
        "contestId": 823,
        "index": "F",
        "solvedCount": 2
      },
      {
        "contestId": 823,
        "index": "G",
        "solvedCount": 0
      },
      {
        "contestId": 820,
        "index": "C",
        "solvedCount": 146
      },
      {
        "contestId": 820,
        "index": "D",
        "solvedCount": 592
      },
      {
        "contestId": 820,
        "index": "E",
        "solvedCount": 35
      },
      {
        "contestId": 816,
        "index": "C",
        "solvedCount": 3144
      },
      {
        "contestId": 816,
        "index": "D",
        "solvedCount": 429
      },
      {
        "contestId": 816,
        "index": "E",
        "solvedCount": 367
      },
      {
        "contestId": 810,
        "index": "C",
        "solvedCount": 2687
      },
      {
        "contestId": 810,
        "index": "D",
        "solvedCount": 488
      },
      {
        "contestId": 810,
        "index": "E",
        "solvedCount": 74
      },
      {
        "contestId": 807,
        "index": "C",
        "solvedCount": 2274
      },
      {
        "contestId": 807,
        "index": "D",
        "solvedCount": 393
      },
      {
        "contestId": 807,
        "index": "E",
        "solvedCount": 162
      },
      {
        "contestId": 807,
        "index": "F",
        "solvedCount": 26
      },
      {
        "contestId": 806,
        "index": "A",
        "solvedCount": 767
      },
      {
        "contestId": 806,
        "index": "B",
        "solvedCount": 433
      },
      {
        "contestId": 806,
        "index": "C",
        "solvedCount": 440
      },
      {
        "contestId": 806,
        "index": "D",
        "solvedCount": 234
      },
      {
        "contestId": 806,
        "index": "E",
        "solvedCount": 95
      },
      {
        "contestId": 806,
        "index": "F",
        "solvedCount": 27
      },
      {
        "contestId": 805,
        "index": "C",
        "solvedCount": 7111
      },
      {
        "contestId": 805,
        "index": "D",
        "solvedCount": 4741
      },
      {
        "contestId": 805,
        "index": "E",
        "solvedCount": 553
      },
      {
        "contestId": 805,
        "index": "F",
        "solvedCount": 178
      },
      {
        "contestId": 801,
        "index": "C",
        "solvedCount": 1997
      },
      {
        "contestId": 801,
        "index": "D",
        "solvedCount": 1021
      },
      {
        "contestId": 801,
        "index": "E",
        "solvedCount": 145
      },
      {
        "contestId": 800,
        "index": "A",
        "solvedCount": 672
      },
      {
        "contestId": 800,
        "index": "B",
        "solvedCount": 619
      },
      {
        "contestId": 800,
        "index": "C",
        "solvedCount": 409
      },
      {
        "contestId": 800,
        "index": "D",
        "solvedCount": 266
      },
      {
        "contestId": 800,
        "index": "E",
        "solvedCount": 33
      },
      {
        "contestId": 795,
        "index": "A",
        "solvedCount": 99
      },
      {
        "contestId": 795,
        "index": "B",
        "solvedCount": 41
      },
      {
        "contestId": 795,
        "index": "C",
        "solvedCount": 789
      },
      {
        "contestId": 795,
        "index": "D",
        "solvedCount": 462
      },
      {
        "contestId": 795,
        "index": "E",
        "solvedCount": 43
      },
      {
        "contestId": 795,
        "index": "F",
        "solvedCount": 3
      },
      {
        "contestId": 795,
        "index": "G",
        "solvedCount": 1
      },
      {
        "contestId": 795,
        "index": "H",
        "solvedCount": 19
      },
      {
        "contestId": 795,
        "index": "I",
        "solvedCount": 9
      },
      {
        "contestId": 795,
        "index": "J",
        "solvedCount": 31
      },
      {
        "contestId": 795,
        "index": "K",
        "solvedCount": 296
      },
      {
        "contestId": 795,
        "index": "L",
        "solvedCount": 22
      },
      {
        "contestId": 791,
        "index": "B",
        "solvedCount": 4707
      },
      {
        "contestId": 791,
        "index": "C",
        "solvedCount": 2945
      },
      {
        "contestId": 791,
        "index": "D",
        "solvedCount": 597
      },
      {
        "contestId": 791,
        "index": "E",
        "solvedCount": 150
      },
      {
        "contestId": 790,
        "index": "A",
        "solvedCount": 777
      },
      {
        "contestId": 790,
        "index": "B",
        "solvedCount": 647
      },
      {
        "contestId": 790,
        "index": "C",
        "solvedCount": 352
      },
      {
        "contestId": 790,
        "index": "D",
        "solvedCount": 97
      },
      {
        "contestId": 790,
        "index": "E",
        "solvedCount": 22
      },
      {
        "contestId": 789,
        "index": "C",
        "solvedCount": 3541
      },
      {
        "contestId": 789,
        "index": "D",
        "solvedCount": 728
      },
      {
        "contestId": 789,
        "index": "E",
        "solvedCount": 453
      },
      {
        "contestId": 787,
        "index": "C",
        "solvedCount": 844
      },
      {
        "contestId": 787,
        "index": "D",
        "solvedCount": 614
      },
      {
        "contestId": 787,
        "index": "E",
        "solvedCount": 293
      },
      {
        "contestId": 782,
        "index": "A",
        "solvedCount": 9137
      },
      {
        "contestId": 782,
        "index": "B",
        "solvedCount": 5104
      },
      {
        "contestId": 782,
        "index": "C",
        "solvedCount": 2922
      },
      {
        "contestId": 782,
        "index": "D",
        "solvedCount": 1029
      },
      {
        "contestId": 782,
        "index": "E",
        "solvedCount": 441
      },
      {
        "contestId": 782,
        "index": "F",
        "solvedCount": 104
      },
      {
        "contestId": 781,
        "index": "A",
        "solvedCount": 1292
      },
      {
        "contestId": 781,
        "index": "B",
        "solvedCount": 906
      },
      {
        "contestId": 781,
        "index": "C",
        "solvedCount": 1149
      },
      {
        "contestId": 781,
        "index": "D",
        "solvedCount": 534
      },
      {
        "contestId": 781,
        "index": "E",
        "solvedCount": 289
      },
      {
        "contestId": 781,
        "index": "F",
        "solvedCount": 42
      },
      {
        "contestId": 779,
        "index": "D",
        "solvedCount": 4170
      },
      {
        "contestId": 779,
        "index": "E",
        "solvedCount": 824
      },
      {
        "contestId": 779,
        "index": "F",
        "solvedCount": 98
      },
      {
        "contestId": 764,
        "index": "C",
        "solvedCount": 3414
      },
      {
        "contestId": 764,
        "index": "D",
        "solvedCount": 966
      },
      {
        "contestId": 764,
        "index": "E",
        "solvedCount": 112
      },
      {
        "contestId": 760,
        "index": "C",
        "solvedCount": 1523
      },
      {
        "contestId": 760,
        "index": "D",
        "solvedCount": 1072
      },
      {
        "contestId": 760,
        "index": "E",
        "solvedCount": 250
      },
      {
        "contestId": 760,
        "index": "F",
        "solvedCount": 96
      },
      {
        "contestId": 759,
        "index": "A",
        "solvedCount": 678
      },
      {
        "contestId": 759,
        "index": "B",
        "solvedCount": 657
      },
      {
        "contestId": 759,
        "index": "C",
        "solvedCount": 467
      },
      {
        "contestId": 759,
        "index": "D",
        "solvedCount": 304
      },
      {
        "contestId": 759,
        "index": "E",
        "solvedCount": 33
      },
      {
        "contestId": 759,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 752,
        "index": "A",
        "solvedCount": 4307
      },
      {
        "contestId": 752,
        "index": "B",
        "solvedCount": 2888
      },
      {
        "contestId": 752,
        "index": "C",
        "solvedCount": 2699
      },
      {
        "contestId": 752,
        "index": "D",
        "solvedCount": 1128
      },
      {
        "contestId": 752,
        "index": "E",
        "solvedCount": 900
      },
      {
        "contestId": 752,
        "index": "F",
        "solvedCount": 329
      },
      {
        "contestId": 751,
        "index": "A",
        "solvedCount": 276
      },
      {
        "contestId": 751,
        "index": "B",
        "solvedCount": 149
      },
      {
        "contestId": 745,
        "index": "C",
        "solvedCount": 2799
      },
      {
        "contestId": 745,
        "index": "D",
        "solvedCount": 447
      },
      {
        "contestId": 745,
        "index": "E",
        "solvedCount": 145
      },
      {
        "contestId": 742,
        "index": "C",
        "solvedCount": 3123
      },
      {
        "contestId": 742,
        "index": "D",
        "solvedCount": 2159
      },
      {
        "contestId": 742,
        "index": "E",
        "solvedCount": 527
      },
      {
        "contestId": 740,
        "index": "C",
        "solvedCount": 4127
      },
      {
        "contestId": 740,
        "index": "D",
        "solvedCount": 1204
      },
      {
        "contestId": 740,
        "index": "E",
        "solvedCount": 172
      },
      {
        "contestId": 738,
        "index": "A",
        "solvedCount": 3650
      },
      {
        "contestId": 738,
        "index": "B",
        "solvedCount": 2940
      },
      {
        "contestId": 738,
        "index": "C",
        "solvedCount": 1495
      },
      {
        "contestId": 738,
        "index": "D",
        "solvedCount": 1378
      },
      {
        "contestId": 738,
        "index": "E",
        "solvedCount": 645
      },
      {
        "contestId": 738,
        "index": "F",
        "solvedCount": 121
      },
      {
        "contestId": 737,
        "index": "A",
        "solvedCount": 702
      },
      {
        "contestId": 737,
        "index": "B",
        "solvedCount": 667
      },
      {
        "contestId": 737,
        "index": "C",
        "solvedCount": 674
      },
      {
        "contestId": 737,
        "index": "D",
        "solvedCount": 377
      },
      {
        "contestId": 736,
        "index": "A",
        "solvedCount": 1138
      },
      {
        "contestId": 736,
        "index": "B",
        "solvedCount": 1306
      },
      {
        "contestId": 736,
        "index": "C",
        "solvedCount": 378
      },
      {
        "contestId": 719,
        "index": "C",
        "solvedCount": 2494
      },
      {
        "contestId": 719,
        "index": "E",
        "solvedCount": 673
      },
      {
        "contestId": 716,
        "index": "C",
        "solvedCount": 3364
      },
      {
        "contestId": 716,
        "index": "D",
        "solvedCount": 721
      },
      {
        "contestId": 716,
        "index": "E",
        "solvedCount": 511
      },
      {
        "contestId": 714,
        "index": "C",
        "solvedCount": 4394
      },
      {
        "contestId": 714,
        "index": "D",
        "solvedCount": 449
      },
      {
        "contestId": 714,
        "index": "E",
        "solvedCount": 426
      },
      {
        "contestId": 709,
        "index": "C",
        "solvedCount": 4295
      },
      {
        "contestId": 709,
        "index": "D",
        "solvedCount": 1229
      },
      {
        "contestId": 709,
        "index": "E",
        "solvedCount": 279
      },
      {
        "contestId": 705,
        "index": "C",
        "solvedCount": 4031
      },
      {
        "contestId": 705,
        "index": "D",
        "solvedCount": 201
      },
      {
        "contestId": 705,
        "index": "E",
        "solvedCount": 27
      },
      {
        "contestId": 701,
        "index": "D",
        "solvedCount": 1542
      },
      {
        "contestId": 701,
        "index": "E",
        "solvedCount": 1024
      },
      {
        "contestId": 701,
        "index": "F",
        "solvedCount": 165
      },
      {
        "contestId": 699,
        "index": "C",
        "solvedCount": 7500
      },
      {
        "contestId": 699,
        "index": "D",
        "solvedCount": 2351
      },
      {
        "contestId": 699,
        "index": "E",
        "solvedCount": 202
      },
      {
        "contestId": 699,
        "index": "F",
        "solvedCount": 40
      },
      {
        "contestId": 697,
        "index": "C",
        "solvedCount": 3295
      },
      {
        "contestId": 697,
        "index": "D",
        "solvedCount": 1239
      },
      {
        "contestId": 697,
        "index": "E",
        "solvedCount": 473
      },
      {
        "contestId": 697,
        "index": "F",
        "solvedCount": 97
      },
      {
        "contestId": 695,
        "index": "A",
        "solvedCount": 16
      },
      {
        "contestId": 695,
        "index": "B",
        "solvedCount": 17
      },
      {
        "contestId": 695,
        "index": "C",
        "solvedCount": 13
      },
      {
        "contestId": 695,
        "index": "D",
        "solvedCount": 9
      },
      {
        "contestId": 695,
        "index": "E",
        "solvedCount": 4
      },
      {
        "contestId": 695,
        "index": "F",
        "solvedCount": 3
      },
      {
        "contestId": 695,
        "index": "G",
        "solvedCount": 0
      },
      {
        "contestId": 688,
        "index": "C",
        "solvedCount": 4004
      },
      {
        "contestId": 688,
        "index": "D",
        "solvedCount": 1674
      },
      {
        "contestId": 688,
        "index": "E",
        "solvedCount": 1336
      },
      {
        "contestId": 686,
        "index": "C",
        "solvedCount": 2281
      },
      {
        "contestId": 686,
        "index": "D",
        "solvedCount": 1142
      },
      {
        "contestId": 686,
        "index": "E",
        "solvedCount": 56
      },
      {
        "contestId": 684,
        "index": "A2",
        "solvedCount": 0
      },
      {
        "contestId": 680,
        "index": "C",
        "solvedCount": 4429
      },
      {
        "contestId": 680,
        "index": "D",
        "solvedCount": 739
      },
      {
        "contestId": 680,
        "index": "E",
        "solvedCount": 287
      },
      {
        "contestId": 674,
        "index": "A",
        "solvedCount": 577
      },
      {
        "contestId": 674,
        "index": "B",
        "solvedCount": 546
      },
      {
        "contestId": 674,
        "index": "C",
        "solvedCount": 450
      },
      {
        "contestId": 674,
        "index": "D",
        "solvedCount": 94
      },
      {
        "contestId": 674,
        "index": "E",
        "solvedCount": 156
      },
      {
        "contestId": 674,
        "index": "F",
        "solvedCount": 163
      },
      {
        "contestId": 674,
        "index": "G",
        "solvedCount": 172
      },
      {
        "contestId": 673,
        "index": "C",
        "solvedCount": 2340
      },
      {
        "contestId": 673,
        "index": "D",
        "solvedCount": 1537
      },
      {
        "contestId": 673,
        "index": "E",
        "solvedCount": 339
      },
      {
        "contestId": 673,
        "index": "F",
        "solvedCount": 17
      },
      {
        "contestId": 672,
        "index": "C",
        "solvedCount": 2014
      },
      {
        "contestId": 672,
        "index": "D",
        "solvedCount": 1162
      },
      {
        "contestId": 672,
        "index": "E",
        "solvedCount": 60
      },
      {
        "contestId": 669,
        "index": "B",
        "solvedCount": 3258
      },
      {
        "contestId": 669,
        "index": "C",
        "solvedCount": 2000
      },
      {
        "contestId": 669,
        "index": "D",
        "solvedCount": 1145
      },
      {
        "contestId": 669,
        "index": "E",
        "solvedCount": 982
      },
      {
        "contestId": 668,
        "index": "A",
        "solvedCount": 484
      },
      {
        "contestId": 668,
        "index": "B",
        "solvedCount": 484
      },
      {
        "contestId": 668,
        "index": "C",
        "solvedCount": 370
      },
      {
        "contestId": 668,
        "index": "D",
        "solvedCount": 444
      },
      {
        "contestId": 668,
        "index": "E",
        "solvedCount": 61
      },
      {
        "contestId": 668,
        "index": "F",
        "solvedCount": 44
      },
      {
        "contestId": 667,
        "index": "C",
        "solvedCount": 1711
      },
      {
        "contestId": 667,
        "index": "D",
        "solvedCount": 557
      },
      {
        "contestId": 667,
        "index": "E",
        "solvedCount": 21
      },
      {
        "contestId": 664,
        "index": "B",
        "solvedCount": 1519
      },
      {
        "contestId": 664,
        "index": "C",
        "solvedCount": 788
      },
      {
        "contestId": 664,
        "index": "D",
        "solvedCount": 332
      },
      {
        "contestId": 664,
        "index": "E",
        "solvedCount": 13
      },
      {
        "contestId": 663,
        "index": "B",
        "solvedCount": 482
      },
      {
        "contestId": 663,
        "index": "C",
        "solvedCount": 561
      },
      {
        "contestId": 663,
        "index": "D",
        "solvedCount": 59
      },
      {
        "contestId": 663,
        "index": "E",
        "solvedCount": 392
      },
      {
        "contestId": 658,
        "index": "B",
        "solvedCount": 2546
      },
      {
        "contestId": 658,
        "index": "C",
        "solvedCount": 1563
      },
      {
        "contestId": 658,
        "index": "D",
        "solvedCount": 260
      },
      {
        "contestId": 658,
        "index": "E",
        "solvedCount": 72
      },
      {
        "contestId": 657,
        "index": "A",
        "solvedCount": 500
      },
      {
        "contestId": 657,
        "index": "B",
        "solvedCount": 331
      },
      {
        "contestId": 657,
        "index": "C",
        "solvedCount": 248
      },
      {
        "contestId": 657,
        "index": "D",
        "solvedCount": 104
      },
      {
        "contestId": 657,
        "index": "E",
        "solvedCount": 37
      },
      {
        "contestId": 655,
        "index": "A",
        "solvedCount": 1033
      },
      {
        "contestId": 655,
        "index": "B",
        "solvedCount": 1004
      },
      {
        "contestId": 655,
        "index": "C",
        "solvedCount": 767
      },
      {
        "contestId": 655,
        "index": "D",
        "solvedCount": 541
      },
      {
        "contestId": 655,
        "index": "E",
        "solvedCount": 300
      },
      {
        "contestId": 655,
        "index": "F",
        "solvedCount": 116
      },
      {
        "contestId": 655,
        "index": "G",
        "solvedCount": 16
      },
      {
        "contestId": 651,
        "index": "C",
        "solvedCount": 7041
      },
      {
        "contestId": 651,
        "index": "D",
        "solvedCount": 1401
      },
      {
        "contestId": 651,
        "index": "E",
        "solvedCount": 463
      },
      {
        "contestId": 649,
        "index": "A",
        "solvedCount": 387
      },
      {
        "contestId": 649,
        "index": "B",
        "solvedCount": 184
      },
      {
        "contestId": 649,
        "index": "C",
        "solvedCount": 138
      },
      {
        "contestId": 649,
        "index": "D",
        "solvedCount": 137
      },
      {
        "contestId": 649,
        "index": "E",
        "solvedCount": 22
      },
      {
        "contestId": 648,
        "index": "A",
        "solvedCount": 434
      },
      {
        "contestId": 648,
        "index": "B",
        "solvedCount": 437
      },
      {
        "contestId": 648,
        "index": "C",
        "solvedCount": 298
      },
      {
        "contestId": 648,
        "index": "D",
        "solvedCount": 51
      },
      {
        "contestId": 648,
        "index": "E",
        "solvedCount": 8
      },
      {
        "contestId": 647,
        "index": "A",
        "solvedCount": 302
      },
      {
        "contestId": 647,
        "index": "B",
        "solvedCount": 212
      },
      {
        "contestId": 646,
        "index": "A",
        "solvedCount": 649
      },
      {
        "contestId": 646,
        "index": "B",
        "solvedCount": 223
      },
      {
        "contestId": 642,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 640,
        "index": "A",
        "solvedCount": 173
      },
      {
        "contestId": 640,
        "index": "B",
        "solvedCount": 67
      },
      {
        "contestId": 640,
        "index": "C",
        "solvedCount": 23
      },
      {
        "contestId": 640,
        "index": "D",
        "solvedCount": 24
      },
      {
        "contestId": 640,
        "index": "E",
        "solvedCount": 12
      },
      {
        "contestId": 640,
        "index": "F",
        "solvedCount": 20
      },
      {
        "contestId": 640,
        "index": "G",
        "solvedCount": 3
      },
      {
        "contestId": 640,
        "index": "H",
        "solvedCount": 0
      },
      {
        "contestId": 636,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 635,
        "index": "B",
        "solvedCount": 1487
      },
      {
        "contestId": 635,
        "index": "C",
        "solvedCount": 934
      },
      {
        "contestId": 635,
        "index": "D",
        "solvedCount": 745
      },
      {
        "contestId": 635,
        "index": "E",
        "solvedCount": 188
      },
      {
        "contestId": 635,
        "index": "F",
        "solvedCount": 28
      },
      {
        "contestId": 634,
        "index": "B",
        "solvedCount": 534
      },
      {
        "contestId": 634,
        "index": "C",
        "solvedCount": 495
      },
      {
        "contestId": 634,
        "index": "D",
        "solvedCount": 353
      },
      {
        "contestId": 634,
        "index": "E",
        "solvedCount": 161
      },
      {
        "contestId": 634,
        "index": "F",
        "solvedCount": 96
      },
      {
        "contestId": 624,
        "index": "C",
        "solvedCount": 1933
      },
      {
        "contestId": 624,
        "index": "D",
        "solvedCount": 369
      },
      {
        "contestId": 624,
        "index": "E",
        "solvedCount": 53
      },
      {
        "contestId": 614,
        "index": "C",
        "solvedCount": 1413
      },
      {
        "contestId": 614,
        "index": "D",
        "solvedCount": 569
      },
      {
        "contestId": 614,
        "index": "E",
        "solvedCount": 183
      },
      {
        "contestId": 608,
        "index": "C",
        "solvedCount": 2836
      },
      {
        "contestId": 608,
        "index": "D",
        "solvedCount": 1349
      },
      {
        "contestId": 608,
        "index": "E",
        "solvedCount": 159
      },
      {
        "contestId": 606,
        "index": "C",
        "solvedCount": 3089
      },
      {
        "contestId": 606,
        "index": "D",
        "solvedCount": 1233
      },
      {
        "contestId": 606,
        "index": "E",
        "solvedCount": 223
      },
      {
        "contestId": 604,
        "index": "C",
        "solvedCount": 3371
      },
      {
        "contestId": 604,
        "index": "D",
        "solvedCount": 822
      },
      {
        "contestId": 604,
        "index": "E",
        "solvedCount": 322
      },
      {
        "contestId": 602,
        "index": "C",
        "solvedCount": 3105
      },
      {
        "contestId": 602,
        "index": "D",
        "solvedCount": 562
      },
      {
        "contestId": 602,
        "index": "E",
        "solvedCount": 145
      },
      {
        "contestId": 595,
        "index": "C",
        "solvedCount": 573
      },
      {
        "contestId": 595,
        "index": "D",
        "solvedCount": 151
      },
      {
        "contestId": 595,
        "index": "E",
        "solvedCount": 117
      },
      {
        "contestId": 591,
        "index": "C",
        "solvedCount": 2278
      },
      {
        "contestId": 591,
        "index": "D",
        "solvedCount": 562
      },
      {
        "contestId": 591,
        "index": "E",
        "solvedCount": 520
      },
      {
        "contestId": 588,
        "index": "C",
        "solvedCount": 3819
      },
      {
        "contestId": 588,
        "index": "D",
        "solvedCount": 389
      },
      {
        "contestId": 588,
        "index": "E",
        "solvedCount": 936
      },
      {
        "contestId": 588,
        "index": "F",
        "solvedCount": 30
      },
      {
        "contestId": 586,
        "index": "C",
        "solvedCount": 2350
      },
      {
        "contestId": 586,
        "index": "D",
        "solvedCount": 1603
      },
      {
        "contestId": 586,
        "index": "E",
        "solvedCount": 274
      },
      {
        "contestId": 586,
        "index": "F",
        "solvedCount": 214
      },
      {
        "contestId": 583,
        "index": "C",
        "solvedCount": 3129
      },
      {
        "contestId": 583,
        "index": "D",
        "solvedCount": 1128
      },
      {
        "contestId": 583,
        "index": "E",
        "solvedCount": 112
      },
      {
        "contestId": 579,
        "index": "C",
        "solvedCount": 1919
      },
      {
        "contestId": 579,
        "index": "D",
        "solvedCount": 1701
      },
      {
        "contestId": 579,
        "index": "E",
        "solvedCount": 593
      },
      {
        "contestId": 579,
        "index": "F",
        "solvedCount": 50
      },
      {
        "contestId": 577,
        "index": "C",
        "solvedCount": 5239
      },
      {
        "contestId": 577,
        "index": "D",
        "solvedCount": 337
      },
      {
        "contestId": 577,
        "index": "E",
        "solvedCount": 608
      },
      {
        "contestId": 574,
        "index": "C",
        "solvedCount": 4266
      },
      {
        "contestId": 574,
        "index": "D",
        "solvedCount": 1521
      },
      {
        "contestId": 574,
        "index": "E",
        "solvedCount": 164
      },
      {
        "contestId": 572,
        "index": "C",
        "solvedCount": 542
      },
      {
        "contestId": 572,
        "index": "D",
        "solvedCount": 333
      },
      {
        "contestId": 572,
        "index": "E",
        "solvedCount": 61
      },
      {
        "contestId": 569,
        "index": "C",
        "solvedCount": 1999
      },
      {
        "contestId": 569,
        "index": "D",
        "solvedCount": 409
      },
      {
        "contestId": 569,
        "index": "E",
        "solvedCount": 52
      },
      {
        "contestId": 562,
        "index": "A",
        "solvedCount": 3
      },
      {
        "contestId": 562,
        "index": "B",
        "solvedCount": 20
      },
      {
        "contestId": 562,
        "index": "C",
        "solvedCount": 1
      },
      {
        "contestId": 562,
        "index": "D",
        "solvedCount": 17
      },
      {
        "contestId": 562,
        "index": "E",
        "solvedCount": 12
      },
      {
        "contestId": 562,
        "index": "F",
        "solvedCount": 16
      },
      {
        "contestId": 562,
        "index": "G",
        "solvedCount": 14
      },
      {
        "contestId": 560,
        "index": "C",
        "solvedCount": 4057
      },
      {
        "contestId": 560,
        "index": "D",
        "solvedCount": 2792
      },
      {
        "contestId": 560,
        "index": "E",
        "solvedCount": 697
      },
      {
        "contestId": 556,
        "index": "C",
        "solvedCount": 2857
      },
      {
        "contestId": 556,
        "index": "D",
        "solvedCount": 760
      },
      {
        "contestId": 556,
        "index": "E",
        "solvedCount": 262
      },
      {
        "contestId": 554,
        "index": "C",
        "solvedCount": 1973
      },
      {
        "contestId": 554,
        "index": "D",
        "solvedCount": 408
      },
      {
        "contestId": 554,
        "index": "E",
        "solvedCount": 226
      },
      {
        "contestId": 548,
        "index": "C",
        "solvedCount": 711
      },
      {
        "contestId": 548,
        "index": "D",
        "solvedCount": 1383
      },
      {
        "contestId": 548,
        "index": "E",
        "solvedCount": 297
      },
      {
        "contestId": 544,
        "index": "C",
        "solvedCount": 1565
      },
      {
        "contestId": 544,
        "index": "D",
        "solvedCount": 694
      },
      {
        "contestId": 544,
        "index": "E",
        "solvedCount": 206
      },
      {
        "contestId": 541,
        "index": "A",
        "solvedCount": 44
      },
      {
        "contestId": 541,
        "index": "B",
        "solvedCount": 92
      },
      {
        "contestId": 541,
        "index": "C",
        "solvedCount": 92
      },
      {
        "contestId": 541,
        "index": "D",
        "solvedCount": 23
      },
      {
        "contestId": 541,
        "index": "E",
        "solvedCount": 41
      },
      {
        "contestId": 541,
        "index": "F",
        "solvedCount": 66
      },
      {
        "contestId": 537,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 536,
        "index": "A",
        "solvedCount": 1251
      },
      {
        "contestId": 536,
        "index": "B",
        "solvedCount": 1236
      },
      {
        "contestId": 536,
        "index": "C",
        "solvedCount": 441
      },
      {
        "contestId": 532,
        "index": "A",
        "solvedCount": 6
      },
      {
        "contestId": 532,
        "index": "B",
        "solvedCount": 230
      },
      {
        "contestId": 532,
        "index": "C",
        "solvedCount": 293
      },
      {
        "contestId": 532,
        "index": "D",
        "solvedCount": 5
      },
      {
        "contestId": 532,
        "index": "E",
        "solvedCount": 263
      },
      {
        "contestId": 532,
        "index": "F",
        "solvedCount": 82
      },
      {
        "contestId": 531,
        "index": "A",
        "solvedCount": 90
      },
      {
        "contestId": 531,
        "index": "B",
        "solvedCount": 82
      },
      {
        "contestId": 531,
        "index": "C",
        "solvedCount": 63
      },
      {
        "contestId": 531,
        "index": "D",
        "solvedCount": 63
      },
      {
        "contestId": 531,
        "index": "E",
        "solvedCount": 39
      },
      {
        "contestId": 531,
        "index": "F",
        "solvedCount": 21
      },
      {
        "contestId": 531,
        "index": "G",
        "solvedCount": 20
      },
      {
        "contestId": 531,
        "index": "H",
        "solvedCount": 24
      },
      {
        "contestId": 531,
        "index": "I",
        "solvedCount": 3
      },
      {
        "contestId": 529,
        "index": "A",
        "solvedCount": 168
      },
      {
        "contestId": 529,
        "index": "C",
        "solvedCount": 332
      },
      {
        "contestId": 529,
        "index": "D",
        "solvedCount": 288
      },
      {
        "contestId": 529,
        "index": "E",
        "solvedCount": 612
      },
      {
        "contestId": 528,
        "index": "A",
        "solvedCount": 1859
      },
      {
        "contestId": 528,
        "index": "B",
        "solvedCount": 1554
      },
      {
        "contestId": 528,
        "index": "C",
        "solvedCount": 591
      },
      {
        "contestId": 521,
        "index": "A",
        "solvedCount": 1433
      },
      {
        "contestId": 521,
        "index": "B",
        "solvedCount": 908
      },
      {
        "contestId": 521,
        "index": "C",
        "solvedCount": 852
      },
      {
        "contestId": 516,
        "index": "A",
        "solvedCount": 1996
      },
      {
        "contestId": 516,
        "index": "B",
        "solvedCount": 1236
      },
      {
        "contestId": 516,
        "index": "C",
        "solvedCount": 809
      },
      {
        "contestId": 512,
        "index": "A",
        "solvedCount": 2011
      },
      {
        "contestId": 512,
        "index": "B",
        "solvedCount": 1557
      },
      {
        "contestId": 512,
        "index": "C",
        "solvedCount": 820
      },
      {
        "contestId": 506,
        "index": "A",
        "solvedCount": 1214
      },
      {
        "contestId": 506,
        "index": "B",
        "solvedCount": 808
      },
      {
        "contestId": 506,
        "index": "C",
        "solvedCount": 308
      },
      {
        "contestId": 504,
        "index": "A",
        "solvedCount": 1327
      },
      {
        "contestId": 504,
        "index": "B",
        "solvedCount": 958
      },
      {
        "contestId": 504,
        "index": "C",
        "solvedCount": 406
      },
      {
        "contestId": 499,
        "index": "C",
        "solvedCount": 2786
      },
      {
        "contestId": 499,
        "index": "D",
        "solvedCount": 178
      },
      {
        "contestId": 499,
        "index": "E",
        "solvedCount": 300
      },
      {
        "contestId": 497,
        "index": "A",
        "solvedCount": 1591
      },
      {
        "contestId": 497,
        "index": "B",
        "solvedCount": 1283
      },
      {
        "contestId": 497,
        "index": "C",
        "solvedCount": 857
      },
      {
        "contestId": 495,
        "index": "C",
        "solvedCount": 1979
      },
      {
        "contestId": 495,
        "index": "D",
        "solvedCount": 271
      },
      {
        "contestId": 495,
        "index": "E",
        "solvedCount": 31
      },
      {
        "contestId": 488,
        "index": "C",
        "solvedCount": 1010
      },
      {
        "contestId": 488,
        "index": "D",
        "solvedCount": 580
      },
      {
        "contestId": 488,
        "index": "E",
        "solvedCount": 395
      },
      {
        "contestId": 485,
        "index": "C",
        "solvedCount": 2479
      },
      {
        "contestId": 485,
        "index": "D",
        "solvedCount": 1110
      },
      {
        "contestId": 485,
        "index": "E",
        "solvedCount": 62
      },
      {
        "contestId": 483,
        "index": "C",
        "solvedCount": 3621
      },
      {
        "contestId": 483,
        "index": "D",
        "solvedCount": 1099
      },
      {
        "contestId": 483,
        "index": "E",
        "solvedCount": 79
      },
      {
        "contestId": 480,
        "index": "A",
        "solvedCount": 1723
      },
      {
        "contestId": 480,
        "index": "B",
        "solvedCount": 1326
      },
      {
        "contestId": 480,
        "index": "C",
        "solvedCount": 1291
      },
      {
        "contestId": 477,
        "index": "A",
        "solvedCount": 1506
      },
      {
        "contestId": 477,
        "index": "B",
        "solvedCount": 1206
      },
      {
        "contestId": 477,
        "index": "C",
        "solvedCount": 768
      },
      {
        "contestId": 469,
        "index": "C",
        "solvedCount": 2486
      },
      {
        "contestId": 469,
        "index": "D",
        "solvedCount": 687
      },
      {
        "contestId": 469,
        "index": "E",
        "solvedCount": 117
      },
      {
        "contestId": 465,
        "index": "C",
        "solvedCount": 1810
      },
      {
        "contestId": 465,
        "index": "D",
        "solvedCount": 379
      },
      {
        "contestId": 465,
        "index": "E",
        "solvedCount": 213
      },
      {
        "contestId": 462,
        "index": "C",
        "solvedCount": 4387
      },
      {
        "contestId": 462,
        "index": "D",
        "solvedCount": 571
      },
      {
        "contestId": 462,
        "index": "E",
        "solvedCount": 162
      },
      {
        "contestId": 458,
        "index": "A",
        "solvedCount": 828
      },
      {
        "contestId": 458,
        "index": "B",
        "solvedCount": 603
      },
      {
        "contestId": 458,
        "index": "C",
        "solvedCount": 520
      },
      {
        "contestId": 458,
        "index": "D",
        "solvedCount": 80
      },
      {
        "contestId": 458,
        "index": "E",
        "solvedCount": 8
      },
      {
        "contestId": 458,
        "index": "F",
        "solvedCount": 4
      },
      {
        "contestId": 456,
        "index": "C",
        "solvedCount": 5810
      },
      {
        "contestId": 456,
        "index": "D",
        "solvedCount": 1351
      },
      {
        "contestId": 456,
        "index": "E",
        "solvedCount": 696
      },
      {
        "contestId": 454,
        "index": "C",
        "solvedCount": 2456
      },
      {
        "contestId": 454,
        "index": "D",
        "solvedCount": 613
      },
      {
        "contestId": 454,
        "index": "E",
        "solvedCount": 182
      },
      {
        "contestId": 450,
        "index": "C",
        "solvedCount": 1687
      },
      {
        "contestId": 450,
        "index": "D",
        "solvedCount": 1160
      },
      {
        "contestId": 450,
        "index": "E",
        "solvedCount": 383
      },
      {
        "contestId": 447,
        "index": "C",
        "solvedCount": 2305
      },
      {
        "contestId": 447,
        "index": "D",
        "solvedCount": 728
      },
      {
        "contestId": 447,
        "index": "E",
        "solvedCount": 249
      },
      {
        "contestId": 445,
        "index": "C",
        "solvedCount": 1421
      },
      {
        "contestId": 445,
        "index": "D",
        "solvedCount": 169
      },
      {
        "contestId": 445,
        "index": "E",
        "solvedCount": 244
      },
      {
        "contestId": 443,
        "index": "C",
        "solvedCount": 491
      },
      {
        "contestId": 443,
        "index": "D",
        "solvedCount": 1136
      },
      {
        "contestId": 443,
        "index": "E",
        "solvedCount": 224
      },
      {
        "contestId": 438,
        "index": "A",
        "solvedCount": 1357
      },
      {
        "contestId": 438,
        "index": "B",
        "solvedCount": 1041
      },
      {
        "contestId": 438,
        "index": "C",
        "solvedCount": 315
      },
      {
        "contestId": 434,
        "index": "A",
        "solvedCount": 864
      },
      {
        "contestId": 434,
        "index": "B",
        "solvedCount": 585
      },
      {
        "contestId": 434,
        "index": "C",
        "solvedCount": 258
      },
      {
        "contestId": 430,
        "index": "C",
        "solvedCount": 2478
      },
      {
        "contestId": 430,
        "index": "D",
        "solvedCount": 870
      },
      {
        "contestId": 430,
        "index": "E",
        "solvedCount": 121
      },
      {
        "contestId": 426,
        "index": "C",
        "solvedCount": 1271
      },
      {
        "contestId": 426,
        "index": "D",
        "solvedCount": 182
      },
      {
        "contestId": 426,
        "index": "E",
        "solvedCount": 108
      },
      {
        "contestId": 421,
        "index": "B",
        "solvedCount": 1602
      },
      {
        "contestId": 421,
        "index": "C",
        "solvedCount": 289
      },
      {
        "contestId": 421,
        "index": "E",
        "solvedCount": 42
      },
      {
        "contestId": 419,
        "index": "A",
        "solvedCount": 24
      },
      {
        "contestId": 419,
        "index": "B",
        "solvedCount": 12
      },
      {
        "contestId": 419,
        "index": "C",
        "solvedCount": 12
      },
      {
        "contestId": 419,
        "index": "D",
        "solvedCount": 7
      },
      {
        "contestId": 419,
        "index": "E",
        "solvedCount": 1
      },
      {
        "contestId": 418,
        "index": "A",
        "solvedCount": 842
      },
      {
        "contestId": 418,
        "index": "B",
        "solvedCount": 703
      },
      {
        "contestId": 418,
        "index": "C",
        "solvedCount": 344
      },
      {
        "contestId": 415,
        "index": "C",
        "solvedCount": 2288
      },
      {
        "contestId": 415,
        "index": "D",
        "solvedCount": 2047
      },
      {
        "contestId": 415,
        "index": "E",
        "solvedCount": 229
      },
      {
        "contestId": 408,
        "index": "C",
        "solvedCount": 1488
      },
      {
        "contestId": 408,
        "index": "D",
        "solvedCount": 1097
      },
      {
        "contestId": 408,
        "index": "E",
        "solvedCount": 81
      },
      {
        "contestId": 406,
        "index": "A",
        "solvedCount": 1190
      },
      {
        "contestId": 406,
        "index": "B",
        "solvedCount": 1045
      },
      {
        "contestId": 406,
        "index": "C",
        "solvedCount": 590
      },
      {
        "contestId": 403,
        "index": "A",
        "solvedCount": 1106
      },
      {
        "contestId": 403,
        "index": "B",
        "solvedCount": 803
      },
      {
        "contestId": 403,
        "index": "C",
        "solvedCount": 675
      },
      {
        "contestId": 399,
        "index": "C",
        "solvedCount": 291
      },
      {
        "contestId": 399,
        "index": "D",
        "solvedCount": 129
      },
      {
        "contestId": 399,
        "index": "E",
        "solvedCount": 41
      },
      {
        "contestId": 397,
        "index": "C",
        "solvedCount": 363
      },
      {
        "contestId": 397,
        "index": "D",
        "solvedCount": 189
      },
      {
        "contestId": 397,
        "index": "E",
        "solvedCount": 189
      },
      {
        "contestId": 393,
        "index": "C",
        "solvedCount": 270
      },
      {
        "contestId": 393,
        "index": "D",
        "solvedCount": 151
      },
      {
        "contestId": 393,
        "index": "E",
        "solvedCount": 62
      },
      {
        "contestId": 389,
        "index": "C",
        "solvedCount": 2688
      },
      {
        "contestId": 389,
        "index": "D",
        "solvedCount": 417
      },
      {
        "contestId": 389,
        "index": "E",
        "solvedCount": 555
      },
      {
        "contestId": 384,
        "index": "C",
        "solvedCount": 1968
      },
      {
        "contestId": 384,
        "index": "D",
        "solvedCount": 113
      },
      {
        "contestId": 384,
        "index": "E",
        "solvedCount": 803
      },
      {
        "contestId": 381,
        "index": "C",
        "solvedCount": 1053
      },
      {
        "contestId": 381,
        "index": "D",
        "solvedCount": 105
      },
      {
        "contestId": 381,
        "index": "E",
        "solvedCount": 908
      },
      {
        "contestId": 378,
        "index": "C",
        "solvedCount": 3505
      },
      {
        "contestId": 378,
        "index": "D",
        "solvedCount": 381
      },
      {
        "contestId": 378,
        "index": "E",
        "solvedCount": 144
      },
      {
        "contestId": 376,
        "index": "C",
        "solvedCount": 1186
      },
      {
        "contestId": 376,
        "index": "D",
        "solvedCount": 842
      },
      {
        "contestId": 376,
        "index": "E",
        "solvedCount": 45
      },
      {
        "contestId": 373,
        "index": "C",
        "solvedCount": 2145
      },
      {
        "contestId": 373,
        "index": "D",
        "solvedCount": 391
      },
      {
        "contestId": 373,
        "index": "E",
        "solvedCount": 256
      },
      {
        "contestId": 368,
        "index": "C",
        "solvedCount": 1843
      },
      {
        "contestId": 368,
        "index": "D",
        "solvedCount": 584
      },
      {
        "contestId": 368,
        "index": "E",
        "solvedCount": 285
      },
      {
        "contestId": 365,
        "index": "C",
        "solvedCount": 961
      },
      {
        "contestId": 365,
        "index": "D",
        "solvedCount": 209
      },
      {
        "contestId": 365,
        "index": "E",
        "solvedCount": 94
      },
      {
        "contestId": 361,
        "index": "C",
        "solvedCount": 573
      },
      {
        "contestId": 361,
        "index": "D",
        "solvedCount": 345
      },
      {
        "contestId": 361,
        "index": "E",
        "solvedCount": 80
      },
      {
        "contestId": 357,
        "index": "C",
        "solvedCount": 2546
      },
      {
        "contestId": 357,
        "index": "D",
        "solvedCount": 409
      },
      {
        "contestId": 357,
        "index": "E",
        "solvedCount": 218
      },
      {
        "contestId": 355,
        "index": "C",
        "solvedCount": 1353
      },
      {
        "contestId": 355,
        "index": "D",
        "solvedCount": 57
      },
      {
        "contestId": 355,
        "index": "E",
        "solvedCount": 470
      },
      {
        "contestId": 352,
        "index": "C",
        "solvedCount": 776
      },
      {
        "contestId": 352,
        "index": "D",
        "solvedCount": 390
      },
      {
        "contestId": 352,
        "index": "E",
        "solvedCount": 67
      },
      {
        "contestId": 349,
        "index": "C",
        "solvedCount": 2261
      },
      {
        "contestId": 349,
        "index": "D",
        "solvedCount": 332
      },
      {
        "contestId": 349,
        "index": "E",
        "solvedCount": 135
      },
      {
        "contestId": 347,
        "index": "C",
        "solvedCount": 2778
      },
      {
        "contestId": 347,
        "index": "D",
        "solvedCount": 426
      },
      {
        "contestId": 347,
        "index": "E",
        "solvedCount": 257
      },
      {
        "contestId": 344,
        "index": "C",
        "solvedCount": 2907
      },
      {
        "contestId": 344,
        "index": "D",
        "solvedCount": 2112
      },
      {
        "contestId": 344,
        "index": "E",
        "solvedCount": 558
      },
      {
        "contestId": 341,
        "index": "A",
        "solvedCount": 941
      },
      {
        "contestId": 341,
        "index": "B",
        "solvedCount": 1191
      },
      {
        "contestId": 341,
        "index": "C",
        "solvedCount": 781
      },
      {
        "contestId": 338,
        "index": "A",
        "solvedCount": 846
      },
      {
        "contestId": 338,
        "index": "B",
        "solvedCount": 760
      },
      {
        "contestId": 338,
        "index": "C",
        "solvedCount": 390
      },
      {
        "contestId": 334,
        "index": "C",
        "solvedCount": 1678
      },
      {
        "contestId": 334,
        "index": "D",
        "solvedCount": 748
      },
      {
        "contestId": 334,
        "index": "E",
        "solvedCount": 63
      },
      {
        "contestId": 330,
        "index": "C",
        "solvedCount": 1815
      },
      {
        "contestId": 330,
        "index": "D",
        "solvedCount": 1178
      },
      {
        "contestId": 330,
        "index": "E",
        "solvedCount": 189
      },
      {
        "contestId": 326,
        "index": "A",
        "solvedCount": 25
      },
      {
        "contestId": 326,
        "index": "B",
        "solvedCount": 15
      },
      {
        "contestId": 326,
        "index": "C",
        "solvedCount": 13
      },
      {
        "contestId": 326,
        "index": "D",
        "solvedCount": 5
      },
      {
        "contestId": 326,
        "index": "E",
        "solvedCount": 1
      },
      {
        "contestId": 326,
        "index": "F",
        "solvedCount": 0
      },
      {
        "contestId": 324,
        "index": "A1",
        "solvedCount": 26
      },
      {
        "contestId": 324,
        "index": "A2",
        "solvedCount": 25
      },
      {
        "contestId": 324,
        "index": "B1",
        "solvedCount": 22
      },
      {
        "contestId": 324,
        "index": "B2",
        "solvedCount": 19
      },
      {
        "contestId": 324,
        "index": "C1",
        "solvedCount": 27
      },
      {
        "contestId": 324,
        "index": "C2",
        "solvedCount": 7
      },
      {
        "contestId": 324,
        "index": "C3",
        "solvedCount": 5
      },
      {
        "contestId": 324,
        "index": "D1",
        "solvedCount": 6
      },
      {
        "contestId": 324,
        "index": "D2",
        "solvedCount": 2
      },
      {
        "contestId": 324,
        "index": "D3",
        "solvedCount": 1
      },
      {
        "contestId": 324,
        "index": "E1",
        "solvedCount": 1
      },
      {
        "contestId": 324,
        "index": "E2",
        "solvedCount": 0
      },
      {
        "contestId": 322,
        "index": "C",
        "solvedCount": 1266
      },
      {
        "contestId": 322,
        "index": "D",
        "solvedCount": 422
      },
      {
        "contestId": 322,
        "index": "E",
        "solvedCount": 544
      },
      {
        "contestId": 320,
        "index": "C",
        "solvedCount": 794
      },
      {
        "contestId": 320,
        "index": "D",
        "solvedCount": 653
      },
      {
        "contestId": 320,
        "index": "E",
        "solvedCount": 208
      },
      {
        "contestId": 318,
        "index": "C",
        "solvedCount": 1918
      },
      {
        "contestId": 318,
        "index": "D",
        "solvedCount": 530
      },
      {
        "contestId": 318,
        "index": "E",
        "solvedCount": 61
      },
      {
        "contestId": 315,
        "index": "C",
        "solvedCount": 818
      },
      {
        "contestId": 315,
        "index": "D",
        "solvedCount": 303
      },
      {
        "contestId": 315,
        "index": "E",
        "solvedCount": 278
      },
      {
        "contestId": 312,
        "index": "C",
        "solvedCount": 1474
      },
      {
        "contestId": 312,
        "index": "D",
        "solvedCount": 137
      },
      {
        "contestId": 312,
        "index": "E",
        "solvedCount": 35
      },
      {
        "contestId": 308,
        "index": "A",
        "solvedCount": 29
      },
      {
        "contestId": 308,
        "index": "B",
        "solvedCount": 32
      },
      {
        "contestId": 308,
        "index": "C",
        "solvedCount": 27
      },
      {
        "contestId": 308,
        "index": "D",
        "solvedCount": 10
      },
      {
        "contestId": 308,
        "index": "E",
        "solvedCount": 2
      },
      {
        "contestId": 304,
        "index": "C",
        "solvedCount": 4731
      },
      {
        "contestId": 304,
        "index": "D",
        "solvedCount": 431
      },
      {
        "contestId": 304,
        "index": "E",
        "solvedCount": 141
      },
      {
        "contestId": 302,
        "index": "C",
        "solvedCount": 1040
      },
      {
        "contestId": 302,
        "index": "D",
        "solvedCount": 505
      },
      {
        "contestId": 302,
        "index": "E",
        "solvedCount": 82
      },
      {
        "contestId": 299,
        "index": "C",
        "solvedCount": 840
      },
      {
        "contestId": 299,
        "index": "D",
        "solvedCount": 58
      },
      {
        "contestId": 299,
        "index": "E",
        "solvedCount": 102
      },
      {
        "contestId": 298,
        "index": "C",
        "solvedCount": 1495
      },
      {
        "contestId": 298,
        "index": "D",
        "solvedCount": 1109
      },
      {
        "contestId": 298,
        "index": "E",
        "solvedCount": 152
      },
      {
        "contestId": 296,
        "index": "C",
        "solvedCount": 4651
      },
      {
        "contestId": 296,
        "index": "D",
        "solvedCount": 1161
      },
      {
        "contestId": 296,
        "index": "E",
        "solvedCount": 163
      },
      {
        "contestId": 289,
        "index": "C",
        "solvedCount": 2480
      },
      {
        "contestId": 289,
        "index": "D",
        "solvedCount": 826
      },
      {
        "contestId": 289,
        "index": "E",
        "solvedCount": 567
      },
      {
        "contestId": 287,
        "index": "C",
        "solvedCount": 1214
      },
      {
        "contestId": 287,
        "index": "D",
        "solvedCount": 212
      },
      {
        "contestId": 287,
        "index": "E",
        "solvedCount": 198
      },
      {
        "contestId": 284,
        "index": "C",
        "solvedCount": 1589
      },
      {
        "contestId": 284,
        "index": "D",
        "solvedCount": 619
      },
      {
        "contestId": 284,
        "index": "E",
        "solvedCount": 186
      },
      {
        "contestId": 281,
        "index": "C",
        "solvedCount": 317
      },
      {
        "contestId": 281,
        "index": "D",
        "solvedCount": 1472
      },
      {
        "contestId": 281,
        "index": "E",
        "solvedCount": 211
      },
      {
        "contestId": 278,
        "index": "C",
        "solvedCount": 3115
      },
      {
        "contestId": 278,
        "index": "D",
        "solvedCount": 163
      },
      {
        "contestId": 278,
        "index": "E",
        "solvedCount": 50
      },
      {
        "contestId": 275,
        "index": "C",
        "solvedCount": 3128
      },
      {
        "contestId": 275,
        "index": "D",
        "solvedCount": 620
      },
      {
        "contestId": 275,
        "index": "E",
        "solvedCount": 40
      },
      {
        "contestId": 273,
        "index": "A",
        "solvedCount": 1042
      },
      {
        "contestId": 273,
        "index": "B",
        "solvedCount": 834
      },
      {
        "contestId": 273,
        "index": "C",
        "solvedCount": 432
      },
      {
        "contestId": 270,
        "index": "C",
        "solvedCount": 1454
      },
      {
        "contestId": 270,
        "index": "D",
        "solvedCount": 937
      },
      {
        "contestId": 270,
        "index": "E",
        "solvedCount": 244
      },
      {
        "contestId": 265,
        "index": "C",
        "solvedCount": 2452
      },
      {
        "contestId": 265,
        "index": "D",
        "solvedCount": 1659
      },
      {
        "contestId": 265,
        "index": "E",
        "solvedCount": 329
      },
      {
        "contestId": 262,
        "index": "C",
        "solvedCount": 1763
      },
      {
        "contestId": 262,
        "index": "D",
        "solvedCount": 231
      },
      {
        "contestId": 262,
        "index": "E",
        "solvedCount": 99
      },
      {
        "contestId": 259,
        "index": "C",
        "solvedCount": 2897
      },
      {
        "contestId": 259,
        "index": "D",
        "solvedCount": 288
      },
      {
        "contestId": 259,
        "index": "E",
        "solvedCount": 174
      },
      {
        "contestId": 256,
        "index": "A",
        "solvedCount": 858
      },
      {
        "contestId": 256,
        "index": "B",
        "solvedCount": 641
      },
      {
        "contestId": 256,
        "index": "C",
        "solvedCount": 398
      },
      {
        "contestId": 252,
        "index": "C",
        "solvedCount": 3451
      },
      {
        "contestId": 252,
        "index": "D",
        "solvedCount": 220
      },
      {
        "contestId": 252,
        "index": "E",
        "solvedCount": 124
      },
      {
        "contestId": 249,
        "index": "A",
        "solvedCount": 269
      },
      {
        "contestId": 249,
        "index": "B",
        "solvedCount": 193
      },
      {
        "contestId": 249,
        "index": "C",
        "solvedCount": 112
      },
      {
        "contestId": 247,
        "index": "A",
        "solvedCount": 16
      },
      {
        "contestId": 247,
        "index": "B",
        "solvedCount": 8
      },
      {
        "contestId": 247,
        "index": "C",
        "solvedCount": 3
      },
      {
        "contestId": 247,
        "index": "D",
        "solvedCount": 1
      },
      {
        "contestId": 247,
        "index": "E",
        "solvedCount": 0
      },
      {
        "contestId": 244,
        "index": "C",
        "solvedCount": 755
      },
      {
        "contestId": 244,
        "index": "D",
        "solvedCount": 262
      },
      {
        "contestId": 244,
        "index": "E",
        "solvedCount": 55
      },
      {
        "contestId": 240,
        "index": "A",
        "solvedCount": 321
      },
      {
        "contestId": 240,
        "index": "B",
        "solvedCount": 274
      },
      {
        "contestId": 240,
        "index": "C",
        "solvedCount": 325
      },
      {
        "contestId": 240,
        "index": "D",
        "solvedCount": 143
      },
      {
        "contestId": 239,
        "index": "C",
        "solvedCount": 704
      },
      {
        "contestId": 239,
        "index": "D",
        "solvedCount": 260
      },
      {
        "contestId": 239,
        "index": "E",
        "solvedCount": 153
      },
      {
        "contestId": 236,
        "index": "C",
        "solvedCount": 2468
      },
      {
        "contestId": 236,
        "index": "D",
        "solvedCount": 289
      },
      {
        "contestId": 236,
        "index": "E",
        "solvedCount": 41
      },
      {
        "contestId": 233,
        "index": "C",
        "solvedCount": 795
      },
      {
        "contestId": 233,
        "index": "D",
        "solvedCount": 229
      },
      {
        "contestId": 233,
        "index": "E",
        "solvedCount": 18
      },
      {
        "contestId": 230,
        "index": "C",
        "solvedCount": 1558
      },
      {
        "contestId": 230,
        "index": "D",
        "solvedCount": 812
      },
      {
        "contestId": 230,
        "index": "E",
        "solvedCount": 318
      },
      {
        "contestId": 227,
        "index": "C",
        "solvedCount": 2321
      },
      {
        "contestId": 227,
        "index": "D",
        "solvedCount": 376
      },
      {
        "contestId": 227,
        "index": "E",
        "solvedCount": 151
      },
      {
        "contestId": 224,
        "index": "C",
        "solvedCount": 788
      },
      {
        "contestId": 224,
        "index": "D",
        "solvedCount": 346
      },
      {
        "contestId": 224,
        "index": "E",
        "solvedCount": 266
      },
      {
        "contestId": 221,
        "index": "C",
        "solvedCount": 2632
      },
      {
        "contestId": 221,
        "index": "D",
        "solvedCount": 1687
      },
      {
        "contestId": 221,
        "index": "E",
        "solvedCount": 150
      },
      {
        "contestId": 218,
        "index": "C",
        "solvedCount": 2199
      },
      {
        "contestId": 218,
        "index": "D",
        "solvedCount": 206
      },
      {
        "contestId": 218,
        "index": "E",
        "solvedCount": 27
      },
      {
        "contestId": 214,
        "index": "C",
        "solvedCount": 440
      },
      {
        "contestId": 214,
        "index": "D",
        "solvedCount": 247
      },
      {
        "contestId": 214,
        "index": "E",
        "solvedCount": 435
      },
      {
        "contestId": 211,
        "index": "A",
        "solvedCount": 3
      },
      {
        "contestId": 211,
        "index": "B",
        "solvedCount": 29
      },
      {
        "contestId": 211,
        "index": "C",
        "solvedCount": 43
      },
      {
        "contestId": 211,
        "index": "D",
        "solvedCount": 27
      },
      {
        "contestId": 211,
        "index": "E",
        "solvedCount": 64
      },
      {
        "contestId": 206,
        "index": "A1",
        "solvedCount": 25
      },
      {
        "contestId": 206,
        "index": "A2",
        "solvedCount": 21
      },
      {
        "contestId": 206,
        "index": "A3",
        "solvedCount": 6
      },
      {
        "contestId": 206,
        "index": "B1",
        "solvedCount": 29
      },
      {
        "contestId": 206,
        "index": "B2",
        "solvedCount": 18
      },
      {
        "contestId": 206,
        "index": "B3",
        "solvedCount": 2
      },
      {
        "contestId": 206,
        "index": "C1",
        "solvedCount": 5
      },
      {
        "contestId": 206,
        "index": "C2",
        "solvedCount": 2
      },
      {
        "contestId": 206,
        "index": "C3",
        "solvedCount": 19
      },
      {
        "contestId": 206,
        "index": "D1",
        "solvedCount": 19
      },
      {
        "contestId": 206,
        "index": "D10",
        "solvedCount": 14
      },
      {
        "contestId": 206,
        "index": "D2",
        "solvedCount": 14
      },
      {
        "contestId": 206,
        "index": "D3",
        "solvedCount": 8
      },
      {
        "contestId": 206,
        "index": "D4",
        "solvedCount": 3
      },
      {
        "contestId": 206,
        "index": "D5",
        "solvedCount": 1
      },
      {
        "contestId": 206,
        "index": "D6",
        "solvedCount": 2
      },
      {
        "contestId": 206,
        "index": "D7",
        "solvedCount": 6
      },
      {
        "contestId": 206,
        "index": "D8",
        "solvedCount": 6
      },
      {
        "contestId": 206,
        "index": "D9",
        "solvedCount": 0
      },
      {
        "contestId": 205,
        "index": "C",
        "solvedCount": 1360
      },
      {
        "contestId": 205,
        "index": "D",
        "solvedCount": 1375
      },
      {
        "contestId": 205,
        "index": "E",
        "solvedCount": 211
      },
      {
        "contestId": 202,
        "index": "C",
        "solvedCount": 1110
      },
      {
        "contestId": 202,
        "index": "D",
        "solvedCount": 227
      },
      {
        "contestId": 202,
        "index": "E",
        "solvedCount": 211
      },
      {
        "contestId": 199,
        "index": "C",
        "solvedCount": 1007
      },
      {
        "contestId": 199,
        "index": "D",
        "solvedCount": 1028
      },
      {
        "contestId": 199,
        "index": "E",
        "solvedCount": 53
      },
      {
        "contestId": 197,
        "index": "C",
        "solvedCount": 1748
      },
      {
        "contestId": 197,
        "index": "D",
        "solvedCount": 497
      },
      {
        "contestId": 197,
        "index": "E",
        "solvedCount": 111
      },
      {
        "contestId": 194,
        "index": "C",
        "solvedCount": 861
      },
      {
        "contestId": 194,
        "index": "D",
        "solvedCount": 231
      },
      {
        "contestId": 194,
        "index": "E",
        "solvedCount": 76
      },
      {
        "contestId": 192,
        "index": "C",
        "solvedCount": 942
      },
      {
        "contestId": 192,
        "index": "D",
        "solvedCount": 291
      },
      {
        "contestId": 192,
        "index": "E",
        "solvedCount": 781
      },
      {
        "contestId": 189,
        "index": "C",
        "solvedCount": 1135
      },
      {
        "contestId": 189,
        "index": "D",
        "solvedCount": 387
      },
      {
        "contestId": 189,
        "index": "E",
        "solvedCount": 206
      },
      {
        "contestId": 186,
        "index": "C",
        "solvedCount": 1774
      },
      {
        "contestId": 186,
        "index": "D",
        "solvedCount": 490
      },
      {
        "contestId": 186,
        "index": "E",
        "solvedCount": 19
      },
      {
        "contestId": 181,
        "index": "C",
        "solvedCount": 389
      },
      {
        "contestId": 181,
        "index": "D",
        "solvedCount": 169
      },
      {
        "contestId": 181,
        "index": "E",
        "solvedCount": 82
      },
      {
        "contestId": 174,
        "index": "D",
        "solvedCount": 147
      },
      {
        "contestId": 174,
        "index": "E",
        "solvedCount": 40
      },
      {
        "contestId": 170,
        "index": "A",
        "solvedCount": 0
      },
      {
        "contestId": 169,
        "index": "C",
        "solvedCount": 233
      },
      {
        "contestId": 169,
        "index": "D",
        "solvedCount": 98
      },
      {
        "contestId": 169,
        "index": "E",
        "solvedCount": 37
      },
      {
        "contestId": 168,
        "index": "C",
        "solvedCount": 959
      },
      {
        "contestId": 168,
        "index": "D",
        "solvedCount": 329
      },
      {
        "contestId": 168,
        "index": "E",
        "solvedCount": 70
      },
      {
        "contestId": 157,
        "index": "C",
        "solvedCount": 1317
      },
      {
        "contestId": 157,
        "index": "D",
        "solvedCount": 560
      },
      {
        "contestId": 157,
        "index": "E",
        "solvedCount": 344
      },
      {
        "contestId": 155,
        "index": "C",
        "solvedCount": 1384
      },
      {
        "contestId": 155,
        "index": "D",
        "solvedCount": 905
      },
      {
        "contestId": 155,
        "index": "E",
        "solvedCount": 314
      },
      {
        "contestId": 151,
        "index": "C",
        "solvedCount": 2331
      },
      {
        "contestId": 151,
        "index": "D",
        "solvedCount": 1413
      },
      {
        "contestId": 151,
        "index": "E",
        "solvedCount": 101
      },
      {
        "contestId": 146,
        "index": "C",
        "solvedCount": 2185
      },
      {
        "contestId": 146,
        "index": "D",
        "solvedCount": 767
      },
      {
        "contestId": 146,
        "index": "E",
        "solvedCount": 382
      },
      {
        "contestId": 143,
        "index": "C",
        "solvedCount": 1064
      },
      {
        "contestId": 143,
        "index": "D",
        "solvedCount": 659
      },
      {
        "contestId": 143,
        "index": "E",
        "solvedCount": 148
      },
      {
        "contestId": 139,
        "index": "C",
        "solvedCount": 844
      },
      {
        "contestId": 139,
        "index": "D",
        "solvedCount": 229
      },
      {
        "contestId": 139,
        "index": "E",
        "solvedCount": 144
      },
      {
        "contestId": 136,
        "index": "C",
        "solvedCount": 2722
      },
      {
        "contestId": 136,
        "index": "D",
        "solvedCount": 818
      },
      {
        "contestId": 136,
        "index": "E",
        "solvedCount": 231
      },
      {
        "contestId": 133,
        "index": "C",
        "solvedCount": 1427
      },
      {
        "contestId": 133,
        "index": "D",
        "solvedCount": 174
      },
      {
        "contestId": 133,
        "index": "E",
        "solvedCount": 497
      },
      {
        "contestId": 129,
        "index": "C",
        "solvedCount": 1111
      },
      {
        "contestId": 129,
        "index": "D",
        "solvedCount": 416
      },
      {
        "contestId": 129,
        "index": "E",
        "solvedCount": 350
      },
      {
        "contestId": 127,
        "index": "C",
        "solvedCount": 495
      },
      {
        "contestId": 127,
        "index": "D",
        "solvedCount": 1224
      },
      {
        "contestId": 127,
        "index": "E",
        "solvedCount": 143
      },
      {
        "contestId": 124,
        "index": "C",
        "solvedCount": 1153
      },
      {
        "contestId": 124,
        "index": "D",
        "solvedCount": 289
      },
      {
        "contestId": 124,
        "index": "E",
        "solvedCount": 59
      },
      {
        "contestId": 122,
        "index": "C",
        "solvedCount": 1996
      },
      {
        "contestId": 122,
        "index": "D",
        "solvedCount": 853
      },
      {
        "contestId": 122,
        "index": "E",
        "solvedCount": 260
      },
      {
        "contestId": 116,
        "index": "C",
        "solvedCount": 2885
      },
      {
        "contestId": 116,
        "index": "D",
        "solvedCount": 801
      },
      {
        "contestId": 116,
        "index": "E",
        "solvedCount": 117
      },
      {
        "contestId": 114,
        "index": "C",
        "solvedCount": 636
      },
      {
        "contestId": 114,
        "index": "D",
        "solvedCount": 431
      },
      {
        "contestId": 114,
        "index": "E",
        "solvedCount": 308
      },
      {
        "contestId": 112,
        "index": "C",
        "solvedCount": 1793
      },
      {
        "contestId": 112,
        "index": "D",
        "solvedCount": 739
      },
      {
        "contestId": 112,
        "index": "E",
        "solvedCount": 247
      },
      {
        "contestId": 110,
        "index": "C",
        "solvedCount": 3464
      },
      {
        "contestId": 110,
        "index": "D",
        "solvedCount": 335
      },
      {
        "contestId": 110,
        "index": "E",
        "solvedCount": 709
      },
      {
        "contestId": 108,
        "index": "C",
        "solvedCount": 890
      },
      {
        "contestId": 108,
        "index": "D",
        "solvedCount": 538
      },
      {
        "contestId": 108,
        "index": "E",
        "solvedCount": 46
      },
      {
        "contestId": 104,
        "index": "B",
        "solvedCount": 1882
      },
      {
        "contestId": 104,
        "index": "C",
        "solvedCount": 1884
      },
      {
        "contestId": 104,
        "index": "D",
        "solvedCount": 285
      },
      {
        "contestId": 104,
        "index": "E",
        "solvedCount": 202
      },
      {
        "contestId": 102,
        "index": "C",
        "solvedCount": 1548
      },
      {
        "contestId": 102,
        "index": "D",
        "solvedCount": 432
      },
      {
        "contestId": 102,
        "index": "E",
        "solvedCount": 134
      },
      {
        "contestId": 99,
        "index": "C",
        "solvedCount": 387
      },
      {
        "contestId": 99,
        "index": "D",
        "solvedCount": 23
      },
      {
        "contestId": 99,
        "index": "E",
        "solvedCount": 53
      },
      {
        "contestId": 96,
        "index": "C",
        "solvedCount": 627
      },
      {
        "contestId": 96,
        "index": "D",
        "solvedCount": 625
      },
      {
        "contestId": 96,
        "index": "E",
        "solvedCount": 55
      },
      {
        "contestId": 94,
        "index": "C",
        "solvedCount": 901
      },
      {
        "contestId": 94,
        "index": "D",
        "solvedCount": 305
      },
      {
        "contestId": 94,
        "index": "E",
        "solvedCount": 67
      },
      {
        "contestId": 92,
        "index": "C",
        "solvedCount": 833
      },
      {
        "contestId": 92,
        "index": "D",
        "solvedCount": 980
      },
      {
        "contestId": 92,
        "index": "E",
        "solvedCount": 141
      },
      {
        "contestId": 90,
        "index": "C",
        "solvedCount": 517
      },
      {
        "contestId": 90,
        "index": "D",
        "solvedCount": 122
      },
      {
        "contestId": 90,
        "index": "E",
        "solvedCount": 137
      },
      {
        "contestId": 88,
        "index": "C",
        "solvedCount": 2582
      },
      {
        "contestId": 88,
        "index": "D",
        "solvedCount": 287
      },
      {
        "contestId": 88,
        "index": "E",
        "solvedCount": 184
      },
      {
        "contestId": 84,
        "index": "B",
        "solvedCount": 1997
      },
      {
        "contestId": 84,
        "index": "D",
        "solvedCount": 340
      },
      {
        "contestId": 84,
        "index": "E",
        "solvedCount": 88
      },
      {
        "contestId": 80,
        "index": "C",
        "solvedCount": 488
      },
      {
        "contestId": 80,
        "index": "D",
        "solvedCount": 478
      },
      {
        "contestId": 80,
        "index": "E",
        "solvedCount": 148
      }
    ]
  }
}